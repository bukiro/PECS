{"version":3,"sources":["webpack:///src/app/animal-companion/animal-companion.component.html","webpack:///src/app/animal-companion/animal-companion.component.ts","webpack:///src/app/dice/diceIcons_D12/diceIcons_D12.component.ts","webpack:///src/app/dice/diceIcons_D12/D12.svg","webpack:///src/app/spellbook/spellbook.component.ts","webpack:///src/app/spellbook/spellbook.component.html","webpack:///src/app/familiar/familiar.component.html","webpack:///src/app/familiar/familiar.component.ts","webpack:///src/app/Familiar.ts","webpack:///src/app/items.service.ts","webpack:///src/app/SkillChoice.ts","webpack:///src/app/activity/activity.component.ts","webpack:///src/app/activity/activity.component.html","webpack:///src/app/savegame.service.ts","webpack:///src/assets/json/effectproperties/index.ts","webpack:///src/app/Equipment.ts","webpack:///src/app/defense.service.ts","webpack:///src/app/EffectCollection.ts","webpack:///src/assets/json/items/weaponrunes/index.ts","webpack:///src/assets/json/items/armorrunes/index.ts","webpack:///src/app/conditions.service.ts","webpack:///src/app/AbilityChoice.ts","webpack:///src/app/spell/spell.component.html","webpack:///src/app/spell/spell.component.ts","webpack:///src/app/crafting/crafting.component.html","webpack:///src/app/crafting/crafting.component.ts","webpack:///src/app/FeatChoice.ts","webpack:///src/app/gridIcon/gridIcon.component.ts","webpack:///src/app/gridIcon/gridIcon.component.html","webpack:///src/app/Settings.ts","webpack:///src/app/dice/diceIcons_D10/diceIcons_D10.component.ts","webpack:///src/app/dice/diceIcons_D10/D10.svg","webpack:///src/app/abilities.service.ts","webpack:///src/app/ShieldMaterial.ts","webpack:///src/assets/json/classes/index.ts","webpack:///src/app/OtherConsumableBomb.ts","webpack:///src/app/Bulk.ts","webpack:///src/app/dice/diceIcons_D8/diceIcons_D8.component.ts","webpack:///src/app/dice/diceIcons_D8/D8.svg","webpack:///src/app/AnimalCompanionLevel.ts","webpack:///src/assets/json/items/wornitems/index.ts","webpack:///src/app/character.service.ts","webpack:///src/assets/json/animalcompanionspecializations/index.ts","webpack:///src/app/SpellCasting.ts","webpack:///src/assets/json/backgrounds/index.ts","webpack:///src/assets/json/activities/index.ts","webpack:///src/environments/environment.ts","webpack:///src/app/abilities/abilities.component.html","webpack:///src/app/abilities/abilities.component.ts","webpack:///src/app/skill/skill.component.html","webpack:///src/app/skill/skill.component.ts","webpack:///src/app/item/itemAeonStones/itemAeonStones.component.ts","webpack:///src/app/item/itemAeonStones/itemAeonStones.component.html","webpack:///src/app/ItemProperty.ts","webpack:///src/app/InventoryGain.ts","webpack:///src/app/SpecializationGain.ts","webpack:///src/app/proficiency-form/proficiency-form.component.html","webpack:///src/app/proficiency-form/proficiency-form.component.ts","webpack:///src/app/conditions/conditions.component.ts","webpack:///src/app/conditions/conditions.component.html","webpack:///src/app/Consumable.ts","webpack:///src/app/feats.service.ts","webpack:///src/app/inventory/inventory.component.ts","webpack:///src/app/inventory/inventory.component.html","webpack:///src/assets/json/items/talismans/index.ts","webpack:///src/app/item/itemTalismans/itemTalismans.component.ts","webpack:///src/app/item/itemTalismans/itemTalismans.component.html","webpack:///src/app/AnimalCompanion.ts","webpack:///src/app/ConditionGain.ts","webpack:///src/app/AlchemicalBomb.ts","webpack:///src/app/WornItem.ts","webpack:///src/assets/json/spells/index.ts","webpack:///src/app/defense/defense.component.ts","webpack:///src/app/defense/defense.component.html","webpack:///src/assets/json/abilities/index.ts","webpack:///src/app/items/newItemProperty/newItemProperty.component.ts","webpack:///src/app/items/newItemProperty/newItemProperty.component.html","webpack:///src/app/item/itemOils/itemOils.component.ts","webpack:///src/app/item/itemOils/itemOils.component.html","webpack:///src/app/Heritage.ts","webpack:///src/app/dice/diceIcons_D4/diceIcons_D4.component.ts","webpack:///src/app/dice/diceIcons_D4/D4.svg","webpack:///src/assets/json/items/armors/index.ts","webpack:///src/app/AC.ts","webpack:///src/app/character-sheet/character-sheet.component.ts","webpack:///src/app/character-sheet/character-sheet.component.html","webpack:///src/app/Feat.ts","webpack:///src/app/spells/spells.component.html","webpack:///src/app/spells/spells.component.ts","webpack:///src/assets/json/skills/index.ts","webpack:///src/app/LanguageGain.ts","webpack:///src/app/attacks/attacks.component.ts","webpack:///src/app/attacks/attacks.component.html","webpack:///src/app/AnimalCompanionAncestry.ts","webpack:///src/assets/json/items/alchemicaltools/index.ts","webpack:///src/assets/json/items/scrolls/index.ts","webpack:///src/app/item/itemBladeAlly/itemBladeAlly.component.ts","webpack:///src/app/item/itemBladeAlly/itemBladeAlly.component.html","webpack:///src/app/Ability.ts","webpack:///src/app/spells/spellchoice/spellchoice.component.ts","webpack:///src/app/spells/spellchoice/spellchoice.component.html","webpack:///src/app/Creature.ts","webpack:///src/app/Trait.ts","webpack:///src/app/Material.ts","webpack:///src/app/AdventuringGear.ts","webpack:///src/app/Hint.ts","webpack:///src/app/Specialization.ts","webpack:///src/app/ItemActivity.ts","webpack:///src/assets/json/items/alchemicalelixirs/index.ts","webpack:///src/assets/json/items/snares/index.ts","webpack:///src/assets/json/specializations/index.ts","webpack:///src/app/items/items.component.ts","webpack:///src/app/items/items.component.html","webpack:///src/app/SpellGain.ts","webpack:///src/app/ProficiencyCopy.ts","webpack:///src/app/tags/hint/hint.component.html","webpack:///src/app/tags/hint/hint.component.ts","webpack:///src/app/LoreChoice.ts","webpack:///src/assets/json/itemproperties/index.ts","webpack:///src/app/Speed.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/ActivityGain.ts","webpack:///src/app/Shield.ts","webpack:///src/app/Background.ts","webpack:///src/app/effects/effects.component.ts","webpack:///src/app/effects/effects.component.html","webpack:///src/app/ArmorRune.ts","webpack:///src/assets/json/animalcompanions/index.ts","webpack:///src/app/character/character.component.ts","webpack:///src/app/character/character.component.html","webpack:///src/app/FormulaLearned.ts","webpack:///src/app/OtherConsumable.ts","webpack:///src/app/dice/dice.component.html","webpack:///src/app/dice/dice.component.ts","webpack:///src/assets/json/items/potions/index.ts","webpack:///src/assets/json/items/wands/index.ts","webpack:///src/assets/json/items/otherconsumablesbombs/index.ts","webpack:///src/app/skills.service.ts","webpack:///src/assets/json/items/weapons/index.ts","webpack:///src/app/Class.ts","webpack:///src/app/traits.service.ts","webpack:///src/app/Savegame.ts","webpack:///src/app/Activity.ts","webpack:///src/app/HeldItem.ts","webpack:///src/assets/json/deities/index.ts","webpack:///src/app/spells.service.ts","webpack:///src/app/item/itemMaterial/itemMaterial.component.ts","webpack:///src/app/item/itemMaterial/itemMaterial.component.html","webpack:///src/app/Ammunition.ts","webpack:///src/app/dice/diceIcons_D20/diceIcons_D20.component.ts","webpack:///src/app/dice/diceIcons_D20/D20.svg","webpack:///src/app/app.module.ts","webpack:///src/app/dice/diceIcons_D6/diceIcons_D6.component.ts","webpack:///src/app/dice/diceIcons_D6/D6.svg","webpack:///src/app/item/item.component.ts","webpack:///src/app/item/item.component.html","webpack:///src/assets/json/familiarabilities/index.ts","webpack:///src/app/ItemGain.ts","webpack:///src/assets/json/feats/index.ts","webpack:///src/app/tags/tags.component.html","webpack:///src/app/tags/tags.component.ts","webpack:///src/assets/json/weaponmaterials/index.ts","webpack:///src/app/effects/condition/condition.component.ts","webpack:///src/app/effects/condition/condition.component.html","webpack:///src/app/AnimalCompanionClass.ts","webpack:///src/assets/json/items/otherconsumables/index.ts","webpack:///src/app/AlchemicalElixir.ts","webpack:///src/app/activities.service.ts","webpack:///src/app/item/itemRunes/itemRunes.component.ts","webpack:///src/app/item/itemRunes/itemRunes.component.html","webpack:///src/app/spellLibrary/spellLibrary.component.ts","webpack:///src/app/spellLibrary/spellLibrary.component.html","webpack:///src/app/animalcompanions.service.ts","webpack:///src/assets/json/items/oils/index.ts","webpack:///src/app/item/itemPoisons/itemPoisons.component.ts","webpack:///src/app/item/itemPoisons/itemPoisons.component.html","webpack:///src/app/Deity.ts","webpack:///src/app/Snare.ts","webpack:///src/app/general/general.component.html","webpack:///src/app/general/general.component.ts","webpack:///src/app/SpellChoice.ts","webpack:///src/assets/json/conditions/index.ts","webpack:///src/app/skills/skills.component.ts","webpack:///src/app/skills/skills.component.html","webpack:///src/app/activities/activities.component.ts","webpack:///src/app/activities/activities.component.html","webpack:///src/app/effects.service.ts","webpack:///src/assets/json/items/alchemicalbombs/index.ts","webpack:///src/app/Scroll.ts","webpack:///src/app/Item.ts","webpack:///src/app/Character.ts","webpack:///src/app/WeaponRune.ts","webpack:///src/assets/json/ancestries/index.ts","webpack:///src/app/OtherItem.ts","webpack:///src/app/Health.ts","webpack:///src/assets/json/items/adventuringgear/index.ts","webpack:///src/app/actionIcons/actionIcons.component.html","webpack:///src/app/actionIcons/actionIcons.component.ts","webpack:///src/app/SpellCast.ts","webpack:///src/app/AlchemicalPoison.ts","webpack:///src/app/character/featchoice/featchoice.component.ts","webpack:///src/app/character/featchoice/featchoice.component.html","webpack:///src/app/Rune.ts","webpack:///src/app/Weapon.ts","webpack:///src/assets/json/traits/index.ts","webpack:///src/app/history.service.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/Effect.ts","webpack:///src/app/Potion.ts","webpack:///src/app/deities.service.ts","webpack:///src/app/classes.service.ts","webpack:///src/app/AnimalCompanionSpecialization.ts","webpack:///src/app/Level.ts","webpack:///src/assets/json/items/ammunition/index.ts","webpack:///src/app/familiar/familiarabilities/familiarabilities.component.ts","webpack:///src/app/familiar/familiarabilities/familiarabilities.component.html","webpack:///src/app/AlchemicalTool.ts","webpack:///src/assets/json/features/index.ts","webpack:///src/app/Talisman.ts","webpack:///src/app/ItemCollection.ts","webpack:///src/app/Skill.ts","webpack:///src/app/FormulaChoice.ts","webpack:///src/app/character/skillchoice/skillchoice.component.ts","webpack:///src/app/character/skillchoice/skillchoice.component.html","webpack:///src/app/health/health.component.ts","webpack:///src/app/health/health.component.html","webpack:///src/app/Ancestry.ts","webpack:///src/assets/json/heritages/index.ts","webpack:///src/app/Spell.ts","webpack:///src/app/Armor.ts","webpack:///src/app/Condition.ts","webpack:///src/app/ArmorMaterial.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/familiars.service.ts","webpack:///src/assets/json/items/helditems/index.ts","webpack:///src/app/WeaponMaterial.ts","webpack:///src/app/Oil.ts","webpack:///src/app/Wand.ts","webpack:///src/assets/json/animalcompanionlevels/index.ts","webpack:///src/assets/json/items/shields/index.ts","webpack:///src/app/EffectGain.ts","webpack:///src/app/time.service.ts","webpack:///src/app/time/time.component.html","webpack:///src/app/time/time.component.ts","webpack:///src/assets/json/items/alchemicalpoisons/index.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/character/feat/feat.component.html","webpack:///src/app/character/feat/feat.component.ts"],"names":["AnimalCompanionComponent","changeDetector","characterService","animalCompanionsService","tooltipConfig","hover","container","openDelay","triggers","get_Character","settings","companionMinimized","set_ToChange","process_ToChange","still_loading","toggle_Menu","get_CompanionMenuState","target","set_Changed","index","obj","get_CompanionAvailable","setTimeout","finish_Loading","get_Changed","subscribe","includes","toLowerCase","detectChanges","get_ViewChanged","view","creature","minimize","toggleCompanionMenu","DiceIcons_D12Component","SpellbookComponent","traitsService","spellsService","itemsService","timeService","effectsService","conditionsService","popoverConfig","sheetSide","showSpell","id","Math","showItem","showList","autoClose","placement","popoverClass","spellbookMinimized","name","message","toggle_List","toggle_Spell","get_Traits","get_FamiliarAvailable","get_Skills","filter","skill","level","character","spellCasting","casting","charLevelAvailable","sort","a","b","tradition","className","castingType","get_SpellLevel","max","spellChoices","spellChoice","map","dynamicLevel","get_DynamicLevel","choice","get_DynamicSpellLevel","get_FeatsAndFeatures","some","feat","allowSignatureSpells","gain","have","levelNumber","spellSort","list","get_SpellsTaken","undefined","get_SignatureSpellsAllowed","get_Spells","spell","conditions","spellLevel","get_EffectiveSpellLevel","get_HeightenedConditions","conditionGain","hideChoices","condition","get_Conditions","conditionSet","get_Choices","heightened","length","forEach","push","choices","$choices","min","focusPoints","get_MaxFocusPoints","spellSlotsUsed","spellslots","have_Feat","source","available","get_MaxSpellLevel","get_RelativesOnThis","effect","parseInt","value","get_FeatsTaken","refocus","process_OnceEffect","Object","assign","affected","turns","includeTurnState","inASentence","get_Duration","get_EffectsOnThis","maxSpellSlots","externallyDisabled","activeCooldown","spells","find","spellGain","active","get_UsedSpellSlots","get_MaxSpellSlots","prepared","get_Feats","bloodMagic","bloodMagicFeats","trigger","gainConditions","get_IsBloodMagicTrigger","activated","cooldown","traits","duration","get_AppliedConditions","add_Condition","process_Spell","combinationSpellName","secondSpell","bondedItemCharges","remove_Condition","taken","signatureSpell","showOnSheet","get_TemporarySpellChoiceUnlocked","infinitePossibilities","FamiliarComponent","familiarsService","familiarMinimized","get_FamiliarMenuState","get_Familiar","abilities","get_AbsolutesOnThis","setValue","feats","toggleFamiliarMenu","Familiar","_className","constructor","type","customSkills","originClass","senses","species","size","get_BaseSize","setSizeEffects","sizeEffects","featName","featsTaken","ItemsService","savegameService","itemProperties","weaponMaterials","specializations","loading_itemProperties","loading_weaponMaterials","loading_specializations","loading_adventuringgear","loading_alchemicalbombs","loading_alchemicalelixirs","loading_alchemicaltools","loading_alchemicalpoisons","loading_ammunition","loading_armorrunes","loading_armors","loading_helditems","loading_oils","loading_otherconsumables","loading_otherconsumablesbombs","loading_potions","loading_scrolls","loading_shields","loading_snares","loading_talismans","loading_wands","loading_weaponrunes","loading_weapons","loading_wornitems","itemsMenuState","position","items","cleanItems","craftingItems","allItems","item","group","spec","cast_ItemByClassName","cast_ItemByType","preassigned","newId","resetPropertyRunes","newItem","JSON","parse","stringify","activities","activity","castSpells","cast","reassign","gainActivities","storedSpells","runeEffect","rune","weaponrunes","moddable","propertyRunes","newRunes","libraryItem","newrune","merge","armorrunes","hints","hint","active2","active3","active4","active5","targetInventory","inventory","fromCreature","get_Creatures","inventories","inv","toCreature","gainInventory","movedItem","inventoryItem","equipped","onEquip","invested","on_Invest","movedInventories","itemId","invItem","move_InventoryItem","grant_InventoryItem","amount","drop_InventoryItem","newLength","slice","onceEffects","newConditionGain","librarySpell","gainItems","gainItem","get_CleanItems","grantedItem","expiration","get_Name","grantedBy","console","log","scrollSavant","scroll","attacksChanged","defenseChanged","weapons","weapon","battleforged","armors","armor","wornitems","wornitem","featsService","get_All","customFeats","on","get_CleanItemsOfType","can_Stack","amountPerLevel","wands","wand","oilsApplied","oil","reset","load","category","keys","key","initialize_Item","duplicates","Array","from","Set","otherItem","itemID","highestPriority","overridePriority","highestItem","highestCleanItem","highestCraftingItem","SkillChoice","increases","insertLevel","insertClass","minRank","maxRank","ActivityComponent","activitiesService","allowActivate","isSubItem","get_Creature","activationType","resonant","activate_Activity","get_FusedStances","get_Activities","traitName","activityName","get_FeatsShowingOn","get_ConditionsShowingOn","objectName","get_OwnedActivities","showon","split","trim","get_FuseStanceFeat","data","spellEffectChoices","effectChoices","spellCast","spellCastIndex","displayOnly","SavegameService","http","savegames","loading","server","AbilityChoice","ActivityGain","AdventuringGear","AlchemicalBomb","AlchemicalElixir","AlchemicalPoison","AlchemicalTool","Ammunition","Ancestry","AnimalCompanion","AnimalCompanionAncestry","AnimalCompanionClass","AnimalCompanionLevel","AnimalCompanionSpecialization","Armor","ArmorMaterial","ArmorRune","Background","Bulk","Character","Class","ConditionGain","Consumable","EffectGain","Feat","FeatChoice","FormulaChoice","Health","HeldItem","Heritage","InventoryGain","Item","ItemActivity","ItemCollection","ItemGain","Level","LoreChoice","Oil","OtherConsumable","OtherConsumableBomb","OtherItem","Potion","Scroll","Settings","Shield","Shieldmaterial","Skill","Snare","Speed","SpellCast","SpellCasting","SpellChoice","SpellGain","Talisman","Weapon","WeaponMaterial","WeaponRune","WornItem","Wand","classesService","historyService","ancestry","restore_AncestryFromSave","heritage","restore_HeritageFromSave","background","restore_BackgroundFromSave","animalCompanion","levels","restore_LevelsFromSave","restore_SpecializationFromSave","restore_ClassFromSave","output","isArray","object","clean","blank","get_CleanItemByID","refId","substr","keyName","e","_ClassName","eval","savegame","clean_ClassForSave","clean_AncestryForSave","clean_HeritageForSave","clean_BackgroundForSave","clean_LevelsForSave","clean_SpecializationForSave","save_CharacterToDB","get","post","load_Characters","results","loader","finish_loading","error","dbId","_id","partyName","featChoices","specialChoice","choiceName","classChoice","Equipment","baseType","allowEquippable","equippable","broken","shoddy","carryingBulk","effects","material","potencyRune","bladeAllyRunes","resilientRune","showName","strikingRune","talismans","runes","extraRune","bulk","mat","bulkReduction","toString","oilBulk","bulkEffect","potencyEffect","potency","strikingEffect","striking","resilientEffect","resilient","displayName","get_Potency","get_PotencyRune","secondary","properties","get_Striking","get_StrikingRune","get_Resilient","get_ResilientRune","indexOf","price","cleanRune","weaponRune","floor","armorRune","bulkPrice","talisman","cleanTalisman","DefenseService","AC","shield","shields","EffectCollection","all","relatives","absolutes","bonuses","penalties","ConditionsService","appliedConditions","activeConditions","readonly","creatureIndex","get_CalculatedIndex","overrides","apply","originalCondition","hasValue","overrideConditions","otherGain","unlimited","increaseWounded","ignoreEndsWithConditions","set_TagsToChange","maxDuration","activityGain","endsWithConditions","tempEffect","sourceId","spellSource","spellCastingAbility","endEffects","extraCondition","conditionChoiceFilter","addCondition","lockedByParent","lockedByID","parentID","conditionsToRemove","endConditions","end","nextCondition","newGain","get_HeightenedItems","itemGain","add_ConditionItem","remove_ConditionItem","health","dying","maxDying","wounded","currentHP","result","activityGains","spellGainID","attackRestrictions","get_Items","yourTurn","compareA","nextStage","compareB","decreasingValue","first","firstObject","durations","step","get_Health","damage","alchemicalpoisons","poison","valueLockedByParent","load_Conditions","baseValuesLost","boosts","infoOnly","lost","baseValues","SpellComponent","desc","levelreq","get_Heightened","spellName","subtarget","CraftingComponent","wordFilter","sorting","cashP","cashG","cashS","cashC","get_CraftingMenuState","event","charCode","which","keyCode","sum","funds","cash","multiplier","changeafter","change_Cash","get_CraftingItems","have_CraftingBook","adventuringgear","gear","get_FormulasLearned","hide","trait","reasons","crafted","reduce","current","snareSpecialistPrepared","crafting","toggleCraftingMenu","showOnCurrentLevel","ignoreRequirements","GridIconComponent","title","detail","subTitle","superTitle","shortDesc","subType","superType","iconTitle","isNaN","replace","match","part","join","toUpperCase","iconDetail","percentage","offset","over50","abilitiesMinimized","accent","darkmode","activitiesMinimized","attacksMinimized","characterMinimized","defenseMinimized","effectsMinimized","generalMinimized","healthMinimized","inventoryMinimized","skillsMinimized","spellsMinimized","spelllibraryMinimized","timeMinimized","autoCloseChoices","showOtherOptions","lowerLevelFeats","higherLevelFeats","unavailableFeats","archetypeFeats","hintsShowMoreInformation","characterTileMode","spellsTileMode","DiceIcons_D10Component","AbilitiesService","ability","load_Abilities","ShieldMaterial","maxabsolutes","currentabsolutes","maxbonuses","maxpenalties","currentbonuses","currentpenalties","encumbered","show_BonusesOnThis","show_PenaltiesOnThis","explain","get_Bulk","str","get_Abilities","mod","DiceIcons_D8Component","abilityChoices","extraDamage","number","sizeChange","skillChoices","CharacterService","abilitiesService","skillsService","defenseService","deitiesService","me","basicItems","toChange","changed","viewChanged","itemsMenuTarget","craftingMenuState","characterMenuState","companionMenuState","familiarMenuState","spellsMenuState","spelllibraryMenuState","conditionsMenuState","diceMenuState","characterChanged$","viewChanged$","showonString","attacks","defense","general","update_LanguageList","clear_ToChange","set_ViewChanged","uniqueEffectsStrings","uniqueEffects","uniqueOthersStrings","uniqueOthers","next","menu","parameter","get_Companion","charLevel","gainAnimalCompanion","gainFamiliar","familiar","companionAvailable","familiarAvailable","concat","initialize","hexToRgb","hex","exec","r","g","original","rgba","document","documentElement","style","setProperty","get_Accent","get_Darkmode","body","classList","add","remove","get_Classes","get_Ancestries","get_Deities","speeds","speed","languageSources","ancestryLanguages","baseLanguages","languages","baseIntelligence","baseValue","baseInt","int","languageFeats","levelIntelligence","diff","currentInt","language","locked","tempLanguages","languageSource","existingLanguage","splice","newLanguage","lostLanguage","targetLanguage","freeLanguage","$class","on_ChangeHeritage","on_ChangeAncestry","on_ChangeBackground","on_ChangeClass","on_NewClass","change_Heritage","on_NewAncestry","deity","additionalHeritages","on_NewHeritage","on_NewBackground","get_Specializations","allEquipment","create_WeaponFeats","get_ItemsOfType","weaponFeats","weaponfeatbase","featweapons","prof","ancestries","replacementString","oldFeat","libraryFeat","remove_CustomFeat","regex","RegExp","featString","replacedFeat","add_CustomFeat","newFeat","specialreq","meetsSpecialReq","resetRunes","changeAfter","equipAfter","newInventoryItem","returnedInventoryItem","existingItems","existing","intAmount","newInventoryLength","createdInventoryItem","add_RuneLore","newInventory","bulkLimit","equip","equipBasicItems","including","set_ItemViewChanges","can_Invest","loreChoices","remove_RuneLore","lose_GainedItem","any_item","equip_BasicItems","propertyRune","otherchoice","loreName","add_Lore","remove_Lore","plat","gold","silver","copper","sort_Cash","prototype","set_EquipmentViewChanges","get_Strength","isArmoredSkirt","isDoublingRings","isHandwrapsOfMightyBlows","allOfType","raised","typeItem","takingCover","get_AC","set_Cover","toggle","gainedItem","amountToDrop","gainActivity","libraryActivity","itemActivity","process_Consumable","grant_BasicItems","newBasicWeapon","newBasicArmor","skillName","abilityName","recallKnowledge","oldSkill","reload","parentConditionGain","activate","minLevel","activationPrerequisite","testConditionGain","testEffectGain","get_SimpleEffects","radius","persistent","ignorePersistent","notes","showNotes","addValue","existingConditions","process_Condition","keepPersistent","ignoreLockedByParent","oldConditionGain","oldConditionGains","remove_LockedByParent","remove_Persistent","effectGain","conditionValue","conditionHeightened","conditionChoice","conditionSpellCastingAbility","parseFloat","temporaryHP","targetTempHPSet","tempHPSet","heal","takeDamage","have_Trait","short","get_SkillLevelName","get_Features","includeSubTypes","includeCountAs","get_CompanionLevels","ancestrySenses","heritageSenses","get_FamiliarAbilities","sense","process_Feat","aeonStones","stone","allRunes","gainAndActivity","returnedItems","get_Hint","get_ArmorSpecialization","reset_levels","set_Level","take_Feat","load_CharacterFromDB","delete_CharacterFromDB","finalize_Character","load_Character","asObservable","verify_Feats","set_YourTurn","set_Accent","set_Darkmode","trigger_FinalChange","get_YourTurn","save_Character","updatedExisting","traditionFilter","spellBookSlots","environment","production","AbilitiesComponent","subset","SkillComponent","showValue","isDC","specialNames","get_SkillIncreases","ItemAeonStonesComponent","itemStore","indexes","isWayfinder","allStones","aeonStone","newAeonStone","wornItem","isAeonStone","lowestCooldown","remove_AeonStone","newStone","set_AeonStoneNames","oldStone","get_Price","priceString","ItemProperty","examples","parent","priority","validation","SpecializationGain","bladeAlly","featreq","proficiency","skillLevel","range","ProficiencyFormComponent","excludeTemporary","ConditionsComponent","endOn","permanent","days","hours","minutes","purpose","newEffect","validationError","validationResult","get_ConditionsMenuState","typeKey","includeTurn","get_ConditionDuration","get_EffectProperties","property","effectsObject","propertyData","get_PropertyData","get_Inventories","allConsumables","example","uniqueExamples","toggleConditionsMenu","actions","inputRequired","stack","FeatsService","features","loading_feats","loading_features","loreFeats","feature","alternative","countAsFeat","gainFeatChoice","newFeatChoice","insertedFeatChoice","add_FeatChoice","oldFeatChoice","gainAbilityChoice","newAbilityChoice","add_AbilityChoice","oldAbilityChoice","oldChoice","remove_AbilityChoice","abilityChoice","boost","set_AbilityToChange","gainSkillChoice","newSkillChoice","insertSkillChoice","newChoice","increase","existingIncreases","existingIncrease","add_SkillChoice","process_Skill","oldSkillChoice","increase_Skill","remove_SkillChoice","gainSpellCasting","add_SpellCasting","oldCasting","ownedCasting","remove_SpellCasting","gainSpellChoice","newSpellChoice","insertSpellChoice","classNames","characterclass","frequency","add_SpellChoice","remove_SpellChoice","gainLoreChoice","add_LoreChoice","searchLevel","searchChoice","gain_Activity","oldGain","lose_Activity","conditionGains","freeItem","done","gainSpellListSpells","add_SpellListSpell","remove_SpellListSpell","gainAncestry","ancestryGain","customFeat","oldChoices","oldFeats","gainHeritage","heritageGain","oldHeritage","heritageIndex","stances","removeList","spellList","listSpell","cleanup_Familiar","initialize_AnimalCompanion","companion","familiarLevel","featTaken","oldSpellChoice","gainSpellBookSlots","slots","gainLanguages","languageGain","newLanguageGain","langIndex","lang","superiorBond","spellBook","learned","spellBlending","adaptedCantrip","adaptiveAdept","large","spellCombinationAllowed","spellCombination","gainSpecialization","changeProficiency","copyProficiency","change","tenets","anathema","otherFeat","highestFeat","InventoryComponent","shieldDamage","set_ItemsMenuTarget","newID","calculate","sourceInventory","itemBulk","itemSet","inventoryIndex","pay","otheritems","maxInvest","get_InvestedItems","overcharged","tempGain","shift","on_ConsumableUse","can_Drop","targets","snareSpecialistAvailable","get_HitPoints","get_BrokenThreshold","ItemTalismansComponent","newPropertyRuneName","get_Talismans","allTalismans","newTalisman","melee","remove_Talisman","set_TalismanNames","oldTalisman","minLevelNumber","maxLevelNumber","showChoices","showDuration","showRadius","heightenedFilter","ignorePersistentAtChoiceChange","targetFilter","choiceBySubType","choiceLocked","acknowledgedInputRequired","weaponBase","usage","DefenseComponent","cover","set_DefenseChanged","flatFooted","get_FlatFooted","newCondition","get_EquippedArmor","get_EquippedShield","NewItemPropertyComponent","parents","noTitle","get_Parent","propertyKey","existingCleanItems","get_ItemProperties","extract_Example","element","isObject","get_IsObject","names","ItemOilsComponent","newOil","allOils","oils","weightLimit","rangereq","damagereq","dmgType","req","sourceBook","subTypes","DiceIcons_D4Component","lesserCover","standardCover","greaterCover","coverName","get_AbsolutesOnThese","get_NamesList","get_RelativesOnThese","characterBonuses","get_Effects","show","familiarBonuses","show_BonusesOnThese","characterPenalties","familiarPenalties","show_PenaltiesOnThese","armorBonus","armorCreature","relative","armorSet","absolute","dex","profLevel","charLevelBonus","dexcap","get_DexCap","dexBonus","armorItemBonus","get_ACBonus","$shoddy","effectsSum","get_TypeFilteredEffects","CharacterSheetComponent","showMode","get_ItemsMenuState","get_CharacterMenuState","get_SpellsMenuState","get_SpellLibraryMenuState","get_DiceMenuState","fightingStyle","get_DefaultSpellcasting","toggle_Mode","transform","abilityreq","access","archetype","heritagereq","gainFormulaChoice","internalNote","limited","lorebase","shortdesc","skillreq","specialdesc","specialreqdesc","usageNote","PFSnote","met","requirement","requiredAbility","expected","matchingreqs","lowest","requiredSkillName","requiredSkill","requiredFeat","testcreature","testfeat","extraHeritage","Skill_Level","get_Speeds","Has_Feat","Has_Sense","get_Senses","choiceLevel","skipLevel","ignoreRequirementsList","meetsLevelReq","abilityreqs","meetsAbilityReq","skillreqs","meetsSkillReq","featreqs","meetsFeatReq","heritagereqs","meetsHeritageReq","SpellsComponent","showChoice","allowHeightened","allowBorrow","showContent","showSpellCasting","showContentLevelNumber","content","reset_ChoiceArea","getElementById","scrollIntoView","behavior","toggle_Choice","get_ShowChoice","cantripAllowed","toggle_TileMode","toggleSpellMenu","LanguageGain","AttacksComponent","onlyAttacks","forbiddenAttacks","showRestricted","get_CritSpecialization","restriction","excluding","get_AttackRestrictions","alchemicalbombs","otherconsumablesbombs","poisonsApplied","types","get_EquippedWeapons","ammunition","ammoList","ammo","snares","snare","runeSource","get_RuneSource","handwraps","get_Proficiency","attack","ranged","map2","map3","map2f","map3f","mapName","hitPoints","supportBenefit","ItemBladeAllyComponent","newPropertyRune","weapon2","alignment","disabled","$index","traitreq","remove_BladeAllyRune","set_PropertyRuneNames","oldRune","add_BladeAllyRune","Ability","modabsolutes","modbonuses","modpenalties","ownValue","get_AbilityBoosts","weight","modifier","SpellchoiceComponent","showChoiceMessage","showSpellMessage","itemSpell","showTitle","tileMode","spellbook","emit","text","charAt","capitalize","is_AdaptedCantripSpell","is_AdaptiveAdeptSpell","traitFilter","spellBookOnly","signatureSpellGains","signatureSpellsAllowed","get_SignatureSpellsChosen","is_TradedIn","tradeLevel","get_SpellBlendingAllowed","highestSpellLevel","get_HighestSpellLevel","get_InfinitePossibilitiesAllowed","is_InfinitePossibilitiesSpell","get_AdaptedCantripAllowed","get_AdaptiveAdeptAllowed","crossbloodedEvolution","get_CHA","get_SpellBlendingUnlocked","get_InfinitePossibilitiesUnlocked","get_AdaptedCantripUnlocked","get_AdaptiveAdeptUnlocked","get_SpellBlendingUsed","get_InfinitePossibilitiesUsed","get_AdaptedCantripUsed","get_AdaptiveAdeptUsed","on_SpellTaken","allSpells","traditions","divineFont","get_EsotericPolymathAllowed","adaptedcantrip","originalSpell","takenSpell","get_SpellListSpell","singleTarget","spellNumber","availableSpell","existingSpell","addedSpell","get_SpellTakenByThis","availableSpells","savingThrow","cannotTake","get_Available","take_Spell","anytrue","takenByThis","canChoose","reason","get_SpellTakenThisLevel","otherChoice","Creature","Trait","dynamic","specialModifier","namesOnly","filteredItems","Material","craftRequirement","craftingRequirement","runeLimit","hands","Hint","neversave","extraActivations","Specialization","chargesUsed","sharedChargesID","exclusiveActivityID","ItemsComponent","newItemType","get_ItemsMenuTarget","newIDs","get_ShowPurpose","creatureType","get_ScrollSavantCasting","craftable","grant_Item","learn_Formula","unlearn_Formula","get_ScrollSavantDCLevel","pop","tempInv","newScroll","oldScroll","toggleItemsMenu","ProficiencyCopy","featuresOnly","HintComponent","description","__proto__","initialIncreases","loreDesc","both","above5","isNull","AppComponent","acbonus","speedpenalty","brokenThreshold","coverbonus","hardness","hitpoints","shieldBase","$shieldAlly","get_MaxHP","specialLore","region","adventurePath","prerequisites","EffectsComponent","fullDisplay","showApplied","showNotApplied","showHidden","toggle_Item","penalty","existingCondition","speedRune","enfeebledRune","alignmentPenalty","calculatedBulk","calculate_InventoryEffects","calculate_Bulk","profreq","nonmetallic","CharacterComponent","modalService","modal","newClass","showLevel","showFixedChangesLevelNumber","adventureBackgrounds","regionalBackgrounds","blankCharacter","choiceType","get_ShowList","get_ShowContentLevelNumber","get_ShowContent","reset_Character","get_Savegames","toggleCharacterMenu","delete_Character","open","centered","ariaLabelledBy","then","experiencePoints","get_AvailableDeities","alignments","followerAlignments","oldLevel","on_LevelChange","newLevel","lowerLevel","higherLevel","get_SpellsLearned","newLanguages","maxAvailable","get_MaxAvailable","cannotBoost","abilityBoostedByThis","abilityIllegal","boost_Ability","illegal","sameBoostsThisLevel","exclusive","cannotBoostHigher","intelligence","INT","get_INT","get_SkillINTBonus","specialChoices","get_FeatChoicesShownOnCurrentLevel","ceil","clericSpells","get_BlessedBloodHaveSpell","get_LoreChoice","fuseStanceFeat","unique","restrictedConditions","existingStances","stance","restrictedStances","restricted","existingStance","change_Class","change_Ancestry","currentDeity","change_Deity","ancestryName","get_Heritages","subheritage","availableHeritage","get_Backgrounds","get_SubBackgrounds","subbackground","change_Background","existingCompanionName","get_CompanionTypes","change_Type","get_CompanionSpecializationsAvailable","add_Specialization","remove_Specialization","existingCompanionSpecs","get_CompanionSpecializations","initialize_Familiar","classboosts","ancestryboosts","FormulaLearned","DiceComponent","diceResult","diceNum","cleared","roll","random","summary","die","count","get_DiceSum","toggleDiceMenu","clear","SkillsService","skills","load_Skills","focusPointsLast","formulaBook","customSkill","availableBoost","ancestryListing","traitListing","existingSkillChoice","get_SkillChoice","TraitsService","haveOn","load_Traits","Savegame","Activity","cooldownAfterEnd","cost","sustained","charges","critfailure","critsuccess","failure","requirements","showActivities","showSpells","success","$cooldown","isStance","startWithZero","SpellsService","manual","customDuration","targetCreature","choicesIndex","conditionTarget","existingConditionGain","load_Spells","ItemMaterialComponent","craftingStation","customItemStore","allWeaponMaterials","newWeaponMaterial","get_WeaponMaterials","set_MaterialNames","DiceIcons_D20Component","AppModule","DiceIcons_D6Component","ItemComponent","get_FullPrice","ring","ironItem","get_DoublingRingsOptions","TagsComponent","showTraits","showFeats","showItems","showConditions","showEffects","specialEffects","sortByName","get_TraitsForThis","get_CompanionShowingOn","get_FamiliarShowingOn","get_ActivitiesShowingOn","get_ItemsShowingOn","get_ArmorSpecializationsShowingOn","ConditionComponent","showItemMessage","oldValue","change_ConditionChoice","get_AnimalCompanionLevels","benefit","drawback","ActivitiesService","action","spellTarget","equipment","set_HintsToChange","get_Cooldown","maxCharges","otherCooldown","originalActivity","conditionIndex","remainingTurns","difference","cooldownTurns","load_Activities","ItemRunesComponent","saggorak","namereq","runeblock","freePropertyRunes","runeType","previousRune","extractedRune","insertedRune","oldStriking","on_WeaponRuneChange","remove_WeaponPropertyRune","oldResilient","on_ArmorRuneChange","remove_ArmorPropertyRune","newRune","SpellLibraryComponent","get_SpellsFromSource","area","wizardCasting","bardCasting","sorcererCasting","school","get_School","overdraw","wizardLearned","schoolLearned","wizardAvailable","schoolAvailable","adaptedCantripAvailable","adaptiveAdeptCantripAvailable","adaptiveAdept1stLevelAvailable","adaptedCantripLearned","adaptiveAdeptLearned","get_ArcaneEvolutionAllowed","wizardLearnedAll","wizardAvailableAll","learn_Spell","unlearn_Spell","selected","get_SpellMasterySpells","get_SpellMasterySelected","spellTaken","newSpellTaken","toggleSpellLibraryMenu","AnimalCompanionsService","companionAncestries","companionLevels","companionSpecializations","loading_ancestries","loading_levels","libraryObject","specialization","ItemPoisonsComponent","newPoison","allPoisons","Deity","divineAbility","divineSkill","favoredWeapon","domains","tradeable","GeneralComponent","showMinimizeButton","heroPoints","get_Size","archetypes","save","SkillsComponent","speedEffects","uniqueSpeeds","uniqueSpeed","ActivitiesComponent","showAction","actualActivity","fuseStance","EffectsService","bonusTypes","effectProperties","ObjectName","ObjectNames","lowerIsBetter","returnedEffects","filteredEffects","bonusEffects","prev","cumulative","otherEffect","groupSum","effectGroup","effectGroups","penaltyEffects","objectEffects","Companion","Duration","Value","Heightened","Choice","SpellCastingAbility","SpellSource","Temporary_HP","Current_HP","Max_HP","maxHP","Modifier","BaseSize","Size","get_TestSpeed","Has_Condition","Weapons","WornItems","SpellcastingModifier","Has_Heritage","Infinity","secondRun","foreignEffects","otherCreatureIndex","simpleEffects","hintEffects","featEffects","add_HintEffects","itemEffects","oldShoddy","get_Shoddy","oldShieldAlly","get_ShieldAlly","shieldBonus","oldArmoredSkirt","$affectedByArmoredSkirt","get_ArmoredSkirt","Strength","get_SkillPenalty","allEffects","effectsForOthers","substring","ignoreeffect","alwaysShow","alwaysShowWildcard","wildcard","generate_Effects","newEffects","oldEffects","generalWildcard","abilitiesWildcard","healthWildcard","defenseWildcard","attacksWildcard","individualskills","individualSkillsWildcard","skillsWildcard","spellbookWildcard","activitiesWildcard","changedEffects","oldEffect","lowerCaseTarget","load_EffectProperties","storeBulk","subTypeDesc","oldBoost","existingChoices","tempChoice","newCasting","newSpellCasting","insertChoice","train","oldIncrease","get_Level","skillChoice","add_CustomSkill","remove_CustomSkill","existingFeat","signatureAllowed","spellsTaken","loreSkill","remove_LoreFeats","loreFeat","add_LoreFeats","lorebaseFeat","criticalHint","immunities","lessenedEffects","resistances","classHP","ancestryHP","classCreature","constitution","CON","baseHP","woundeds","defaultMaxDying","nonlethal","wake","ActionIconsComponent","actionString","stages","FeatchoiceComponent","showFeat","showSubFeat","uncollapseSubFeat","showFeatChoiceMessage","showFeatMessage","featLevel","get_UncollapseSubFeat","featSet","subfeatSet","subfeat","availableFeats","subFeat","get_FeatTakenByChoice","allFeats","allSubFeats","subFeatTakenByThis","superFeat","featAvailable","sortLevel_a","sortLevel_b","sort_a","sort_b","featSets","template","ignoreReq","create_IgnoreRequirementList","haveUpToNow","haveLater","takenFeats","libraryfeat","takenfeat","subfeats","availableSubfeats","superfeat","takenSubfeats","compare","ignored","get_ChoiceLevel","Rune","dicenum","dicesize","twohanded","dexterityBased","useHighestAttackProficiency","doublingRings","goldItem","reach","reachTrait","newReach","reachString","proficiencyChanges","proficiencies","highestProficiencySkill","nameSkill","baseSkill","profAndGroup","profAndGroupSkill","bestSkillLevel","dexEffects","dexPenalty","dexPenaltySum","strEffects","strPenalty","strPenaltySum","dexUsed","strUsed","abilityMod","attackResult","namesList","calculatedEffects","isPowerfulFist","diceExplain","bonusExplain","dicenumMultiplier","favoredWeapons","newDicesize","twoHandedDiceSize","baseDice","dmgBonus","abilityReason","abilitySource","companionSource","companionMod","effectBonus","perDieList","dmgBonusTotal","dmgResult","get_ExtraDamage","SpecializationGains","critSpec","specs","existingspec","HistoryService","heritages","backgrounds","loading_backgrounds","loading_heritages","get_HeritagesAndSubtypes","TopBarComponent","Effect","DeitiesService","deities","load_Deities","ClassesService","classes","load_Classes","FamiliarabilitiesComponent","alchemicalelixirs","helditems","otherconsumables","potions","scrolls","alchemicaltools","rounded","addup","creatureInventory","get_Ability","levelNames","spellcasting","skillLevelEffects","spellDCs","proficiencyCopies","copy","copyLevels","charBaseValue","noRelatives","SkillchoiceComponent","showSkillChoiceMessage","cannotIncrease","skillIncreasedByThis","isLegal","allIncreases","trainedOnHigherLevelByFeat","trainedOnHigherLevel","cannotIncreaseHigher","canIncrease","HealthComponent","healing","setTempHP","rest","calculatedHealth","tempSet","resistance","res","word","recommendedLanguages","Spell","allowReturnFocusPoint","castType","desc10","desc1","desc2","desc3","desc4","desc5","desc6","desc7","desc8","desc9","get_DescriptionSet","descVar","variable","baseLevel","armorBase","skillpenalty","strength","fortification","armoredSkirt","armorIncreases","profIncreases","Condition","buff","fixedDuration","allowRadiusChange","filtered","spelllevelreq","featNotFound","routes","path","component","AppRoutingModule","forRoot","relativeLinkResolution","FamiliarsService","familiarAbilities","loading_familiarAbilities","TimeService","fastHealing","tick","con","recoverPoints","points","tick_Activities","tick_Conditions","tick_CustomEffects","tick_Items","tick_Spells","returnString","TimeComponent","showTurn","showTime","start_Turn","end_Turn","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","Error","code","module","exports","FeatComponent"],"mappings":"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;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;A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AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AA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","file":"main-es5.js","sourcesContent":["<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"animal-companion-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleCompanionMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <div class=\"animalcompanion-box\"\r\n        *ngIf=\"!still_loading() && get_Character().class && get_CompanionAvailable() && get_CompanionMenuState() == 'in'\">\r\n        <app-effects [creature]=\"'Companion'\" id=\"Companion-effects\" class=\"charactersheet-app charactersheet-row\"\r\n            [sheetSide]=\"'center'\"></app-effects>\r\n        <div class=\"charactersheet-column-container\">\r\n            <div class=\"charactersheet-column\">\r\n                <app-general [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-general\"\r\n                    class=\"charactersheet-app\"></app-general>\r\n                <app-health [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-health\"\r\n                    class=\"charactersheet-app\"></app-health>\r\n                <app-skills [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-skills\"\r\n                    class=\"charactersheet-app\"></app-skills>\r\n                <app-activities [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-activities\"\r\n                    class=\"charactersheet-app\"></app-activities>\r\n            </div>\r\n            <div class=\"charactersheet-column\">\r\n                <app-abilities [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-abilities\"\r\n                    class=\"charactersheet-app\"></app-abilities>\r\n                <app-defense [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-defense\"\r\n                    class=\"charactersheet-app\"></app-defense>\r\n                <app-attacks [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-attacks\"\r\n                    class=\"charactersheet-app\"></app-attacks>\r\n                <app-inventory [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-inventory\"\r\n                    class=\"charactersheet-app\"></app-inventory>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { AnimalCompanionsService } from '../animalcompanions.service';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-animal-companion',\r\n    templateUrl: './animal-companion.component.html',\r\n    styleUrls: ['./animal-companion.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AnimalCompanionComponent implements OnInit {\r\n\r\n    public hover: string = '';\r\n\r\n    constructor(\r\n        private changeDetector:ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private animalCompanionsService: AnimalCompanionsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.companionMinimized = !this.characterService.get_Character().settings.companionMinimized;\r\n        this.characterService.set_ToChange(\"Companion\", \"companion\");\r\n        this.characterService.set_ToChange(\"Companion\", \"abilities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.companionMinimized;\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.characterService.still_loading() || this.animalCompanionsService.still_loading());\r\n    }\r\n\r\n    toggleCompanionMenu() {\r\n        this.characterService.toggle_Menu(\"companion\");\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.characterService.get_CompanionMenuState();\r\n    }\r\n\r\n    set_Changed(target: string) {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    //If you don't use trackByIndex on certain inputs, you lose focus everytime the value changes. I don't get that, but I'm using it now.\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"companion\", \"all\"].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == \"companion\" && [\"companion\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D12',\r\n  templateUrl: './D12.svg',\r\n  styleUrls: ['./diceIcons_D12.component.css']\r\n})\r\nexport class DiceIcons_D12Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D12\"\r\n        d=\"M 2.00,22.00\r\n           C 2.00,22.00 14.00,7.00 14.00,7.00\r\n             14.00,7.00 32.00,1.00 32.00,1.00\r\n             32.00,1.00 50.00,7.00 50.00,7.00\r\n             50.00,7.00 62.00,22.00 62.00,22.00\r\n             62.00,22.00 62.00,42.00 62.00,42.00\r\n             62.00,42.00 50.00,57.00 50.00,57.00\r\n             50.00,57.00 32.00,63.00 32.00,63.00\r\n             32.00,63.00 14.00,57.00 14.00,57.00\r\n             14.00,57.00 2.00,42.00 2.00,42.00\r\n             2.00,42.00 2.00,22.00 2.00,22.00 Z\r\n           M 32.00,14.00\r\n           C 32.00,14.00 49.00,26.00 49.00,26.00\r\n             49.00,26.00 42.00,45.00 42.00,45.00\r\n             42.00,45.00 22.00,45.00 22.00,45.00\r\n             22.00,45.00 15.00,26.00 15.00,26.00\r\n             15.00,26.00 32.00,14.00 32.00,14.00 Z\r\n           M 32.00,14.00\r\n           C 32.00,14.00 32.00,1.00 32.00,1.00M 49.00,26.00\r\n           C 49.00,26.00 62.00,22.00 62.00,22.00M 42.00,45.00\r\n           C 42.00,45.00 50.00,57.00 50.00,57.00M 22.00,45.00\r\n           C 22.00,45.00 14.00,57.00 14.00,57.00M 15.00,26.00\r\n           C 15.00,26.00 2.00,22.00 2.00,22.00\" />\r\n   </g>\r\n</svg>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { Spell } from '../Spell';\r\nimport { TraitsService } from '../traits.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { ItemsService } from '../items.service';\r\nimport { TimeService } from '../time.service';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { EffectsService } from '../effects.service';\r\nimport { SpellChoice } from '../SpellChoice';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { EffectGain } from '../EffectGain';\r\nimport { Condition } from '../Condition';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Feat } from '../Feat';\r\n\r\n@Component({\r\n    selector: 'app-spellbook',\r\n    templateUrl: './spellbook.component.html',\r\n    styleUrls: ['./spellbook.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellbookComponent implements OnInit {\r\n\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private showSpell: number = 0;\r\n    private id: number = 0;\r\n    public hover: number = 0;\r\n    public Math = Math;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private spellsService: SpellsService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private effectsService: EffectsService,\r\n        private conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.spellbookMinimized = !this.characterService.get_Character().settings.spellbookMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.spellbookMinimized;\r\n    }\r\n\r\n    toggle_Spell(id: number) {\r\n        if (this.showSpell == id) {\r\n            this.showSpell = 0;\r\n        } else {\r\n            this.showSpell = id;\r\n        }\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n            this.showSpell = 0;\r\n        }\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SpellChoice, casting: SpellCasting }) {\r\n        this.toggle_List(message.name);\r\n    }\r\n\r\n    receive_SpellMessage(name: string) {\r\n        this.toggle_Spell(0);\r\n    }\r\n\r\n    get_ShowSpell() {\r\n        return this.showSpell;\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    toggleSpellsMenu() {\r\n        this.characterService.toggle_Menu('spells');\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_SpellDCs() {\r\n        return this.characterService.get_Skills(this.get_Character(), \"\", \"Spell DC\").filter(skill => skill.level(this.get_Character(), this.characterService) > 0);\r\n    }\r\n\r\n    get_SpellCastings() {\r\n        let character = this.get_Character();\r\n        return character.class.spellCasting.filter(casting => casting.charLevelAvailable && casting.charLevelAvailable <= character.level)\r\n            .sort(function (a, b) {\r\n                if (a.tradition > b.tradition) {\r\n                    return 1;\r\n                }\r\n                if (a.tradition < b.tradition) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.className > b.className) {\r\n                    return 1;\r\n                }\r\n                if (a.className < b.className) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.castingType > b.castingType || (b.castingType == \"Innate\" ? a.castingType != \"Innate\" : false)) {\r\n                    return 1;\r\n                }\r\n                if (a.castingType < b.castingType || (a.castingType == \"Innate\" ? b.castingType != \"Innate\" : false)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    get_MaxSpellLevel(casting: SpellCasting) {\r\n        //Get the available spell level of this casting. This is the highest spell level of the spell choices that are available at your character level.\r\n        //Focus spells are heightened to half your level rounded up.\r\n        //Dynamic spell levels need to be evaluated.\r\n        if (casting.castingType == \"Focus\") {\r\n            return this.get_Character().get_SpellLevel();\r\n        }\r\n        return Math.max(...casting.spellChoices.filter(spellChoice => spellChoice.charLevelAvailable <= this.get_Character().level).map(spellChoice => spellChoice.dynamicLevel ? this.get_DynamicLevel(casting, spellChoice) : spellChoice.level), 0);\r\n    }\r\n\r\n    get_DynamicLevel(casting: SpellCasting, choice: SpellChoice) {\r\n        return this.spellsService.get_DynamicSpellLevel(casting, choice, this.characterService);\r\n    }\r\n\r\n    get_SignatureSpellsAllowed(casting: SpellCasting) {\r\n        return this.characterService.get_FeatsAndFeatures()\r\n            .some(feat => feat.allowSignatureSpells.some(gain => gain.className == casting.className) && feat.have(this.get_Character(), this.characterService))\r\n    }\r\n\r\n    get_SpellsByLevel(levelNumber: number, casting: SpellCasting) {\r\n        function spellSort(list: { choice: SpellChoice, gain: SpellGain }[]) {\r\n            return list.sort(function (a, b) {\r\n                if (a.gain.name > b.gain.name) {\r\n                    return 1;\r\n                }\r\n\r\n                if (a.gain.name < b.gain.name) {\r\n                    return -1;\r\n                }\r\n\r\n                return 0;\r\n            });\r\n        }\r\n        this.id = levelNumber * 1000;\r\n        let character = this.get_Character();\r\n        if (levelNumber == -1) {\r\n            if (casting.castingType == \"Focus\") {\r\n                return spellSort(character.get_SpellsTaken(this.characterService, 1, character.level, levelNumber, \"\", casting, \"\", \"\", \"\", \"\", \"\", undefined, this.get_SignatureSpellsAllowed(casting), false));\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return spellSort(character.get_SpellsTaken(this.characterService, 1, character.level, levelNumber, \"\", casting, \"\", \"\", \"\", \"\", \"\", undefined, this.get_SignatureSpellsAllowed(casting)));\r\n        }\r\n    }\r\n\r\n    get_Spells(name: string) {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellConditions(spell: Spell, levelNumber: number, gain: SpellGain) {\r\n        //For all conditions that are included with this spell on this level and has choices unlocked, create an effectChoice on the gain and set it to the default choice.\r\n        let conditions: Condition[] = [];\r\n        let spellLevel: number = this.get_EffectiveSpellLevel(spell, levelNumber);\r\n        spell.get_HeightenedConditions(spellLevel)\r\n            .filter(conditionGain => !conditionGain.hideChoices)\r\n            .map(conditionGain => { return { gain: conditionGain, condition: this.conditionsService.get_Conditions(conditionGain.name)[0] } })\r\n            .filter(conditionSet => conditionSet.condition?.get_Choices(this.characterService, true, (conditionSet.gain.heightened ? conditionSet.gain.heightened : spellLevel))?.length > 1)\r\n            .map(conditionSet => conditionSet.condition)\r\n            .forEach((condition, index) => {\r\n                //Add the condition to the list of conditions that need to display a choice,\r\n                // then if the gain doesn't have a choice at that index or the choice isn't among the condition's choices, insert or replace that choice on the gain.\r\n                conditions.push(condition);\r\n                while (!gain.choices.length || gain.choices.length < index - 1) {\r\n                    gain.choices.push(condition.choice);\r\n                }\r\n                if (!condition.$choices.includes(gain.choices?.[index])) {\r\n                    gain.choices[index] = condition.choice;\r\n                }\r\n            })\r\n        return conditions;\r\n    }\r\n\r\n    get_EffectiveSpellLevel(spell: Spell, levelNumber: number) {\r\n        return spell.get_EffectiveSpellLevel(this.get_Character(), levelNumber, this.characterService, this.effectsService);\r\n    }\r\n\r\n    get_FocusPoints() {\r\n        return Math.min(this.get_Character().class.focusPoints, this.get_MaxFocusPoints());\r\n    }\r\n\r\n    get_MaxFocusPoints() {\r\n        return this.characterService.get_MaxFocusPoints();\r\n    }\r\n\r\n    get_UsedSpellSlots(spellLevel: number, casting: SpellCasting) {\r\n        if (casting.castingType == \"Spontaneous\") {\r\n            return casting.spellSlotsUsed[spellLevel];\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_MaxSpellSlots(spellLevel: number, casting: SpellCasting) {\r\n        if (casting.castingType == \"Spontaneous\") {\r\n            let spellslots: number = 0;\r\n            //You have as many spontaneous spell slots as you have original spells (e.g. spells with source \"*Sorcerer Spellcasting\" for Sorcerers),\r\n            //  except for Level 10, where you have 1 (before effects).\r\n            if (spellLevel == 10) {\r\n                spellslots = 1;\r\n            } else if ([11, 12].includes(spellLevel) && casting.className == \"Sorcerer\" && this.have_Feat(\"Greater Vital Evolution\")) {\r\n                spellslots = 1;\r\n            } else if (spellLevel == 0 && casting.className == \"Bard\" && this.have_Feat(\"Studious Capacity\")) {\r\n                spellslots = 1;\r\n            } else if (spellLevel > 0 && spellLevel < 11) {\r\n                casting.spellChoices.filter(choice =>\r\n                    choice.level == spellLevel &&\r\n                    choice.charLevelAvailable <= this.get_Character().level &&\r\n                    choice.source.includes(casting.className + \" Spellcasting\")\r\n                ).forEach(choice => {\r\n                    spellslots += choice.available;\r\n                });\r\n                if (spellLevel <= this.get_MaxSpellLevel(casting) - 2 && (casting.className == \"Bard\" && this.have_Feat(\"Occult Breadth\"))) {\r\n                    spellslots += 1;\r\n                }\r\n                if (spellLevel <= this.get_MaxSpellLevel(casting) - 2 && (casting.className == \"Sorcerer\" && this.have_Feat(\"Bloodline Breadth\"))) {\r\n                    spellslots += 1;\r\n                }\r\n            }\r\n            if (casting.className)\r\n                this.effectsService.get_RelativesOnThis(this.get_Character(), casting.className + \" \" + casting.castingType + \" Level \" + spellLevel + \" Spell Slots\").forEach(effect => {\r\n                    spellslots += parseInt(effect.value);\r\n                });\r\n            return spellslots;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        let character = this.get_Character();\r\n        return character.get_FeatsTaken(0, character.level, name).length\r\n    }\r\n\r\n    refocus() {\r\n        this.timeService.refocus(this.characterService, this.conditionsService, this.itemsService, this.spellsService);\r\n    }\r\n\r\n    on_RestoreFocusPoint() {\r\n        this.characterService.process_OnceEffect(this.get_Character(), Object.assign(new EffectGain(), { affected: \"Focus Points\", value: \"+1\" }));\r\n    }\r\n\r\n    get_Duration(turns: number, includeTurnState: boolean = true, inASentence: boolean = false) {\r\n        return this.timeService.get_Duration(turns, includeTurnState, inASentence);\r\n    }\r\n\r\n    get_ExternallyDisabled(spell: Spell) {\r\n        return this.effectsService.get_EffectsOnThis(this.get_Character(), spell.name + \" Disabled\").length;\r\n    }\r\n\r\n    cannot_Cast(spell: Spell, levelNumber: number, casting: SpellCasting, choice: SpellChoice, gain: SpellGain, maxSpellSlots: number, externallyDisabled: number) {\r\n        if ((gain.activeCooldown || choice.spells.find(spellGain => spellGain.activeCooldown)) && !gain.active) {\r\n            return \"Cannot cast \" + this.get_Duration(gain.activeCooldown, true, true);\r\n        }\r\n        if (externallyDisabled) {\r\n            return \"Disabled by effect.\"\r\n        }\r\n        switch (casting.castingType) {\r\n            case \"Focus\":\r\n                if (choice.level == -1) {\r\n                    if (this.get_Character().class.focusPoints <= 0) {\r\n                        return \"No focus points left to cast.\"\r\n                    }\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"Spontaneous\":\r\n                if (\r\n                    levelNumber > 0 &&\r\n                    maxSpellSlots &&\r\n                    this.get_UsedSpellSlots(levelNumber, casting) >= maxSpellSlots &&\r\n                    !(\r\n                        //For spontanous spells, allow casting a spell if you don't have spell slots of that level left,\r\n                        //  but you have an extra studious capacity spell slot left. You can't use the studious capacity spell slot for your highest spell level.\r\n                        casting.className == \"Bard\" &&\r\n                        this.have_Feat(\"Studious Capacity\") &&\r\n                        this.get_UsedSpellSlots(0, casting) < this.get_MaxSpellSlots(0, casting) &&\r\n                        levelNumber != this.get_MaxSpellLevel(casting)\r\n                    ) &&\r\n                    !(\r\n                        //For spontanous spells, allow casting a spell if you don't have spell slots of that level left,\r\n                        //  but you have an extra greater vital evolution spell slot left and haven't used one for this level yet.\r\n                        casting.className == \"Sorcerer\" &&\r\n                        this.have_Feat(\"Greater Vital Evolution\") &&\r\n                        this.get_UsedSpellSlots(11, casting) != levelNumber &&\r\n                        this.get_UsedSpellSlots(12, casting) != levelNumber &&\r\n                        (\r\n                            this.get_UsedSpellSlots(11, casting) == 0 ||\r\n                            this.get_UsedSpellSlots(12, casting) == 0\r\n                        )\r\n                    )\r\n                ) {\r\n                    return \"No spell slots left to cast.\"\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"Prepared\":\r\n                if (choice.level > 0 && !gain.prepared) {\r\n                    return \"Already cast today.\"\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"Innate\":\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    get_BloodMagicFeats() {\r\n        let character = this.get_Character();\r\n        return this.characterService.get_Feats().filter(feat => feat.bloodMagic.length && feat.have(character, this.characterService, character.level));\r\n    }\r\n\r\n    get_IsBloodMagicTrigger(spell: Spell, bloodMagicFeats: Feat[]) {\r\n        return bloodMagicFeats.some(feat => feat.bloodMagic.some(bloodMagic => bloodMagic.trigger.includes(spell.name)));\r\n    }\r\n\r\n    can_Activate(spell: Spell, bloodMagicFeats: Feat[]) {\r\n        return spell.gainConditions?.length || this.get_IsBloodMagicTrigger(spell, bloodMagicFeats);\r\n    }\r\n\r\n    on_Cast(levelNumber: number, gain: SpellGain, casting: SpellCasting, choice: SpellChoice, creature: string = \"\", spell: Spell, activated: boolean, bloodMagicFeats: Feat[]) {\r\n        let character = this.get_Character();\r\n        //Spells with a cooldown can start their cooldown, but not use any resources.\r\n        if (gain.cooldown) {\r\n            gain.activeCooldown = gain.cooldown;\r\n        } else {\r\n            //Focus spells cost Focus points.\r\n            if (casting.castingType == \"Focus\" && activated && choice.level == -1) {\r\n                this.get_Character().class.focusPoints = Math.min(character.class.focusPoints, this.get_MaxFocusPoints());\r\n                this.get_Character().class.focusPoints -= 1;\r\n            };\r\n            //Spontaneous spells use up spell slots. If you don't have spell slots of this level left, use a Studious Capacity one as a bard (0th level) or a Greater Vital Evolution one as a Sorcerer (11th and 12th level).\r\n            if (casting.castingType == \"Spontaneous\" && !spell.traits.includes(\"Cantrip\") && activated) {\r\n\r\n                //With Bloodline Conduit active, prepared spells without a duration up to 5th level do not get expended.\r\n                if (!(levelNumber <= 5 && !spell.duration && this.conditionsService.get_AppliedConditions(character, this.characterService, character.conditions, true).some(gain => gain.name == \"Bloodline Conduit\"))) {\r\n                    if (this.get_UsedSpellSlots(levelNumber, casting) < this.get_MaxSpellSlots(levelNumber, casting)) {\r\n                        casting.spellSlotsUsed[levelNumber] += 1;\r\n                    } else if (casting.className == \"Bard\") {\r\n                        casting.spellSlotsUsed[0] += 1;\r\n                    } else if (casting.className == \"Sorcerer\") {\r\n                        if (casting.spellSlotsUsed[11] == 0) {\r\n                            casting.spellSlotsUsed[11] = levelNumber;\r\n                        } else if (casting.spellSlotsUsed[12] == 0) {\r\n                            casting.spellSlotsUsed[12] = levelNumber;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //Prepared spells get locked until the next preparation.\r\n            if (casting.castingType == \"Prepared\" && !spell.traits.includes(\"Cantrip\") && activated) {\r\n                //With Leyline Conduit active, prepared spells without a duration up to 5th level do not get expended.\r\n                if (!(levelNumber <= 5 && !spell.duration && this.conditionsService.get_AppliedConditions(character, this.characterService, character.conditions, true).some(gain => gain.name == \"Leyline Conduit\"))) {\r\n                    gain.prepared = false;\r\n                }\r\n            }\r\n        }\r\n        //Trigger bloodline powers for sorcerers if your main class is Sorcerer.\r\n        bloodMagicFeats.forEach(feat => {\r\n            feat.bloodMagic.forEach(bloodMagic => {\r\n                if (bloodMagic.trigger.includes(spell.name)) {\r\n                    let conditionGain = new ConditionGain();\r\n                    conditionGain.name = bloodMagic.condition;\r\n                    conditionGain.duration = bloodMagic.duration;\r\n                    conditionGain.source = feat.name;\r\n                    conditionGain.heightened = spell.get_EffectiveSpellLevel(this.get_Character(), choice.level, this.characterService, this.effectsService);\r\n                    if (conditionGain.name) {\r\n                        this.characterService.add_Condition(this.get_Character(), conditionGain, false);\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        this.spellsService.process_Spell(character, creature, this.characterService, this.itemsService, this.conditionsService, casting, gain, spell, levelNumber, activated, true);\r\n        if (gain.combinationSpellName) {\r\n            let secondSpell = this.get_Spells(gain.combinationSpellName)[0];\r\n            if (secondSpell) {\r\n                this.spellsService.process_Spell(character, creature, this.characterService, this.itemsService, this.conditionsService, casting, gain, secondSpell, levelNumber, activated, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    can_Counterspell(casting: SpellCasting) {\r\n        let character = this.get_Character();\r\n        if ([\"Prepared\", \"Spontaneous\"].includes(casting.castingType)) {\r\n            return character.get_FeatsTaken(1, character.level, \"Counterspell (\" + casting.castingType + \")\").length;\r\n        }\r\n    }\r\n\r\n    on_Counterspell(gain: SpellGain, casting: SpellCasting, choice: SpellChoice, spell: Spell, levelNumber: number = 0) {\r\n        //Focus spells cost Focus points.\r\n        if (casting.castingType == \"Focus\" && choice.level == -1) {\r\n            this.get_Character().class.focusPoints = Math.min(this.get_Character().class.focusPoints, this.get_MaxFocusPoints());\r\n            this.get_Character().class.focusPoints -= 1;\r\n        };\r\n        //Spontaneous spells use up spell slots.\r\n        if (casting.castingType == \"Spontaneous\" && !spell.traits.includes(\"Cantrip\")) {\r\n            casting.spellSlotsUsed[levelNumber] += 1;\r\n        }\r\n        //Prepared spells get locked until the next preparation.\r\n        if (casting.castingType == \"Prepared\" && !spell.traits.includes(\"Cantrip\")) {\r\n            gain.prepared = false;\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    can_Restore(casting: SpellCasting, level: number) {\r\n        //True if you have the \"Free Bonded Item Charge\" effect (usually from Bond Conversation)\r\n        if (this.effectsService.get_EffectsOnThis(this.get_Character(), \"Free Bonded Item Charge\").length) {\r\n            return true;\r\n        }\r\n        //True if there is a charge available for this level\r\n        if (casting.bondedItemCharges[level]) {\r\n            return true;\r\n        }\r\n        //True if there is more than one general charge available - it means we have Superior Bond, and the first charge can be applied to every level.\r\n        if (casting.bondedItemCharges[0] > 1) {\r\n            return true;\r\n        }\r\n        //If there is only one charge, we need to check if this came from the Superior Bond feat.\r\n        //If we have that feat, the last charge is the Superior Bond charge and can only be applied to a spell 2 or more levels lower than the highest-level spell.\r\n        if (casting.bondedItemCharges[0] > 0) {\r\n            if (level <= this.get_MaxSpellLevel(casting) - 2) {\r\n                return true;\r\n            } else {\r\n                if (this.have_Feat(\"Superior Bond\")) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_Restore(gain: SpellGain, casting: SpellCasting, level: number) {\r\n        let character = this.get_Character();\r\n        if (this.have_Feat(\"Linked Focus\")) {\r\n            this.characterService.process_OnceEffect(character, Object.assign(new EffectGain(), { affected: \"Focus Points\", value: \"+1\" }))\r\n        }\r\n        let bondedItemCharges = this.effectsService.get_EffectsOnThis(character, \"Free Bonded Item Charge\");\r\n        if (bondedItemCharges.length) {\r\n            bondedItemCharges.forEach(effect => {\r\n                this.characterService.get_AppliedConditions(character, effect.source).forEach(gain => {\r\n                    this.characterService.remove_Condition(character, gain, false, false);\r\n                });\r\n            });\r\n        } else {\r\n            if ((casting.bondedItemCharges[level] || casting.bondedItemCharges[0]) && !gain.prepared) {\r\n                if (casting.bondedItemCharges[level]) {\r\n                    casting.bondedItemCharges[level] -= 1;\r\n                } else if (casting.bondedItemCharges[0]) {\r\n                    casting.bondedItemCharges[0] -= 1;\r\n                }\r\n            }\r\n        }\r\n        gain.prepared = true;\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    can_Reprepare(level: number, spell: Spell) {\r\n        return level <= 4 &&\r\n            !spell.duration &&\r\n            this.have_Feat(\"Reprepare Spell\") &&\r\n            !this.have_Feat(\"Spell Substitution\")\r\n    }\r\n\r\n    on_Reprepare(gain: SpellGain) {\r\n        gain.prepared = true;\r\n    }\r\n\r\n    is_SignatureSpell(casting: SpellCasting, taken: SpellGain) {\r\n        return this.get_SignatureSpellsAllowed(casting) && taken.signatureSpell;\r\n    }\r\n\r\n    is_InfinitePossibilitiesSpell(choice: SpellChoice) {\r\n        return choice.source == \"Feat: Infinite Possibilities\";\r\n    }\r\n\r\n    is_SpellMasterySpell(choice: SpellChoice) {\r\n        return choice.source == \"Feat: Spell Mastery\";\r\n    }\r\n\r\n    get_TemporarySpellChoices(casting: SpellCasting, level: number) {\r\n        return casting.spellChoices.filter(choice =>\r\n            choice.showOnSheet &&\r\n            (\r\n                (!choice.dynamicLevel && choice.level == level) ||\r\n                (choice.dynamicLevel && this.get_DynamicLevel(casting, choice) == level)\r\n            ) &&\r\n            this.get_TemporarySpellChoiceUnlocked(casting, choice, level));\r\n    }\r\n\r\n    get_TemporarySpellChoiceUnlocked(casting: SpellCasting, choice: SpellChoice, level: number = 0) {\r\n        //This function is so far only used to unlock the Infinite Possibilities bonus spell slot.\r\n        if (choice.source == \"Infinite Possibilities\") {\r\n            //Check if the spell slot on this level has been unlocked.\r\n            return casting.spellChoices.find(choice => choice.level == level + 2 && choice.infinitePossibilities) ? 1 : 0;\r\n        } else {\r\n            //If the spell slot doesn't need to be unlocked, just return a positive value.\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spellbook\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"spellbook\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"spellbook-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Spells</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <app-tags [creature]=\"'Character'\" [objectName]=\"'Spellbook'\" [showTraits]=true [showFeats]=true\r\n            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <button class=\"fullsize-only center-aligned list-item\" (click)=\"toggleSpellsMenu()\">Prepare Spells</button>\r\n        <ng-container *ngFor=\"let skill of get_SpellDCs(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader fullsize-only\" *ngIf=\"index == 0\">Spell Attacks & DCs</header>\r\n            <app-skill [skill]=skill [isDC]=false></app-skill>\r\n            <app-skill [skill]=skill [isDC]=true></app-skill>\r\n        </ng-container>\r\n        <app-tags [creature]=\"'Character'\" [objectName]=\"'Spell DC'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <ng-container *ngFor=\"let bloodMagicFeats of [get_BloodMagicFeats()]; trackBy:trackByIndex\">\r\n            <ng-container *ngFor=\"let casting of get_SpellCastings(); trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let studiouscapacityslots of [get_MaxSpellSlots(0, casting)]\">\r\n                    <ng-container *ngFor=\"let firstgreatervitalevolutionslot of [get_MaxSpellSlots(11, casting)]\">\r\n                        <ng-container *ngFor=\"let secondgreatervitalevolutionslot of [get_MaxSpellSlots(12, casting)]\">\r\n                            <header class=\"sectionHeader\">\r\n                                {{(casting.className + (casting.tradition != \"Innate\" ? \" \" + casting.tradition : \"\") +\r\n                                ((casting.castingType == \"Focus\") ? (\" \" + casting.source) : \" Spells\")).trim()}}\r\n                                <span class=\"lower\" *ngIf=\"['Prepared', 'Spontaneous'].includes(casting.castingType)\">\r\n                                    <span class=\"lower\">\r\n                                        {{casting.castingType}}\r\n                                    </span>\r\n                                </span>\r\n                                <ng-container *ngFor=\"let superiorBond of [have_Feat('Superior Bond')]\">\r\n                                    <div class=\"newrow lower\" *ngIf=\"casting.bondedItemCharges[0]\"\r\n                                        [ngbPopover]=\"superiorBond ? 'You can use Drain Bonded Item one additional time per day, but only to cast a spell 2 or more levels lower than your highest-level spell.' : ''\">\r\n                                        {{casting.bondedItemCharges[0]}}{{superiorBond ? \"*\" : \"\"}}\r\n                                        charge{{casting.bondedItemCharges[0] != 1 ? \"s\" : \"\"}} available\r\n                                    </div>\r\n                                </ng-container>\r\n                                <div class=\"newrow lower\" *ngIf=\"studiouscapacityslots\"\r\n                                    [ngbPopover]=\"'You can cast one spell each day even after you\\'ve run out of spell slots of the appropriate spell level, but you can\\'t use this ability to cast a spell of your highest spell level.'\">\r\n                                    {{studiouscapacityslots - get_UsedSpellSlots(0, casting)}} extra spell\r\n                                    casting{{studiouscapacityslots - get_UsedSpellSlots(0, casting) != 1 ? \"s\" : \"\"}}\r\n                                    available\r\n                                </div>\r\n                                <div class=\"newrow lower\"\r\n                                    *ngIf=\"firstgreatervitalevolutionslot || secondgreatervitalevolutionslot\"\r\n                                    [ngbPopover]=\"'Twice per day, you can cast a spell after you\\'ve run out of spell slots of the appropriate spell level; the two spells you cast with this feat must be of different spell levels.'\">\r\n                                    {{(get_UsedSpellSlots(11, casting) == 0 ? 1 : 0) + (get_UsedSpellSlots(12, casting)\r\n                                    == 0\r\n                                    ? 1 : 0)}} extra spell casting{{(get_UsedSpellSlots(11, casting) == 0 ? 1 : 0) +\r\n                                    (get_UsedSpellSlots(12, casting) == 0 ? 1 : 0) != 1 ? \"s\" : \"\"}} available\r\n                                </div>\r\n                            </header>\r\n                            <ng-container *ngFor=\"let maxFocusPoints of [get_MaxFocusPoints()]; trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let level of [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; trackBy:trackByIndex;\">\r\n                                    <ng-container *ngIf=\"level <= get_MaxSpellLevel(casting)\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let spellTakenList of [get_SpellsByLevel(level, casting)]; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let choiceList of [get_TemporarySpellChoices(casting, level)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let maxspellslots of [get_MaxSpellSlots(level, casting)]; let index = index; trackBy:trackByIndex;\">\r\n                                                    <div class=\"list-item newrow\" style=\"background-color:transparent\"\r\n                                                        *ngIf=\"index == 0 && (spellTakenList.length || choiceList.length)\">\r\n                                                        <strong>\r\n                                                            {{level == -1 ? \"Focus Spells\" : (level == 0 ? \"Cantrips\" :\r\n                                                            \"Level \"+level)}}\r\n                                                        </strong>\r\n                                                        <strong *ngIf=\"maxspellslots && level != 0\">\r\n                                                            {{(maxspellslots - get_UsedSpellSlots(level,\r\n                                                            casting))}}{{level\r\n                                                            < get_MaxSpellLevel(casting) && studiouscapacityslots -\r\n                                                                get_UsedSpellSlots(0, casting)> 0 ? \"+\" +\r\n                                                                (studiouscapacityslots - get_UsedSpellSlots(0, casting))\r\n                                                                :\r\n                                                                \"\"}}{{(firstgreatervitalevolutionslot ||\r\n                                                                secondgreatervitalevolutionslot) &&\r\n                                                                (get_UsedSpellSlots(11,\r\n                                                                casting) == 0 || get_UsedSpellSlots(12, casting) == 0)\r\n                                                                &&\r\n                                                                (get_UsedSpellSlots(11, casting) != level &&\r\n                                                                get_UsedSpellSlots(12, casting) != level) ? \"+\" + 1 :\r\n                                                                \"\"}} /\r\n                                                                {{maxspellslots}}\r\n                                                        </strong>\r\n                                                        <strong *ngIf=\"casting.bondedItemCharges[level] && level != 0\">\r\n                                                            {{casting.bondedItemCharges[level]}} charge available\r\n                                                        </strong>\r\n                                                    </div>\r\n                                                    <div class=\"list-item\"\r\n                                                        [ngClass]=\"{'problem':(get_FocusPoints() > maxFocusPoints)}\"\r\n                                                        *ngIf=\"casting.castingType == 'Focus' && level == -1 && (spellTakenList.length || maxFocusPoints)\">\r\n                                                        <strong>Focus Points</strong>\r\n                                                        <div class=\"value\">\r\n                                                            {{get_FocusPoints()}}\r\n                                                        </div>\r\n                                                        <strong>Focus Pool</strong>\r\n                                                        <div class=\"value\">\r\n                                                            {{maxFocusPoints}}\r\n                                                        </div>\r\n                                                        <button class=\"newrow center-aligned\" (click)=\"refocus()\"\r\n                                                            [disabled]=\"get_FocusPoints() >= maxFocusPoints\">\r\n                                                            Refocus\r\n                                                        </button>\r\n                                                        <app-tags [creature]=\"'Character'\" [objectName]=\"'Focus'\"\r\n                                                            [showTraits]=true [showFeats]=true [showItems]=true\r\n                                                            [showActivities]=true [showConditions]=true\r\n                                                            [showEffects]=true>\r\n                                                        </app-tags>\r\n                                                    </div>\r\n                                                    <div class=\"list-item\"\r\n                                                        *ngFor=\"let choice of choiceList; let choicesIndex = index; trackBy:trackByIndex;\">\r\n                                                        <header class=\"subsectionHeader box-header\"\r\n                                                            *ngIf=\"choicesIndex == 0\">Level {{level}} Temporary Spell\r\n                                                            Selections\r\n                                                        </header>\r\n                                                        <app-spellchoice\r\n                                                            (showChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                            (showSpellMessage)=\"receive_SpellMessage($event)\"\r\n                                                            [spellCasting]=\"casting\" [choice]=\"choice\"\r\n                                                            [allowHeightened]=\"true\" [allowBorrow]=\"false\"\r\n                                                            [showChoice]=\"get_ShowList()\" [showSpell]=\"get_ShowItem()\"\r\n                                                            [level]=\"choice.level\"\r\n                                                            [prepared]=\"choice.source == 'Infinite Possibilities'\"\r\n                                                            [spellbook]=\"true\">\r\n                                                        </app-spellchoice>\r\n                                                    </div>\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let spellTaken of spellTakenList; let spellIndex = index; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let spell of get_Spells(spellTaken.gain.name); trackBy:trackByIndex;\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let externallyDisabled of [get_ExternallyDisabled(spell)]; trackBy:trackByIndex;\">\r\n                                                                <ng-container\r\n                                                                    *ngFor=\"let effectiveSpellLevel of [get_EffectiveSpellLevel(spell, level)]; trackBy:trackByIndex;\">\r\n                                                                    <ng-container\r\n                                                                        *ngFor=\"let cannotCast of [cannot_Cast(spell, level, casting, spellTaken.choice, spellTaken.gain, maxspellslots, externallyDisabled)]; trackBy:trackByIndex;\">\r\n                                                                        <div class=\"list-item\"\r\n                                                                            *ngFor=\"let spellID of [get_ID()]; trackBy:trackByIndex;\">\r\n                                                                            <button\r\n                                                                                class=\"newrow sublist-toggle left-aligned\"\r\n                                                                                (click)=\"toggle_Spell(casting.castingType+casting.class+spellTaken.gain.name+spellID)\"\r\n                                                                                [ngClass]=\"{'inactive-button': cannotCast}\">\r\n                                                                                <span [ngbTooltip]=\"'Signature spell'\"\r\n                                                                                    *ngIf=\"is_SignatureSpell(casting, spellTaken.gain)\"><i\r\n                                                                                        class='bi-stars'></i>&nbsp;</span>\r\n                                                                                <span [ngbTooltip]=\"'Combination spell'\"\r\n                                                                                    *ngIf=\"spellTaken.choice.spellCombination\"><i\r\n                                                                                        class='ra ra-frostfire'></i>&nbsp;</span>\r\n                                                                                <span\r\n                                                                                    [ngbTooltip]=\"'Infinite Possibilities spell'\"\r\n                                                                                    *ngIf=\"is_InfinitePossibilitiesSpell(spellTaken.choice)\"><i\r\n                                                                                        class='ra ra-kaleidoscope'></i>&nbsp;</span>\r\n                                                                                <span\r\n                                                                                    [ngbTooltip]=\"'Spell Mastery spell'\"\r\n                                                                                    *ngIf=\"is_SpellMasterySpell(spellTaken.choice)\"><i\r\n                                                                                        class='ra ra-crown'></i>&nbsp;</span>\r\n                                                                                <span\r\n                                                                                    [ngbTooltip]=\"'Crossblooded Evolution spell'\"\r\n                                                                                    *ngIf=\"spellTaken.choice.crossbloodedEvolution\"><i\r\n                                                                                        class='ra ra-zigzag-leaf'></i>&nbsp;</span>\r\n                                                                                {{spell.name}}\r\n                                                                                {{spellTaken.gain.combinationSpellName ?\r\n                                                                                \" & \" +\r\n                                                                                spellTaken.gain.combinationSpellName :\r\n                                                                                \"\"}}\r\n                                                                                <span\r\n                                                                                    *ngIf=\"!spellTaken.gain.combinationSpellName\">\r\n                                                                                    <app-actionIcons\r\n                                                                                        [actionString]=\"spell.actions\">\r\n                                                                                    </app-actionIcons>{{spell.castType}}\r\n                                                                                </span>\r\n                                                                                &nbsp;{{spellTaken.gain.frequency ?\r\n                                                                                spellTaken.gain.frequency : \"\"}}\r\n                                                                            </button>\r\n                                                                            <div class=\"list-item sublist lower\"\r\n                                                                                [ngClass]=\"{'inactive-list': cannotCast}\"\r\n                                                                                *ngIf=\"get_ShowSpell()==casting.castingType+casting.class+spellTaken.gain.name+spellID\">\r\n                                                                                <div class=\"newrow list-item left-aligned\"\r\n                                                                                    *ngIf=\"effectiveSpellLevel != level\">\r\n                                                                                    Effective spell level:\r\n                                                                                    {{effectiveSpellLevel}}</div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"casting.castingType == 'Focus' && spell.allowReturnFocusPoint\"\r\n                                                                                    [ngbTooltip]=\"get_FocusPoints() >= get_MaxFocusPoints() ? 'Focus points are full.' : ''\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_RestoreFocusPoint()\"\r\n                                                                                        [disabled]=\"get_FocusPoints() >= get_MaxFocusPoints()\">\r\n                                                                                        <span\r\n                                                                                            class=\"center-aligned\">Return\r\n                                                                                            Focus Point</span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"casting.castingType == 'Prepared' && casting.className == 'Wizard' && !spellTaken.gain.prepared && level > 0 && !spellTaken.gain.duration\"\r\n                                                                                    [ngbTooltip]=\"!can_Restore(casting, level) ? 'No bonded item charges remaining.' : ''\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Restore(spellTaken.gain, casting, level)\"\r\n                                                                                        [disabled]=\"!can_Restore(casting, level)\">\r\n                                                                                        <span\r\n                                                                                            class=\"center-aligned\">Restore\r\n                                                                                            with bonded item\r\n                                                                                            <app-actionIcons\r\n                                                                                                [actionString]=\"'Free'\">\r\n                                                                                            </app-actionIcons>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"casting.castingType == 'Prepared' && casting.className == 'Wizard' && !spellTaken.gain.prepared && level > 0 && can_Reprepare(level, spell)\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Reprepare(spellTaken.gain)\">\r\n                                                                                        <span\r\n                                                                                            class=\"center-aligned\">Rerepare\r\n                                                                                            <app-actionIcons\r\n                                                                                                [actionString]=\"'10 minutes'\">\r\n                                                                                            </app-actionIcons>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"['self', 'ally'].includes(spell.target) && !spellTaken.gain.active\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, 'Character', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            {{spell.target == 'ally' ?\r\n                                                                                            \"Cast on yourself\" :\r\n                                                                                            \"Cast\"}} <i class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"['companion', 'ally'].includes(spell.target) && !spellTaken.gain.active && get_CompanionAvailable()\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, 'Companion', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast on your animal\r\n                                                                                            companion <i\r\n                                                                                                class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"['companion', 'ally'].includes(spell.target) && !spellTaken.gain.active && get_FamiliarAvailable()\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, 'Familiar', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast on your familiar <i\r\n                                                                                                class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"spell.target == 'ally' && !spellTaken.gain.active\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, '', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast on other targets <i\r\n                                                                                                class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"!spell.target && !spellTaken.gain.active\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, '', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast <i class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"spellTaken.gain.active\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, spellTaken.gain.target, spell, false, bloodMagicFeats)\">\r\n                                                                                        <span>Dismiss <span\r\n                                                                                                class=\"actionIcon action1A\"></span>\r\n                                                                                            or Stop Sustaining\r\n                                                                                            {{spellTaken.gain.duration ?\r\n                                                                                            \"(Duration: \" +\r\n                                                                                            get_Duration(spellTaken.gain.duration)\r\n                                                                                            + \")\" : \"\"}}\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"can_Counterspell(casting) && !spellTaken.gain.active && level > 0\"\r\n                                                                                    [ngbTooltip]=\"cannot_Cast(spell, level, casting, spellTaken.choice, spellTaken.gain, maxspellslots, 0)\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Counterspell(spellTaken.gain, casting, spellTaken.choice, spell, level)\"\r\n                                                                                        [disabled]=\"cannot_Cast(spell, level, casting, spellTaken.choice, spellTaken.gain, maxspellslots, 0)\">\r\n                                                                                        Expend to counter spell\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <ng-container\r\n                                                                                    *ngFor=\"let condition of get_SpellConditions(spell, effectiveSpellLevel, spellTaken.gain); let conditionIndex = index; trackBy:trackByIndex\">\r\n                                                                                    <div class=\"newrow list-item left-aligned\"\r\n                                                                                        *ngIf=\"condition.choices.length\">\r\n                                                                                        <span>{{condition.name}} effect\r\n                                                                                            selection:\r\n                                                                                            <select\r\n                                                                                                [(ngModel)]=\"spellTaken.gain.choices[conditionIndex]\">\r\n                                                                                                <option\r\n                                                                                                    *ngFor=\"let choice of condition.$choices; trackBy:trackByIndex;\"\r\n                                                                                                    [ngValue]=\"choice\">\r\n                                                                                                    {{choice}}\r\n                                                                                                </option>\r\n                                                                                            </select>\r\n                                                                                        </span>\r\n                                                                                    </div>\r\n                                                                                </ng-container>\r\n                                                                                <ng-container\r\n                                                                                    *ngIf=\"!spellTaken.gain.combinationSpellName\">\r\n                                                                                    <app-spell class=\"list-item\"\r\n                                                                                        [spell]=\"spell\"\r\n                                                                                        [spellLevel]=\"effectiveSpellLevel\">\r\n                                                                                    </app-spell>\r\n                                                                                </ng-container>\r\n                                                                                <ng-container\r\n                                                                                    *ngIf=\"spellTaken.gain.combinationSpellName\">\r\n                                                                                    <header\r\n                                                                                        class=\"spellHeader left-aligned\">\r\n                                                                                        {{spell.name}}\r\n                                                                                        <app-actionIcons\r\n                                                                                            [actionString]=\"spell.actions\">\r\n                                                                                        </app-actionIcons>\r\n                                                                                        {{(spell.castType) ?\r\n                                                                                        spell.castType\r\n                                                                                        : \"\"}}\r\n                                                                                    </header>\r\n                                                                                    <app-spell class=\"list-item\"\r\n                                                                                        [spell]=\"spell\"\r\n                                                                                        [spellLevel]=\"effectiveSpellLevel\">\r\n                                                                                    </app-spell>\r\n                                                                                    <ng-container\r\n                                                                                        *ngFor=\"let secondSpell of get_Spells(spellTaken.gain.combinationSpellName)\">\r\n                                                                                        <header\r\n                                                                                            class=\"spellHeader left-aligned\">\r\n                                                                                            {{secondSpell.name}}\r\n                                                                                            <app-actionIcons\r\n                                                                                                [actionString]=\"secondSpell.actions\">\r\n                                                                                            </app-actionIcons>\r\n                                                                                            {{(secondSpell.castType) ?\r\n                                                                                            secondSpell.castType : \"\"}}\r\n                                                                                        </header>\r\n                                                                                        <app-spell class=\"list-item\"\r\n                                                                                            [spell]=\"secondSpell\"\r\n                                                                                            [spellLevel]=\"effectiveSpellLevel\">\r\n                                                                                        </app-spell>\r\n                                                                                    </ng-container>\r\n                                                                                </ng-container>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </ng-container>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"familiar-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleFamiliarMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <div class=\"familiar-box\"\r\n        *ngIf=\"!still_loading() && get_Character().class && get_FamiliarAvailable() && get_FamiliarMenuState()=='in'\">\r\n        <app-effects [creature]=\"'Familiar'\" [sheetSide]=\"'center'\" id=\"Familiar-effects\" class=\"charactersheet-app\">\r\n        </app-effects>\r\n        <div class=\"charactersheet-column-container\">\r\n            <div class=\"charactersheet-column\">\r\n                <app-general [creature]=\"'Familiar'\" [sheetSide]=\"'left'\" id=\"Familiar-general\"\r\n                    class=\"charactersheet-app\"></app-general>\r\n                <app-familiarabilities id=\"familiarabilities\" [sheetSide]=\"'left'\" class=\"charactersheet-app\" [ngClass]=\"{'fullsize-only':get_FamiliarAbilitiesFinished()}\">\r\n                </app-familiarabilities>\r\n                <app-health [creature]=\"'Familiar'\" [sheetSide]=\"'left'\" id=\"Familiar-health\"\r\n                    class=\"charactersheet-app\"></app-health>\r\n            </div>\r\n            <div class=\"charactersheet-column\">\r\n                <app-defense [creature]=\"'Familiar'\" [sheetSide]=\"'right'\" id=\"Familiar-defense\"\r\n                    class=\"charactersheet-app\"></app-defense>\r\n                <app-skills [creature]=\"'Familiar'\" [sheetSide]=\"'right'\" id=\"Familiar-skills\"\r\n                    class=\"charactersheet-app\"></app-skills>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { FamiliarsService } from '../familiars.service';\r\n\r\n@Component({\r\n    selector: 'app-familiar',\r\n    templateUrl: './familiar.component.html',\r\n    styleUrls: ['./familiar.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FamiliarComponent implements OnInit {\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private familiarsService: FamiliarsService,\r\n        private effectsService: EffectsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.familiarMinimized = !this.characterService.get_Character().settings.familiarMinimized;\r\n        this.set_Changed(\"Familiar\");\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.familiarMinimized;\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.characterService.still_loading() || this.familiarsService.still_loading());\r\n    }\r\n\r\n    toggleFamiliarMenu() {\r\n        this.characterService.toggle_Menu(\"familiar\");\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.characterService.get_FamiliarMenuState();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    set_Changed(target: string) {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    get_FamiliarAbilitiesFinished() {\r\n        let choice = this.get_Familiar().abilities;\r\n        let available = choice.available;\r\n        this.effectsService.get_AbsolutesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n            available = parseInt(effect.setValue);\r\n        });\r\n        this.effectsService.get_RelativesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n            available += parseInt(effect.value);\r\n        });\r\n        return choice.feats.length >= available;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"familiar\", \"all\"].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == \"familiar\" && [\"familiar\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","import { Creature } from './Creature';\r\nimport { EffectsService } from './effects.service';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { FeatTaken } from './FeatTaken';\r\nimport { Skill } from './Skill';\r\n\r\nexport class Familiar extends Creature {\r\n    public readonly _className: string = this.constructor.name;\r\n    public readonly type = \"Familiar\";\r\n    public abilities: FeatChoice = Object.assign(new FeatChoice, {\r\n        available: 2,\r\n        id: \"0-Feat-Familiar-0\",\r\n        source: \"Familiar\",\r\n        type: \"Familiar\"\r\n    });\r\n    public customSkills: Skill[] = [\r\n        Object.assign(new Skill(), { name:\"Attack Rolls\", type:\"Familiar Proficiency\" })\r\n    ];\r\n    public originClass: string = \"\";\r\n    public senses: string[] = [\"Low-Light Vision\"];\r\n    public species: string = \"\";\r\n    public traits: string[] = [\"Minion\"];\r\n    get_BaseSize() {\r\n        return -2;\r\n    }\r\n    get_Size(effectsService: EffectsService) {\r\n        let size: number = this.get_BaseSize();\r\n        \r\n        let setSizeEffects = effectsService.get_AbsolutesOnThis(this, \"Size\");\r\n        if (setSizeEffects.length) {\r\n            size = Math.max(...setSizeEffects.map(effect => parseInt(effect.setValue)));\r\n        }\r\n                \r\n        let sizeEffects = effectsService.get_RelativesOnThis(this, \"Size\");\r\n        sizeEffects.forEach(effect => {\r\n            size += parseInt(effect.value)\r\n        })\r\n\r\n        switch (size) {\r\n            case -2:\r\n                return \"Tiny\";\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\"\r\n            case 1:\r\n                return \"Large\"\r\n            case 2:\r\n                return \"Huge\"\r\n            case 3:\r\n                return \"Gargantuan\"\r\n        }\r\n    }\r\n    get_FeatsTaken(featName: string = \"\") {\r\n        let featsTaken: string[] = [];\r\n        this.abilities.feats.filter((feat: FeatTaken) => feat.name.toLowerCase() == featName.toLowerCase() || featName == \"\")\r\n            .forEach(feat => {\r\n            featsTaken.push(feat.name);\r\n        })\r\n        return featsTaken;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Weapon } from './Weapon';\r\nimport { Armor } from './Armor';\r\nimport { Shield } from './Shield';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemCollection } from './ItemCollection';\r\nimport { WornItem } from './WornItem';\r\nimport { AlchemicalElixir } from './AlchemicalElixir';\r\nimport { Consumable } from './Consumable';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { OtherConsumable } from './OtherConsumable';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ItemProperty } from './ItemProperty';\r\nimport { Item } from './Item';\r\nimport { HeldItem } from './HeldItem';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Potion } from './Potion';\r\nimport { Specialization } from './Specialization';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\nimport { SavegameService } from './savegame.service';\r\nimport { Ammunition } from './Ammunition';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { Equipment } from './Equipment';\r\nimport { Scroll } from './Scroll';\r\nimport { Oil } from './Oil';\r\nimport { Talisman } from './Talisman';\r\nimport { Familiar } from './Familiar';\r\nimport { SpellsService } from './spells.service';\r\nimport { SpellCast } from './SpellCast';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { AlchemicalTool } from './AlchemicalTool';\r\nimport { Snare } from './Snare';\r\nimport { WeaponMaterial } from './WeaponMaterial';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { Wand } from './Wand';\r\nimport { ConditionsService } from './conditions.service';\r\nimport * as json_itemproperties from '../assets/json/itemproperties';\r\nimport * as json_weaponmaterials from '../assets/json/weaponmaterials';\r\nimport * as json_specializations from '../assets/json/specializations';\r\nimport * as json_adventuringgear from '../assets/json/items/adventuringgear';\r\nimport * as json_alchemicalbombs from '../assets/json/items/alchemicalbombs';\r\nimport * as json_alchemicalelixirs from '../assets/json/items/alchemicalelixirs';\r\nimport * as json_alchemicaltools from '../assets/json/items/alchemicaltools';\r\nimport * as json_alchemicalpoisons from '../assets/json/items/alchemicalpoisons';\r\nimport * as json_ammunition from '../assets/json/items/ammunition';\r\nimport * as json_armorrunes from '../assets/json/items/armorrunes';\r\nimport * as json_armors from '../assets/json/items/armors';\r\nimport * as json_helditems from '../assets/json/items/helditems';\r\nimport * as json_oils from '../assets/json/items/oils';\r\nimport * as json_otherconsumables from '../assets/json/items/otherconsumables';\r\nimport * as json_otherconsumablesbombs from '../assets/json/items/otherconsumablesbombs';\r\nimport * as json_potions from '../assets/json/items/potions';\r\nimport * as json_scrolls from '../assets/json/items/scrolls';\r\nimport * as json_shields from '../assets/json/items/shields';\r\nimport * as json_snares from '../assets/json/items/snares';\r\nimport * as json_talismans from '../assets/json/items/talismans';\r\nimport * as json_wands from '../assets/json/items/wands';\r\nimport * as json_weaponrunes from '../assets/json/items/weaponrunes';\r\nimport * as json_weapons from '../assets/json/items/weapons';\r\nimport * as json_wornitems from '../assets/json/items/wornitems';\r\nimport { Creature } from './Creature';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ItemsService {\r\n\r\n    private items: ItemCollection;\r\n    private cleanItems: ItemCollection;\r\n    private craftingItems: ItemCollection;\r\n    private itemProperties: ItemProperty[] = [];\r\n    private weaponMaterials: WeaponMaterial[] = [];\r\n    private specializations: Specialization[] = [];\r\n\r\n    private loading_itemProperties: boolean = false;\r\n    private loading_weaponMaterials: boolean = false;\r\n    private loading_specializations: boolean = false;\r\n    private loading_adventuringgear: boolean = false;\r\n    private loading_alchemicalbombs: boolean = false;\r\n    private loading_alchemicalelixirs: boolean = false;\r\n    private loading_alchemicaltools: boolean = false;\r\n    private loading_alchemicalpoisons: boolean = false;\r\n    private loading_ammunition: boolean = false;\r\n    private loading_armorrunes: boolean = false;\r\n    private loading_armors: boolean = false;\r\n    private loading_helditems: boolean = false;\r\n    private loading_oils: boolean = false;\r\n    private loading_otherconsumables: boolean = false;\r\n    private loading_otherconsumablesbombs: boolean = false;\r\n    private loading_potions: boolean = false;\r\n    private loading_scrolls: boolean = false;\r\n    private loading_shields: boolean = false;\r\n    private loading_snares: boolean = false;\r\n    private loading_talismans: boolean = false;\r\n    private loading_wands: boolean = false;\r\n    private loading_weaponrunes: boolean = false;\r\n    private loading_weapons: boolean = false;\r\n    private loading_wornitems: boolean = false;\r\n    /*\r\n    private loading_REPLACE1s: boolean = false;\r\n    */\r\n\r\n    itemsMenuState: string = 'out';\r\n\r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    toggleItemsMenu(position: string = \"\") {\r\n        if (position) {\r\n            this.itemsMenuState = position;\r\n        } else {\r\n            this.itemsMenuState = (this.itemsMenuState == 'out') ? 'in' : 'out';\r\n        }\r\n    }\r\n\r\n    get_itemsMenuState() {\r\n        return this.itemsMenuState;\r\n    }\r\n\r\n    get_Items() {\r\n        if (!this.still_loading()) {\r\n            return this.items;\r\n        } else { return new ItemCollection }\r\n    }\r\n\r\n    get_CleanItems() {\r\n        if (!this.still_loading()) {\r\n            return this.cleanItems;\r\n        } else { return new ItemCollection }\r\n    }\r\n\r\n    get_CraftingItems() {\r\n        if (!this.still_loading()) {\r\n            return this.craftingItems;\r\n        } else { return new ItemCollection }\r\n    }\r\n\r\n    get_ItemByID(id: string) {\r\n        if (!this.still_loading()) {\r\n            return this.items.allItems().find(item => item.id == id);\r\n        } else { return null }\r\n    }\r\n\r\n    get_CleanItemByID(id: string) {\r\n        if (!this.still_loading()) {\r\n            return this.cleanItems.allItems().find(item => item.id == id);\r\n        } else { return null }\r\n    }\r\n\r\n    get_CraftingItemByID(id: string) {\r\n        if (!this.still_loading()) {\r\n            return this.craftingItems.allItems().find(item => item.id == id);\r\n        } else { return null }\r\n    }\r\n\r\n    get_ItemProperties() {\r\n        if (!this.still_loading()) {\r\n            return this.itemProperties;\r\n        } else { return [new ItemProperty] }\r\n    }\r\n\r\n    get_WeaponMaterials() {\r\n        if (!this.still_loading()) {\r\n            return this.weaponMaterials;\r\n        } else { return [new WeaponMaterial] }\r\n    }\r\n\r\n    get_Specializations(group: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.specializations.filter(spec => spec.name.toLowerCase() == group.toLowerCase() || group == \"\");\r\n        } else { return [new Specialization] }\r\n    }\r\n\r\n    get_ItemsOfType(type: string, name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.cleanItems[type].filter(item => item.name.toLowerCase() == name.toLowerCase() || name == \"\");\r\n        } else { return [] }\r\n    }\r\n\r\n    get_CleanItemsOfType(type: string, name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.items[type].filter(item => item.name.toLowerCase() == name.toLowerCase() || name == \"\");\r\n        } else { return [] }\r\n    }\r\n\r\n    cast_ItemByType(item: Item, type: string = item.type) {\r\n        if (type) {\r\n            switch (type) {\r\n                case \"weapons\":\r\n                    return Object.assign(new Weapon(), item);\r\n                case \"armors\":\r\n                    return Object.assign(new Armor(), item);\r\n                case \"shields\":\r\n                    return Object.assign(new Shield(), item);\r\n                case \"wornitems\":\r\n                    return Object.assign(new WornItem(), item);\r\n                case \"helditems\":\r\n                    return Object.assign(new HeldItem(), item);\r\n                case \"alchemicalelixirs\":\r\n                    return Object.assign(new AlchemicalElixir(), item);\r\n                case \"alchemicalbombs\":\r\n                    return Object.assign(new AlchemicalBomb(), item);\r\n                case \"alchemicalpoisons\":\r\n                    return Object.assign(new AlchemicalPoison(), item);\r\n                case \"alchemicaltools\":\r\n                    return Object.assign(new AlchemicalTool(), item);\r\n                case \"potions\":\r\n                    return Object.assign(new Potion(), item);\r\n                case \"otherconsumables\":\r\n                    return Object.assign(new OtherConsumable(), item);\r\n                case \"otherconsumablesbombs\":\r\n                    return Object.assign(new OtherConsumableBomb(), item);\r\n                case \"adventuringgear\":\r\n                    return Object.assign(new AdventuringGear(), item);\r\n                case \"ammunition\":\r\n                    return Object.assign(new Ammunition(), item);\r\n                case \"armorrunes\":\r\n                    return Object.assign(new ArmorRune(), item);\r\n                case \"weaponrunes\":\r\n                    return Object.assign(new WeaponRune(), item);\r\n                case \"scrolls\":\r\n                    return Object.assign(new Scroll(), item);\r\n                case \"oils\":\r\n                    return Object.assign(new Oil(), item);\r\n                case \"talismans\":\r\n                    return Object.assign(new Talisman(), item);\r\n                case \"snares\":\r\n                    return Object.assign(new Snare(), item);\r\n                case \"wands\":\r\n                    return Object.assign(new Snare(), item);\r\n            }\r\n        } else if (item._className) {\r\n            return this.cast_ItemByClassName(item)\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    cast_ItemByClassName(item: Item, className = item._className) {\r\n        if (className) {\r\n            switch (className) {\r\n                case \"Weapon\":\r\n                    return Object.assign(new Weapon(), item);\r\n                case \"Armor\":\r\n                    return Object.assign(new Armor(), item);\r\n                case \"Shield\":\r\n                    return Object.assign(new Shield(), item);\r\n                case \"WornItem\":\r\n                    return Object.assign(new WornItem(), item);\r\n                case \"HeldItem\":\r\n                    return Object.assign(new HeldItem(), item);\r\n                case \"AlchemicalElixir\":\r\n                    return Object.assign(new AlchemicalElixir(), item);\r\n                case \"AlchemicalBomb\":\r\n                    return Object.assign(new AlchemicalBomb(), item);\r\n                case \"AlchemicalPoison\":\r\n                    return Object.assign(new AlchemicalPoison(), item);\r\n                case \"AlchemicalTool\":\r\n                    return Object.assign(new AlchemicalTool(), item);\r\n                case \"Potion\":\r\n                    return Object.assign(new Potion(), item);\r\n                case \"OtherConsumable\":\r\n                    return Object.assign(new OtherConsumable(), item);\r\n                case \"OtherConsumableBomb\":\r\n                    return Object.assign(new OtherConsumableBomb(), item);\r\n                case \"AdventuringGear\":\r\n                    return Object.assign(new AdventuringGear(), item);\r\n                case \"Ammunition\":\r\n                    return Object.assign(new Ammunition(), item);\r\n                case \"ArmorRune\":\r\n                    return Object.assign(new ArmorRune(), item);\r\n                case \"WeaponRune\":\r\n                    return Object.assign(new WeaponRune(), item);\r\n                case \"Scroll\":\r\n                    return Object.assign(new Scroll(), item);\r\n                case \"Oil\":\r\n                    return Object.assign(new Oil(), item);\r\n                case \"Talisman\":\r\n                    return Object.assign(new Talisman(), item);\r\n                case \"Snare\":\r\n                    return Object.assign(new Snare(), item);\r\n                case \"Wand\":\r\n                    return Object.assign(new Wand(), item);\r\n            }\r\n        } else if (item.type) {\r\n            return this.cast_ItemByType(item)\r\n        } else {\r\n            return item;\r\n        }\r\n\r\n    }\r\n\r\n    initialize_Item(item: any, preassigned: boolean = false, newId: boolean = true, resetPropertyRunes: boolean = false) {\r\n        //Every new item has to be re-assigned its class and iterate over all its objects to reassign them as well.\r\n        //Typescript does not seem to have the option to keep object properties' classes when assigning.\r\n        let newItem: any;\r\n        //Set preassigned if you have already given the item a Class. Otherwise it will be determined by the item's type.\r\n        if (preassigned) {\r\n            newItem = Object.assign(new item.constructor(), JSON.parse(JSON.stringify(item)));\r\n        } else {\r\n            newItem = this.cast_ItemByType(JSON.parse(JSON.stringify(item)));\r\n        }\r\n        if (newId) {\r\n            newItem.id = uuidv1();\r\n            newItem.activities?.forEach((activity: ItemActivity) => {\r\n                activity.castSpells?.forEach(cast => {\r\n                    if (cast.spellGain) {\r\n                        cast.spellGain.id = uuidv1();\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        newItem = this.savegameService.reassign(newItem, \"\", this);\r\n        if (newItem.gainActivities) {\r\n            (newItem as Equipment).gainActivities.forEach((gain: ActivityGain) => {\r\n                gain.source = newItem.id;\r\n            });\r\n        }\r\n        if (newItem.activities) {\r\n            (newItem as Equipment).activities.forEach((activity: ItemActivity) => {\r\n                activity.source = newItem.id;\r\n            });\r\n        }\r\n        if (newItem.storedSpells) {\r\n            (newItem as Item).storedSpells.forEach((choice: SpellChoice, index) => {\r\n                choice.source = newItem.id;\r\n                choice.id = \"0-Spell-\" + newItem.id + index;\r\n            });\r\n        }\r\n        //For items (oils) that apply the same effect as a rune, load the rune into the item here.\r\n        if (newItem.runeEffect && newItem.runeEffect.name) {\r\n            let rune = this.cleanItems.weaponrunes.find(rune => rune.name == newItem.runeEffect.name);\r\n            if (rune) {\r\n                newItem.runeEffect = Object.assign(new WeaponRune(), JSON.parse(JSON.stringify(rune)));\r\n                this.savegameService.reassign(newItem.runeEffect, \"\", this);\r\n                newItem.runeEffect.activities.forEach((activity: ItemActivity) => { activity.name += \" (\" + newItem.name + \")\" });\r\n            }\r\n        }\r\n        //For base items that come with property Runes with name only, load the rune into the item here.\r\n        if (resetPropertyRunes && (newItem.type == \"weapons\" || newItem.moddable == \"weapon\") && newItem.propertyRunes?.length) {\r\n            let newRunes: WeaponRune[] = [];\r\n            newItem.propertyRunes.forEach((rune: WeaponRune) => {\r\n                let libraryItem = this.cleanItems.weaponrunes.find(newrune => newrune.name == rune.name)\r\n                if (libraryItem) {\r\n                    newRunes.push(this.savegameService.merge(libraryItem, rune))\r\n                }\r\n            })\r\n            newItem.propertyRunes = newRunes;\r\n        }\r\n        if (resetPropertyRunes && (newItem.type == \"armors\" || newItem.moddable == \"armor\") && newItem.propertyRunes?.length) {\r\n            let newRunes: ArmorRune[] = [];\r\n            newItem.propertyRunes.forEach((rune: ArmorRune) => {\r\n                let libraryItem = this.cleanItems.armorrunes.find(newrune => newrune.name == rune.name)\r\n                if (libraryItem) {\r\n                    newRunes.push(this.savegameService.merge(libraryItem, rune))\r\n                }\r\n            })\r\n            newItem.propertyRunes = newRunes;\r\n        }\r\n        //Disable any active hint effects when loading an item.\r\n        (item as Equipment).hints?.forEach(hint => {\r\n            hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n        })\r\n\r\n        return newItem;\r\n    }\r\n\r\n    move_InventoryItem(creature: Character | AnimalCompanion, item: Item, targetInventory: ItemCollection, inventory: ItemCollection, characterService: CharacterService) {\r\n        if (targetInventory && targetInventory != inventory) {\r\n            let fromCreature = characterService.get_Creatures().find(creature => creature.inventories.find(inv => inv === inventory)) as Character | AnimalCompanion;\r\n            let toCreature = characterService.get_Creatures().find(creature => creature.inventories.find(inv => inv === targetInventory)) as Character | AnimalCompanion;\r\n            if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length && fromCreature == toCreature) {\r\n                //If this item is a container and is moved between inventories of the same creature, you don't need to drop it explicitly.\r\n                //Just push it to the new inventory and remove it from the old, but unequip it either way.\r\n                let movedItem = JSON.parse(JSON.stringify(item));\r\n                movedItem = characterService.reassign(movedItem);\r\n                targetInventory[item.type].push(movedItem);\r\n                inventory[item.type] = inventory[item.type].filter((inventoryItem: Item) => inventoryItem !== item)\r\n                if ((movedItem as Equipment).equipped) {\r\n                    characterService.onEquip(creature, inventory, movedItem as Equipment, false)\r\n                }\r\n                if ((movedItem as Equipment).invested) {\r\n                    characterService.on_Invest(creature, inventory, movedItem as Equipment, false)\r\n                }\r\n            } else {\r\n                let movedItem = JSON.parse(JSON.stringify(item));\r\n                let movedInventories: ItemCollection[]\r\n                //If this item is a container and is moved between creatures, the attached inventories need to be moved as well.\r\n                //Because we lose the inventory when we drop the item, but automatically gain one when we grant the item to the other creature,\r\n                // we need to first save the inventory, then recreate it and remove the new ones after moving the item.\r\n                //Here, we save the inventories and take care of any containers within the container.\r\n                if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                    //First, move all inventory items within this inventory item to the same target. They get \r\n                    fromCreature.inventories.filter(inv => inv.itemId == item.id).forEach(inv => {\r\n                        inv.allItems().filter(invItem => (invItem as Equipment).gainInventory && (invItem as Equipment).gainInventory.length).forEach(invItem => {\r\n                            this.move_InventoryItem(creature, invItem, targetInventory, inv, characterService);\r\n                        });\r\n                    });\r\n                    movedInventories = fromCreature.inventories.filter(inv => inv.itemId == item.id).map(inv => JSON.parse(JSON.stringify(inv)))\r\n                    movedInventories = movedInventories.map(inv => characterService.reassign(inv));\r\n                }\r\n                let newItem = characterService.grant_InventoryItem(toCreature, targetInventory, movedItem, false, false, false, movedItem.amount, false);\r\n                characterService.drop_InventoryItem(fromCreature, inventory, item, false, true, true, item.amount);\r\n                //Below, we reinsert the saved inventories and remove any newly created ones.\r\n                if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                    toCreature.inventories = toCreature.inventories.filter(inv => inv.itemId != newItem.id);\r\n                    let newLength = toCreature.inventories.push(...movedInventories);\r\n                    toCreature.inventories.slice(newLength - movedInventories.length, newLength).forEach(inv => {\r\n                        inv.itemId = newItem.id;\r\n                    })\r\n                }\r\n                if ((newItem as Equipment).equipped) {\r\n                    characterService.onEquip(creature, targetInventory, newItem as Equipment, false)\r\n                }\r\n                if ((newItem as Equipment).invested) {\r\n                    characterService.on_Invest(creature, targetInventory, newItem as Equipment, false)\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    process_Consumable(creature: Creature, characterService: CharacterService, itemsService: ItemsService, conditionsService: ConditionsService, spellsService: SpellsService, item: Consumable) {\r\n\r\n        //One time effects\r\n        if (item.onceEffects) {\r\n            item.onceEffects.forEach(effect => {\r\n                characterService.process_OnceEffect(creature, effect);\r\n            })\r\n        }\r\n\r\n        //Apply conditions\r\n        if (item[\"gainConditions\"]) {\r\n            item[\"gainConditions\"].forEach(gain => {\r\n                let newConditionGain = Object.assign(new ConditionGain(), gain);\r\n                characterService.add_Condition(creature, newConditionGain, false);\r\n            });\r\n        }\r\n\r\n        //Cast Spells\r\n        if (item[\"castSpells\"]) {\r\n            item[\"castSpells\"].forEach((cast: SpellCast) => {\r\n                cast.spellGain.duration = cast.duration;\r\n                let librarySpell = spellsService.get_Spells(cast.name)[0];\r\n                if (librarySpell) {\r\n                    spellsService.process_Spell(creature, creature.type, characterService, itemsService, conditionsService, null, cast.spellGain, librarySpell, cast.level, true, true, false);\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        //Gain Items on Activation\r\n        if (item.gainItems.length && creature.type != \"Familiar\") {\r\n            item.gainItems.forEach(gainItem => {\r\n                let newItem: Item = itemsService.get_CleanItems()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n                if (newItem) {\r\n                    let grantedItem = characterService.grant_InventoryItem(creature as Character | AnimalCompanion, creature.inventories[0], newItem, false, false, true);\r\n                    gainItem.id = grantedItem.id;\r\n                    grantedItem.expiration = gainItem.expiration;\r\n                    if (grantedItem.get_Name) {\r\n                        grantedItem.grantedBy = \"(Granted by \" + item.name + \")\";\r\n                    };\r\n                } else {\r\n                    console.log(\"Failed granting \" + gainItem.type + \" \" + gainItem.name + \" - item not found.\")\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    rest(creature: Character | AnimalCompanion, characterService: CharacterService) {\r\n        creature.inventories.forEach(inv => {\r\n            inv.allItems().filter(item => item.expiration == -2).forEach(item => {\r\n                item.name = \"DELETE\";\r\n            })\r\n            //Removing an item brings the index out of order, and some items may be skipped. We just keep deleting items named DELETE until none are left.\r\n            while (inv.allItems().some(item => item.name == \"DELETE\")) {\r\n                inv.allItems().filter(item => item.name == \"DELETE\").forEach(item => {\r\n                    characterService.drop_InventoryItem(creature, inv, item, false, true, true, item.amount);\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n        })\r\n        if (creature.type == \"Character\") {\r\n            let character = creature as Character;\r\n            //If you have Scroll Savant, get a copy of each prepared scroll that lasts until the next rest.\r\n            if (character.get_FeatsTaken(1, character.level, \"Scroll Savant\").length) {\r\n                character.class.spellCasting.filter(casting => casting.scrollSavant.length).forEach(casting => {\r\n                    casting.scrollSavant.forEach(scroll => {\r\n                        characterService.grant_InventoryItem(character, character.inventories[0], scroll, false, false, false);\r\n                    });\r\n                });\r\n            }\r\n\r\n            //If you have Battleforger, all your battleforged items are reset.\r\n            if (character.get_FeatsTaken(1, character.level, \"Battleforger\").length) {\r\n                let attacksChanged: boolean = false;\r\n                let defenseChanged: boolean = false;\r\n                character.inventories.forEach(inv => {\r\n                    inv.weapons.forEach(weapon => {\r\n                        if (weapon.battleforged) {\r\n                            attacksChanged = true;\r\n                        }\r\n                        weapon.battleforged = false;\r\n                    })\r\n                    inv.armors.forEach(armor => {\r\n                        if (armor.battleforged) {\r\n                            defenseChanged = true;\r\n                        }\r\n                        armor.battleforged = false;\r\n                    })\r\n                    inv.wornitems.forEach(wornitem => {\r\n                        if (wornitem.battleforged) {\r\n                            attacksChanged = true;\r\n                        }\r\n                        wornitem.battleforged = false;\r\n                    })\r\n                })\r\n                if (attacksChanged) {\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                }\r\n                if (defenseChanged) {\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                }\r\n            }\r\n\r\n            //For feats that grant you an item on rest, grant these here and set an expiration until the next rest.\r\n            characterService.featsService.get_All(creature.customFeats)\r\n                .filter(feat => feat.gainItems.find(gain => gain.on == \"rest\") && feat.have(creature, characterService, creature.level))\r\n                .forEach(feat => {\r\n                    feat.gainItems.filter(gain => gain.on == \"rest\").forEach(gainItem => {\r\n                        let newItem: Item = this.get_CleanItemsOfType(gainItem.type, gainItem.name)[0];\r\n                        let grantedItem: Item;\r\n                        if (newItem && newItem.can_Stack() && (gainItem.amount + (gainItem.amountPerLevel * creature.level))) {\r\n                            grantedItem = characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, true, false, false, (gainItem.amount + (gainItem.amountPerLevel * creature.level)), undefined, -2);\r\n                        } else if (newItem) {\r\n                            grantedItem = characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, true, false, true, 1, undefined, -2);\r\n                        }\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    refocus(creature: Character | AnimalCompanion, characterService: CharacterService) {\r\n        creature.inventories.forEach(inv => {\r\n            inv.allItems().filter(item => item.expiration == -3).forEach(item => {\r\n                item.name = \"DELETE\";\r\n            })\r\n            //Removing an item brings the index out of order, and some items may be skipped. We just keep deleting items named DELETE until none are left.\r\n            while (inv.allItems().some(item => item.name == \"DELETE\")) {\r\n                inv.allItems().filter(item => item.name == \"DELETE\").forEach(item => {\r\n                    characterService.drop_InventoryItem(creature, inv, item, false, true, true, item.amount);\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n        })\r\n    }\r\n\r\n    tick_Items(creature: Character | AnimalCompanion, characterService: CharacterService, turns: number) {\r\n        creature.inventories.forEach(inv => {\r\n            //Tick down and remove all items that expire.\r\n            inv.allItems().filter(item => item.expiration > 0).forEach(item => {\r\n                item.expiration -= turns;\r\n                if (item.expiration <= 0) {\r\n                    item.name = \"DELETE\";\r\n                    if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                        //If a temporary container is destroyed, return all contained items to the main inventory.\r\n                        creature.inventories.filter(inv => inv.itemId == item.id).forEach(inv => {\r\n                            inv.allItems().forEach(invItem => {\r\n                                this.move_InventoryItem(creature, invItem, creature.inventories[0], inv, characterService);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n                if (item.type == \"weapons\" && (item as Equipment).equipped) {\r\n                    characterService.set_ToChange(creature.type, \"attacks\");\r\n                }\r\n                if ([\"armors\", \"shields\"].includes(item.type) && (item as Equipment).equipped) {\r\n                    characterService.set_ToChange(creature.type, \"defense\");\r\n                }\r\n            })\r\n            inv.wands.filter(wand => wand.cooldown > 0).forEach(wand => {\r\n                wand.cooldown = Math.max(wand.cooldown - turns, 0);\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            })\r\n            //Removing an item brings the index out of order, and some items may be skipped. We just keep deleting items named DELETE until none are left.\r\n            while (inv.allItems().some(item => item.name == \"DELETE\")) {\r\n                inv.allItems().filter(item => item.name == \"DELETE\").forEach(item => {\r\n                    characterService.drop_InventoryItem(creature, inv, item, false, true, true, item.amount);\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n            inv.allItems().filter(item => item.oilsApplied && item.oilsApplied.length).forEach(item => {\r\n                item.oilsApplied.filter(oil => oil.duration != -1).forEach(oil => {\r\n                    oil.duration -= turns;\r\n                    if (oil.duration <= 0) {\r\n                        oil.name = \"DELETE\";\r\n                    }\r\n                    characterService.set_ToChange(creature.type, \"inventory\");\r\n                    if (item.type == \"weapons\" && (item as Equipment).equipped) {\r\n                        characterService.set_ToChange(creature.type, \"attacks\");\r\n                    }\r\n                    if ([\"armors\", \"shields\"].includes(item.type) && (item as Equipment).equipped) {\r\n                        characterService.set_ToChange(creature.type, \"defense\");\r\n                    }\r\n                })\r\n                item.oilsApplied = item.oilsApplied.filter(oil => oil.name != \"DELETE\");\r\n            });\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (\r\n            this.loading_itemProperties ||\r\n            this.loading_weaponMaterials ||\r\n            this.loading_specializations ||\r\n            this.loading_adventuringgear ||\r\n            this.loading_alchemicalbombs ||\r\n            this.loading_alchemicalelixirs ||\r\n            this.loading_alchemicaltools ||\r\n            this.loading_alchemicalpoisons ||\r\n            this.loading_ammunition ||\r\n            this.loading_armorrunes ||\r\n            this.loading_armors ||\r\n            this.loading_helditems ||\r\n            this.loading_oils ||\r\n            this.loading_otherconsumables ||\r\n            this.loading_otherconsumablesbombs ||\r\n            this.loading_potions ||\r\n            this.loading_scrolls ||\r\n            this.loading_shields ||\r\n            this.loading_snares ||\r\n            this.loading_talismans ||\r\n            this.loading_wands ||\r\n            this.loading_weaponrunes ||\r\n            this.loading_weapons ||\r\n            this.loading_wornitems\r\n        );\r\n    }\r\n\r\n    initialize(reset: boolean = true) {\r\n        if (!this.items || reset) {\r\n            this.loading_itemProperties = true;\r\n            this.load(json_itemproperties, \"itemProperties\", ItemProperty, \"meta\");\r\n            this.loading_itemProperties = false;\r\n\r\n            this.loading_weaponMaterials = true;\r\n            this.load(json_weaponmaterials, \"weaponMaterials\", WeaponMaterial, \"meta\");\r\n            this.loading_weaponMaterials = false;\r\n\r\n            this.loading_specializations = true;\r\n            this.load(json_specializations, \"specializations\", Specialization, \"meta\");\r\n            this.loading_specializations = false;\r\n\r\n            this.items = new ItemCollection();\r\n            this.cleanItems = new ItemCollection();\r\n            this.craftingItems = new ItemCollection();\r\n\r\n            this.loading_weapons = true;\r\n            this.load(json_weapons, \"weapons\", Weapon, \"item\");\r\n            this.loading_weapons = false;\r\n\r\n            this.loading_armors = true;\r\n            this.load(json_armors, \"armors\", Armor, \"item\");\r\n            this.loading_armors = false;\r\n\r\n            this.loading_shields = true;\r\n            this.load(json_shields, \"shields\", Shield, \"item\");\r\n            this.loading_shields = false;\r\n\r\n            this.loading_wornitems = true;\r\n            this.load(json_wornitems, \"wornitems\", WornItem, \"item\");\r\n            this.loading_wornitems = false;\r\n\r\n            this.loading_helditems = true;\r\n            this.load(json_helditems, \"helditems\", HeldItem, \"item\");\r\n            this.loading_helditems = false;\r\n\r\n            this.loading_ammunition = true;\r\n            this.load(json_ammunition, \"ammunition\", Ammunition, \"item\");\r\n            this.loading_ammunition = false;\r\n\r\n            this.loading_alchemicalelixirs = true;\r\n            this.load(json_alchemicalelixirs, \"alchemicalelixirs\", AlchemicalElixir, \"item\");\r\n            this.loading_alchemicalelixirs = false;\r\n\r\n            this.loading_potions = true;\r\n            this.load(json_potions, \"potions\", Potion, \"item\");\r\n            this.loading_potions = false;\r\n\r\n            this.loading_otherconsumables = true;\r\n            this.load(json_otherconsumables, \"otherconsumables\", OtherConsumable, \"item\");\r\n            this.loading_otherconsumables = false;\r\n\r\n            this.loading_otherconsumablesbombs = true;\r\n            this.load(json_otherconsumablesbombs, \"otherconsumablesbombs\", OtherConsumableBomb, \"item\");\r\n            this.loading_otherconsumablesbombs = false;\r\n\r\n            this.loading_adventuringgear = true;\r\n            this.load(json_adventuringgear, \"adventuringgear\", AdventuringGear, \"item\");\r\n            this.loading_adventuringgear = false;\r\n\r\n            this.loading_armorrunes = true;\r\n            this.load(json_armorrunes, \"armorrunes\", ArmorRune, \"item\");\r\n            this.loading_armorrunes = false;\r\n\r\n            this.loading_weaponrunes = true;\r\n            this.load(json_weaponrunes, \"weaponrunes\", WeaponRune, \"item\");\r\n            this.loading_weaponrunes = false;\r\n\r\n            //Oils need to load after WeaponRunes, because they have to copy some of them.\r\n            this.loading_oils = true;\r\n            this.load(json_oils, \"oils\", Oil, \"item\");\r\n            this.loading_oils = false;\r\n\r\n            this.loading_scrolls = true;\r\n            this.load(json_scrolls, \"scrolls\", Scroll, \"item\");\r\n            this.loading_scrolls = false;\r\n\r\n            this.loading_talismans = true;\r\n            this.load(json_talismans, \"talismans\", Talisman, \"item\");\r\n            this.loading_talismans = false;\r\n\r\n            this.loading_alchemicalbombs = true;\r\n            this.load(json_alchemicalbombs, \"alchemicalbombs\", AlchemicalBomb, \"item\");\r\n            this.loading_alchemicalbombs = false;\r\n\r\n            this.loading_alchemicaltools = true;\r\n            this.load(json_alchemicaltools, \"alchemicaltools\", AlchemicalTool, \"item\");\r\n            this.loading_alchemicaltools = false;\r\n\r\n            this.loading_snares = true;\r\n            this.load(json_snares, \"snares\", Snare, \"item\");\r\n            this.loading_snares = false;\r\n\r\n            this.loading_alchemicalpoisons = true;\r\n            this.load(json_alchemicalpoisons, \"alchemicalpoisons\", AlchemicalPoison, \"item\");\r\n            this.loading_alchemicalpoisons = false;\r\n\r\n            this.loading_wands = true;\r\n            this.load(json_wands, \"wands\", Wand, \"item\");\r\n            this.loading_wands = false;\r\n\r\n            /*\r\n            this.loading_REPLACE0 = true;\r\n            this.load(json_REPLACE0, \"REPLACE0\", REPLACE1, \"item\");\r\n            this.loading_REPLACE0 = false;\r\n            */\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.specializations.forEach(spec => {\r\n                spec.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load(source, target: string, type, category: \"item\" | \"meta\") {\r\n        switch (category) {\r\n            case \"item\":\r\n                this.items[target] = [];\r\n                this.cleanItems[target] = [];\r\n                this.craftingItems[target] = [];\r\n                Object.keys(source).forEach(key => {\r\n                    this.items[target].push(...source[key].map(obj => this.initialize_Item(Object.assign(new type(), obj), true, false, true)));\r\n                    this.cleanItems[target].push(...source[key].map(obj => this.initialize_Item(Object.assign(new type(), obj), true, false, true)));\r\n                    this.craftingItems[target].push(...source[key].map(obj => this.initialize_Item(Object.assign(new type(), obj), true, false, true)));\r\n                });\r\n\r\n                let duplicates: string[] = Array.from(new Set(\r\n                    this.items[target]\r\n                        .filter((item: Item) => \r\n                        this.items[target].filter((otherItem: Item) =>\r\n                                otherItem.id == item.id\r\n                            ).length > 1\r\n                        ).map((item: Item) => item.id)\r\n                    ));\r\n                duplicates.forEach((itemID) => {\r\n                    let highestPriority = Math.max(\r\n                        ...this.items[target]\r\n                            .filter((item: Item) => item.id == itemID)\r\n                            .map((item: Item) => item.overridePriority)\r\n                        );\r\n                    let highestItem = this.items[target].find((item: Item) => item.id == itemID && item.overridePriority == highestPriority);\r\n                    this.items[target] = this.items[target].filter((item: Item) => !(item.id == itemID && item !== highestItem));\r\n                    let highestCleanItem = this.cleanItems[target].find((item: Item) => item.id == itemID && item.overridePriority == highestPriority);\r\n                    this.cleanItems[target] = this.cleanItems[target].filter((item: Item) => !(item.id == itemID && item !== highestCleanItem));\r\n                    let highestCraftingItem = this.craftingItems[target].find((item: Item) => item.id == itemID && item.overridePriority == highestPriority);\r\n                    this.craftingItems[target] = this.craftingItems[target].filter((item: Item) => !(item.id == itemID && item !== highestCraftingItem));\r\n                })\r\n                break;\r\n            case \"meta\":\r\n                this[target] = [];\r\n                Object.keys(source).forEach(key => {\r\n                    this[target].push(...source[key].map(obj => Object.assign(new type(), obj)));\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n}","import { SkillIncrease } from './SkillIncrease';\r\n\r\nexport class SkillChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    public filter: string[] = [];\r\n    public id: string = \"\";\r\n    public increases: SkillIncrease[] = [];\r\n    //If insertLevel is set, this SkillChoice is placed at the designated class level when granted by a feat.\r\n    // I.e. if a feat contains a SkillChoice with insertLevel = 5, the choice is added to level 5 regardless of when the feat was taken.\r\n    public insertLevel: number = 0;\r\n    //If insertClass is set, this SkillChoice is only granted by a feat if the character class name matches this name.\r\n    // This is especially useful for class choices (hunter's edge, rogue racket, bloodline etc.) that don't give certain benefits when multiclassing.\r\n    public insertClass: string = \"\";\r\n    //minRank: you may only increase skills that already have at least this level.\r\n    // If a skill increase doesn't come from at least one choice with minRank == 0, it isn't counted at all.\r\n    // This allows to upgrade, but not learn skills (like spell DCs for traditions you haven't chosen).\r\n    public minRank: number = 0;\r\n    //maxRank: the highest rank you are allowed to achieve with this choice.\r\n    //This means that only skills are allowed which currently have maxRank-2 !\r\n    public maxRank: number = 8;\r\n    //If showOnSheet is set, this choice is intended to be made on the character sheet instead of while building the character.\r\n    //  This is relevant for feats like Ancestral Longevity.\r\n    public showOnSheet: boolean = false;\r\n    public source: string = \"\";\r\n    public type: string = \"\";\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Activity } from '../Activity';\r\nimport { TraitsService } from '../traits.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { TimeService } from '../time.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { ActivityGain } from '../ActivityGain';\r\nimport { ItemActivity } from '../ItemActivity';\r\nimport { Feat } from '../Feat';\r\nimport { Character } from '../Character';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { Condition } from '../Condition';\r\nimport { SpellCast } from '../SpellCast';\r\nimport { Creature } from '../Creature';\r\nimport { EffectsService } from '../effects.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-activity',\r\n    templateUrl: './activity.component.html',\r\n    styleUrls: ['./activity.component.css']\r\n})\r\nexport class ActivityComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    activity: Activity | ItemActivity;\r\n    @Input()\r\n    gain: ActivityGain | ItemActivity;\r\n    @Input()\r\n    allowActivate: boolean = false;\r\n    @Input()\r\n    isSubItem: boolean = false;\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private spellsService: SpellsService,\r\n        private activitiesService: ActivitiesService,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private conditionsService: ConditionsService,\r\n        private effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature(creature: string = this.creature) {\r\n        return this.characterService.get_Creature(creature) as Creature;\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_ActivationTraits(activity: Activity) {\r\n        switch (activity.activationType) {\r\n            case \"Command\":\r\n                return [\"Auditory\", \"Concentrate\"];\r\n            case \"Envision\":\r\n                return [\"Concentrate\"];\r\n            case \"Interact\":\r\n                return [\"Manipulate\"];\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    get_Resonant() {\r\n        if ((this.activity as ItemActivity).resonant) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get_Duration(duration: number, includeTurnState: boolean = true, inASentence: boolean = false) {\r\n        return this.timeService.get_Duration(duration, includeTurnState, inASentence);\r\n    }\r\n\r\n    on_Activate(gain: ActivityGain | ItemActivity, activity: Activity | ItemActivity, activated: boolean, target: string) {\r\n        this.activitiesService.activate_Activity(this.get_Creature(), target, this.characterService, this.conditionsService, this.itemsService, this.spellsService, gain, activity, activated);\r\n    }\r\n\r\n    on_ActivateFuseStance(activated: boolean) {\r\n        this.gain.active = activated;\r\n        this.get_FusedStances().forEach(gain => {\r\n            let activity = (gain[\"can_Activate\"] ? gain as ItemActivity : this.get_Activities(gain.name)[0])\r\n            if (activated != gain.active) {\r\n                this.activitiesService.activate_Activity(this.get_Creature(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, gain, activity, activated);\r\n            }\r\n        })\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_FeatsShowingOn(activityName: string) {\r\n        if (activityName) {\r\n            return this.characterService.get_FeatsShowingOn(activityName)\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });;\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n\r\n    get_ConditionsShowingOn(activityName: string) {\r\n        if (activityName) {\r\n            return this.characterService.get_ConditionsShowingOn(this.get_Creature(), activityName)\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });;\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    get_ActivityGainsShowingOn(objectName: string) {\r\n        if (objectName) {\r\n            return this.characterService.get_OwnedActivities(this.get_Creature())\r\n                .filter((gain: ItemActivity | ActivityGain) =>\r\n                    (gain._className == \"ItemActivity\" ? [gain as ItemActivity] : this.get_Activities(gain.name))\r\n                        .find((activity: ItemActivity | Activity) =>\r\n                            activity.hints\r\n                                .find(hint =>\r\n                                    hint.showon.split(\",\")\r\n                                        .find(showon =>\r\n                                            showon.trim().toLowerCase() == objectName.toLowerCase()\r\n                                        )\r\n                                )\r\n                        )\r\n                )\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    get_ActivitiesFromGain(gain: ActivityGain | ItemActivity) {\r\n        return gain.constructor == ItemActivity ? [gain] : this.get_Activities(gain.name)\r\n    }\r\n\r\n    get_FuseStanceFeat() {\r\n        if (this.get_Creature().type == \"Character\") {\r\n            let character = this.get_Creature() as Character;\r\n            if (character.get_FeatsTaken(0, character.level, \"Fuse Stance\").length) {\r\n                return character.customFeats.filter(feat => feat.name == \"Fuse Stance\")[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get_FusedStances() {\r\n        let feat: Feat = this.get_FuseStanceFeat();\r\n        if (feat) {\r\n            return this.characterService.get_OwnedActivities(this.get_Creature())\r\n                .filter((gain: ItemActivity | ActivityGain) => feat.data[\"stances\"].includes(gain.name))\r\n        }\r\n    }\r\n\r\n    get_Activities(name: string) {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_ExternallyDisabled() {\r\n        return this.effectsService.get_EffectsOnThis(this.get_Creature(), this.activity.name + \" Disabled\").length;\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    get_SpellTarget() {\r\n        if (this.activity.castSpells.length) {\r\n            //The SpellCast may limit the spell targets. If not, get the available targets from the Spell, or return \"\" for non-allies.\r\n            return this.activity.castSpells[0].target || this.get_Spells(this.activity.castSpells[0].name)[0]?.target || \"\";\r\n        } else {\r\n            return \"no spell\";\r\n        }\r\n    }\r\n\r\n    get_SpellCasts() {\r\n        if (this.gain) {\r\n            while (this.gain.spellEffectChoices.length < this.activity.castSpells.length) {\r\n                this.gain.spellEffectChoices.push([]);\r\n            }\r\n        }\r\n        return this.activity.castSpells;\r\n    }\r\n\r\n    get_ActivityConditions() {\r\n        //For all conditions that are included with this activity and has choices unlocked, create an effectChoice on the gain and set it to the default choice.\r\n        let conditions: Condition[] = [];\r\n        if (this.gain && !this.activity.hideChoices) {\r\n            this.activity.gainConditions\r\n                .map(conditionGain => { return { gain: conditionGain, condition: this.conditionsService.get_Conditions(conditionGain.name)[0] } })\r\n                .filter(conditionSet => conditionSet.condition?.get_Choices(this.characterService, true, conditionSet.gain.heightened).length > 1)\r\n                .map(conditionSet => conditionSet.condition)\r\n                .forEach((condition, index) => {\r\n                    //Add the condition to the list of conditions that need to display a choice,\r\n                    // then if the gain doesn't have a choice at that index or the choice isn't among the condition's choices, insert or replace that choice on the gain.\r\n                    conditions.push(condition);\r\n                    while (!this.gain.effectChoices.length || this.gain.effectChoices.length < index - 1) {\r\n                        this.gain.effectChoices.push(condition.choice);\r\n                    }\r\n                    if (!condition?.$choices?.includes(this.gain.effectChoices[index])) {\r\n                        this.gain.effectChoices[index] = condition.choice;\r\n                    }\r\n                })\r\n        }\r\n        return conditions;\r\n    }\r\n\r\n    get_SpellConditions(spellCast: SpellCast, spellCastIndex: number) {\r\n        //For all conditions that are included with this spell on this level and has choices unlocked, create an effectChoice on the gain and set it to the default choice.\r\n        let conditions: Condition[] = [];\r\n        if (this.gain) {\r\n            let spell = this.spellsService.get_Spells(spellCast.name)[0];\r\n            if (spell?.gainConditions.length) {\r\n                spell.get_HeightenedConditions(spellCast.level)\r\n                    .filter(conditionGain => !conditionGain.hideChoices)\r\n                    .map(conditionGain => this.conditionsService.get_Conditions(conditionGain.name)[0])\r\n                    .filter(condition => condition?.get_Choices(this.characterService, true)?.length > 1)\r\n                    .forEach((condition, index) => {\r\n                        //Add the condition to the list of conditions that need to display a choice,\r\n                        // then if the gain doesn't have a choice at that index or the choice isn't among the condition's choices, insert or replace that choice on the gain.\r\n                        conditions.push(condition);\r\n                        while (!this.gain.spellEffectChoices[spellCastIndex].length || this.gain.spellEffectChoices[spellCastIndex].length < index - 1) {\r\n                            this.gain.spellEffectChoices[spellCastIndex].push(condition.choice);\r\n                        }\r\n                        if (!condition.$choices.includes(this.gain.spellEffectChoices[spellCastIndex][index])) {\r\n                            this.gain.spellEffectChoices[spellCastIndex][index] = condition.choice;\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n        return conditions;\r\n    }\r\n\r\n    on_EffectChoiceChange() {\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.set_ToChange(this.creature, \"activities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.activity.displayOnly) {\r\n            this.allowActivate = false;\r\n        }\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let maxCharges of [activity.maxCharges(get_Creature(), characterService)]\">\r\n    <ng-container *ngFor=\"let cooldown of [activity.get_Cooldown(get_Creature(), characterService)]\">\r\n        <div class=\"newrow\" *ngIf=\"allowActivate && !get_ExternallyDisabled()\">\r\n            <ng-container\r\n                *ngIf=\"gain.name != 'Fused Stance' && activity.can_Activate() && (gain.activeCooldown ? (maxCharges > gain.chargesUsed) : true)\">\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && ['self', 'ally'].includes(get_SpellTarget())\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, creature)\">\r\n                        Activate {{get_SpellTarget() == 'ally' ? \"(Cast spell on yourself)\" : \"\"}} {{maxCharges ? \"(\" +\r\n                        (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && ['companion', 'ally'].includes(get_SpellTarget()) && get_CompanionAvailable()\">\r\n                    <button class=\"newrow center-aligned\"\r\n                        (click)=\"on_Activate(gain, activity, true, (creature=='Character' ? 'Companion' : 'Character'))\">\r\n                        Activate (Cast spell on {{creature == \"Character\" ? \"your animal companion\" : \"your master\"}})\r\n                        {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && ['companion', 'ally'].includes(get_SpellTarget()) && get_FamiliarAvailable()\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, 'Familiar')\">\r\n                        Activate (Cast spell on your familiar) {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \"\r\n                        of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && get_SpellTarget() == 'ally'\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, '')\">\r\n                        Activate (Cast spell on other targets) {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \"\r\n                        of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && get_SpellTarget() == ''\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, '')\">\r\n                        Activate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && get_SpellTarget() == 'no spell'\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, creature)\">\r\n                        Activate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n        <ng-container *ngIf=\"allowActivate\">\r\n            <div class=\"newrow\"\r\n                [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                *ngIf=\"gain.name != 'Fused Stance' && activity.can_Activate() && gain.active\">\r\n                <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, false, creature)\">\r\n                    {{gain.duration==1 ? \"Done (instant effect)\" : \"\" }} {{gain.duration !=1 ? (activity.sustained\r\n                    ? \"Stop Sustaining\" : \"Deactivate\" ) : \"\" }} {{(gain.duration && gain.duration !=1) ? \"(\" +\r\n                    get_Duration(gain.duration) + \" remaining)\" : \"\" }} {{maxCharges ? \"(\" + (maxCharges -\r\n                    gain.chargesUsed) + \" of \" + maxCharges + \" charges)\" : \"\" }} </button>\r\n            </div>\r\n            <ng-container\r\n                *ngIf=\"gain.name == 'Fused Stance' && (gain.activeCooldown ? (maxCharges > gain.chargesUsed) : true)\">\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_ActivateFuseStance(true)\"\r\n                        [disabled]=\"!get_FuseStanceFeat() || !get_FuseStanceFeat().data\">\r\n                        Activate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"gain.active\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_ActivateFuseStance(false)\"\r\n                        [disabled]=\"!get_FuseStanceFeat() || !get_FuseStanceFeat().data\">\r\n                        Deactivate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!activity.can_Activate()\">\r\n                <button class=\"newrow center-aligned\"\r\n                    [ngbTooltip]=\"'The results of this activation cannot be applied automatically. Pressing this button has no effect.'\">\r\n                    <span>Activate <i class='bi-peace'></i></span>\r\n                </button>\r\n            </ng-container>\r\n            <div class=\"newrow\" *ngIf=\"get_Resonant() && !isSubItem\">\r\n                <strong>Slot this item into a Wayfinder to unlock its resonant power.</strong>\r\n            </div>\r\n            <div class=\"newrow\"\r\n                *ngIf=\"gain && (gain.activeCooldown ? (maxCharges == gain.chargesUsed) : false) && !gain.active\">\r\n                <button class=\"newrow center-aligned\" disabled>\r\n                    Cannot activate {{get_Duration(gain.activeCooldown, true, true)}}\r\n                </button>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"get_ExternallyDisabled()\">\r\n                <button class=\"newrow center-aligned\" disabled>\r\n                    Cannot activate (disabled by effect)\r\n                </button>\r\n            </div>\r\n        </ng-container>\r\n        <div class=\"newrow left-aligned\">\r\n            <cite class=\"trait\" *ngFor=\"let trait of activity.traits; trackBy:trackByIndex;\"\r\n                [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            <cite class=\"trait\" *ngFor=\"let trait of get_ActivationTraits(activity); trackBy:trackByIndex;\"\r\n                [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"activity.name\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        </div>\r\n        <div class=\"newrow left-aligned\"\r\n            *ngFor=\"let condition of get_ActivityConditions(); let conditionIndex = index; trackBy:trackByIndex\">\r\n            <div class=\"newrow list-item\" *ngIf=\"condition && condition.choices.length\">\r\n                <span>{{condition.name}} Effect selection:\r\n                    <select [(ngModel)]=\"gain.effectChoices[conditionIndex]\" (ngModelChange)=\"on_EffectChoiceChange()\">\r\n                        <option *ngFor=\"let choice of condition.$choices; trackBy:trackByIndex;\" [ngValue]=\"choice\">\r\n                            {{choice}}\r\n                        </option>\r\n                    </select>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item lower newrow problem\" *ngIf=\"activity.inputRequired\">\r\n            <strong>Player input required:</strong>\r\n            <div class=\"newrow left-aligned\">\r\n                <p *ngFor=\"let inputRequired of activity.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                    {{inputRequired}}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned\"\r\n            *ngIf=\"activity.frequency || ((cooldown != activity.cooldown) && !activity.cooldownAfterEnd)\">\r\n            <span>\r\n                <strong>Frequency</strong>\r\n                <span *ngIf=\"cooldown == activity.cooldown\">&nbsp;{{activity.frequency}}</span>\r\n                <span class=\"absolute\" *ngIf=\"cooldown != activity.cooldown\">&nbsp;{{maxCharges ? maxCharges + \"\r\n                    times every \" : \"once every \"}}{{get_Duration(cooldown, false, false)}}</span>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"cooldown && activity.cooldownAfterEnd\">\r\n            <span>\r\n                <strong>Cooldown after use</strong>\r\n                <span [ngClass]=\"{'absolute':cooldown != activity.cooldown}\">&nbsp;{{get_Duration(cooldown, false,\r\n                    false)}}</span>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.cost\">\r\n            <span>\r\n                <strong>Cost</strong>\r\n                {{activity.cost}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.trigger\">\r\n            <span>\r\n                <strong>Trigger</strong>\r\n                {{activity.trigger}}\r\n            </span>\r\n        </div>\r\n        <ng-container *ngIf=\"allowActivate && gain?.data\">\r\n            <div class=\"newrow left-aligned\" *ngFor=\"let data of gain.data; trackBy:trackByIndex\">\r\n                <strong>{{data.name}}</strong>\r\n                <input class=\"newrow\" type=\"text\" [(ngModel)]=\"data.value\">\r\n            </div>\r\n        </ng-container>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.requirements\">\r\n            <span>\r\n                <strong>Requirements</strong>\r\n                {{activity.requirements}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngFor=\"let desc of activity.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n            <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.critsuccess\">\r\n            <span>\r\n                <strong>Critical Success</strong>\r\n                {{activity.critsuccess}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.success\">\r\n            <span>\r\n                <strong>Success</strong>\r\n                {{activity.success}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.failure\">\r\n            <span>\r\n                <strong>Failure</strong>\r\n                {{activity.failure}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.critfailure\">\r\n            <span>\r\n                <strong>Critical Failure</strong>\r\n                {{activity.critfailure}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.specialdesc\">\r\n            <span>\r\n                <strong>Special</strong>\r\n                {{activity.specialdesc}}\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item left-aligned\"\r\n            *ngFor=\"let shownActivityName of activity.showActivities; trackBy:trackByIndex;\">\r\n            <div *ngFor=\"let shownActivity of get_Activities(shownActivityName); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader\">{{shownActivity.name}}\r\n                    <app-actionIcons [actionString]=\"shownActivity.actions\">\r\n                    </app-actionIcons> {{shownActivity.activationType.toString()}}\r\n                </header>\r\n                <app-activity [activity]=shownActivity [allowActivate]=\"false\"></app-activity>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item newrow left-aligned\"\r\n            *ngFor=\"let cast of get_SpellCasts(); let spellCastIndex = index; trackBy:trackByIndex;\">\r\n            <div *ngFor=\"let spell of get_Spells(cast.name); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader\">{{spell.name}}\r\n                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                    </app-actionIcons>{{spell.castType.toString()}}\r\n                </header>\r\n                <ng-container\r\n                    *ngFor=\"let condition of get_SpellConditions(cast, spellCastIndex); let conditionIndex = index; trackBy:trackByIndex\">\r\n                    <div class=\"newrow list-item\" *ngIf=\"condition && condition.choices.length\">\r\n                        <span>{{condition.name}} Effect selection:\r\n                            <select [(ngModel)]=\"gain.spellEffectChoices[spellCastIndex][conditionIndex]\"\r\n                                (ngModelChange)=\"on_EffectChoiceChange()\">\r\n                                <option *ngFor=\"let choice of condition.$choices; trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"choice\">\r\n                                    {{choice}}\r\n                                </option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                </ng-container>\r\n                <app-spell [spell]=spell [spellLevel]=\"(cast.level) ? cast.level : 0\"></app-spell>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item left-aligned\" *ngFor=\"let shownSpellSet of activity.showSpells; trackBy:trackByIndex;\">\r\n            <div *ngFor=\"let shownSpell of get_Spells(shownSpellSet.name); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader\">{{shownSpell.name}}\r\n                    <app-actionIcons [actionString]=\"shownSpell.actions\">\r\n                    </app-actionIcons> {{shownSpell.castType.toString()}}\r\n                </header>\r\n                <app-spell [spell]=shownSpell [spellLevel]=\"shownSpellSet.level || 0\"></app-spell>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item newrow left-aligned\"\r\n            *ngFor=\"let feat of get_FeatsShowingOn(activity.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader\">{{feat.name}}</header>\r\n            <div class=\"newrow left-aligned\">\r\n                <cite class=\"trait\" *ngFor=\"let trait of feat.traits; trackBy:trackByIndex;\"\r\n                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            </div>\r\n            <div class=\"newrow left-aligned\" *ngFor=\"let desc of feat.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned\"\r\n            *ngFor=\"let condition of get_ConditionsShowingOn(activity.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader\">{{condition.name}}</header>\r\n            <div class=\"newrow left-aligned\" *ngFor=\"let desc of condition.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngIf=\"allowActivate\">\r\n            <ng-container *ngFor=\"let related_gain of get_ActivityGainsShowingOn(activity.name); trackBy:trackByIndex;\">\r\n                <div class=\"list-item newrow left-aligned\"\r\n                    *ngFor=\"let related_activity of get_ActivitiesFromGain(related_gain); trackBy:trackByIndex;\">\r\n                    <header class=\"spellHeader\">{{related_activity.name}}\r\n                        <app-actionIcons [actionString]=\"related_activity.actions\">\r\n                        </app-actionIcons>{{(related_activity.activationType) ? related_activity.activationType :\r\n                        \"\"}}\r\n                    </header>\r\n                    <app-activity [creature]=\"creature\" [activity]=related_activity [gain]=related_gain\r\n                        [allowActivate]=true></app-activity>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"gain.name == 'Fused Stance'\">\r\n                <ng-container *ngFor=\"let gain of get_FusedStances(); trackBy:trackByIndex;\">\r\n                    <div class=\"list-item newrow left-aligned\"\r\n                        *ngFor=\"let related_activity of get_ActivitiesFromGain(gain); trackBy:trackByIndex;\">\r\n                        <header class=\"spellHeader\">{{related_activity.name}}\r\n                            <app-actionIcons [actionString]=\"related_activity.actions\">\r\n                            </app-actionIcons>{{(related_activity.activationType) ? related_activity.activationType\r\n                            : \"\"}}\r\n                        </header>\r\n                        <app-activity [creature]=\"creature\" [activity]=related_activity [gain]=gain\r\n                            [allowActivate]=false>\r\n                        </app-activity>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Injectable } from '@angular/core';\r\nimport { Character } from './Character';\r\nimport { Ancestry } from './Ancestry';\r\nimport { Class } from './Class';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { ItemGain } from './ItemGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { Level } from './Level';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { EffectGain } from './EffectGain';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\nimport { Skill } from './Skill';\r\nimport { WornItem } from './WornItem';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { AlchemicalElixir } from './AlchemicalElixir';\r\nimport { Armor } from './Armor';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Background } from './Background';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Consumable } from './Consumable';\r\nimport { Feat } from './Feat';\r\nimport { FormulaChoice } from './FormulaChoice';\r\nimport { Health } from './Health';\r\nimport { HeldItem } from './HeldItem';\r\nimport { Heritage } from './Heritage';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { OtherConsumable } from './OtherConsumable';\r\nimport { OtherItem } from './OtherItem';\r\nimport { Potion } from './Potion';\r\nimport { Settings } from './Settings';\r\nimport { Shield } from './Shield';\r\nimport { SpellCast } from './SpellCast';\r\nimport { SpellGain } from './SpellGain';\r\nimport { Weapon } from './Weapon';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { ItemCollection } from './ItemCollection';\r\nimport { Speed } from './Speed';\r\nimport { Bulk } from './Bulk';\r\nimport { ItemsService } from './items.service';\r\nimport { Ammunition } from './Ammunition';\r\nimport { Item } from './Item';\r\nimport { Scroll } from './Scroll';\r\nimport { InventoryGain } from './InventoryGain';\r\nimport { Oil } from './Oil';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Savegame } from './Savegame';\r\nimport { CharacterService } from './character.service';\r\nimport { AnimalCompanionsService } from './animalcompanions.service';\r\nimport { ClassesService } from './classes.service';\r\nimport { HistoryService } from './history.service';\r\nimport { Talisman } from './Talisman';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { AlchemicalTool } from './AlchemicalTool';\r\nimport { Snare } from './Snare';\r\nimport { WeaponMaterial } from './WeaponMaterial';\r\nimport { ArmorMaterial } from './ArmorMaterial';\r\nimport { ShieldMaterial } from './ShieldMaterial';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { Wand } from './Wand';\r\nimport { Equipment } from './Equipment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SavegameService {\r\n\r\n    private savegames: Savegame[] = [];\r\n    private loading: boolean = false;\r\n    private loader;\r\n    //private server: string = \"http://arne:8080\"\r\n    private server: string = \"http://qjhkot3fbwyyxcvn.myfritz.net:23480\"\r\n\r\n    //All these attributes may be needed by the reassign function, so they are explicitly defined here.\r\n    private AbilityChoice = AbilityChoice;\r\n    private ActivityGain = ActivityGain;\r\n    private AdventuringGear = AdventuringGear;\r\n    private AlchemicalBomb = AlchemicalBomb;\r\n    private AlchemicalElixir = AlchemicalElixir;\r\n    private AlchemicalPoison = AlchemicalPoison;\r\n    private AlchemicalTool = AlchemicalTool;\r\n    private Ammunition = Ammunition;\r\n    private Ancestry = Ancestry;\r\n    private AnimalCompanion = AnimalCompanion;\r\n    private AnimalCompanionAncestry = AnimalCompanionAncestry;\r\n    private AnimalCompanionClass = AnimalCompanionClass;\r\n    private AnimalCompanionLevel = AnimalCompanionLevel;\r\n    private AnimalCompanionSpecialization = AnimalCompanionSpecialization;\r\n    private Armor = Armor;\r\n    private ArmorMaterial = ArmorMaterial;\r\n    private ArmorRune = ArmorRune;\r\n    private Background = Background;\r\n    private Bulk = Bulk;\r\n    private Character = Character;\r\n    private Class = Class;\r\n    private ConditionGain = ConditionGain;\r\n    private Consumable = Consumable;\r\n    private EffectGain = EffectGain;\r\n    private Familiar = Familiar;\r\n    private Feat = Feat;\r\n    private FeatChoice = FeatChoice;\r\n    private FormulaChoice = FormulaChoice;\r\n    private Health = Health;\r\n    private HeldItem = HeldItem;\r\n    private Heritage = Heritage;\r\n    private InventoryGain = InventoryGain;\r\n    private Item = Item;\r\n    private ItemActivity = ItemActivity;\r\n    private ItemCollection = ItemCollection;\r\n    private ItemGain = ItemGain;\r\n    private Level = Level;\r\n    private LoreChoice = LoreChoice;\r\n    private Oil = Oil;\r\n    private OtherConsumable = OtherConsumable;\r\n    private OtherConsumableBomb = OtherConsumableBomb;\r\n    private OtherItem = OtherItem;\r\n    private Potion = Potion;\r\n    private Scroll = Scroll;\r\n    private Settings = Settings;\r\n    private Shield = Shield;\r\n    private Shieldmaterial = ShieldMaterial;\r\n    private Skill = Skill;\r\n    private SkillChoice = SkillChoice;\r\n    private Snare = Snare;\r\n    private Speed = Speed;\r\n    private SpellCast = SpellCast;\r\n    private SpellCasting = SpellCasting;\r\n    private SpellChoice = SpellChoice;\r\n    private SpellGain = SpellGain;\r\n    private Talisman = Talisman;\r\n    private Weapon = Weapon;\r\n    private WeaponMaterial = WeaponMaterial;\r\n    private WeaponRune = WeaponRune;\r\n    private WornItem = WornItem;\r\n    private Wand = Wand;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    get_Savegames() {\r\n        return this.savegames;\r\n    }\r\n\r\n    load_Character(character: Character, itemsService: ItemsService, classesService: ClassesService, historyService: HistoryService, animalCompanionsService: AnimalCompanionsService) {\r\n        //Restore a lot of data from reference objects.\r\n        //This allows us to save a lot of data at saving by removing all data from certain objects that is the same as in their original template.\r\n        character.inventories = character.inventories.map(inventory => Object.assign(new ItemCollection(), inventory));\r\n\r\n        if (character.class.name) {\r\n            if (character.class.ancestry && character.class.ancestry.name) {\r\n                character.class.ancestry = historyService.restore_AncestryFromSave(character.class.ancestry, this);\r\n            }\r\n            if (character.class.heritage && character.class.heritage.name) {\r\n                character.class.heritage = historyService.restore_HeritageFromSave(character.class.heritage, this);\r\n            }\r\n            if (character.class.background && character.class.background.name) {\r\n                character.class.background = historyService.restore_BackgroundFromSave(character.class.background, this);\r\n            }\r\n            if (character.class.animalCompanion) {\r\n                if (character.class.animalCompanion.inventories) {\r\n                    character.class.animalCompanion.inventories = character.class.animalCompanion.inventories\r\n                        .map(inventory => Object.assign(new ItemCollection(), inventory));\r\n                }\r\n                if (character.class.animalCompanion?.class?.ancestry) {\r\n                    character.class.animalCompanion.class.ancestry = animalCompanionsService.restore_AncestryFromSave(character.class.animalCompanion.class.ancestry, this);\r\n                }\r\n                if (character.class.animalCompanion?.class?.levels) {\r\n                    character.class.animalCompanion.class = animalCompanionsService.restore_LevelsFromSave(character.class.animalCompanion.class, this);\r\n                }\r\n                if (character.class.animalCompanion.class?.specializations) {\r\n                    character.class.animalCompanion.class.specializations = character.class.animalCompanion.class.specializations\r\n                        .map(spec => animalCompanionsService.restore_SpecializationFromSave(spec, this));\r\n                }\r\n            }\r\n            //Restore the class last, so we don't null its components (ancestry, animal companion etc.)\r\n            character.class = classesService.restore_ClassFromSave(character.class, this);\r\n        }\r\n\r\n        character = this.reassign(character, \"\", itemsService);\r\n        if (character['_id']) {\r\n            delete character['_id'];\r\n        }\r\n        return character;\r\n    }\r\n\r\n    merge(target: any, source: any) {\r\n        if (typeof source == \"object\" && source) {\r\n            let output = Object.assign(new target.constructor, JSON.parse(JSON.stringify(target)))\r\n            if (Array.isArray(source)) {\r\n                source.forEach((obj: any, index) => {\r\n                    if (!output[index]) {\r\n                        Object.assign(output, { [index]: JSON.parse(JSON.stringify(source[index])) });\r\n                    } else {\r\n                        output[index] = this.merge(target[index], source[index]);\r\n                    }\r\n                });\r\n            } else {\r\n                Object.keys(source).forEach(key => {\r\n                    if (typeof source === 'object') {\r\n                        if (!(key in target))\r\n                            Object.assign(output, { [key]: JSON.parse(JSON.stringify(source[key])) });\r\n                        else\r\n                            output[key] = this.merge(target[key], source[key]);\r\n                    } else {\r\n                        Object.assign(output, { [key]: JSON.parse(JSON.stringify(source[key])) });\r\n                    }\r\n                });\r\n            }\r\n            return output;\r\n        } else {\r\n            return source;\r\n        }\r\n\r\n    }\r\n\r\n    clean(object: any, itemsService: ItemsService) {\r\n        //Only cleanup objects that have Classes (= aren't object Object)\r\n        if (typeof object == \"object\" && object.constructor !== Object) {\r\n            //If the object is an array, iterate over its elements\r\n            if (Array.isArray(object)) {\r\n                object.forEach((obj: any) => {\r\n                    obj = this.clean(obj, itemsService);\r\n                });\r\n            } else {\r\n                let blank;\r\n                //For items with a refId, don't compare them with blank items, but with their reference item if it exists.\r\n                //If none can be found, the reference item is a blank item of the same class.\r\n                if (object[\"refId\"]) {\r\n                    blank = itemsService.get_CleanItemByID(object.refId);\r\n                }\r\n                if (!blank) {\r\n                    blank = new object.constructor();\r\n                }\r\n                Object.keys(object).forEach(key => {\r\n                    //Delete attributes that are in the \"neversave\" list, if it exists.\r\n                    if (object[\"neversave\"] && object[\"neversave\"].includes(key)) {\r\n                        delete object[key];\r\n                        //Don't cleanup the \"_className\" or any attributes that are in the \"save\" list.\r\n                    } else if (!object[\"save\"]?.includes(key) && (key != \"_className\") && (key.substr(0, 1) != \"$\")) {\r\n                        //If the attribute has the same value as the default, delete it from the object.\r\n                        if (JSON.stringify(object[key]) == JSON.stringify(blank[key])) {\r\n                            delete object[key];\r\n                        } else {\r\n                            object[key] = this.clean(object[key], itemsService)\r\n                        }\r\n                        //Cleanup attributes that start with $.\r\n                    } else if (key.substr(0, 1) == \"$\") {\r\n                        delete object[key];\r\n                    }\r\n                })\r\n                //Delete the \"save\" list last so it can be referenced during the cleanup, but still updated when loading.\r\n                if (object[\"save\"]) {\r\n                    delete object[\"save\"];\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    reassign(object: any, keyName: string = \"\", itemsService: ItemsService = null) {\r\n        //Only objects get reassigned - if they have a _className attribute and aren't null/undefined/empty\r\n        if (typeof object == \"object\" && object) {\r\n            //If the object is an array, iterate over its elements\r\n            if (Array.isArray(object)) {\r\n                object.forEach((obj: any, index) => {\r\n                    object[index] = this.reassign(obj, keyName + \"[\" + index + \"]\", itemsService);\r\n                });\r\n            } else {\r\n                //For items with a refId, merge them with their reference item if it exists.\r\n                if (object.refId && itemsService) {\r\n                    let libraryItem = itemsService.get_CleanItemByID(object.refId);\r\n                    if (libraryItem) {\r\n                        //Map the restored object onto the library object and keep the result.\r\n                        try {\r\n                            object = this.merge(libraryItem, object);\r\n                            object = itemsService.cast_ItemByClassName(object, libraryItem.constructor.name);\r\n                            //Disable any active hint effects when loading an item.\r\n                            if (object.hints?.length) {\r\n                                (object as Equipment).hints?.forEach(hint => {\r\n                                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                                })\r\n                            }\r\n                        } catch (e) {\r\n                            console.log(\"Failed reassigning item \" + object.id + \": \" + e)\r\n                        }\r\n                    }\r\n                }\r\n                //If the object is not cast yet, try casting it object as its _className.\r\n                if (object._className && object.constructor.name != object._ClassName) {\r\n                    try {\r\n                        object = Object.assign(eval(\"new this.\" + object._className + \"()\"), object)\r\n                    } catch (e) {\r\n                        console.log(\"Failed reassigning \" + keyName + \": \" + e)\r\n                    }\r\n                }\r\n                Object.keys(object).forEach(key => {\r\n                    object[key] = this.reassign(object[key], key, itemsService)\r\n                })\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    save_Character(character: Character, itemsService: ItemsService, classesService: ClassesService, historyService: HistoryService, animalCompanionsService: AnimalCompanionsService) {\r\n\r\n        let savegame: Character = JSON.parse(JSON.stringify(character));\r\n\r\n        //After copying the character into the savegame, we go through all its elements and make sure that they have the correct class.\r\n\r\n        savegame = this.reassign(savegame, \"\", itemsService);\r\n\r\n        //Go through all the items, class, ancestry, heritage, background and compare every element to its library equivalent, skipping the properties listed in .save\r\n        //Everything that is the same as the library item gets deleted.\r\n        if (savegame.class.name) {\r\n            savegame.class = classesService.clean_ClassForSave(savegame.class);\r\n            if (savegame.class.ancestry?.name) {\r\n                savegame.class.ancestry = historyService.clean_AncestryForSave(savegame.class.ancestry);\r\n            }\r\n            if (savegame.class.heritage?.name) {\r\n                savegame.class.heritage = historyService.clean_HeritageForSave(savegame.class.heritage);\r\n            }\r\n            if (savegame.class.background?.name) {\r\n                savegame.class.background = historyService.clean_BackgroundForSave(savegame.class.background);\r\n            }\r\n            if (savegame.class.animalCompanion) {\r\n                if (savegame.class.animalCompanion.class?.ancestry) {\r\n                    savegame.class.animalCompanion.class.ancestry = animalCompanionsService.clean_AncestryForSave(savegame.class.animalCompanion.class.ancestry);\r\n                }\r\n                if (savegame.class.animalCompanion.class?.levels) {\r\n                    savegame.class.animalCompanion.class = animalCompanionsService.clean_LevelsForSave(savegame.class.animalCompanion.class);\r\n                }\r\n                if (savegame.class.animalCompanion.class?.specializations) {\r\n                    savegame.class.animalCompanion.class.specializations.forEach(spec => {\r\n                        spec = animalCompanionsService.clean_SpecializationForSave(spec);\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        //Then go through the whole thing again and compare every object to its Class's default, deleting everything that has the same value as the default.\r\n        savegame = this.clean(savegame, itemsService);\r\n\r\n        return this.save_CharacterToDB(savegame);\r\n\r\n    }\r\n\r\n    load_Characters(): Observable<string[]> {\r\n        return this.http.get<string[]>(this.server + '/list');\r\n    }\r\n\r\n    load_CharacterFromDB(id: string): Observable<string[]> {\r\n        return this.http.get<string[]>(this.server + '/load/' + id);\r\n    }\r\n\r\n    delete_CharacterFromDB(savegame: Savegame): Observable<string[]> {\r\n        //Why is this a get?\r\n        return this.http.get<string[]>(this.server + '/delete/' + savegame.id);\r\n    }\r\n\r\n    save_CharacterToDB(savegame): Observable<string[]> {\r\n        return this.http.post<string[]>(this.server + '/save/', savegame);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.loading;\r\n    }\r\n\r\n    initialize(characterService: CharacterService) {\r\n        this.loading = true;\r\n        this.load_Characters()\r\n            .subscribe((results: string[]) => {\r\n                this.loader = results;\r\n                this.finish_loading(characterService)\r\n            }, (error) => {\r\n                console.log('Error loading characters from database: ' + error.message);\r\n            });\r\n    }\r\n\r\n    finish_loading(characterService: CharacterService) {\r\n        if (this.loader) {\r\n            this.savegames = [];\r\n            this.loader.forEach(savegame => {\r\n                let newLength = this.savegames.push(new Savegame());\r\n                this.savegames[newLength - 1].id = savegame.id;\r\n                this.savegames[newLength - 1].dbId = savegame._id || \"\";\r\n                this.savegames[newLength - 1].level = savegame.level || 1;\r\n                this.savegames[newLength - 1].name = savegame.name || \"Unnamed\";\r\n                this.savegames[newLength - 1].partyName = savegame.partyName || \"No Party\";\r\n                if (savegame.class) {\r\n                    this.savegames[newLength - 1].class = savegame.class.name || \"\";\r\n                    if (savegame.class.levels?.[1]?.featChoices?.length) {\r\n                        savegame.class.levels[1].featChoices.filter(choice => choice.specialChoice && choice.feats?.length == 1 && choice.available == 1 && choice.source == savegame.class.name).forEach(choice => {\r\n                            let choiceName = choice.feats[0].name.split(\":\")[0];\r\n                            if (!choiceName.includes(\"School\") && choiceName.includes(choice.type)) {\r\n                                choiceName = choiceName.substr(0, choiceName.length - choice.type.length - 1);\r\n                            }\r\n                            this.savegames[newLength - 1].classChoice = choiceName;\r\n                        });\r\n                    }\r\n                    if (savegame.class.ancestry) {\r\n                        this.savegames[newLength - 1].ancestry = savegame.class.ancestry.name || \"\";\r\n                    }\r\n                    if (savegame.class.heritage) {\r\n                        this.savegames[newLength - 1].heritage = savegame.class.heritage.name || \"\";\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.loader = [];\r\n            characterService.set_Changed(\"charactersheet\");\r\n            characterService.process_ToChange();\r\n        }\r\n        if (this.loading) { this.loading = false; }\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { EffectGain } from './EffectGain';\r\nimport { Item } from './Item';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { Rune } from './Rune';\r\nimport { ItemsService } from './items.service';\r\nimport { InventoryGain } from './InventoryGain';\r\nimport { Talisman } from './Talisman';\r\nimport { Material } from './Material';\r\nimport { Hint } from './Hint';\r\n\r\nexport class Equipment extends Item {\r\n    //This is a list of all the attributes that should be saved if a refID exists. All others can be looked up via the refID when loading the character.\r\n    //If an attribute could be the same as a new Item, but different from its refID item, it should be on the save list.\r\n    //For example, a set of arrows comes with amount=10, but a standard item has amount=1.\r\n    // If you use up 9 arrows and then save, amount=1 will be deleted because it's the same as a new item, and you will have 10 arrows after loading.\r\n    public readonly baseType = \"Equipment\";\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    allowEquippable = true;\r\n    //Equipment can normally be equipped.\r\n    equippable = true;\r\n    //Describe all activities that you gain from this item. The activity must be a fully described \"Activity\" type object\r\n    public activities: ItemActivity[] = [];\r\n    public broken: boolean = false;\r\n    public shoddy: boolean = false;\r\n    //Some items have a different bulk when you are carrying them instead of wearing them, like backpacks\r\n    public carryingBulk: string = \"\";\r\n    //Is the item currently equipped - items with equippable==false are always equipped\r\n    public equipped: boolean = false;\r\n    //List EffectGain for every Effect that comes from equipping and investing the item\r\n    //effects get eval'ed, so can use values like \"-characterService.get_Character().level\"\r\n    public effects: EffectGain[] = [];\r\n    //Amount of propertyRunes you can still apply\r\n    public get freePropertyRunes(): number {\r\n        //You can apply as many property runes as the level of your potency rune. Each rune with the Saggorak trait counts double.\r\n        let runes = this.potencyRune - this.propertyRunes.length - this.propertyRunes.filter(rune => rune.traits.includes(\"Saggorak\")).length;\r\n        let extraRune = this.material?.[0]?.extraRune || 0;\r\n        if (this.potencyRune == 3 && extraRune) {\r\n            for (let index = 0; index < extraRune; index++) {\r\n                runes++;\r\n            }\r\n        }\r\n        return runes;\r\n    };\r\n    //Name any common activity that becomes available when you equip and invest this item\r\n    public gainActivities: ActivityGain[] = [];\r\n    //If this is a container, list whether it has a limit and a bulk reduction.\r\n    public gainInventory: InventoryGain[] = [];\r\n    //What hint should show up for this item? This allows to be more concise and not use the entire description.\r\n    //If no hint is set, desc will show instead\r\n    public hints: Hint[] = [];\r\n    //Is the item currently invested - items without the Invested trait are always invested and don't count against the limit\r\n    public invested: boolean = false;\r\n    public material: Material[] = [];\r\n    //What kind of runes and material can be applied to this item? Some items that are not weapons can be modded like weapons, some weapons cannot be modded, etc.\r\n    public moddable: \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\" = \"\";\r\n    //Potency Rune level for weapons and armor\r\n    public potencyRune: number = 0;\r\n    //Property Runes for weapons and armor\r\n    public propertyRunes: Rune[] = [];\r\n    //Blade Ally Runes can be emulated on weapons and handwraps\r\n    public bladeAllyRunes: Rune[] = [];\r\n    //Resilient Rune level for armor\r\n    public resilientRune: number = 0;\r\n    //Is the name input visible in the inventory\r\n    public showName: boolean = false;\r\n    //Striking Rune level for weapons\r\n    public strikingRune: number = 0;\r\n    //Store any talismans attached to this item.\r\n    public talismans: Talisman[] = [];\r\n    get_Bulk() {\r\n        //Return either the bulk set by an oil, or the bulk of the item reduced by the material (no lower than L).\r\n        let bulk: string = this.bulk;\r\n        this.material.forEach(mat => {\r\n            if (parseInt(this.bulk) && parseInt(this.bulk) != 0) {\r\n                bulk = (parseInt(this.bulk) - mat.bulkReduction).toString();\r\n                if (parseInt(bulk) == 0 && parseInt(this.bulk) != 0) {\r\n                    bulk = \"L\";\r\n                }\r\n            }\r\n        })\r\n        let oilBulk: string = \"\";\r\n        this.oilsApplied.forEach(oil => {\r\n            if (oil.bulkEffect) {\r\n                oilBulk = oil.bulkEffect\r\n            }\r\n        });\r\n        bulk = (this.carryingBulk && !this.equipped) ? this.carryingBulk : bulk;\r\n        return oilBulk || bulk;\r\n    }\r\n    get_PotencyRune() {\r\n        //Return the highest value of your potency rune or any oils that emulate one\r\n        return Math.max(...this.oilsApplied.map(oil => oil.potencyEffect), this.potencyRune);\r\n    }\r\n    get_Potency(potency: number) {\r\n        if (potency > 0) {\r\n            return \"+\" + potency;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n    get_StrikingRune() {\r\n        //Return the highest value of your striking rune or any oils that emulate one\r\n        return Math.max(...this.oilsApplied.map(oil => oil.strikingEffect), this.strikingRune);\r\n    }\r\n    get_Striking(striking: number) {\r\n        switch (striking) {\r\n            case 0:\r\n                return \"\";\r\n            case 1:\r\n                return \"Striking\";\r\n            case 2:\r\n                return \"Greater Striking\";\r\n            case 3:\r\n                return \"Major Striking\";\r\n        }\r\n    }\r\n    get_ResilientRune() {\r\n        //Return the highest value of your striking rune or any oils that emulate one\r\n        return Math.max(...this.oilsApplied.map(oil => oil.resilientEffect), this.resilientRune);\r\n    }\r\n    get_Resilient(resilient: number) {\r\n        switch (resilient) {\r\n            case 0:\r\n                return \"\";\r\n            case 1:\r\n                return \"Resilient\";\r\n            case 2:\r\n                return \"Greater Resilient\";\r\n            case 3:\r\n                return \"Major Resilient\";\r\n        }\r\n    }\r\n    get_Name() {\r\n        if (this.displayName.length) {\r\n            return this.displayName;\r\n        } else {\r\n            let potency = this.get_Potency(this.get_PotencyRune());\r\n            let secondary: string = \"\";\r\n            let properties: string = \"\";\r\n            let material: string = \"\";\r\n            if (this.moddable == \"weapon\" || (this.moddable == \"-\" && this.type == \"weapons\")) {\r\n                secondary = this.get_Striking(this.get_StrikingRune());\r\n            } else if (this.moddable == \"armor\" || (this.moddable == \"-\" && this.type == \"armors\")) {\r\n                secondary = this.get_Resilient(this.get_ResilientRune());\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                let name: string = rune.name;\r\n                if (rune.name.includes(\"(Greater)\")) {\r\n                    name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\"(Greater)\"));\r\n                } else if (rune.name.includes(\", Greater)\")) {\r\n                    name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\", Greater)\")) + \")\";\r\n                }\r\n                properties += \" \" + name;\r\n            })\r\n            if (this[\"bladeAlly\"]) {\r\n                this.bladeAllyRunes.forEach(rune => {\r\n                    let name: string = rune.name;\r\n                    if (rune.name.includes(\"(Greater)\")) {\r\n                        name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\"(Greater)\"));\r\n                    } else if (rune.name.includes(\", Greater)\")) {\r\n                        name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\", Greater)\")) + \")\";\r\n                    }\r\n                    properties += \" \" + name;\r\n                })\r\n            }\r\n            this.material.forEach(mat => {\r\n                let name: string = mat.name;\r\n                if (mat.name.includes(\"(\")) {\r\n                    name = mat.name.substr(0, mat.name.indexOf(\" (\"));\r\n                }\r\n                material += \" \" + name;\r\n            })\r\n            return (potency + \" \" + (secondary + \" \" + (properties + \" \" + (material + \" \" + this.name).trim()).trim()).trim()).trim();\r\n        }\r\n    }\r\n    get_Price(itemsService: ItemsService) {\r\n        let price = this.price;\r\n        if (this.moddable == \"weapon\") {\r\n            if (this.potencyRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.find(rune => rune.potency == this.potencyRune).price;\r\n            }\r\n            if (this.strikingRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.find(rune => rune.striking == this.strikingRune).price;\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                let cleanRune = itemsService.get_CleanItems().weaponrunes.find(weaponRune => weaponRune.name.toLowerCase() == rune.name.toLowerCase());\r\n                if (cleanRune) {\r\n                    if (cleanRune.name == \"Speed\" && this.material?.[0]?.name.includes(\"Orichalcum\")) {\r\n                        price += Math.floor(cleanRune.price / 2);\r\n                    } else {\r\n                        price += cleanRune.price;\r\n                    }\r\n                }\r\n            })\r\n        } else if (this.moddable == \"armor\") {\r\n            if (this.potencyRune) {\r\n                price += itemsService.get_CleanItems().armorrunes.find(rune => rune.potency == this.potencyRune).price;\r\n            }\r\n            if (this.strikingRune) {\r\n                price += itemsService.get_CleanItems().armorrunes.find(rune => rune.resilient == this.strikingRune).price;\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                price += itemsService.get_CleanItems().armorrunes.find(armorRune => armorRune.name.toLowerCase() == rune.name.toLowerCase()).price;\r\n            })\r\n        }\r\n        this.material.forEach(mat => {\r\n            price += mat.price;\r\n            if (parseInt(this.bulk)) {\r\n                price += (mat.bulkPrice * parseInt(this.bulk));\r\n            }\r\n        })\r\n        this.talismans.forEach(talisman => {\r\n            price += itemsService.get_CleanItems().talismans.find(cleanTalisman => cleanTalisman.name.toLowerCase() == talisman.name.toLowerCase()).price;\r\n        })\r\n        return price;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Armor } from './Armor';\r\nimport { AC } from './AC';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DefenseService {\r\n\r\n    AC: AC = new AC();\r\n\r\n    constructor(\r\n        private effectsService: EffectsService,\r\n    ) { }\r\n\r\n    get_AC() {\r\n        return this.AC;\r\n    }\r\n\r\n    get_EquippedArmor(creature: Character|AnimalCompanion) {\r\n        let armor = creature.inventories[0].armors;\r\n        return armor.filter(armor => armor.equipped);\r\n    }\r\n\r\n    get_EquippedShield(creature: Character|AnimalCompanion) {\r\n        let shield = creature.inventories[0].shields;\r\n        return shield.filter(shield => shield.equipped && !shield.broken);\r\n    }\r\n\r\n}\r\n","import { Effect } from './Effect';\r\n\r\nexport class EffectCollection {\r\n    public all: Effect[] = [];\r\n    public relatives: Effect[] = [];\r\n    public absolutes: Effect[] = [];\r\n    public bonuses: Effect[] = [];\r\n    public penalties: Effect[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Condition } from './Condition';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { Item } from './Item';\r\nimport { ItemsService } from './items.service';\r\nimport { Equipment } from './Equipment';\r\nimport { EffectGain } from './EffectGain';\r\nimport * as json_conditions from '../assets/json/conditions';\r\nimport { Creature } from './Creature';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ConditionsService {\r\n\r\n    private conditions: Condition[] = [];\r\n    private loading: boolean = false;\r\n    private appliedConditions: ConditionGain[][] = [[], [], []];\r\n\r\n    constructor() { }\r\n\r\n    get_Conditions(name: string = \"\", type: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.conditions.filter(condition =>\r\n                (condition.name.toLowerCase() == name.toLowerCase() || name == \"\") &&\r\n                (condition.type.toLowerCase() == type.toLowerCase() || type == \"\")\r\n            );\r\n        } else {\r\n            return [new Condition()];\r\n        }\r\n    }\r\n\r\n    get_CalculatedIndex(creature: string) {\r\n        switch (creature) {\r\n            case \"Character\":\r\n                return 0;\r\n            case \"Companion\":\r\n                return 1;\r\n            case \"Familiar\":\r\n                return 2;\r\n        }\r\n    }\r\n\r\n    get_AppliedConditions(creature: Creature, characterService: CharacterService, activeConditions: ConditionGain[], readonly: boolean = false) {\r\n        let creatureIndex: number = this.get_CalculatedIndex(creature.type);\r\n        //Readonly skips any modifications and just returns the currently applied conditions. The same happens if the conditions haven't changed since the last run.\r\n        if (readonly || JSON.stringify(activeConditions) == JSON.stringify(this.appliedConditions[creatureIndex])) {\r\n            return activeConditions\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }).sort((a, b) => {\r\n                    if (a.duration > b.duration) {\r\n                        return 1;\r\n                    }\r\n                    if (a.duration < b.duration) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n        } else {\r\n            let overrides: string[] = [];\r\n            activeConditions.forEach(gain => {\r\n                //Set apply for all conditions first, then change it later.\r\n                gain.apply = true;\r\n                let originalCondition = this.get_Conditions(gain.name)?.[0];\r\n                if (originalCondition) {\r\n                    //Mark any conditions for deletion if their duration is 0, or if they can have a value and their value is 0 or lower\r\n                    //Only add overrides for the rest\r\n                    if ((originalCondition.hasValue && gain.value <= 0) || gain.duration == 0) {\r\n                        gain.value = -1;\r\n                    } else {\r\n                        overrides.push(...originalCondition.overrideConditions);\r\n                    }\r\n                }\r\n            });\r\n            activeConditions.forEach(gain => {\r\n                let condition = this.get_Conditions(gain.name)?.[0];\r\n                if (condition) {\r\n                    //Only process the conditions that haven't been marked for deletion.\r\n                    if (gain.value != -1) {\r\n                        if (overrides.includes(gain.name) || (overrides.includes(\"All\") && !condition.overrideConditions.includes(\"All\"))) {\r\n                            gain.apply = false;\r\n                        }\r\n                        //We compare this condition with all others that have the same name and deactivate it under certain circumstances\r\n                        //Are there any other conditions with this name and value that have not been deactivated yet?\r\n                        activeConditions.filter(otherGain =>\r\n                            (otherGain !== gain) &&\r\n                            (otherGain.name == gain.name) &&\r\n                            (otherGain.apply)\r\n                        ).forEach(otherGain => {\r\n                            //Unlimited conditions and higher value conditions remain, same persistent damage value conditions are exclusive.\r\n                            if (condition.unlimited) {\r\n                                gain.apply = true;\r\n                            } else if (otherGain.value + otherGain.heightened > gain.value + gain.heightened) {\r\n                                gain.apply = false;\r\n                            } else if (otherGain.choice > gain.choice) {\r\n                                gain.apply = false;\r\n                            } else if (\r\n                                otherGain.value == gain.value &&\r\n                                otherGain.heightened == gain.heightened\r\n                            ) {\r\n                                //If the value and choice is the same:\r\n                                //Deactivate this condition if the other one has a longer duration (and this one is not permanent), or is permanent (no matter if this one is)\r\n                                //The other condition will not be deactivated because it only gets compared to the ones that aren't deactivated yet\r\n                                if (otherGain.duration == -1 || (gain.duration >= 0 && otherGain.duration >= gain.duration)) {\r\n                                    gain.apply = false;\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            //Remove all conditions that were marked for deletion by setting its value to -1. We use while so we don't mess up the index and skip some.\r\n            while (activeConditions.some(gain => gain.value == -1)) {\r\n                characterService.remove_Condition(creature, activeConditions.find(gain => gain.value == -1), false);\r\n            }\r\n            this.appliedConditions[creatureIndex] = [];\r\n            this.appliedConditions[creatureIndex] = activeConditions.map(gain => Object.assign(new ConditionGain(), gain));\r\n            return activeConditions\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }).sort((a, b) => {\r\n                    if (a.duration > b.duration) {\r\n                        return 1;\r\n                    }\r\n                    if (a.duration < b.duration) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    process_Condition(creature: Creature, characterService: CharacterService, effectsService: EffectsService, itemsService: ItemsService, gain: ConditionGain, condition: Condition, taken: boolean, increaseWounded: boolean = true, ignoreEndsWithConditions: boolean = false) {\r\n\r\n        //Prepare components for refresh\r\n        if (condition.gainActivities.length) {\r\n            characterService.set_ToChange(creature.type, \"activities\");\r\n        }\r\n        condition.hints.forEach(hint => {\r\n            characterService.set_TagsToChange(creature.type, hint.showon);\r\n        });\r\n\r\n        if (taken) {\r\n            gain.maxDuration = gain.duration;\r\n        }\r\n\r\n        //Copy the condition's ActivityGains to the ConditionGain so we can track its duration, cooldown etc.\r\n        gain.gainActivities = condition.gainActivities.map(activityGain => Object.assign(new ActivityGain(), JSON.parse(JSON.stringify(activityGain))));\r\n        \r\n        if (!gain.endsWithConditions.length) {\r\n            gain.endsWithConditions = condition.endsWithConditions;\r\n        }\r\n\r\n        //One time effects\r\n        if (condition.onceEffects.length) {\r\n            if (taken) {\r\n                condition.onceEffects.forEach(effect => {\r\n                    let tempEffect = Object.assign(new EffectGain, JSON.parse(JSON.stringify(effect)));\r\n                    //Copy some data to allow calculations and tracking temporary HP.\r\n                    if (!tempEffect.source) {\r\n                        tempEffect.source = condition.name;\r\n                        tempEffect.sourceId = gain.id;\r\n                    }\r\n                    if (!tempEffect.spellSource) {\r\n                        tempEffect.spellSource = gain.spellSource;\r\n                    }\r\n                    characterService.process_OnceEffect(creature, tempEffect, gain.value, gain.heightened, gain.choice, gain.spellCastingAbility);\r\n                })\r\n            }\r\n        }\r\n\r\n        //One time effects when ending the condition\r\n        if (condition.endEffects.length) {\r\n            if (!taken) {\r\n                condition.endEffects.forEach(effect => {\r\n                    let tempEffect = Object.assign(new EffectGain, JSON.parse(JSON.stringify(effect)));\r\n                    //Copy some data to allow calculations and tracking temporary HP.\r\n                    if (!tempEffect.source) {\r\n                        tempEffect.source = condition.name;\r\n                        tempEffect.sourceId = gain.id;\r\n                    }\r\n                    if (!tempEffect.spellSource) {\r\n                        tempEffect.spellSource = gain.spellSource;\r\n                    }\r\n                    characterService.process_OnceEffect(creature, tempEffect, gain.value, gain.heightened, gain.choice, gain.spellCastingAbility);\r\n                })\r\n            }\r\n        }\r\n\r\n        //Gain other conditions if applicable\r\n        //They are removed when this is removed in characterService.remove_Condition().\r\n        if (taken) {\r\n            condition.gainConditions.filter(extraCondition => !extraCondition.conditionChoiceFilter || extraCondition.conditionChoiceFilter == gain.choice).forEach(extraCondition => {\r\n                let addCondition = Object.assign(new ConditionGain, JSON.parse(JSON.stringify(extraCondition)));\r\n                if (!addCondition.heightened) {\r\n                    addCondition.heightened = gain.heightened;\r\n                }\r\n                if (addCondition.lockedByParent) {\r\n                    addCondition.lockedByID = gain.id;\r\n                }\r\n                addCondition.source = gain.name;\r\n                addCondition.parentID = gain.id;\r\n                addCondition.apply = true;\r\n                characterService.add_Condition(creature, addCondition, false, gain);\r\n            })\r\n        }\r\n\r\n        //If this ends, remove conditions that have this listed in endsWithConditions\r\n        if (!taken && !ignoreEndsWithConditions) {\r\n            let conditionsToRemove: ConditionGain[] = characterService.get_AppliedConditions(creature, \"\", \"\", true)\r\n                .filter(gain => gain.endsWithConditions.includes(condition.name))\r\n                .map(gain => Object.assign(new ConditionGain, JSON.parse(JSON.stringify(gain))));\r\n            conditionsToRemove.forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false);\r\n            })\r\n        }\r\n\r\n        //Remove other conditions if applicable\r\n        if (taken) {\r\n            condition.endConditions.forEach(end => {\r\n                characterService.get_AppliedConditions(creature, end).forEach(gain => {\r\n                    characterService.remove_Condition(creature, gain, false);\r\n                })\r\n            })\r\n        }\r\n\r\n        //Conditions that start when this ends. This happens if there is a nextCondition value.\r\n        if (!taken && condition.nextCondition) {\r\n            let newGain: ConditionGain = new ConditionGain();\r\n            newGain.source = gain.source;\r\n            newGain.name = condition.nextCondition.name;\r\n            newGain.duration = condition.nextCondition.duration || -1;\r\n            characterService.add_Condition(creature, newGain, false);\r\n        }\r\n\r\n        //Gain Items\r\n        if (creature && creature.type != \"Familiar\") {\r\n            if (condition.gainItems.length) {\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n                if (taken) {\r\n                    gain.gainItems = condition.get_HeightenedItems(gain.heightened).map(itemGain => Object.assign(new ItemGain(), itemGain));\r\n                    gain.gainItems\r\n                        .filter(gainItem =>\r\n                            (\r\n                                !gainItem.conditionChoiceFilter ||\r\n                                gainItem.conditionChoiceFilter == gain.choice\r\n                            )\r\n                        ).forEach(gainItem => {\r\n                            this.add_ConditionItem((creature as AnimalCompanion | Character), characterService, itemsService, gainItem, condition);\r\n                        });\r\n                } else {\r\n                    gain.gainItems\r\n                        .filter(gainItem =>\r\n                            (\r\n                                !gainItem.conditionChoiceFilter ||\r\n                                gainItem.conditionChoiceFilter == gain.choice\r\n                            )\r\n                        ).forEach(gainItem => {\r\n                            this.remove_ConditionItem((creature as AnimalCompanion | Character), characterService, itemsService, gainItem);\r\n                        });\r\n                    gain.gainItems = [];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (condition.senses.length) {\r\n            characterService.set_ToChange(creature.type, \"skills\");\r\n        }\r\n\r\n        //Stuff that happens when your Dying value is raised or lowered beyond a limit.\r\n        if (gain.name == \"Dying\") {\r\n            if (taken) {\r\n                if (creature.health.dying(creature, characterService) >= creature.health.maxDying(creature, effectsService)) {\r\n                    if (characterService.get_AppliedConditions(creature, \"Dead\").length == 0) {\r\n                        characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Dead\", source: \"Dying value too high\" }), false)\r\n                    }\r\n                }\r\n            } else {\r\n                if (creature.health.dying(creature, characterService) == 0) {\r\n                    if (increaseWounded) {\r\n                        if (creature.health.wounded(creature, characterService) > 0) {\r\n                            characterService.get_AppliedConditions(creature, \"Wounded\").forEach(gain => {\r\n                                gain.value += 1\r\n                                gain.source = \"Recovered from Dying\";\r\n                            });\r\n                        } else {\r\n                            characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Wounded\", value: 1, source: \"Recovered from Dying\" }), false)\r\n                        }\r\n                    }\r\n                    if (creature.health.currentHP(creature, characterService, effectsService).result == 0) {\r\n                        if (characterService.get_AppliedConditions(creature, \"Unconscious\", \"0 Hit Points\").length == 0) {\r\n                            characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Unconscious\", source: \"0 Hit Points\" }), false)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n        }\r\n\r\n        //End the condition's activity if there is one and it is active.\r\n        if (!taken && gain.source) {\r\n            let activityGains = characterService.get_OwnedActivities(creature, creature.level, true).filter(activityGain => activityGain.active && activityGain.name == gain.source);\r\n            if (activityGains.length) {\r\n                let activityGain: ActivityGain;\r\n                //Try to find the activity with the same duration as the condition. If there isn't one, end the first one.\r\n                if (activityGains.length > 1) {\r\n                    activityGain = activityGains.find(activityGain => activityGain.duration == gain.duration)\r\n                }\r\n                if (!activityGain) {\r\n                    activityGain = activityGains[0];\r\n                }\r\n                let activity = characterService.activitiesService.get_Activities(activityGain.name)[0];\r\n                characterService.activitiesService.activate_Activity(creature, \"\", characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, activityGain, activity, false, false);\r\n            }\r\n        }\r\n\r\n        //End the condition's spell if there is one and it is active.\r\n        if (!taken && gain.spellGainID) {\r\n            let character = characterService.get_Character();\r\n            //If no other conditions have this spellgain's ID, find the spellgain and disable it.\r\n            if (!characterService.get_AppliedConditions(character).some(conditionGain => conditionGain !== gain && conditionGain.spellGainID == gain.spellGainID)) {\r\n                character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.id == gain.spellGainID && taken.gain.active).forEach(taken => {\r\n                    //Tick down the duration and the cooldown.\r\n                    let spell = characterService.spellsService.get_Spells(taken.gain.name)[0];\r\n                    if (spell) {\r\n                        characterService.spellsService.process_Spell(character, taken.gain.target, characterService, itemsService, characterService.conditionsService, null, taken.gain, spell, 0, false, false)\r\n                    }\r\n                    characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                });\r\n            }\r\n        }\r\n\r\n        //Update Health when Wounded changes.\r\n        if (condition.name == \"Wounded\") {\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n        }\r\n\r\n        //Update Attacks if attack restrictions apply.\r\n        if (condition.attackRestrictions.length) {\r\n            characterService.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n\r\n        //Update Defense if Defense conditions are changed.\r\n        if (gain.source == \"Defense\") {\r\n            characterService.set_ToChange(creature.type, \"defense\");\r\n        }\r\n\r\n        //Update Time and Health if the condition has an instant duration.\r\n        if (gain.duration == 1) {\r\n            characterService.set_ToChange(creature.type, \"time\");\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n        }\r\n\r\n    }\r\n\r\n    add_ConditionItem(creature: Character | AnimalCompanion, characterService: CharacterService, itemsService: ItemsService, gainItem: ItemGain, condition: Condition) {\r\n        let newItem: Item = itemsService.get_CleanItems()[gainItem.type].filter((item: Item) => item.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n        if (newItem) {\r\n            if (newItem.can_Stack()) {\r\n                //For consumables, add the appropriate amount and don't track them.\r\n                characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, false, false, false, gainItem.amount);\r\n            } else {\r\n                //For equipment, track the ID of the newly added item for removal.\r\n                let grantedItem = characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, false, false, true);\r\n                gainItem.id = grantedItem.id;\r\n                if (grantedItem.get_Name) {\r\n                    grantedItem.grantedBy = \"(Granted by \" + condition.name + \")\";\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    remove_ConditionItem(creature: Character | AnimalCompanion, characterService: CharacterService, itemsService: ItemsService, gainItem: ItemGain) {\r\n        if (itemsService.get_Items()[gainItem.type].filter((item: Item) => item.name.toLowerCase() == gainItem.name.toLowerCase())[0]?.can_Stack()) {\r\n            let items: Item[] = creature.inventories[0][gainItem.type].filter((item: Item) => item.name == gainItem.name);\r\n            //For consumables, remove the same amount as previously given. This is not ideal, but you can easily add more in the inventory.\r\n            if (items.length) {\r\n                characterService.drop_InventoryItem(creature, creature.inventories[0], items[0], false, true, true, gainItem.amount);\r\n            }\r\n        } else {\r\n            //For equipment, we have saved the ID and remove exactly that item.\r\n            let item: Item = creature.inventories[0][gainItem.type].find((item: Item) => item.id == gainItem.id);\r\n            if (item) {\r\n                if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                    //If a temporary container is destroyed, return all contained items to the main inventory.\r\n                    creature.inventories.filter(inv => inv.itemId == item.id).forEach(inv => {\r\n                        inv.allItems().forEach(invItem => {\r\n                            itemsService.move_InventoryItem(creature, invItem, creature.inventories[0], inv, characterService);\r\n                        });\r\n                    });\r\n                }\r\n                characterService.drop_InventoryItem(creature, creature.inventories[0], item, false, true, true);\r\n            }\r\n            gainItem.id = \"\";\r\n        }\r\n    }\r\n\r\n    tick_Conditions(creature: Creature, turns: number = 10, yourTurn: number) {\r\n        let activeConditions = creature.conditions;\r\n        while (turns > 0) {\r\n            let activeConditions = creature.conditions;\r\n            activeConditions = activeConditions.sort(function (a, b) {\r\n                // Sort conditions by the length of either their nextstage or their duration, whichever is shorter.\r\n                let compareA: number[] = [];\r\n                if (a.nextStage > 0) { compareA.push(a.nextStage); }\r\n                if (a.duration > 0) { compareA.push(a.duration); }\r\n                let compareB: number[] = [];\r\n                if (b.nextStage > 0) { compareB.push(b.nextStage); }\r\n                if (b.duration > 0) { compareB.push(b.duration); }\r\n                if (!compareA.length) {\r\n                    return 1\r\n                } else if (!compareB.length) {\r\n                    return -1\r\n                } else {\r\n                    return Math.min(...compareA) - Math.min(...compareB)\r\n                }\r\n            });\r\n            if (activeConditions.some(gain => (gain.duration > 0 && gain.choice != \"Onset\") || gain.nextStage > 0) || activeConditions.some(gain => gain.decreasingValue)) {\r\n                //Get the first condition that will run out\r\n                let first: number;\r\n                //If any condition has a decreasing Value per round, step 5 (to the end of the Turn) if it is your Turn or 10 (1 turn) at most\r\n                //Otherwise find the next step from either the duration or the nextStage of the first gain of the sorted list.\r\n                if (activeConditions.some(gain => gain.decreasingValue)) {\r\n                    if (yourTurn == 5) {\r\n                        first = 5;\r\n                    } else {\r\n                        first = 10;\r\n                    }\r\n                } else {\r\n                    if (activeConditions.some(gain => (gain.duration > 0 && gain.choice != \"Onset\") || gain.nextStage > 0)) {\r\n                        let firstObject: ConditionGain = activeConditions.filter(gain => gain.duration > 0 || gain.nextStage > 0)[0]\r\n                        let durations: number[] = [];\r\n                        if (firstObject.duration > 0 && firstObject.choice != \"Onset\") { durations.push(firstObject.duration); }\r\n                        if (firstObject.nextStage > 0) { durations.push(firstObject.nextStage); }\r\n                        first = Math.min(...durations);\r\n                    }\r\n                }\r\n                //Either to the next condition to run out or decrease their value or step the given turns, whichever comes first\r\n                let step = Math.min(first, turns);\r\n                activeConditions.filter(gain => gain.duration > 0 && gain.choice != \"Onset\").forEach(gain => {\r\n                    gain.duration -= step;\r\n                });\r\n                activeConditions.filter(gain => gain.nextStage > 0).forEach(gain => {\r\n                    gain.nextStage -= step;\r\n                    if (gain.nextStage <= 0) {\r\n                        gain.nextStage = -1;\r\n                    }\r\n                });\r\n                //If any conditions have their value decreasing, do this now.\r\n                if ((yourTurn == 5 && step == 5) || (yourTurn == 0 && step == 10)) {\r\n                    activeConditions.filter(gain => gain.decreasingValue).forEach(gain => {\r\n                        gain.value--;\r\n                    });\r\n                }\r\n                turns -= step;\r\n            } else {\r\n                turns = 0;\r\n            }\r\n        }\r\n        creature.conditions = activeConditions;\r\n    }\r\n\r\n    rest(creature: Creature, characterService: CharacterService) {\r\n        creature.conditions.filter(gain => gain.duration == -2).forEach(gain => {\r\n            gain.duration = 0;\r\n        });\r\n\r\n        //After resting with full HP, the Wounded condition is removed.\r\n        if (characterService.get_Health(creature).damage == 0) {\r\n            creature.conditions.filter(gain => gain.name == \"Wounded\").forEach(gain => characterService.remove_Condition(creature, gain, false));\r\n        }\r\n        //If Verdant Metamorphosis is active, remove the following non-permanent conditions after resting: Drained, Enfeebled, Clumsy, Stupefied and all poisons and diseases of 19th level or lower. \r\n        if (characterService.effectsService.get_EffectsOnThis(creature, \"Verdant Metamorphosis\").length) {\r\n            creature.conditions.filter(gain => gain.duration != -1 && !gain.lockedByParent && [\"Drained\", \"Enfeebled\", \"Clumsy\", \"Stupefied\"].includes(gain.name)).forEach(gain => { gain.value = -1 })\r\n            creature.conditions.filter(gain => gain.duration != -1 && !gain.lockedByParent && gain.value != -1 && this.get_Conditions(gain.name)?.[0]?.type == \"afflictions\").forEach(gain => {\r\n                if (!characterService.itemsService.get_CleanItems().alchemicalpoisons.some(poison => gain.name.includes(poison.name) && poison.level > 19)) {\r\n                    gain.value = -1;\r\n                }\r\n            })\r\n        }\r\n        //After resting, the Fatigued condition is removed (unless locked by its parent), and the value of Doomed and Drained is reduced (unless locked by its parent).\r\n        creature.conditions.filter(gain => gain.name == \"Fatigued\" && !gain.valueLockedByParent).forEach(gain => characterService.remove_Condition(creature, gain), false);\r\n        creature.conditions.filter(gain => gain.name == \"Doomed\" && !gain.valueLockedByParent && !(gain.lockedByParent && gain.value == 1)).forEach(gain => { gain.value -= 1 });\r\n        creature.conditions.filter(gain => gain.name == \"Drained\" && !gain.valueLockedByParent && !(gain.lockedByParent && gain.value == 1)).forEach(gain => {\r\n            gain.value -= 1;\r\n            if (gain.apply) {\r\n                creature.health.damage += creature.level;\r\n            }\r\n            if (\r\n                //If you have Fast Recovery or have activated the effect of Forge-Day's Rest, reduce the value by 2 instead of 1.\r\n                (\r\n                    creature.type == \"Character\" &&\r\n                    (creature as Character).get_FeatsTaken(1, creature.level, \"Fast Recovery\").length\r\n                ) ||\r\n                characterService.featsService.get_Feats([], \"Forge-Day's Rest\")?.[0]?.hints.some(hint => hint.active)\r\n            ) {\r\n                gain.value -= 1;\r\n                if (gain.apply) {\r\n                    creature.health.damage += creature.level;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    refocus(creature: Creature, characterService: CharacterService) {\r\n        creature.conditions.filter(gain => gain.duration == -3).forEach(gain => {\r\n            gain.duration = 0;\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.conditions.length) {\r\n            this.loading = true;\r\n            this.load_Conditions();\r\n            this.loading = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.conditions.forEach(condition => {\r\n                condition.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Conditions() {\r\n        this.conditions = [];\r\n        Object.keys(json_conditions).forEach(key => {\r\n            this.conditions.push(...json_conditions[key].map(obj => Object.assign(new Condition(), obj)));\r\n        });\r\n        //Blank choices are saved with \"name\":\"-\" for easier managing; These need to be blanked here.\r\n        this.conditions.forEach(condition => {\r\n            condition.choices.forEach(choice => {\r\n                if (choice.name == \"-\") {\r\n                    choice.name = \"\";\r\n                }\r\n            })\r\n            if (condition.choices.length && !condition.choice) {\r\n                condition.choice = condition.choices[0].name\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { AbilityBoost } from './AbilityBoost';\r\nimport { Character } from './Character';\r\n\r\nexport class AbilityChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    //How many of the available ability boosts are lost if you rolled your own ability scores?\r\n    public baseValuesLost: number = 0;\r\n    public boosts: AbilityBoost[] = [];\r\n    public filter: string[] = [];\r\n    public id: string = \"\";\r\n    public infoOnly: boolean = false;\r\n    public source: string = \"\";\r\n    maxAvailable(character: Character) {\r\n        let lost = 0;\r\n        if (character.baseValues.length > 0) {\r\n            lost = this.baseValuesLost\r\n        }\r\n        return this.available - lost;\r\n    }\r\n}","<div class=\"newrow lower\" *ngIf=\"spell\">\r\n    <div class=\"newrow left-aligned\">\r\n        <cite class=\"trait\" *ngFor=\"let trait of spell.traits; trackBy:trackByIndex;\" [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n        <app-tags [creature]=\"'Character'\" [objectName]=\"spell.name\" [showTraits]=true [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n    </div>\r\n    <div class=\"list-item lower newrow problem\" *ngIf=\"spell.inputRequired\">\r\n        <strong>Player input required:</strong>\r\n        <div class=\"newrow left-aligned\">\r\n            <p *ngFor=\"let inputRequired of spell.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                {{inputRequired}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.sourceBook\">\r\n        <span>\r\n            <strong>Source</strong>\r\n            <i>&nbsp;{{spell.sourceBook}}</i>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.PFSnote\">\r\n        <span>\r\n            <strong>PFS Note</strong>\r\n            <i>&nbsp;{{spell.PFSnote}}</i>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.traditions && !spell.traditions.includes('Focus')\">\r\n        <span>\r\n            <strong>Traditions</strong>\r\n            {{spell.traditions.join(', ')}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.castType || spell.cost\">\r\n        <span *ngIf=\"spell.castType\">\r\n            <strong>Cast</strong>\r\n            <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons><span>{{spell.castType}}&nbsp;</span>\r\n        </span>\r\n        <span *ngIf=\"spell.cost\">\r\n            <strong>Cost</strong>\r\n            {{spell.cost}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.trigger\">\r\n        <span>\r\n            <strong>Trigger</strong>\r\n            {{spell.trigger}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.range || spell.area || spell.targets\">\r\n        <span *ngIf=\"spell.range\">\r\n            <strong>Range</strong>\r\n            {{spell.range}}&nbsp;\r\n        </span>\r\n        <span *ngIf=\"spell.area\">\r\n            <strong>Area</strong>\r\n            {{spell.area}}&nbsp;\r\n        </span>\r\n        <span *ngIf=\"spell.targets\">\r\n            <strong>Targets</strong>\r\n            {{spell.targets}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.savingThrow || spell.duration\">\r\n        <span *ngIf=\"spell.savingThrow\">\r\n            <strong>Saving Throw</strong>\r\n            {{spell.savingThrow}}&nbsp;\r\n        </span>\r\n        <span *ngIf=\"spell.duration\">\r\n            <strong>Duration</strong>\r\n            {{spell.duration}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngFor=\"let desc of get_Heightened(spell.desc).split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.critsuccess\">\r\n        <span>\r\n            <strong>Critical Success&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.critsuccess)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.success\">\r\n        <span>\r\n            <strong>Success&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.success)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.failure\">\r\n        <span>\r\n            <strong>Failure&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.failure)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.critfailure\">\r\n        <span>\r\n            <strong>Critical Failure&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.critfailure)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngFor=\"let heightened of spell.heightened; trackBy:trackByIndex;\">\r\n        <span>\r\n            <strong>Heightened {{heightened.level}}</strong>\r\n            {{heightened.desc}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngFor=\"let feat of get_FeatsShowingOn(spell.name); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">{{feat.name}}</header>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"feat.traits.lenght\">\r\n            <cite class=\"trait\" *ngFor=\"let trait of feat.traits; trackBy:trackByIndex;\" [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngFor=\"let desc of feat.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n            <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let shownSpellSet of spell.showSpells; trackBy:trackByIndex;\">\r\n        <div *ngFor=\"let shownSpell of get_Spells(shownSpellSet.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader left-aligned\">{{shownSpell.name}}\r\n                <app-actionIcons [actionString]=\"shownSpell.actions\">\r\n                </app-actionIcons> {{shownSpell.castType.toString()}}</header>\r\n            <app-spell [spell]=shownSpell [spellLevel]=\"shownSpellSet.level || spellLevel || 0\"></app-spell>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Spell } from '../Spell';\r\nimport { TraitsService } from '../traits.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spell',\r\n    templateUrl: './spell.component.html',\r\n    styleUrls: ['./spell.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellComponent implements OnInit {\r\n\r\n    @Input()\r\n    spell: Spell\r\n    @Input()\r\n    spellLevel: number;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    get_Heightened(desc: string) {\r\n        let levelNumber = this.spellLevel;\r\n        if (!levelNumber || levelNumber == -1) {\r\n            levelNumber = this.characterService.get_Character().get_SpellLevel();\r\n        } else if (this.spell.levelreq && levelNumber < this.spell.levelreq) {\r\n            levelNumber = this.spell.levelreq;\r\n        }\r\n        return this.spell.get_Heightened(desc, levelNumber)\r\n    }\r\n\r\n    get_FeatsShowingOn(spellName: string) {\r\n        return this.characterService.get_FeatsShowingOn(spellName);\r\n    }\r\n\r\n    get_Spells(name: string) {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.characterService.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"individualspells\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == \"character\" && \r\n                    (\r\n                        view.target.toLowerCase() == \"all\" ||\r\n                        (view.target.toLowerCase() == \"individualspells\" && [this.spell.name.toLowerCase(), \"all\"].includes(view.subtarget.toLowerCase()))\r\n                    )) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div id=\"crafting\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleCraftingMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"get_CraftingMenuState()=='in'\">\r\n        <div class=\"list-item\">\r\n            <strong>Find (in Name, Description or Traits)</strong>\r\n            <span>\r\n                <input type=text [(ngModel)]=\"wordFilter\" (ngModelChange)=check_Filter() />\r\n                <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>Sort by</strong>\r\n            <select [(ngModel)]=\"sorting\">\r\n                <option *ngFor=\"let sort of ['Name','Level']\" [ngValue]=\"sort.toLowerCase()\">\r\n                    {{sort}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"itembox-inner\">\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <div class=\"value\">{{get_Character().cash[0]}}</div>\r\n                    <strong>Gold</strong>\r\n                    <div class=\"value\">{{get_Character().cash[1]}}</div>\r\n                    <strong>Silver</strong>\r\n                    <div class=\"value\">{{get_Character().cash[2]}}</div>\r\n                    <strong>Copper</strong>\r\n                    <div class=\"value center-aligned\">{{get_Character().cash[3]}}</div>\r\n                </div>\r\n            </div>\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashP\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Gold</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashG\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Silver</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashS\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Copper</strong>\r\n                    <input class=\"number4 center-aligned\" type=\"number\" [(ngModel)]=\"cashC\"\r\n                        (keypress)=\"numbersOnly($event)\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span>\r\n                        <button (click)=\"change_Cash(1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\">Gain</button>\r\n                    </span>\r\n                    <span>\r\n                        <button (click)=\"change_Cash(-1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\"\r\n                            [disabled]=\"!have_Funds()\">Spend</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngFor=\"let items of [get_Items()]; trackBy:trackByIndex;\">\r\n                <ng-container *ngIf=\"have_Feat('Snare Specialist')\">\r\n                    <ng-container *ngFor=\"let preparations of [get_SnareSpecialistPreparations()]\">\r\n                        <header class=\"sectionHeader\">Snare Specialist</header>\r\n                        <div class=\"list-item\">\r\n                            You can prepare {{preparations.available - preparations.prepared}} of\r\n                            {{preparations.available}} snares for quick deployment.\r\n                        </div>\r\n                        <ng-container *ngFor=\"let snares of [get_VisibleItems(items.snares)]; trackBy:trackByIndex;\">\r\n                            <ng-container *ngFor=\"let listID of ['snarespecialist']; trackBy:trackByIndex;\">\r\n                                <button class=\"list-item\" [ngClass]=\"{'invisible':!snares.length}\"\r\n                                    (click)=\"toggle_List(listID)\">\r\n                                    <header class=\"sectionHeader\">Snares</header>\r\n                                </button>\r\n                                <div class=\"list-item\" [ngClass]=\"{'invisible':!snares.length}\"\r\n                                    *ngIf=\"get_ShowList()==listID||get_ShowList()=='All'\">\r\n                                    <ng-container *ngFor=\"let item of snares; trackBy:trackByIndex;\">\r\n                                        <ng-container *ngFor=\"let prepared of [get_PreparedForQuickCrafting(item)]\">\r\n                                            <div class=\"list-item\"\r\n                                                *ngFor=\"let inventoryID of [listID+item.id]; trackBy:trackByIndex;\">\r\n                                                <button class=\"newrow sublist-toggle\"\r\n                                                    [ngClass]=\"{'fancy-button':prepared}\"\r\n                                                    (click)=\"toggle_Item(inventoryID)\">\r\n                                                    <span>{{prepared}}\r\n                                                        {{(item.get_Name) ? item.get_Name() : item.name}}</span>\r\n                                                    <span>{{(item.level) ? \"Level \"+item.level :\r\n                                                        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"}}</span>\r\n                                                </button>\r\n                                                <div class=\"list-item sublist lower\" [ngClass]=\"{'fancy-list':prepared}\"\r\n                                                    *ngIf=\" get_ShowItem()==inventoryID\">\r\n                                                    <span>\r\n                                                        <button class=\"center-aligned\"\r\n                                                            (click)=\"on_PrepareForQuickCrafting(item, -1)\"\r\n                                                            [disabled]=\"!prepared\">\r\n                                                            -\r\n                                                        </button>\r\n                                                        <button class=\"center-aligned\"\r\n                                                            (click)=\"on_PrepareForQuickCrafting(item, 1)\"\r\n                                                            [disabled]=\"preparations.available <= preparations.prepared\">\r\n                                                            +\r\n                                                        </button>\r\n                                                        Prepare for quick deployment\r\n                                                    </span>\r\n                                                    <app-item [item]=item [itemStore]=true></app-item>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <header class=\"sectionHeader\">Craft Items</header>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Crafting'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                <div class=\"list-item\">\r\n                    <strong>Crafting costs</strong><br />\r\n                    The material cost of Crafting an item can vary depending on your success using the Craft activity.\r\n                    If you Craft an item in any way that requires you to spend materials, manually spend the appropriate\r\n                    amount of currency and any required items.\r\n                </div>\r\n                <div class=\"list-item\">\r\n                    <strong>Crafting costs</strong><br />\r\n                    When available, a shoddy item usually costs half the Price of a standard item, though you can never\r\n                    sell one in any case. Attacks and checks involving a shoddy item take a –2 item penalty. This\r\n                    penalty also applies to any DCs that a shoddy item applies to (such as AC, for shoddy armor). A\r\n                    shoddy suit of armor also worsens the armor's check penalty by 2. A shoddy item's Hit Points and\r\n                    Broken Threshold are each half that of a normal item of its type.\r\n                </div>\r\n                <ng-container *ngFor=\"let itemSet of items.names; let index = index; trackBy:trackByIndex;\">\r\n                    <ng-container *ngFor=\"let listID of [(index*1000+1000)]; trackBy:trackByIndex;\">\r\n                        <button class=\"list-item\"\r\n                            [ngStyle]=\"{'display':!get_VisibleItems(items[itemSet.key]).length ? 'none' : 'flex' }\"\r\n                            (click)=\"toggle_List(listID)\">\r\n                            <header class=\"sectionHeader\">{{itemSet.name}}</header>\r\n                        </button>\r\n                        <div class=\"list-item\"\r\n                            [ngStyle]=\"{'display':!get_VisibleItems(items[itemSet.key]).length ? 'none' : 'flex' }\"\r\n                            *ngIf=\"get_ShowList()==listID||get_ShowList()=='All'\">\r\n                            <ng-container\r\n                                *ngFor=\"let item of get_VisibleItems(items[itemSet.key]); trackBy:trackByIndex;\">\r\n                                <div class=\"list-item\"\r\n                                    *ngFor=\"let inventoryID of [listID+item.id]; trackBy:trackByIndex;\">\r\n                                    <button class=\"newrow sublist-toggle\" (click)=\"toggle_Item(inventoryID)\">\r\n                                        <span>{{(item.get_Name) ? item.get_Name() : item.name}}</span>\r\n                                        <span *ngIf=\"item.type == 'armors'\">{{([\"Light Barding\",\"Heavy\r\n                                            Barding\"].includes(item.prof)) ? item.prof : item.prof.split(\" \")[0]}}\r\n                                            {{item.group}}\r\n                                            {{(item.type==\"armors\" && (![\"Unarmored Defense\",\"Light Barding\",\"Heavy\r\n                                            Barding\"].includes(item.prof))) ? \"Armor\" : \"\"}}</span>\r\n                                        <span *ngIf=\"item.type == 'weapons'\">{{(item.prof == 'Unarmed') ? item.prof :\r\n                                            item.prof.substr(0, item.prof.length - 8)}}\r\n                                            {{item.group}}</span>\r\n                                        <span>{{(item.level) ? \"Level \"+item.level :\r\n                                            \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"}}</span>\r\n                                    </button>\r\n                                    <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                        <ng-container>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"grant_Item(item)\"\r\n                                                [ngbTooltip]=\"cannot_Craft(item).join('\\n')\"\r\n                                                [disabled]=\"cannot_Craft(item).length\">\r\n                                                Craft using Craft activity\r\n                                            </button>\r\n                                        </ng-container>\r\n                                        <app-itemMaterial class=\"newrow\" [item]=item [craftingStation]=\"true\">\r\n                                        </app-itemMaterial>\r\n                                        <div class=\"newrow list-item\" *ngIf=\"item.baseType=='Equipment'\">\r\n                                            <span>\r\n                                                <input id=\"{{item.id}}shoddy\" type=\"checkbox\" [(ngModel)]=\"item.shoddy\">\r\n                                                <label for=\"{{item.id}}shoddy\">Shoddy</label>\r\n                                            </span>\r\n                                        </div>\r\n                                        <app-item [item]=item [itemStore]=true></app-item>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ItemsService } from '../items.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { Item } from '../Item';\r\nimport { Character } from '../Character';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-crafting',\r\n    templateUrl: './crafting.component.html',\r\n    styleUrls: ['./crafting.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CraftingComponent implements OnInit {\r\n\r\n    private showList: string = \"\";\r\n    private showItem: number = 0;\r\n    public id: number = 0;\r\n    public wordFilter: string = \"\";\r\n    public sorting: \"level\"|\"name\" = \"level\";\r\n    public creature: string = \"Character\";\r\n    public cashP: number = 0;\r\n    public cashG: number = 0;\r\n    public cashS: number = 0;\r\n    public cashC: number = 0;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private itemsService: ItemsService,\r\n        private characterService: CharacterService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(type: string) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    toggle_Item(id: number) {\r\n        if (this.showItem == id) {\r\n            this.showItem = 0;\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.characterService.get_CraftingMenuState();\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList == \"All\") {\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = \"All\";\r\n        }\r\n    }\r\n\r\n    toggleCraftingMenu() {\r\n        this.characterService.toggle_Menu(\"crafting\");\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    have_Funds(sum: number = 0) {\r\n        let character = this.characterService.get_Character();\r\n        if (!sum) {\r\n            sum = (this.cashP * 1000) + (this.cashG * 100) + (this.cashS * 10) + (this.cashC);\r\n        }\r\n        let funds = (character.cash[0] * 1000) + (character.cash[1] * 100) + (character.cash[2] * 10) + (character.cash[3]);\r\n        if (sum <= funds) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number = 0, changeafter: boolean = false) {\r\n        this.characterService.change_Cash(multiplier, sum, this.cashP, this.cashG, this.cashS, this.cashC);\r\n        if (changeafter) {\r\n            this.characterService.set_Changed(\"inventory\");\r\n        }\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_CraftingItems();\r\n    }\r\n\r\n    get_InventoryItemSets(type: string) {\r\n        return this.characterService.get_Character().inventories.map(inventory => inventory[type]);\r\n    }\r\n\r\n    get_VisibleItems(items: Item[]) {\r\n        let have_CraftingBook = this.get_Character().inventories.find(inv => inv.adventuringgear.find(gear => gear.name == \"Basic Crafter's Book\"));\r\n        return items.filter((item: Item) =>\r\n            (\r\n                this.get_FormulasLearned(item.id).length ||\r\n                (\r\n                    item.level == 0 && have_CraftingBook\r\n                )\r\n            ) &&\r\n            !item.hide &&\r\n            (\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        item.name.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.desc.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.traits.filter(trait => trait.toLowerCase().includes(this.wordFilter.toLowerCase())).length\r\n                    )\r\n                )\r\n            )\r\n        ).sort((a, b) => {\r\n            if (a[this.sorting] > b[this.sorting]) {\r\n                return 1;\r\n            }\r\n            if (a[this.sorting] < b[this.sorting]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    cannot_Craft(item: Item) {\r\n        //Return any reasons why you cannot craft an item.\r\n        let character: Character = this.get_Character();\r\n        let reasons: string[] = [];\r\n        if (item.traits.includes(\"Alchemical\") && !character.get_FeatsTaken(1, character.level, \"Alchemical Crafting\").length) {\r\n            reasons.push(\"You need the Alchemical Crafting skill feat to create alchemical items.\")\r\n        }\r\n        if (item.traits.includes(\"Magical\") && !character.get_FeatsTaken(1, character.level, \"Magical Crafting\").length) {\r\n            reasons.push(\"You need the Magical Crafting skill feat to create magic items.\")\r\n        }\r\n        if (item.traits.includes(\"Snare\") && !character.get_FeatsTaken(1, character.level, \"Snare Crafting\").length) {\r\n            reasons.push(\"You need the Snare Crafting skill feat to create snares.\")\r\n        }\r\n        if (item.level > character.level) {\r\n            reasons.push(\"The item to craft must be your level or lower.\")\r\n        }\r\n        if (item.level >= 16 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 8) {\r\n            reasons.push(\"You must be legendary in Crafting to craft items of 16th level or higher.\")\r\n        } else if (item.level >= 9 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 6) {\r\n            reasons.push(\"You must be a master in Crafting to craft items of 9th level or higher.\")\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    grant_Item(item: Item) {\r\n        let amount = 1;\r\n        if (item[\"stack\"]) {\r\n            amount = item[\"stack\"];\r\n        }\r\n        item.crafted = true;\r\n        this.characterService.grant_InventoryItem(this.characterService.get_Character(), this.characterService.get_Character().inventories[0], item, false, true, true, amount);\r\n    }\r\n\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.get_Character().get_FormulasLearned(id, source);\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length;\r\n    }\r\n\r\n    get_SnareSpecialistPreparations() {\r\n        if (this.have_Feat(\"Snare Specialist\")) {\r\n            let prepared: number = this.get_FormulasLearned().reduce((sum, current) => sum + current.snareSpecialistPrepared, 0);\r\n            let available = 0;\r\n            let character = this.get_Character();\r\n            let crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n            if (crafting >= 4) {\r\n                available += 4;\r\n            }\r\n            if (crafting >= 6) {\r\n                available += 2;\r\n            }\r\n            if (crafting >= 8) {\r\n                available += 2;\r\n            }\r\n            if (this.have_Feat(\"Ubiquitous Snares\")) {\r\n                available *= 2;\r\n            }\r\n            return { available: available, prepared: prepared };\r\n        }\r\n    }\r\n\r\n    on_PrepareForQuickCrafting(item: Item, amount: number) {\r\n        if (this.get_FormulasLearned(item.id).length) {\r\n            this.get_FormulasLearned(item.id)[0].snareSpecialistPrepared += amount;\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        //this.characterService.set_ToChange(\"Character\", \"crafting\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_PreparedForQuickCrafting(item: Item) {\r\n        if (this.get_FormulasLearned(item.id).length) {\r\n            return this.get_FormulasLearned(item.id)[0].snareSpecialistPrepared;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.itemsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"crafting\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"crafting\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n}\r\n","import { FeatTaken } from './FeatTaken';\r\n\r\nexport class FeatChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    public feats: FeatTaken[] = [];\r\n    public filter: string[] = [];\r\n    public id: string = \"\";\r\n    //If insertLevel is set, this featChoice is placed at the designated class level when granted by a feat.\r\n    // I.e. if a feat contains a FeatChoice with insertLevel = 5, the choice is added to level 5 regardless of when the feat was taken.\r\n    public insertLevel: number = 0;\r\n    //If insertClass is set, this featChoice is only granted by a feat if the character class name matches this name.\r\n    // This is especially useful for class choices (hunter's edge, rogue racket, bloodline etc.) that don't give certain benefits when multiclassing.\r\n    public insertClass: string = \"\";\r\n    public level: number = 0;\r\n    //If showOnSheet is set, this choice is intended to be made on the character sheet instead of while building the character.\r\n    // This is relevant for features like Combat Flexibility.\r\n    public showOnSheet: boolean = false;\r\n    //If showOnCurrentLevel is set, this choice is always shown at the current character level. This allows it to use the current level for all its requirements.\r\n    // This is relevant for feats like Raging Intimidation.\r\n    public showOnCurrentLevel: boolean = false;\r\n    public source: string = \"\";\r\n    //For special choices, we don't really use true feats, but make choices that can best be represented by the extensive feat structure.\r\n    //In this case, we don't go looking for feats with a certain trait, but rely completely on the filter.\r\n    //The choice's type will be the choice title in the character configuration.\r\n    public specialChoice: boolean = false;\r\n    //Feats may give feat choices with a level attribute of \"half your level\", which can be formulated here (e.g. as \"level.number / 2\") and will be evaluated while taking the feat.\r\n    //It will always be rounded down.\r\n    public dynamicLevel: string = \"\";\r\n    //You can add requirements to the ignore list. These get evaluated and must result in: \"levelreq\", \"abilityreq\", \"featreq\", \"skillreq\", \"heritagereq\", \"dedicationlimit\" to do anything.\r\n    public ignoreRequirements: string[] = [];\r\n    public type: string = \"\";\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { Feat } from '../Feat';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Effect } from '../Effect';\r\nimport { Condition } from '../Condition';\r\nimport { CharacterService } from '../character.service';\r\n\r\n@Component({\r\n    selector: 'app-gridIcon',\r\n    templateUrl: './gridIcon.component.html',\r\n    styleUrls: ['./gridIcon.component.scss'],\r\n    providers: [NgbPopoverConfig] // add NgbPopoverConfig to the component providers\r\n})\r\nexport class GridIconComponent implements OnInit {\r\n\r\n    @Input()\r\n    title: string = \"\";\r\n    @Input()\r\n    detail: string = \"\";\r\n    @Input()\r\n    subTitle: string = \"\";\r\n    @Input()\r\n    superTitle: string = \"\";\r\n    @Input()\r\n    type: \"\" | \"Condition\" | \"Feat\" = \"\";\r\n    @Input()\r\n    desc: string = \"\";\r\n    @Input()\r\n    shortDesc: string = \"\";\r\n    @Input()\r\n    condition: ConditionGain = null;\r\n    @Input()\r\n    originalCondition: Condition = null;\r\n    @Input()\r\n    feat: Feat = null;\r\n    @Input()\r\n    effect: Effect = null;\r\n\r\n    constructor(\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"click\";\r\n        tooltipConfig.placement = \"auto\";\r\n        //For touch compatibility, the tooltip should open on hover, but not on tap. Because a tap counts as both hover and click,\r\n        // we allow both and have a delay of 0 so that the tooltip opens on hover and immediately closes again on click.\r\n        tooltipConfig.openDelay = 0;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_IconSubTitle() {\r\n        if (this.condition?.duration || this.effect?.duration) {\r\n            let duration = this.condition?.duration || this.effect?.duration || 0;\r\n            if (duration < 10) {\r\n                switch (duration) {\r\n                    case -3:\r\n                        return \"<i class='bi-eye-fill'></i>\"\r\n                    case -2:\r\n                        return \"<i class='bi-sunrise-fill'></i>\"\r\n                    case -1:\r\n                        return \"<i class='bi-arrow-repeat'></i>\"\r\n                    case 0:\r\n                        return \"\";\r\n                    case 1:\r\n                        return \"<i class='bi-exclamation-diamond-fill'></i>\"\r\n                    case 5:\r\n                        return \"<i class='bi-play-fill'></i>\"\r\n                }\r\n            }\r\n        }\r\n        return this.subTitle;\r\n    }\r\n\r\n    get_IsOneWordTitle() {\r\n        let title: string = this.title;\r\n        if (this.feat) {\r\n            if (this.feat.subType) {\r\n                title = this.title || this.feat.superType;\r\n            } else {\r\n                title = this.title || this.feat.name;\r\n            }\r\n        } else if (this.condition) {\r\n            title = this.title || this.condition.name;\r\n        } else if (this.effect) {\r\n            title = this.title || this.effect.target;\r\n        }\r\n        return !title.includes(\" \");\r\n    }\r\n\r\n    get_IconTitle() {\r\n        let iconTitle: string = this.title;\r\n        if (this.feat) {\r\n            if (this.feat.subType) {\r\n                iconTitle = this.title || this.feat.superType;\r\n            } else {\r\n                iconTitle = this.title || this.feat.name;\r\n            }\r\n        } else if (this.condition) {\r\n            iconTitle = this.title || this.condition.name;\r\n        } else if (this.effect) {\r\n            iconTitle = this.title || this.effect.target;\r\n        }\r\n        if (iconTitle) {\r\n            if (!iconTitle.includes(\" \")) {\r\n                //If the title does not contain spaces, and is not just a number, keep only letters and return the first 3 letters.\r\n                //Return numbers unchanged\r\n                if (isNaN(parseInt(iconTitle))) {\r\n                    iconTitle = iconTitle.replace(/[^A-Z]/gi, '').substr(0, 3);\r\n                }\r\n            } else if (iconTitle.match(\".*[A-Z].*\")) {\r\n                //If the title has spaces and contains capital letters, keep only capital letters and return the first 4.\r\n                iconTitle = iconTitle.replace(/[^A-Z ]/g, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").substr(0, 4);\r\n            } else if (iconTitle.match(\".*[A-Za-z].*\")) {\r\n                //If the title has spaces and contains no capital letters, keep only the first letters of every word and return the first 4.\r\n                iconTitle = iconTitle.replace(/[^A-Z ]/gi, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").toUpperCase().substr(0, 4);\r\n            }\r\n        }\r\n        if (iconTitle.length >= 4) {\r\n            //If the title is 4 letters or more, break them into 2*2 to display them as a square.\r\n            iconTitle = iconTitle.substr(0, 2) + \"<br />\" + iconTitle.substr(2, 2);\r\n        }\r\n        return iconTitle;\r\n    }\r\n\r\n    get_IconDetail() {\r\n        let iconDetail: string = this.detail;\r\n        if (this.feat && !iconDetail) {\r\n            if (this.feat.subType) {\r\n                iconDetail = this.feat.subType;\r\n            }\r\n        } else if (this.condition && !iconDetail) {\r\n            if (this.condition.choice.substr(0,6) == \"Stage \") {\r\n                iconDetail = this.condition.choice.replace(\"tage \", \"\");\r\n                return iconDetail;\r\n            } else {\r\n                iconDetail = this.condition.choice;\r\n            }\r\n        }\r\n        if (iconDetail) {\r\n            if (iconDetail.match(\".*[A-Z].*\")) {\r\n                iconDetail = iconDetail.replace(/[^A-Z ]/g, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").substr(0, 2);\r\n            } else {\r\n                iconDetail = iconDetail.replace(/[^a-z ]/gi, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").toUpperCase().substr(0, 2);\r\n            }\r\n        }\r\n        return iconDetail;\r\n    }\r\n\r\n    get_IconSuperTitle() {\r\n        let superTitle: string = this.superTitle;\r\n        //For icon- names, return a <i> with that icon.\r\n        if (this.superTitle.substr(0, 5) == \"icon-\") {\r\n            return \"<i class='\" + superTitle.substr(5) + \"'></i>\"\r\n        }\r\n        //For effect values, show the value as SuperTitle if up to 2 characters long. Longer values will be shown as Value instead.\r\n        if (this.effect) {\r\n            if (this.effect.setValue) {\r\n                superTitle = this.effect.setValue;\r\n            } else if (this.effect.value) {\r\n                superTitle = this.effect.value;\r\n            }\r\n        } else if (this.condition?.duration == 1 || this.condition?.nextStage == -1) {\r\n            //If a condition has a duration of 1, it needs to be handled immediately, and we show an exclamation diamond to point that out.\r\n            return \"<i class='bi-exclamation-diamond'></i>\";\r\n        } else if (this.condition?.lockedByParent || this.condition?.valueLockedByParent) {\r\n            //If a condition or its value is locked by its parent, show a lock.\r\n            return \"<i class='bi-lock'></i>\";\r\n        }\r\n        if (superTitle.length <= 2) {\r\n            return superTitle;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    get_IconValue() {\r\n        //Show condition value, and show effect values over 2 characters. Shorter effect values will be shown as SuperTitle instead.\r\n        if (this.condition?.value) {\r\n            return this.condition.value.toString();\r\n        } else if (this.effect?.setValue?.length > 2) {\r\n            return this.effect.setValue;\r\n        } else if (this.effect?.value?.length > 2) {\r\n            return this.effect.value;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    get_DurationOverlays() {\r\n        if (this.condition?.duration || this.effect?.duration) {\r\n            let duration = this.condition?.duration || this.effect?.duration || 0;\r\n            let maxDuration = this.condition?.maxDuration || this.effect?.maxDuration || 0;\r\n            let percentage = 100 - Math.floor((duration / maxDuration) * 100);\r\n            if (percentage > 50) {\r\n                return [\r\n                    { offset: 0, percentage: 50, over50: 1 },\r\n                    { offset: 50, percentage: percentage - 50, over50: 0 }\r\n                ]\r\n            } else {\r\n                return [\r\n                    { offset: 0, percentage: percentage, over50: 0 },\r\n                    { offset: 50, percentage: 0, over50: 0 }\r\n                ]\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}","<span class=\"iconValue disable-text-selection\"\r\n    [ngStyle]=\"{'color': effect ? 'inherit' : 'var(--textcolor)'}\">{{get_IconValue()}}</span>\r\n<span class=\"iconDetail disable-text-selection\">{{get_IconDetail()}}</span>\r\n<span class=\"iconSuperTitle newrow disable-text-selection\" style=\"text-align: center;\">\r\n    <div [innerHtml]=\"get_IconSuperTitle()\"></div>\r\n</span>\r\n<span class=\"iconTitle newrow disable-text-selection\" style=\"text-align: center;\">\r\n    <div [innerHtml]=\"get_IconTitle()\"></div>\r\n</span>\r\n<span class=\"iconSubTitle disable-text-selection\" [innerHtml]=\"get_IconSubTitle()\"></span>\r\n<ng-container *ngIf=\"(condition?.duration < condition?.maxDuration) || (effect?.duration < effect?.maxDuration)\">\r\n    <ng-container *ngFor=\"let overlay of get_DurationOverlays(); trackBy:trackByIndex;\">\r\n        <div class=\"gridicon-time-overlay\" [style.--offset]=\"overlay.offset\" [style.--percentage]=\"overlay.percentage\"\r\n            [style.--over50]=\"overlay.over50\" [ngClass]=\"{'transition5':!overlay.over50}\"></div>\r\n    </ng-container>\r\n</ng-container>","export class Settings {\r\n    public readonly _className: string = this.constructor.name;\r\n    abilitiesMinimized: boolean = false;\r\n    accent: string = \"#465A8C\";\r\n    darkmode: boolean = true;\r\n    activitiesMinimized: boolean = false;\r\n    attacksMinimized: boolean = false;\r\n    characterMinimized: boolean = false;\r\n    companionMinimized: boolean = false;\r\n    defenseMinimized: boolean = false;\r\n    effectsMinimized: boolean = false;\r\n    familiarMinimized: boolean = false;\r\n    generalMinimized: boolean = false;\r\n    healthMinimized: boolean = false;\r\n    inventoryMinimized: boolean = false;\r\n    skillsMinimized: boolean = false;\r\n    spellbookMinimized: boolean = false;\r\n    spellsMinimized: boolean = false;\r\n    spelllibraryMinimized: boolean = false;\r\n    timeMinimized: boolean = false;\r\n    autoCloseChoices: boolean = false;\r\n    showOtherOptions: boolean = true;\r\n    lowerLevelFeats: boolean = true;\r\n    higherLevelFeats: boolean = true;\r\n    unavailableFeats: boolean = true;\r\n    archetypeFeats: boolean = true;\r\n    hintsShowMoreInformation: boolean = true;\r\n    characterTileMode: boolean = true;\r\n    spellsTileMode: boolean = true;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D10',\r\n  templateUrl: './D10.svg',\r\n  styleUrls: ['./diceIcons_D10.component.css']\r\n})\r\nexport class DiceIcons_D10Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D10\"\r\n        d=\"M 32.00,4.00\r\n           C 32.00,4.00 58.00,28.00 58.00,28.00\r\n             58.00,28.00 58.00,36.00 58.00,36.00\r\n             58.00,36.00 32.18,60.00 32.00,60.00\r\n             31.82,60.00 6.00,36.00 6.00,36.00\r\n             6.00,36.00 6.00,28.00 6.00,28.00\r\n             6.00,28.00 32.00,4.00 32.00,4.00 Z\r\n           M 58.00,36.00\r\n           C 58.00,36.00 50.00,28.00 50.00,28.00\r\n             50.00,28.00 32.00,36.00 32.00,36.00\r\n             32.00,36.00 14.00,28.00 14.00,28.00\r\n             14.00,28.00 6.00,36.00 6.00,36.00M 32.00,36.00\r\n           C 32.00,36.00 32.00,60.00 32.00,60.00M 14.00,28.00\r\n           C 14.00,28.00 32.00,4.00 32.00,4.00\r\n             32.00,4.00 50.00,28.00 50.00,28.00\r\n             50.00,28.00 32.00,36.00 32.00,36.00\r\n             32.00,36.00 14.00,28.00 14.00,28.00 Z\" />\r\n   </g>\r\n</svg>\r\n","import { Injectable } from '@angular/core';\r\nimport { Ability } from './Ability';\r\nimport * as json_abilities from '../assets/json/abilities';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbilitiesService {\r\n    private abilities: Ability[] = []; \r\n    private loading: Boolean = false;\r\n    \r\n    constructor() { }\r\n    \r\n    get_Abilities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.abilities.filter(ability => ability.name == name || name == \"\");\r\n        } else {\r\n            return [new Ability];\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.abilities.length) {\r\n            this.loading = true;\r\n            this.load_Abilities();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Abilities() {\r\n        this.abilities = [];\r\n        Object.keys(json_abilities).forEach(key => {\r\n            this.abilities.push(...json_abilities[key].map(obj => Object.assign(new Ability(), obj)));\r\n        });\r\n    }\r\n}","import { Material } from './Material';\r\n\r\nexport class ShieldMaterial extends Material {\r\n    public readonly _className: string = this.constructor.name;\r\n    \r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { AlchemicalBomb } from './AlchemicalBomb';\r\n\r\nexport class OtherConsumableBomb extends AlchemicalBomb {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Other Consumables (Bombs) should be type \"otherconsumablesbombs\" to be found in the database\r\n    readonly type = \"otherconsumablesbombs\";\r\n}","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Effect } from './Effect';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\n\r\nexport class Bulk {\r\n    public readonly _className: string = this.constructor.name;\r\n    calculate(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService) {\r\n        let maxabsolutes = this.absolutes(creature, effectsService, \"Max Bulk\");\r\n        let currentabsolutes = this.absolutes(creature, effectsService, \"Bulk\");\r\n\r\n        let result = {\r\n            maxabsolutes: maxabsolutes,\r\n            maxbonuses: this.bonuses(creature, effectsService, \"Max Bulk\"),\r\n            maxpenalties: this.penalties(creature, effectsService, \"Max Bulk\"),\r\n            max: this.max(creature, characterService, effectsService, maxabsolutes),\r\n            currentabsolutes: currentabsolutes,\r\n            currentbonuses: this.bonuses(creature, effectsService, \"Bulk\"),\r\n            currentpenalties: this.penalties(creature, effectsService, \"Bulk\"),\r\n            current: this.current(creature, characterService, effectsService, currentabsolutes),\r\n            encumbered: this.encumbered(creature, characterService, effectsService)\r\n        }\r\n        return result;\r\n    }\r\n    absolutes(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_AbsolutesOnThis(creature, name);\r\n    }\r\n    relatives(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_RelativesOnThis(creature, name);\r\n    }\r\n    bonuses(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_BonusesOnThis(creature, name);\r\n    }\r\n    penalties(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_PenaltiesOnThis(creature, name);\r\n    }\r\n    current(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, absolutes: Effect[] = undefined) {\r\n        let inventories = creature.inventories;\r\n        let result: { value: number, explain: string } = { value: 0, explain: \"\" };\r\n        if (characterService.still_loading()) { return result; }\r\n        inventories.forEach(inventory => {\r\n            //To avoid decimal issues, the bulk is rounded to one decimal.\r\n            let bulk = Math.floor(Math.max(inventory.get_Bulk(false) - inventory.bulkReduction, 0) * 10) / 10;\r\n            result.value += bulk;\r\n            result.explain += \"\\n\" + inventory.get_Name(characterService) + \": \" + bulk;\r\n        })\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(creature, effectsService, \"Bulk\");\r\n        }\r\n        absolutes.forEach(effect => {\r\n            result.value = parseInt(effect.setValue);\r\n            result.explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, \"Bulk\").forEach(effect => {\r\n            result.value += parseInt(effect.value);\r\n            result.explain += effect.source + \": \" + effect.value;\r\n        });\r\n        result.value = Math.floor(Math.max(0, result.value));\r\n        //Cut the first newline\r\n        result.explain = result.explain.trim();\r\n        return result;\r\n    }\r\n    encumbered(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, absolutes: Effect[] = undefined) {\r\n        //Gets the basic bulk and adds all effects\r\n        let result: { value: number, explain: string } = { value: 5, explain: \"Base limit: 5\" };\r\n        if (characterService.still_loading()) { return result; }\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        if (str != 0) {\r\n            result.value += str;\r\n            result.explain += \"\\nStrength Modifier: \" + str;\r\n        }\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(creature, effectsService, \"Encumbered Limit\");\r\n        }\r\n        absolutes.forEach(effect => {\r\n            result.value = parseInt(effect.setValue);\r\n            result.explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, \"Encumbered Limit\").forEach(effect => {\r\n            result.value += parseInt(effect.value);\r\n            result.explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n        });\r\n        return result;\r\n    }\r\n    max(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, absolutes: Effect[] = undefined) {\r\n        //Gets the basic bulk and adds all effects\r\n        let result: { value: number, explain: string } = { value: 10, explain: \"Base limit: 10\" };\r\n        if (characterService.still_loading()) { return result; }\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        if (str != 0) {\r\n            result.value += str;\r\n            result.explain += \"\\nStrength Modifier: \" + str;\r\n        }\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(creature, effectsService, \"Max Bulk\");\r\n        }\r\n        absolutes.forEach(effect => {\r\n            result.value = parseInt(effect.setValue);\r\n            result.explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, \"Max Bulk\").forEach(effect => {\r\n            result.value += parseInt(effect.value);\r\n            result.explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n        });\r\n        return result;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D8',\r\n  templateUrl: './D8.svg',\r\n  styleUrls: ['./diceIcons_D8.component.css']\r\n})\r\nexport class DiceIcons_D8Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D8\"\r\n        d=\"M 32.00,2.00\r\n           C 32.00,2.00 58.00,17.00 58.00,17.00\r\n             58.00,17.00 58.00,47.00 58.00,47.00\r\n             58.00,47.00 32.18,62.00 32.00,62.00\r\n             31.82,62.00 6.00,47.00 6.00,47.00\r\n             6.00,47.00 6.00,17.00 6.00,17.00\r\n             6.00,17.00 32.00,2.00 32.00,2.00 Z\r\n           M 58.00,47.00\r\n           C 58.00,47.00 6.00,47.00 6.00,47.00\r\n             6.00,47.00 32.00,2.00 32.00,2.00\r\n             32.00,2.00 58.00,47.00 58.00,47.00 Z\" />\r\n   </g>\r\n</svg>\r\n","import { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\n\r\nexport class AnimalCompanionLevel {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public extraDamage: number = 0;\r\n    public name: string = \"\";\r\n    public number: number = 0;\r\n    public sizeChange: number = 0;\r\n    public skillChoices: SkillChoice[] = [];\r\n}","import core from './core.json';\r\nimport custom_eselfreunde from './custom_eselfreunde.json'\r\nexport {\r\n    core,\r\n    custom_eselfreunde\r\n};","import { Injectable } from '@angular/core';\r\nimport { Character } from './Character';\r\nimport { Skill } from './Skill';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Item } from './Item';\r\nimport { Class } from './Class';\r\nimport { AbilitiesService } from './abilities.service';\r\nimport { SkillsService } from './skills.service';\r\nimport { Level } from './Level';\r\nimport { ClassesService } from './classes.service';\r\nimport { ItemCollection } from './ItemCollection';\r\nimport { Armor } from './Armor';\r\nimport { Weapon } from './Weapon';\r\nimport { FeatsService } from './feats.service';\r\nimport { TraitsService } from './traits.service';\r\nimport { Ancestry } from './Ancestry';\r\nimport { HistoryService } from './history.service';\r\nimport { Heritage } from './Heritage';\r\nimport { Background } from './Background';\r\nimport { ItemsService } from './items.service';\r\nimport { Feat } from './Feat';\r\nimport { Condition } from './Condition';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { Activity } from './Activity';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { SpellsService } from './spells.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Consumable } from './Consumable';\r\nimport { TimeService } from './time.service';\r\nimport { DefenseService } from './defense.service';\r\nimport { Equipment } from './Equipment';\r\nimport { EffectGain } from './EffectGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { Rune } from './Rune';\r\nimport { DeitiesService } from './deities.service';\r\nimport { Deity } from './Deity';\r\nimport { AnimalCompanionsService } from './animalcompanions.service';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { SavegameService } from './savegame.service';\r\nimport { FamiliarsService } from './familiars.service';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { InventoryGain } from './InventoryGain';\r\nimport { Oil } from './Oil';\r\nimport { WornItem } from './WornItem';\r\nimport { Savegame } from './Savegame';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Ammunition } from './Ammunition';\r\nimport { Shield } from './Shield';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { Snare } from './Snare';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { Hint } from './Hint';\r\nimport { Creature } from './Creature';\r\nimport { LanguageGain } from './LanguageGain';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CharacterService {\r\n\r\n    private me: Character = new Character();\r\n    public characterChanged$: Observable<string>;\r\n    public viewChanged$: Observable<{ creature: string, target: string, subtarget: string }>;\r\n    private loader = [];\r\n    private loading: boolean = false;\r\n    private basicItems = []\r\n    private toChange: { creature: string, target: string, subtarget: string }[] = [];\r\n    private changed: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\r\n    private viewChanged: BehaviorSubject<{ creature: string, target: string, subtarget: string }> = new BehaviorSubject<{ creature: string, target: string, subtarget: string }>({ target: \"\", creature: \"\", subtarget: \"\" });\r\n\r\n    itemsMenuState: string = 'out';\r\n    itemsMenuTarget: string = 'Character';\r\n    craftingMenuState: string = 'out';\r\n    characterMenuState: string = 'out';\r\n    companionMenuState: string = 'out';\r\n    familiarMenuState: string = 'out';\r\n    spellsMenuState: string = 'out';\r\n    spelllibraryMenuState: string = 'out';\r\n    conditionsMenuState: string = 'out';\r\n    diceMenuState: string = 'out';\r\n\r\n    constructor(\r\n        private savegameService: SavegameService,\r\n        public abilitiesService: AbilitiesService,\r\n        private skillsService: SkillsService,\r\n        public classesService: ClassesService,\r\n        public featsService: FeatsService,\r\n        public traitsService: TraitsService,\r\n        private historyService: HistoryService,\r\n        public conditionsService: ConditionsService,\r\n        public activitiesService: ActivitiesService,\r\n        public itemsService: ItemsService,\r\n        public spellsService: SpellsService,\r\n        public effectsService: EffectsService,\r\n        public timeService: TimeService,\r\n        public defenseService: DefenseService,\r\n        public deitiesService: DeitiesService,\r\n        public animalCompanionsService: AnimalCompanionsService,\r\n        public familiarsService: FamiliarsService\r\n    ) { }\r\n\r\n    still_loading() {\r\n        return this.loading;\r\n    }\r\n\r\n    get_Changed(): Observable<string> {\r\n        return this.characterChanged$;\r\n    }\r\n\r\n    get_ViewChanged(): Observable<{ creature: string, target: string, subtarget: string }> {\r\n        return this.viewChanged$;\r\n    }\r\n\r\n    set_ToChange(creature: string = \"Character\", target: string = \"all\", subtarget: string = \"\") {\r\n        target = target || \"all\";\r\n        this.toChange.push({ creature: creature, target: target, subtarget: subtarget });\r\n    }\r\n\r\n    set_HintsToChange(creature: string, hints: Hint[] = []) {\r\n        //For transition between single showon strings and multiple hints, we are currently doing both.\r\n        hints.forEach(hint => {\r\n            //Update the tags for every element that is named here.\r\n            hint.showon.split(\",\").forEach(subtarget => {\r\n                this.set_ToChange(creature, \"tags\", subtarget.trim())\r\n            })\r\n            //If any activities are named, also update the activities area.\r\n            if (this.get_OwnedActivities(this.get_Creature(creature), this.get_Creature(creature).level).find(activity => hint.showon.includes(activity.name))) {\r\n                this.set_ToChange(creature, \"activities\")\r\n            }\r\n        })\r\n        this.set_ToChange(creature, \"character-sheet\");\r\n    }\r\n\r\n    set_TagsToChange(creature: string, showonString: string = \"\") {\r\n        //For transition between single showon strings and multiple hints, we are currently doing both.\r\n        //  Ideally, we can eventually delete this function and clean up every place that uses it.\r\n\r\n        //Update the tags for every element that is named here.\r\n        showonString.split(\",\").forEach(subtarget => {\r\n            this.set_ToChange(creature, \"tags\", subtarget.trim())\r\n        })\r\n        //If any activities are named, also update the activities area.\r\n        if (this.get_OwnedActivities(this.get_Creature(creature), this.get_Creature(creature).level).find(activity => showonString.includes(activity.name))) {\r\n            this.set_ToChange(creature, \"activities\")\r\n        }\r\n        this.set_ToChange(creature, \"character-sheet\");\r\n    }\r\n\r\n    set_AbilityToChange(creature: string, ability: string) {\r\n        //Set refresh commands for all components of the application depending this ability.\r\n        let abilities: string[] = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\r\n        let attacks: string[] = [\"Dexterity\", \"Strength\"];\r\n        let defense: string[] = [\"Constitution\", \"Dexterity\", \"Wisdom\"];\r\n        let general: string[] = [\"Strength\", \"Dexterity\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\r\n        let health: string[] = [\"Constitution\"];\r\n        let inventory: string[] = [\"Strength\"];\r\n        let spells: string[] = [\"Intelligence\", \"Charisma\", \"Wisdom\"];\r\n\r\n        //Prepare changes for everything that should be updated according to the ability.\r\n        this.set_ToChange(creature, \"abilities\");\r\n        if (abilities.includes(ability)) {\r\n            this.set_ToChange(creature, \"abilities\");\r\n            this.set_ToChange(creature, \"individualskills\", ability);\r\n        }\r\n        if (attacks.includes(ability)) {\r\n            this.set_ToChange(creature, \"attacks\");\r\n        }\r\n        if (defense.includes(ability)) {\r\n            this.set_ToChange(creature, \"defense\");\r\n        }\r\n        if (general.includes(ability)) {\r\n            this.set_ToChange(creature, \"general\");\r\n        }\r\n        if (health.includes(ability)) {\r\n            this.set_ToChange(creature, \"health\");\r\n        }\r\n        if (inventory.includes(ability)) {\r\n            this.set_ToChange(creature, \"inventory\");\r\n        }\r\n        if (spells.includes(ability)) {\r\n            this.set_ToChange(creature, \"spells\");\r\n            this.set_ToChange(creature, \"spellbook\");\r\n            this.set_ToChange(creature, \"spellchoices\");\r\n        }\r\n        this.set_ToChange(creature, \"effects\");\r\n        this.set_ToChange(\"Character\", \"charactersheet\")\r\n        if (ability == \"Intelligence\") {\r\n            this.update_LanguageList();\r\n        }\r\n    }\r\n\r\n    process_ToChange() {\r\n        [\"Character\", \"Companion\", \"Familiar\"].forEach(creature => {\r\n            if (this.toChange.find(view => view.creature == creature && view.target == \"all\")) {\r\n                this.clear_ToChange(creature);\r\n                this.set_ViewChanged({ creature: creature, target: \"all\", subtarget: \"\" });\r\n            } else {\r\n                //Process effects first, as effects may stack up more of the others.\r\n                let uniqueEffectsStrings = this.toChange.filter(view => view.creature == creature && view.target == \"effects\").map(view => JSON.stringify(view))\r\n                let uniqueEffects = Array.from(new Set(uniqueEffectsStrings)).map(view => JSON.parse(view));\r\n                uniqueEffects.forEach(view => {\r\n                    this.set_ViewChanged(view);\r\n                });\r\n                //For the rest, copy the toChange list and clear it, so we don't get a loop if set_ViewChanged() causes more calls of process_ToChange().\r\n                let uniqueOthersStrings = this.toChange.filter(view => view.creature == creature && view.target != \"effects\").map(view => JSON.stringify(view))\r\n                let uniqueOthers = Array.from(new Set(uniqueOthersStrings)).map(view => JSON.parse(view));\r\n                this.clear_ToChange(creature);\r\n                uniqueOthers.forEach(view => {\r\n                    this.set_ViewChanged(view);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    clear_ToChange(creature: string = \"all\") {\r\n        this.toChange = this.toChange.filter(view => view.creature != creature && creature != \"all\")\r\n    }\r\n\r\n    set_ViewChanged(view: { creature: string, target: string, subtarget: string }) {\r\n        this.viewChanged.next(view);\r\n    }\r\n\r\n    set_Changed(target: string = \"all\") {\r\n        target = target || \"all\";\r\n        if ([\"Character\", \"Companion\", \"Familiar\", \"all\"].includes(target)) {\r\n            this.clear_ToChange(target);\r\n        }\r\n        this.changed.next(target);\r\n    }\r\n\r\n    get_Darkmode() {\r\n        if (!this.still_loading()) {\r\n            return this.get_Character().settings.darkmode;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    toggle_Menu(menu: string = \"\", parameter: string = \"\") {\r\n        this.characterMenuState = (menu == \"character\" && (this.characterMenuState == 'out')) ? 'in' : 'out';\r\n        //Companion and Familiar menus don't need to close if the dice menu opens.\r\n        if (menu != \"dice\") {\r\n            this.companionMenuState = (menu == \"companion\" && (this.companionMenuState == 'out')) ? 'in' : 'out';\r\n            this.familiarMenuState = (menu == \"familiar\" && (this.familiarMenuState == 'out')) ? 'in' : 'out';\r\n        }\r\n        this.itemsMenuState = (menu == \"items\" && (this.itemsMenuState == 'out')) ? 'in' : 'out';\r\n        this.craftingMenuState = (menu == \"crafting\" && (this.craftingMenuState == 'out')) ? 'in' : 'out';\r\n        this.spellsMenuState = (menu == \"spells\" && (this.spellsMenuState == 'out')) ? 'in' : 'out';\r\n        this.spelllibraryMenuState = (menu == \"spelllibrary\" && (this.spelllibraryMenuState == 'out')) ? 'in' : 'out';\r\n        this.conditionsMenuState = (menu == \"conditions\" && (this.conditionsMenuState == 'out')) ? 'in' : 'out';\r\n        this.diceMenuState = (menu == \"dice\" && (this.diceMenuState == 'out')) ? 'in' : 'out';\r\n        if (this.characterMenuState == 'in') {\r\n            this.set_Changed(\"charactersheet\");\r\n        }\r\n        if (this.companionMenuState == 'in') {\r\n            this.set_Changed(\"Companion\");\r\n        }\r\n        if (this.familiarMenuState == 'in') {\r\n            this.set_Changed(\"Familiar\");\r\n        }\r\n        if (this.itemsMenuState == 'in') {\r\n            this.set_Changed(\"items\");\r\n        }\r\n        if (this.craftingMenuState == 'in') {\r\n            this.set_Changed(\"crafting\");\r\n        }\r\n        if (this.spellsMenuState == 'in') {\r\n            this.set_Changed(\"spells\");\r\n        }\r\n        if (this.spelllibraryMenuState == 'in') {\r\n            this.set_Changed(\"spelllibrary\");\r\n        }\r\n        if (this.conditionsMenuState == 'in') {\r\n            this.set_Changed(\"conditions\");\r\n        }\r\n        this.set_Changed(\"top-bar\");\r\n        if (this.toChange.length) {\r\n            this.process_ToChange();\r\n        }\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterMenuState;\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.companionMenuState;\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.familiarMenuState;\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.itemsMenuState;\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.craftingMenuState;\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.spellsMenuState;\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.spelllibraryMenuState;\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.conditionsMenuState;\r\n    }\r\n\r\n    get_DiceMenuState() {\r\n        return this.diceMenuState;\r\n    }\r\n\r\n    get_ItemsMenuTarget() {\r\n        return this.itemsMenuTarget;\r\n    }\r\n\r\n    set_ItemsMenuTarget(target: string) {\r\n        this.itemsMenuTarget = target;\r\n        this.set_Changed(\"itemstore\");\r\n    }\r\n\r\n    get_Level(number: number) {\r\n        return this.get_Character().class.levels[number];\r\n    }\r\n\r\n    get_Creature(type: string) {\r\n        switch (type) {\r\n            case \"Character\":\r\n                return this.get_Character();\r\n            case \"Companion\":\r\n                return this.get_Companion();\r\n            case \"Familiar\":\r\n                return this.get_Familiar();\r\n            default:\r\n                return new Character();\r\n        }\r\n    }\r\n\r\n    get_Character() {\r\n        if (!this.still_loading()) {\r\n            return this.me;\r\n        } else { return new Character() }\r\n    }\r\n\r\n    get_CompanionAvailable(charLevel: number = this.get_Character().level) {\r\n        //Return any feat that grants an animal companion that you own.\r\n        return this.get_FeatsAndFeatures().find(feat => feat.gainAnimalCompanion == 1 && feat.have(this.get_Character(), this, charLevel));\r\n    }\r\n\r\n    get_FamiliarAvailable(charLevel: number = this.get_Character().level) {\r\n        //Return any feat that grants an animal companion that you own.\r\n        return this.get_FeatsAndFeatures().find(feat => feat.gainFamiliar && feat.have(this.get_Character(), this, charLevel));\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.get_Character().class?.animalCompanion || new AnimalCompanion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.get_Character().class?.familiar || new Familiar();\r\n    }\r\n\r\n    get_Creatures(companionAvailable: boolean = undefined, familiarAvailable: boolean = undefined) {\r\n        if (!this.still_loading()) {\r\n            if (companionAvailable == undefined) {\r\n                companionAvailable = this.get_CompanionAvailable() != null;\r\n            }\r\n            if (familiarAvailable == undefined) {\r\n                familiarAvailable = this.get_FamiliarAvailable() != null;\r\n            }\r\n            if (companionAvailable && familiarAvailable) {\r\n                return ([] as (Creature)[]).concat(this.get_Character()).concat(this.get_Companion()).concat(this.get_Familiar());\r\n            } else if (companionAvailable) {\r\n                return ([] as (Creature)[]).concat(this.get_Character()).concat(this.get_Companion());\r\n            } else if (familiarAvailable) {\r\n                return ([] as (Creature)[]).concat(this.get_Character()).concat(this.get_Familiar());\r\n            } else {\r\n                return ([] as (Creature)[]).concat(this.get_Character());\r\n            }\r\n        } else { return [new Character()] }\r\n    }\r\n\r\n    reset_Character(id: string = \"\") {\r\n        this.loading = true;\r\n        this.initialize(id);\r\n    }\r\n\r\n    get_Accent() {\r\n        if (!this.still_loading()) {\r\n            function hexToRgb(hex) {\r\n                if (hex.length == 4) {\r\n                    var result = /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i.exec(hex);\r\n                    return result ? {\r\n                        r: parseInt(result[1] + result[1], 16),\r\n                        g: parseInt(result[2] + result[2], 16),\r\n                        b: parseInt(result[3] + result[3], 16),\r\n                    } : null;\r\n                } else if (hex.length == 7) {\r\n                    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n                    return result ? {\r\n                        r: parseInt(result[1], 16),\r\n                        g: parseInt(result[2], 16),\r\n                        b: parseInt(result[3], 16),\r\n                    } : null;\r\n                }\r\n            }\r\n            let original = this.get_Character().settings.accent;\r\n            if (original.length == 4 || original.length == 7) {\r\n                try {\r\n                    let rgba = hexToRgb(original)\r\n                    let result = rgba.r + \",\" + rgba.g + \",\" + rgba.b;\r\n                    return result;\r\n                }\r\n                catch (error) {\r\n                    return \"25, 118, 210\"\r\n                }\r\n            } else {\r\n                return \"25, 118, 210\";\r\n            }\r\n        }\r\n    }\r\n\r\n    set_Accent() {\r\n        document.documentElement.style.setProperty('--accent', this.get_Accent());\r\n    }\r\n\r\n    set_Darkmode() {\r\n        if (this.get_Darkmode()) {\r\n            document.body.classList.add('darkmode');\r\n        } else {\r\n            document.body.classList.remove('darkmode');\r\n        }\r\n    }\r\n\r\n    get_Classes(name: string) {\r\n        return this.classesService.get_Classes(name);\r\n    }\r\n\r\n    get_Ancestries(name: string) {\r\n        this.historyService.get_Ancestries(name)\r\n    }\r\n\r\n    get_Deities(name: string = \"\") {\r\n        return this.deitiesService.get_Deities(name);\r\n    }\r\n\r\n    get_Speeds(creature: Creature, name: string = \"\") {\r\n        return creature.speeds.filter(speed => speed.name == name || name == \"\");\r\n    }\r\n\r\n    update_LanguageList() {\r\n        //Ensure that the language list is always as long as ancestry languages + INT + any relevant feats and bonuses.\r\n        //This function is called by the effects service after generating effects, so that new languages aren't thrown out before the effects are generated.\r\n        //Don't call this function in situations where effects are going to change, but haven't been generated yet - or you may lose languages.\r\n        let character = this.get_Character();\r\n        if (character.class.name) {\r\n            //Collect everything that gives you free languages, and the level on which it happens. This will allow us to mark languages as available depending on their level.\r\n            let languageSources: { name: string, level: number, amount: number }[] = [];\r\n\r\n            //Free languages from your ancestry\r\n            let ancestryLanguages: number = character.class.ancestry.baseLanguages - character.class.ancestry.languages.length;\r\n            if (ancestryLanguages) {\r\n                languageSources.push({ name: \"Ancestry\", level: 0, amount: ancestryLanguages });\r\n            }\r\n\r\n            //Free languages from your base intelligence\r\n            let baseIntelligence: number = this.get_Abilities(\"Intelligence\")[0]?.baseValue(character, this, 0)?.result;\r\n            let baseInt: number = Math.floor((baseIntelligence - 10) / 2);\r\n            if (baseInt > 0) {\r\n                languageSources.push({ name: \"Intelligence\", level: 0, amount: baseInt })\r\n            }\r\n            //Build an array of int per level for comparison between the levels, starting with the base at 0.\r\n            let int: number[] = [baseInt]\r\n\r\n            //Collect all feats that grant extra free languages, then note if you have any of them, and on which level.\r\n            //Also add more languages if INT has been raised (and is positive).\r\n            let languageFeats: string[] = this.get_FeatsAndFeatures().filter(feat => feat.effects.some(effect => effect.affected == \"Max Languages\")).map(feat => feat.name);\r\n            character.class.levels.forEach(level => {\r\n                character.get_FeatsTaken(level.number, level.number).filter(taken => languageFeats.includes(taken.name)).forEach(taken => {\r\n                    //The amount will be added later by effects.\r\n                    languageSources.push({ name: taken.name, level: level.number, amount: 0 })\r\n                })\r\n                //Compare INT on this level with INT on the previous level. Don't do this on Level 0, obviously.\r\n                if (level.number > 0) {\r\n                    let levelIntelligence: number = this.get_Abilities(\"Intelligence\")[0]?.baseValue(character, this, level.number)?.result;\r\n                    int.push(Math.floor((levelIntelligence - 10) / 2));\r\n                    let diff = int[level.number] - int[level.number - 1];\r\n                    if (diff > 0 && int[level.number] > 0) {\r\n                        languageSources.push({ name: \"Intelligence\", level: level.number, amount: Math.min(diff, int[level.number]) })\r\n                    }\r\n                }\r\n            })\r\n\r\n            //Never apply absolute effects or negative effects to Max Languages. This should not happen in the game,\r\n            // and it could delete your chosen languages.\r\n            //Apply the relative effects by finding a language source fitting the effect and changing its amount accordingly.\r\n            // Only change sources that have no amount yet.\r\n            // If a source cannot be found, the effect is not from a feat and should be treated as temporary (level -2).\r\n            this.effectsService.get_RelativesOnThis(this.get_Character(), \"Max Languages\").forEach(effect => {\r\n                if (parseInt(effect.value) > 0) {\r\n                    let source = languageSources.find(source => source.name == effect.source && source.amount == 0);\r\n                    if (source) {\r\n                        source.amount = parseInt(effect.value);\r\n                    } else {\r\n                        languageSources.push({ name: effect.source, level: -2, amount: parseInt(effect.value) })\r\n                    }\r\n                }\r\n            })\r\n\r\n            //If the current INT is positive and higher than the base INT for the current level (e.g. because of an item bonus), add another language source.\r\n            let currentInt = this.get_Abilities(\"Intelligence\")[0]?.mod(character, this, this.effectsService)?.result;\r\n            let diff = currentInt - int[character.level];\r\n            if (diff > 0 && currentInt > 0) {\r\n                languageSources.push({ name: \"Intelligence\", level: -2, amount: Math.min(diff, currentInt) })\r\n            }\r\n\r\n            //Remove all free languages that have not been filled.\r\n            character.class.languages = character.class.languages.sort().filter(language => !(language.name == \"\" && !language.locked));\r\n            //Make a new list of all the free languages. We will pick and sort the free languages from here into the character language list.\r\n            let tempLanguages: LanguageGain[] = character.class.languages.filter(language => !language.locked).map(language => Object.assign(new LanguageGain(), JSON.parse(JSON.stringify(language))));\r\n            //Reduce the character language list to only the locked ones.\r\n            character.class.languages = character.class.languages.filter(language => language.locked);\r\n\r\n            //Add free languages based on the sources and the copied language list:\r\n            // - For each source, find a language that has the same source and the same level.\r\n            // - If not available, find a language that has the same source and no level (level -1).\r\n            // (This is mainly for the transition from the old language calculations. Languages should not have level -1 in the future.)\r\n            // - If not available, add a new blank language.\r\n            languageSources.forEach(languageSource => {\r\n                for (let index = 0; index < languageSource.amount; index++) {\r\n                    let existingLanguage = tempLanguages.find(language => language.source == languageSource.name && language.level == languageSource.level && !language.locked)\r\n                    if (existingLanguage) {\r\n                        character.class.languages.push(existingLanguage);\r\n                        tempLanguages.splice(tempLanguages.indexOf(existingLanguage), 1);\r\n                    } else {\r\n                        existingLanguage = tempLanguages.find(language => language.source == languageSource.name && language.level == -1 && !language.locked)\r\n                        if (existingLanguage) {\r\n                            let newLanguage = Object.assign(new LanguageGain(), JSON.parse(JSON.stringify(tempLanguages)));\r\n                            newLanguage.level = languageSource.level;\r\n                            character.class.languages.push(newLanguage);\r\n                            tempLanguages.splice(tempLanguages.indexOf(existingLanguage), 1);\r\n                        } else {\r\n                            character.class.languages.push(Object.assign(new LanguageGain(), { name: \"\", source: languageSource.name, locked: false, level: languageSource.level }));\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n            //If any languages are left in the temporary list, assign them to any blank languages, preferring same source, Intelligence and then Multilingual as sources.\r\n            tempLanguages.forEach(lostLanguage => {\r\n                let targetLanguage = character.class.languages\r\n                    .find(freeLanguage =>\r\n                        !freeLanguage.locked &&\r\n                        freeLanguage.name == \"\" &&\r\n                        (freeLanguage.source == lostLanguage.source || freeLanguage.source == \"Intelligence\" || freeLanguage.source == \"Multilingual\" || true)\r\n                    )\r\n                if (targetLanguage) {\r\n                    targetLanguage.name = lostLanguage.name;\r\n                }\r\n            })\r\n\r\n            //Sort languages by locked > level > source > name.\r\n            character.class.languages = character.class.languages\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                    if (a.source > b.source) {\r\n                        return 1;\r\n                    }\r\n                    if (a.source < b.source) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                    if (a.level > b.level) {\r\n                        return 1;\r\n                    }\r\n                    if (a.level < b.level) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                    if (!a.locked && b.locked) {\r\n                        return 1;\r\n                    }\r\n                    if (a.locked && !b.locked) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n        }\r\n    }\r\n\r\n    change_Class($class: Class) {\r\n        //Cleanup Heritage, Ancestry, Background and class skills\r\n        let character = this.get_Character();\r\n        character.class.on_ChangeHeritage(this);\r\n        character.class.on_ChangeAncestry(this);\r\n        character.class.on_ChangeBackground(this);\r\n        character.class.on_ChangeClass(this);\r\n        character.class = new Class();\r\n        character.class = Object.assign(new Class(), JSON.parse(JSON.stringify($class)));\r\n        character.class = this.reassign(character.class);\r\n        character.class.on_NewClass(this, this.itemsService);\r\n        //After the class change, process all immediate effects from feats (or rather features) that you get from the class - like gaining the Druidic language.\r\n        this.get_FeatsAndFeatures()\r\n            .filter(feat => feat.onceEffects.length && feat.have(character, this, character.level))\r\n            .forEach(feat => {\r\n                feat.onceEffects.forEach(effect => {\r\n                    this.process_OnceEffect(character, effect);\r\n                })\r\n            })\r\n        //Update everything because the class changes everything.\r\n        this.set_Changed();\r\n    }\r\n\r\n    change_Ancestry(ancestry: Ancestry, itemsService: ItemsService) {\r\n        let character = this.get_Character();\r\n        this.change_Heritage(new Heritage());\r\n        character.class.on_ChangeAncestry(this);\r\n        character.class.ancestry = new Ancestry();\r\n        character.class.ancestry = Object.assign(new Ancestry(), JSON.parse(JSON.stringify(ancestry)))\r\n        character.class.ancestry = this.reassign(character.class.ancestry);\r\n        character.class.on_NewAncestry(this, itemsService);\r\n        this.update_LanguageList();\r\n    }\r\n\r\n    change_Deity(deity: Deity) {\r\n        let character = this.get_Character();\r\n        character.class.deity = deity.name;\r\n        this.set_ToChange(\"Character\", \"general\");\r\n        this.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.set_ToChange(\"Character\", \"attacks\");\r\n    }\r\n\r\n    change_Heritage(heritage: Heritage, index: number = -1, source: string = \"\") {\r\n        let character = this.get_Character();\r\n        character.class.on_ChangeHeritage(this, index);\r\n        if (index == -1) {\r\n            character.class.heritage = new Heritage();\r\n            character.class.heritage = Object.assign(new Heritage(), JSON.parse(JSON.stringify(heritage)))\r\n            character.class.heritage = this.reassign(character.class.heritage);\r\n        } else {\r\n            character.class.additionalHeritages[index] = new Heritage();\r\n            character.class.additionalHeritages[index] = Object.assign(new Heritage(), JSON.parse(JSON.stringify(heritage)))\r\n            character.class.additionalHeritages[index] = this.reassign(character.class.additionalHeritages[index]);\r\n            character.class.additionalHeritages[index].source = source;\r\n        }\r\n        character.class.on_NewHeritage(this, this.itemsService, index);\r\n    }\r\n\r\n    change_Background(background: Background) {\r\n        let character = this.get_Character();\r\n        character.class.on_ChangeBackground(this);\r\n        character.class.background = new Background();\r\n        character.class.background = Object.assign(new Background(), JSON.parse(JSON.stringify(background)));\r\n        character.class.background = this.reassign(character.class.background);\r\n        character.class.on_NewBackground(this);\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Inventories(creature: Creature) {\r\n        if (!this.still_loading()) {\r\n            return creature.inventories;\r\n        } else { return [new ItemCollection()] }\r\n    }\r\n\r\n    get_Specializations(group: string = \"\") {\r\n        return this.itemsService.get_Specializations(group);\r\n    }\r\n\r\n    get_InvestedItems(creature: Creature) {\r\n        return creature.inventories[0].allEquipment().filter(item => item.invested && item.traits.includes(\"Invested\"));\r\n    }\r\n\r\n    create_WeaponFeats(weapons: Weapon[] = []) {\r\n        //This function depends on the feats and items being loaded, and it will wait forever for them!\r\n        if (this.featsService.still_loading() || this.itemsService.still_loading()) {\r\n            setTimeout(() => {\r\n                this.create_WeaponFeats(weapons);\r\n            }, 500)\r\n        } else {\r\n            if (!weapons.length) {\r\n                weapons = this.itemsService.get_ItemsOfType(\"weapons\");\r\n            }\r\n            let weaponFeats = this.get_Feats().filter(feat => feat.weaponfeatbase);\r\n            weaponFeats.forEach(feat => {\r\n                let featweapons = weapons;\r\n                //These filters are hardcoded according to the needs of the weaponfeatbase feats. There is \"Advanced Weapon\", \"Uncommon Ancestry Weapon\" and \"Uncommon Ancestry Advanced Weapon\" so far.\r\n                if (feat.subType.includes(\"Uncommon\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.traits.includes(\"Uncommon\"));\r\n                }\r\n                if (feat.subType.includes(\"Simple\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.prof == \"Simple Weapons\");\r\n                } else if (feat.subType.includes(\"Martial\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.prof == \"Martial Weapons\");\r\n                } else if (feat.subType.includes(\"Advanced\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.prof == \"Advanced Weapons\");\r\n                }\r\n                if (feat.subType.includes(\"Ancestry\")) {\r\n                    let ancestries: string[] = this.historyService.get_Ancestries().map(ancestry => ancestry.name);\r\n                    featweapons = featweapons.filter(weapon => weapon.traits.some(trait => ancestries.includes(trait)));\r\n                }\r\n                featweapons.forEach(weapon => {\r\n                    let replacementString = feat.subType;\r\n                    let oldFeat = this.get_Feats().find(libraryFeat => libraryFeat.name == feat.name.replace(replacementString, weapon.name));\r\n                    if (oldFeat) {\r\n                        this.remove_CustomFeat(oldFeat);\r\n                    }\r\n                    let regex = new RegExp(replacementString, \"g\")\r\n                    let featString = JSON.stringify(feat);\r\n                    featString = featString.replace(regex, weapon.name);\r\n                    let replacedFeat = Object.assign(new Feat(), JSON.parse(featString))\r\n                    let newLength = this.add_CustomFeat(replacedFeat);\r\n                    let newFeat = this.get_Character().customFeats[newLength - 1];\r\n                    newFeat.hide = false;\r\n                    newFeat.weaponfeatbase = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    verify_Feats() {\r\n        //run meetsSpecialReq for every feat once, so that we can see in the console if a specialReq isn't working.\r\n        this.featsService.get_Feats(this.me.customFeats).filter(feat => feat.specialreq).forEach(feat => {\r\n            feat.meetsSpecialReq(this);\r\n        })\r\n    }\r\n\r\n    grant_InventoryItem(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Item, resetRunes: boolean = true, changeAfter: boolean = true, equipAfter: boolean = true, amount: number = 1, newId: boolean = true, expiration: number = 0) {\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n        let newInventoryItem = this.itemsService.initialize_Item(item, false, newId);\r\n        //Assign the library's item id as the new item's refId. This allows us to read the default information from the library later.\r\n        if (!newInventoryItem.refId) {\r\n            newInventoryItem.refId = item.id;\r\n        }\r\n        let returnedInventoryItem;\r\n        //Check if this item already exists in the inventory, and if it is stackable and doesn't expire. Don't make that check if this item expires.\r\n        let existingItems: Item[] = [];\r\n        if (!expiration) {\r\n            existingItems = inventory[item.type].filter((existing: Item) =>\r\n                existing.name == newInventoryItem.name && newInventoryItem.can_Stack() && !item.expiration\r\n            );\r\n        }\r\n        //If any existing, stackable items are found, try parsing the amount and set it to 1 if failed, then raise the amount on the first of the existing items.\r\n        //The amount must be parsed because it could be set to anything during custom item creation.\r\n        //If no items are found, add the new item to the inventory.\r\n        //Set returnedInventoryItem to either the found or the new item for further processing.\r\n        if (existingItems.length) {\r\n            let intAmount: number = 1\r\n            try {\r\n                intAmount = parseInt(amount.toString())\r\n            } catch (error) {\r\n                intAmount = 1\r\n            }\r\n            existingItems[0].amount += intAmount;\r\n            returnedInventoryItem = existingItems[0];\r\n        } else {\r\n            let newInventoryLength = inventory[item.type].push(newInventoryItem);\r\n            let createdInventoryItem = inventory[item.type][newInventoryLength - 1];\r\n            if (createdInventoryItem.amount && amount > 1) {\r\n                createdInventoryItem.amount = amount;\r\n            }\r\n            if (equipAfter && Object.keys(createdInventoryItem).includes(\"equipped\") && item.equippable) {\r\n                this.onEquip(creature, inventory, createdInventoryItem, true, false);\r\n            }\r\n            if (!item.equippable && (item[\"gainActivities\"]?.length || item[\"activities\"]?.length)) {\r\n                this.set_ToChange(creature.type, \"activities\");\r\n            }\r\n            returnedInventoryItem = createdInventoryItem;\r\n            if (returnedInventoryItem[\"prof\"] == \"Advanced Weapons\") {\r\n                this.create_WeaponFeats([returnedInventoryItem]);\r\n            }\r\n            if (resetRunes && returnedInventoryItem[\"moddable\"]) {\r\n                if (returnedInventoryItem[\"potencyRune\"]) {\r\n                    returnedInventoryItem[\"potencyRune\"] = 0;\r\n                }\r\n                if (returnedInventoryItem[\"strikingRune\"]) {\r\n                    returnedInventoryItem[\"strikingRune\"] = 0;\r\n                }\r\n                if (returnedInventoryItem[\"resilientRune\"]) {\r\n                    returnedInventoryItem[\"resilientRune\"] = 0;\r\n                }\r\n                if (returnedInventoryItem[\"propertyRunes\"]) {\r\n                    returnedInventoryItem[\"propertyRunes\"].length = 0;\r\n                }\r\n            }\r\n            if (returnedInventoryItem[\"propertyRunes\"] && returnedInventoryItem[\"propertyRunes\"].length) {\r\n                returnedInventoryItem[\"propertyRunes\"].filter((rune: Rune) => rune[\"loreChoices\"]).forEach((rune: Rune) => {\r\n                    this.add_RuneLore(rune as Rune);\r\n                });\r\n            }\r\n        }\r\n        if (returnedInventoryItem[\"gainInventory\"]) {\r\n            returnedInventoryItem[\"gainInventory\"].forEach((gain: InventoryGain) => {\r\n                let newLength = creature.inventories.push(new ItemCollection());\r\n                let newInventory = creature.inventories[newLength - 1];\r\n                newInventory.itemId = returnedInventoryItem.id;\r\n                newInventory.bulkLimit = gain.bulkLimit;\r\n                newInventory.bulkReduction = gain.bulkReduction;\r\n            })\r\n        }\r\n        if (expiration) {\r\n            returnedInventoryItem.expiration = expiration;\r\n        }\r\n        //Add all Items that you get from being granted this one\r\n        if (returnedInventoryItem.gainItems && returnedInventoryItem.gainItems.length) {\r\n            returnedInventoryItem.gainItems.filter((gainItem: ItemGain) => gainItem.on == \"grant\").forEach(gainItem => {\r\n                let newItem: Item = this.get_CleanItems()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n                if (newItem.can_Stack()) {\r\n                    this.grant_InventoryItem(creature, inventory, newItem, true, false, false, gainItem.amount + (gainItem.amountPerLevel * creature.level));\r\n                } else {\r\n                    let equip = true;\r\n                    //Don't equip the new item if it's a shield or armor and this one is too - only one shield or armor can be equipped\r\n                    if ((returnedInventoryItem.type == \"armors\" || returnedInventoryItem.type == \"shields\") && newItem.type == returnedInventoryItem.type) {\r\n                        equip = false;\r\n                    }\r\n                    let grantedItem = this.grant_InventoryItem(creature, inventory, newItem, true, false, equip);\r\n                    gainItem.id = grantedItem.id;\r\n                    if (grantedItem.get_Name) {\r\n                        grantedItem.grantedBy = \"(Granted by \" + returnedInventoryItem.name + \")\";\r\n                    };\r\n                }\r\n            });\r\n        }\r\n        if (returnedInventoryItem.gainActivities) {\r\n            (returnedInventoryItem as Equipment).gainActivities.forEach((gain: ActivityGain) => {\r\n                gain.active = false;\r\n            });\r\n        }\r\n        if (returnedInventoryItem.activities) {\r\n            (returnedInventoryItem as Equipment).activities.forEach((activity: ItemActivity) => {\r\n                activity.active = false;\r\n            });\r\n        }\r\n        if (returnedInventoryItem.constructor == AlchemicalBomb || returnedInventoryItem.constructor == OtherConsumableBomb || returnedInventoryItem.constructor == Ammunition || returnedInventoryItem.constructor == Snare) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        returnedInventoryItem[\"activities\"]?.forEach((activity: ItemActivity) => {\r\n            activity.hints?.forEach((hint: Hint) => {\r\n                this.set_TagsToChange(creature.type, hint.showon);\r\n            })\r\n        });\r\n        if (returnedInventoryItem[\"showon\"]) {\r\n            this.set_TagsToChange(creature.type, item[\"showon\"]);\r\n        }\r\n        if (changeAfter) {\r\n            this.process_ToChange();\r\n        }\r\n        return returnedInventoryItem;\r\n    }\r\n\r\n    drop_InventoryItem(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Item, changeAfter: boolean = true, equipBasicItems: boolean = true, including: boolean = true, amount: number = 1) {\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n        if (item.constructor == AlchemicalBomb || item.constructor == OtherConsumableBomb || item.constructor == Ammunition || item.constructor == Snare) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (item[\"showon\"]) {\r\n            this.set_TagsToChange(creature.type, item[\"showon\"]);\r\n        }\r\n        this.set_ItemViewChanges(creature, item);\r\n        if (amount < item.amount) {\r\n            item.amount -= amount;\r\n        } else {\r\n            if (item[\"equipped\"]) {\r\n                this.onEquip(creature, inventory, item as Equipment, false, false);\r\n            } else if (item[\"invested\"] && item.can_Invest()) {\r\n                this.on_Invest(creature, inventory, item as Equipment, false, false);\r\n            }\r\n            if (item[\"propertyRunes\"]) {\r\n                item[\"propertyRunes\"].filter((rune: Rune) => rune.loreChoices.length).forEach((rune: Rune) => {\r\n                    this.remove_RuneLore(rune);\r\n                })\r\n            }\r\n            if (item[\"appliedOils\"]) {\r\n                item[\"appliedOils\"].filter((oil: Oil) => oil.runeEffect.loreChoices.length).forEach((oil: Oil) => {\r\n                    this.remove_RuneLore(oil.runeEffect);\r\n                })\r\n            }\r\n            if (item[\"activities\"]) {\r\n                item[\"activities\"].forEach(activity => {\r\n                    if (activity.active) {\r\n                        this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n                    }\r\n                })\r\n            }\r\n            if (item[\"gainActivities\"]) {\r\n                item[\"gainActivities\"].forEach(gain => {\r\n                    if (gain.active) {\r\n                        this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, gain, this.activitiesService.get_Activities(gain.name)[0], false);\r\n                    }\r\n                })\r\n            }\r\n            if (item[\"gainInventory\"]) {\r\n                creature.inventories = creature.inventories.filter(inventory => inventory.itemId != item.id);\r\n            }\r\n            if (including && item[\"gainItems\"] && item[\"gainItems\"].length) {\r\n                item[\"gainItems\"].filter((gainItem: ItemGain) => gainItem.on == \"grant\").forEach(gainItem => {\r\n                    this.lose_GainedItem(creature, gainItem);\r\n                });\r\n            }\r\n            inventory[item.type] = inventory[item.type].filter((any_item: Item) => any_item !== item);\r\n            if (equipBasicItems) {\r\n                this.equip_BasicItems(creature);\r\n            }\r\n        }\r\n        if (changeAfter) {\r\n            this.process_ToChange()\r\n        }\r\n    }\r\n\r\n    add_RuneLore(rune: Rune) {\r\n        //Go through all the loreChoices (usually only one)\r\n        rune.loreChoices.forEach(choice => {\r\n            //Check if only one (=this) item's rune has this lore (and therefore no other item has already created it on the character), and if so, create it.\r\n            if (\r\n                this.get_Character().inventories[0].allEquipment()\r\n                    .filter(item => item.propertyRunes\r\n                        .some(propertyRune => propertyRune.loreChoices\r\n                            .some(otherchoice => otherchoice.loreName == choice.loreName)\r\n                        )\r\n                    ).length +\r\n                this.get_Character().inventories[0].allEquipment()\r\n                    .filter(item => item.oilsApplied\r\n                        .some(oil => oil.runeEffect && oil.runeEffect.loreChoices\r\n                            .some(otherchoice => otherchoice.loreName == choice.loreName)\r\n                        )\r\n                    ).length == 1) {\r\n                this.get_Character().add_Lore(this, choice);\r\n            }\r\n        });\r\n    }\r\n\r\n    remove_RuneLore(rune: Rune) {\r\n        //Iterate through the loreChoices (usually only one)\r\n        rune.loreChoices.forEach(choice => {\r\n            //Check if only one item's rune has this lore (and therefore no other rune still needs it created), and if so, remove it.\r\n            if (this.get_Character().inventories[0].allEquipment()\r\n                .filter(item => item.propertyRunes\r\n                    .filter(propertyRune => propertyRune.loreChoices\r\n                        .filter(otherchoice => otherchoice.loreName == choice.loreName)\r\n                        .length)\r\n                    .length)\r\n                .length +\r\n                this.get_Character().inventories[0].allEquipment()\r\n                    .filter(item => item.oilsApplied\r\n                        .filter(oil => oil.runeEffect && oil.runeEffect.loreChoices\r\n                            .filter(otherchoice => otherchoice.loreName == choice.loreName)\r\n                            .length)\r\n                        .length)\r\n                    .length == 1) {\r\n                this.get_Character().remove_Lore(this, choice);\r\n            }\r\n        });\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number, plat: number = 0, gold: number = 0, silver: number = 0, copper: number = 0) {\r\n        if (sum) {\r\n            plat = gold = silver = copper = 0;\r\n            plat = Math.floor(sum / 100000) * 100;\r\n            sum %= 100000;\r\n            gold = Math.floor(sum / 100);\r\n            sum %= 100;\r\n            silver = Math.floor(sum / 10);\r\n            sum %= 10;\r\n            copper = sum;\r\n        }\r\n        if (copper) {\r\n            this.get_Character().cash[3] += (copper * multiplier);\r\n            if (this.get_Character().cash[3] < 0) {\r\n                if (this.get_Character().cash[2] > 0 || this.get_Character().cash[1] > 0 || this.get_Character().cash[0] > 0) {\r\n                    silver += Math.floor(this.get_Character().cash[3] / 10) * multiplier;\r\n                    this.get_Character().cash[3] -= Math.floor(this.get_Character().cash[3] / 10) * 10;\r\n                }\r\n            };\r\n        }\r\n        if (silver) {\r\n            this.get_Character().cash[2] += (silver * multiplier);\r\n            if (this.get_Character().cash[2] < 0) {\r\n                if (this.get_Character().cash[1] > 0 || this.get_Character().cash[0] > 0) {\r\n                    gold += Math.floor(this.get_Character().cash[2] / 10) * multiplier;\r\n                    this.get_Character().cash[2] -= Math.floor(this.get_Character().cash[2] / 10) * 10;\r\n                }\r\n            };\r\n        }\r\n        if (gold) {\r\n            this.get_Character().cash[1] += (gold * multiplier);\r\n            if (this.get_Character().cash[1] < 0) {\r\n                if (this.get_Character().cash[0] > 0) {\r\n                    plat += Math.floor(this.get_Character().cash[1] / 10) * multiplier;\r\n                    this.get_Character().cash[1] -= Math.floor(this.get_Character().cash[1] / 10) * 10;\r\n                }\r\n            };\r\n        }\r\n        if (plat) {\r\n            this.get_Character().cash[0] += (plat * multiplier);\r\n            if (this.get_Character().cash[0] < 0) {\r\n                this.sort_Cash();\r\n            }\r\n        }\r\n        if (this.get_Character().cash[0] < 0 || this.get_Character().cash[1] < 0 || this.get_Character().cash[2] < 0) {\r\n            this.sort_Cash();\r\n        }\r\n        this.set_ToChange(\"Character\", \"inventory\");\r\n    }\r\n\r\n    sort_Cash() {\r\n        let sum = (this.get_Character().cash[0] * 1000) + (this.get_Character().cash[1] * 100) + (this.get_Character().cash[2] * 10) + (this.get_Character().cash[3]);\r\n        this.get_Character().cash = [0, 0, 0, 0];\r\n        this.change_Cash(1, sum);\r\n    }\r\n\r\n    set_ItemViewChanges(creature: Character | AnimalCompanion, item: Item) {\r\n        if (item.constructor == AlchemicalBomb || item.constructor == OtherConsumableBomb || item.constructor == AlchemicalPoison || item.constructor == Ammunition || item.constructor == Snare) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (item[\"showon\"]) {\r\n            this.set_TagsToChange(creature.type, item[\"showon\"]);\r\n        }\r\n        if (item[\"effects\"]?.length) {\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        if (item.constructor.prototype instanceof Equipment) {\r\n            this.set_EquipmentViewChanges(this.get_Character(), item as Equipment);\r\n        }\r\n    }\r\n\r\n    set_EquipmentViewChanges(creature: Character | AnimalCompanion, item: Equipment) {\r\n        //Prepare refresh list according to the item's properties.\r\n        if (item.constructor == Shield || item.constructor == Armor || item.constructor == Weapon) {\r\n            this.set_ToChange(creature.type, \"defense\");\r\n            //There are effects that are based on your currently equipped armor and shield.\r\n            //That means we have to check the effects whenever we equip or unequip one of those.\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        if (item.constructor == Weapon) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n            //There are effects that are based on your currently weapons.\r\n            //That means we have to check the effects whenever we equip or unequip one of those.\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        item.hints.forEach(hint => {\r\n            this.set_TagsToChange(creature.type, hint.showon);\r\n        })\r\n        item.traits.map(trait => this.traitsService.get_Traits(trait)[0])?.filter(trait => trait?.hints?.length).forEach(trait => {\r\n            trait.hints.forEach(hint => {\r\n                this.set_TagsToChange(creature.type, hint.showon);\r\n            })\r\n        })\r\n        if (item.effects?.length ||\r\n            item.constructor == Armor && (item as Armor).get_Strength()) {\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        if (item.constructor == Weapon) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (item.constructor == Armor ||\r\n            item.constructor == Shield) {\r\n            this.set_ToChange(creature.type, \"defense\");\r\n        }\r\n        if (item.activities?.length) {\r\n            this.set_ToChange(creature.type, \"activities\");\r\n        }\r\n        if (item.gainActivities?.length) {\r\n            this.set_ToChange(creature.type, \"activities\");\r\n        }\r\n        item.propertyRunes?.forEach((rune: Rune) => {\r\n            if (item.moddable == \"armor\" && rune.hints?.length) {\r\n                rune.hints.forEach(hint => {\r\n                    this.set_TagsToChange(creature.type, hint.showon);\r\n                })\r\n            }\r\n            if (item.moddable == \"armor\" && (rune as ArmorRune).effects?.length) {\r\n                this.set_ToChange(creature.type, \"effects\");\r\n            }\r\n            if (rune.activities?.length) {\r\n                this.set_ToChange(creature.type, \"activities\");\r\n            }\r\n        });\r\n        if (item.constructor == AdventuringGear) {\r\n            if ((item as AdventuringGear).isArmoredSkirt) {\r\n                this.set_ToChange(creature.type, \"inventory\");\r\n                this.set_ToChange(creature.type, \"defense\");\r\n            }\r\n        }\r\n        if (item.constructor == WornItem) {\r\n            if ((item as WornItem).isDoublingRings) {\r\n                this.set_ToChange(creature.type, \"inventory\");\r\n                this.set_ToChange(creature.type, \"attacks\");\r\n            }\r\n            if ((item as WornItem).isHandwrapsOfMightyBlows) {\r\n                this.set_ToChange(creature.type, \"inventory\");\r\n                this.set_ToChange(creature.type, \"attacks\");\r\n            }\r\n        }\r\n    }\r\n\r\n    onEquip(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Equipment, equipped: boolean = true, changeAfter: boolean = true, equipBasicItems: boolean = true) {\r\n        //Only allow equipping or unequipping for items that the creature can wear.\r\n        if ((creature.type == \"Character\" && !item.traits.includes(\"Companion\")) || (creature.type == \"Companion\" && item.traits.includes(\"Companion\")) || item.name == \"Unarmored\") {\r\n            item.equipped = equipped;\r\n            this.set_ToChange(creature.type, \"inventory\");\r\n            this.set_EquipmentViewChanges(creature, item);\r\n            if (item.equipped) {\r\n                if (item instanceof Armor || item instanceof Shield) {\r\n                    let allOfType = inventory[item.type];\r\n                    //If you equip a shield that is already raised, preserve that status (e.g. for the Shield spell).\r\n                    let raised = false;\r\n                    if (item instanceof Shield && item.raised) {\r\n                        raised = true;\r\n                    }\r\n                    allOfType.forEach(typeItem => {\r\n                        this.onEquip(creature, inventory, typeItem, false, false, false);\r\n                    });\r\n                    item.equipped = true;\r\n                    if (item instanceof Shield) {\r\n                        item.raised = raised;\r\n                    }\r\n                }\r\n\r\n                //If you get an Activity from an item that doesn't need to be invested, immediately invest it in secret so the Activity is gained\r\n                if ((item.gainActivities || item.activities) && !item.can_Invest()) {\r\n                    this.on_Invest(creature, inventory, item, true, false);\r\n                }\r\n                //Add all Items that you get from equipping this one\r\n                if (item.gainItems && item.gainItems.length) {\r\n                    item.gainItems.filter((gainItem: ItemGain) => gainItem.on == \"equip\").forEach(gainItem => {\r\n                        let newItem: Item = this.itemsService.get_Items()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0]\r\n                        if (newItem.can_Stack()) {\r\n                            this.grant_InventoryItem(creature, inventory, newItem, false, false, false, gainItem.amount + (gainItem.amountPerLevel * creature.level));\r\n                        } else {\r\n                            let equip = true;\r\n                            //Don't equip the new item if it's a shield or armor and this one is too - only one shield or armor can be equipped\r\n                            if ((item instanceof Armor || item instanceof Shield) && newItem.type == item.type) {\r\n                                equip = false;\r\n                            }\r\n                            let grantedItem = this.grant_InventoryItem(creature, inventory, newItem, false, false, equip);\r\n                            gainItem.id = grantedItem.id;\r\n                            if (grantedItem.get_Name) {\r\n                                grantedItem.grantedBy = \"(Granted by \" + item.name + \")\"\r\n                            };\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                if (equipBasicItems) {\r\n                    this.equip_BasicItems(creature);\r\n                }\r\n                //If you are unequipping a shield, you should also be lowering it and losing cover\r\n                if (item instanceof Shield) {\r\n                    if (item.takingCover) {\r\n                        this.get_AC().set_Cover(creature, 0, item, this, this.conditionsService);\r\n                        item.takingCover = false;\r\n                    }\r\n                    item.raised = false;\r\n                }\r\n                //If the item was invested, it isn't now.\r\n                if (item.invested) {\r\n                    this.on_Invest(creature, inventory, item, false, false);\r\n                }\r\n                if (item.gainItems?.length) {\r\n                    item.gainItems.filter((gainItem: ItemGain) => gainItem.on == \"equip\").forEach(gainItem => {\r\n                        this.lose_GainedItem(creature, gainItem);\r\n                    });\r\n                }\r\n                item.propertyRunes?.forEach(rune => {\r\n                    //Deactivate any active toggled activities of inserted runes.\r\n                    rune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n                        this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n                    })\r\n                })\r\n            }\r\n            if (changeAfter) {\r\n                this.process_ToChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    lose_GainedItem(creature: Character | AnimalCompanion, gainedItem: ItemGain) {\r\n        if (this.itemsService.get_CleanItems()[gainedItem.type].concat(...creature.inventories.map(inventory => inventory[gainedItem.type])).filter((item: Item) => item.name.toLowerCase() == gainedItem.name.toLowerCase())[0]?.can_Stack()) {\r\n            let amountToDrop = gainedItem.amount || 1;\r\n            creature.inventories.forEach(inventory => {\r\n                let items: Item[] = inventory[gainedItem.type].filter((libraryItem: Item) => libraryItem.name == gainedItem.name);\r\n                items.forEach(item => {\r\n                    if (amountToDrop) {\r\n                        if (item.amount < amountToDrop) {\r\n                            this.drop_InventoryItem(creature, inventory, item, false, false, true, gainedItem.amount - amountToDrop);\r\n                            amountToDrop -= gainedItem.amount;\r\n                        } else {\r\n                            this.drop_InventoryItem(creature, inventory, item, false, false, true, gainedItem.amount);\r\n                            amountToDrop = 0;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            creature.inventories.forEach(inventory => {\r\n                let items: Item[] = inventory[gainedItem.type].filter((libraryItem: Item) => libraryItem.id == gainedItem.id);\r\n                items.forEach(item => {\r\n                    this.drop_InventoryItem(creature, inventory, item, false, false, true);\r\n                });\r\n            });\r\n            gainedItem.id = \"\";\r\n        }\r\n    }\r\n\r\n    on_Invest(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Equipment, invested: boolean = true, changeAfter: boolean = true) {\r\n        item.invested = invested;\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n        if (item.invested) {\r\n            if (!item.equipped) {\r\n                this.onEquip(creature, inventory, item, true, false);\r\n            } else {\r\n                this.set_EquipmentViewChanges(creature, item);\r\n            }\r\n        } else {\r\n            item.gainActivities.filter(gainActivity => gainActivity.active).forEach((gainActivity: ActivityGain) => {\r\n                let libraryActivity = this.activitiesService.get_Activities(gainActivity.name)[0];\r\n                if (libraryActivity) {\r\n                    this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, gainActivity, libraryActivity, false);\r\n                }\r\n            });\r\n            item.activities.filter(itemActivity => itemActivity.active).forEach((itemActivity: ItemActivity) => {\r\n                this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, itemActivity, itemActivity, false);\r\n            })\r\n            this.set_EquipmentViewChanges(creature, item);\r\n        }\r\n        if (changeAfter) {\r\n            this.process_ToChange();\r\n        }\r\n    }\r\n\r\n    on_ConsumableUse(creature: Character | AnimalCompanion, item: Consumable) {\r\n        item.amount--\r\n        this.itemsService.process_Consumable(creature, this, this.itemsService, this.conditionsService, this.spellsService, item);\r\n        this.set_ItemViewChanges(creature, item);\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n    }\r\n\r\n    grant_BasicItems() {\r\n        //This function depends on the items being loaded, and it will wait forever for them!\r\n        if (this.itemsService.still_loading()) {\r\n            setTimeout(() => {\r\n                this.grant_BasicItems();\r\n            }, 500)\r\n        } else {\r\n            this.basicItems = [];\r\n            let newBasicWeapon: Weapon = Object.assign(new Weapon(), this.itemsService.get_ItemsOfType(\"weapons\", \"Fist\")[0]);\r\n            this.basicItems.push(newBasicWeapon);\r\n            let newBasicArmor: Armor;\r\n            newBasicArmor = Object.assign(new Armor(), this.itemsService.get_ItemsOfType(\"armors\", \"Unarmored\")[0]);\r\n            this.basicItems.push(newBasicArmor);\r\n            this.equip_BasicItems(this.get_Character(), false)\r\n            this.equip_BasicItems(this.get_Companion(), false)\r\n        }\r\n    }\r\n\r\n    equip_BasicItems(creature: Character | AnimalCompanion, changeAfter: boolean = true) {\r\n        if (!this.still_loading() && this.basicItems.length) {\r\n            if (!creature.inventories[0].weapons.length && creature.type == \"Character\") {\r\n                this.grant_InventoryItem(creature, creature.inventories[0], this.basicItems[0], true, false, false);\r\n            }\r\n            if (!creature.inventories[0].armors.length) {\r\n                this.grant_InventoryItem(creature, creature.inventories[0], this.basicItems[1], true, false, false);\r\n            }\r\n            if (!creature.inventories[0].weapons.some(weapon => weapon.equipped == true)) {\r\n                if (creature.inventories[0].weapons.length) {\r\n                    this.onEquip(creature, creature.inventories[0], creature.inventories[0].weapons[0], true, changeAfter);\r\n                }\r\n            }\r\n            if (!creature.inventories[0].armors.some(armor => armor.equipped == true)) {\r\n                this.onEquip(creature, creature.inventories[0], creature.inventories[0].armors[0], true, changeAfter);\r\n            }\r\n        }\r\n    }\r\n\r\n    add_CustomSkill(skillName: string, type: string, abilityName: string, locked: boolean = false, recallKnowledge: boolean = false) {\r\n        this.get_Character().customSkills.push(new Skill(abilityName, skillName, type, locked, recallKnowledge));\r\n    }\r\n\r\n    remove_CustomSkill(oldSkill: Skill) {\r\n        this.get_Character().customSkills = this.get_Character().customSkills.filter(skill => skill !== oldSkill);\r\n    }\r\n\r\n    add_CustomFeat(newFeat: Feat) {\r\n        let newLength = this.get_Character().customFeats.push(Object.assign(new Feat(), JSON.parse(JSON.stringify(newFeat))));\r\n        this.get_Character().customFeats[newLength - 1] = this.savegameService.reassign(this.get_Character().customFeats[newLength - 1]);\r\n        this.set_ToChange(\"Character\", \"charactersheet\");\r\n        return newLength;\r\n    }\r\n\r\n    remove_CustomFeat(oldFeat: Feat) {\r\n        this.get_Character().customFeats = this.get_Character().customFeats.filter(skill => skill !== oldFeat);\r\n    }\r\n\r\n    get_Conditions(name: string = \"\", type: string = \"\") {\r\n        return this.conditionsService.get_Conditions(name, type);\r\n    }\r\n\r\n    get_AppliedConditions(creature: Creature, name: string = \"\", source: string = \"\", readonly: boolean = false) {\r\n        //Returns ConditionGain[] with apply=true/false for each\r\n        return this.conditionsService.get_AppliedConditions(creature, this, creature.conditions, readonly).filter(condition =>\r\n            (condition.name == name || name == \"\") &&\r\n            (condition.source == source || source == \"\")\r\n        );\r\n    }\r\n\r\n    add_Condition(creature: Creature, conditionGain: ConditionGain, reload: boolean = true, parentConditionGain: ConditionGain = null) {\r\n        let activate: boolean = true;\r\n        let originalCondition = this.get_Conditions(conditionGain.name)[0];\r\n        if (originalCondition) {\r\n            if (conditionGain.heightened < originalCondition.minLevel) {\r\n                conditionGain.heightened = originalCondition.minLevel;\r\n            }\r\n            //If the condition has an activationPrerequisite, test that first and only activate if it evaluates to a nonzero number.\r\n            if (conditionGain.activationPrerequisite) {\r\n                let testConditionGain: any = Object.assign(new ConditionGain(), JSON.parse(JSON.stringify(conditionGain)));\r\n                let testEffectGain: EffectGain = new EffectGain();\r\n                testEffectGain.value = conditionGain.activationPrerequisite;\r\n                testConditionGain.effects = [testEffectGain];\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this, testConditionGain, \"\", parentConditionGain);\r\n                if (effects?.[0]?.value == \"0\" || !(parseInt(effects?.[0]?.value))) {\r\n                    activate = false;\r\n                }\r\n            }\r\n            if (activate) {\r\n                //If there are choices, and the choice is not set by the gain, take the default or the first choice.\r\n                if (originalCondition.choices.length && !conditionGain.choice) {\r\n                    conditionGain.choice = originalCondition.choice || originalCondition.choices[0].name;\r\n                }\r\n                //If there is a choice, check if there is a nextStage value of that choice.\r\n                if (conditionGain.choice) {\r\n                    conditionGain.nextStage\r\n                }\r\n                conditionGain.nextStage = originalCondition.choices.find(choice => choice.name == conditionGain.choice)?.nextStage || 0;\r\n                if (conditionGain.nextStage) {\r\n                    this.set_ToChange(creature.type, \"time\");\r\n                    this.set_ToChange(creature.type, \"health\");\r\n                }\r\n                if (conditionGain.heightened < originalCondition.minLevel) {\r\n                    conditionGain.heightened = originalCondition.minLevel\r\n                }\r\n                if (!conditionGain.radius) {\r\n                    conditionGain.radius = originalCondition.radius;\r\n                }\r\n                //Set persistent if the condition is, unless ignorePersistent is set. Don't just set gain.persistent = condition.persistent, because condition.persistent could be false.\r\n                if (originalCondition.persistent && !conditionGain.ignorePersistent) {\r\n                    conditionGain.persistent = true;\r\n                }\r\n                conditionGain.decreasingValue = originalCondition.decreasingValue;\r\n                conditionGain.notes = originalCondition.notes;\r\n                conditionGain.showNotes = conditionGain.notes && true;\r\n                let newLength: number = 0;\r\n                if (conditionGain.addValue) {\r\n                    let existingConditions = creature.conditions.filter(gain => gain.name == conditionGain.name);\r\n                    if (existingConditions.length) {\r\n                        existingConditions.forEach(gain => {\r\n                            gain.value += conditionGain.addValue;\r\n                            //If this condition gain has both locked properties and addValue, transfer these properties and change the parentID to this one, but only if the existing gain does not have them.\r\n                            if (conditionGain.lockedByParent && !gain.lockedByParent) {\r\n                                gain.lockedByParent = true;\r\n                                gain.parentID = conditionGain.parentID;\r\n                            }\r\n                            if (conditionGain.valueLockedByParent && !gain.valueLockedByParent) {\r\n                                gain.valueLockedByParent = true;\r\n                                gain.parentID = conditionGain.parentID;\r\n                            }\r\n                            if (conditionGain.persistent) {\r\n                                gain.persistent = true;\r\n                            }\r\n                        })\r\n                        this.set_ToChange(creature.type, \"effects\");\r\n                    } else {\r\n                        if (!conditionGain.value) {\r\n                            conditionGain.value = conditionGain.addValue;\r\n                        }\r\n                        if (conditionGain.value > 0) {\r\n                            newLength = creature.conditions.push(conditionGain);\r\n                        }\r\n                    }\r\n                } else {\r\n                    newLength = creature.conditions.push(conditionGain);\r\n                }\r\n                if (newLength) {\r\n                    this.conditionsService.process_Condition(creature, this, this.effectsService, this.itemsService, conditionGain, this.conditionsService.get_Conditions(conditionGain.name)[0], true);\r\n                    this.set_ToChange(creature.type, \"effects\");\r\n                    if (reload) {\r\n                        this.process_ToChange();\r\n                    }\r\n                    return newLength;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    remove_Condition(creature: Creature, conditionGain: ConditionGain, reload: boolean = true, increaseWounded: boolean = true, keepPersistent: boolean = true, ignoreLockedByParent: boolean = false, ignoreEndsWithConditions: boolean = false) {\r\n        //Find the correct condition gain to remove. This can be the exact same as the conditionGain parameter, but if it isn't, find the most similar one:\r\n        //- Find all condition gains with similar name, value and source, then if there are more than one of those:\r\n        //-- Try finding one that has the exact same attributes.\r\n        //-- If none is found, find one that has the same duration.\r\n        //- If none is found or the list has only one, take the first.\r\n        let oldConditionGain: ConditionGain = creature.conditions.find(gain => gain === conditionGain);\r\n        if (!oldConditionGain) {\r\n            let oldConditionGains: ConditionGain[] = creature.conditions.filter(gain => gain.name == conditionGain.name && gain.value == conditionGain.value && gain.source == conditionGain.source);\r\n            if (oldConditionGains.length > 1) {\r\n                oldConditionGain = oldConditionGains.find(gain => JSON.stringify(gain) == JSON.stringify(conditionGain))\r\n                if (!oldConditionGain) {\r\n                    oldConditionGain = oldConditionGains.find(gain => gain.duration == conditionGain.duration)\r\n                }\r\n            }\r\n            if (!oldConditionGain) {\r\n                oldConditionGain = oldConditionGains[0]\r\n            }\r\n        }\r\n        let originalCondition = this.get_Conditions(conditionGain.name)[0];\r\n        //If this condition is locked by its parent, it can't be removed.\r\n        if (oldConditionGain && (ignoreLockedByParent || !oldConditionGain.lockedByParent)) {\r\n            if (oldConditionGain.nextStage || oldConditionGain.duration == 1) {\r\n                this.set_ToChange(creature.type, \"time\");\r\n                this.set_ToChange(creature.type, \"health\");\r\n            }\r\n            //Remove the parent lock for all conditions locked by this, so that they can be removed in the next step or later (if persistent).\r\n            this.remove_LockedByParent(creature, oldConditionGain.id);\r\n            this.get_AppliedConditions(creature, \"\", oldConditionGain.name, true).filter(gain =>\r\n                gain.parentID == oldConditionGain.id\r\n            ).forEach(extraCondition => {\r\n                if (!(keepPersistent && extraCondition.persistent)) {\r\n                    //Remove child conditions that are not persistent, or remove all if keepPersistent is false.\r\n                    this.remove_Condition(creature, extraCondition, false, increaseWounded, keepPersistent, ignoreLockedByParent, ignoreEndsWithConditions);\r\n                } else if (extraCondition.persistent) {\r\n                    //If this condition adds persistent conditions, don't remove them, but remove the persistent flag as its parent is gone.\r\n                    this.remove_Persistent(creature, extraCondition);\r\n                }\r\n            })\r\n            creature.conditions.splice(creature.conditions.indexOf(oldConditionGain), 1)\r\n            this.conditionsService.process_Condition(creature, this, this.effectsService, this.itemsService, oldConditionGain, originalCondition, false, increaseWounded, ignoreEndsWithConditions);\r\n            this.set_ToChange(creature.type, \"effects\");\r\n            if (reload) {\r\n                this.process_ToChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    remove_Persistent(creature: Creature, conditionGain: ConditionGain) {\r\n        //This function removes the persistent attribute from a condition gain, allowing it to be removed normally.\r\n        //Find the correct condition to remove the persistent attribute:\r\n        //- Find all persistent condition gains with similar name, value and source, then if there are more than one of those:\r\n        //-- Try finding one that has the exact same attributes.\r\n        //-- If none is found, find one that has the same duration.\r\n        //- If none is found or the list has only one, take the first.\r\n        let oldConditionGain: ConditionGain;\r\n        let oldConditionGains: ConditionGain[] = creature.conditions.filter(gain => gain.name == conditionGain.name && gain.source == conditionGain.source && gain.persistent);\r\n        if (oldConditionGains.length > 1) {\r\n            oldConditionGain = oldConditionGains.find(gain => JSON.stringify(gain) == JSON.stringify(conditionGain))\r\n            if (!oldConditionGain) {\r\n                oldConditionGain = oldConditionGains.find(gain => gain.duration == conditionGain.duration)\r\n            }\r\n        }\r\n        if (!oldConditionGain) {\r\n            oldConditionGain = oldConditionGains[0]\r\n        }\r\n        if (oldConditionGain) {\r\n            oldConditionGain.persistent = false;\r\n        }\r\n    }\r\n\r\n    remove_LockedByParent(creature: Creature, id: string) {\r\n        //This function removes the lockedByParent and lockedByID attributes from all condition gains locked by the given ID.\r\n        creature.conditions.filter(gain => gain.parentID == id).forEach(gain => {\r\n            gain.lockedByParent = false;\r\n            gain.valueLockedByParent = false;\r\n        });\r\n    }\r\n\r\n    process_OnceEffect(creature: Creature, effectGain: EffectGain, conditionValue: number = 0, conditionHeightened: number = 0, conditionChoice: string = \"\", conditionSpellCastingAbility: string = \"\") {\r\n        let value = 0;\r\n        try {\r\n            //we eval the effect value by sending this effect gain to get_SimpleEffects() and receive the resulting effect.\r\n            let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this, { effects: [effectGain], spellSource: effectGain.spellSource, value: conditionValue, heightened: conditionHeightened, choice: conditionChoice, spellCastingAbility: conditionSpellCastingAbility });\r\n            if (effects.length) {\r\n                let effect = effects[0];\r\n                if (effect?.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                    //I don't understand why this is done. I guess we don't want floats, but why not simply take the int?\r\n                    if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                        value = parseInt(effect.value);\r\n                    }\r\n                }\r\n            } else {\r\n                value = 0;\r\n            }\r\n        } catch (error) {\r\n            value = 0;\r\n        }\r\n        switch (effectGain.affected) {\r\n            case \"Focus Points\":\r\n                (creature as Character).class.focusPoints = Math.min((creature as Character).class.focusPoints, this.get_MaxFocusPoints());\r\n                //We intentionally add the point after we set the limit. This allows us to gain focus points with feats and raise the current points\r\n                // before the limit is increased. The focus points are automatically limited in the spellbook component, where they are displayed, and when casting focus spells.\r\n                (creature as Character).class.focusPoints += value;\r\n                this.set_ToChange(\"Character\", \"spellbook\");\r\n                break;\r\n            case \"Temporary HP\":\r\n                //When you get temporary HP, some things to process:\r\n                //- If you already have temporary HP, add this amount to the selection. The player needs to choose one amount; they are not cumulative.\r\n                //- If you are setting temporary HP manually, or if the current amount is 0, skip the selection and remove all the other options.\r\n                //- If you are losing temporary HP, lose only those that come from the same source.\r\n                //-- If that's the current effective amount, remove all other options (if you are \"using\" your effective temporary HP, we assume that you have made the choice for this amount). \r\n                //--- If the current amount is 0 after loss, reset the temporary HP.\r\n                //-- Remove it if it's not the effective amount.\r\n                if (value > 0) {\r\n                    if (effectGain.source == \"Manual\") {\r\n                        creature.health.temporaryHP[0] = { amount: value, source: effectGain.source, sourceId: \"\" };\r\n                        creature.health.temporaryHP.length = 1;\r\n                    } else if (creature.health.temporaryHP[0].amount == 0) {\r\n                        creature.health.temporaryHP[0] = { amount: value, source: effectGain.source, sourceId: effectGain.sourceId };\r\n                        creature.health.temporaryHP.length = 1;\r\n                    } else {\r\n                        creature.health.temporaryHP.push({ amount: value, source: effectGain.source, sourceId: effectGain.sourceId });\r\n                    }\r\n                } else {\r\n                    let targetTempHPSet = creature.health.temporaryHP.find(tempHPSet => ((tempHPSet.source == \"Manual\") && (effectGain.source == \"Manual\")) || tempHPSet.sourceId == effectGain.sourceId)\r\n                    if (targetTempHPSet) {\r\n                        targetTempHPSet.amount += value;\r\n                        if (targetTempHPSet === creature.health.temporaryHP[0]) {\r\n                            creature.health.temporaryHP.length = 1;\r\n                            if (targetTempHPSet.amount <= 0) {\r\n                                creature.health.temporaryHP[0] = { amount: 0, source: \"\", sourceId: \"\" };\r\n                            }\r\n                        } else {\r\n                            if (targetTempHPSet.amount <= 0) {\r\n                                creature.health.temporaryHP.splice(creature.health.temporaryHP.indexOf(targetTempHPSet), 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.set_ToChange(creature.type, \"health\");\r\n                //Update Health and Time because having multiple temporary HP keeps you from ticking time and resting.\r\n                this.set_ToChange(\"Character\", \"health\");\r\n                this.set_ToChange(\"Character\", \"time\");\r\n                break;\r\n            case \"HP\":\r\n                if (value > 0) {\r\n                    creature.health.heal(creature, this, this.effectsService, value, true)\r\n                } else if (value < 0) {\r\n                    creature.health.takeDamage(creature, this, this.effectsService, -value, false)\r\n                }\r\n                this.set_ToChange(creature.type, \"health\");\r\n                this.set_ToChange(creature.type, \"effects\");\r\n                break;\r\n            case \"Raise Shield\":\r\n                let shield = this.get_Character().inventories[0].shields.find(shield => shield.equipped);\r\n                if (shield) {\r\n                    if (value > 0) {\r\n                        shield.raised = true;\r\n                    } else {\r\n                        shield.raised = false;\r\n                    }\r\n                    this.set_ToChange(creature.type, \"defense\");\r\n                    this.set_ToChange(creature.type, \"effects\");\r\n                }\r\n                break;\r\n            case \"Cover\":\r\n                this.defenseService.get_AC().set_Cover(creature, value, null, this, this.conditionsService);\r\n                break;\r\n        }\r\n    }\r\n\r\n    have_Trait(object: any, traitName: string) {\r\n        return this.traitsService.have_Trait(this, object, traitName);\r\n    }\r\n\r\n    get_Abilities(name: string = \"\") {\r\n        return this.abilitiesService.get_Abilities(name)\r\n    }\r\n\r\n    get_Skills(creature: Creature, name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        return this.skillsService.get_Skills(creature.customSkills, name, type, locked)\r\n    }\r\n\r\n    get_SkillLevelName(level: number, short: boolean = false) {\r\n        return this.skillsService.get_SkillLevelName(level, short);\r\n    }\r\n\r\n    get_Feats(name: string = \"\", type: string = \"\") {\r\n        return this.featsService.get_Feats(this.get_Character().customFeats, name, type);\r\n    }\r\n\r\n    get_Features(name: string = \"\") {\r\n        return this.featsService.get_Features(name);\r\n    }\r\n\r\n    get_FeatsAndFeatures(name: string = \"\", type: string = \"\", includeSubTypes: boolean = false, includeCountAs: boolean = false) {\r\n        //Use this function very sparingly! See get_All() for details.\r\n        return this.featsService.get_All(this.get_Character().customFeats, name, type, includeSubTypes, includeCountAs);\r\n    }\r\n\r\n    get_Health(creature: Creature) {\r\n        return creature.health;\r\n    }\r\n\r\n    get_AnimalCompanionLevels() {\r\n        return this.animalCompanionsService.get_CompanionLevels();\r\n    }\r\n\r\n    get_Senses(creature: Creature, charLevel: number = this.get_Character().level) {\r\n        let senses: string[] = [];\r\n\r\n        let ancestrySenses: string[];\r\n        if (creature.type == \"Familiar\") {\r\n            ancestrySenses = (creature as Familiar).senses;\r\n        } else {\r\n            ancestrySenses = (creature as AnimalCompanion | Character).class?.ancestry?.senses;\r\n        }\r\n        if (ancestrySenses.length) {\r\n            senses.push(...ancestrySenses)\r\n        }\r\n        if (creature.type == \"Character\") {\r\n            let character = creature as Character;\r\n            let heritageSenses = character.class.heritage.senses\r\n            if (heritageSenses.length) {\r\n                senses.push(...heritageSenses)\r\n            }\r\n            this.get_FeatsAndFeatures()\r\n                .filter(feat => feat.senses?.length && feat.have(character, this, charLevel))\r\n                .forEach(feat => {\r\n                    senses.push(...feat.senses);\r\n                });\r\n        }\r\n        if (creature.type == \"Familiar\") {\r\n            let familiar = creature as Familiar;\r\n            familiar.abilities.feats.map(gain => this.familiarsService.get_FamiliarAbilities(gain.name)[0]).filter(ability => ability?.senses.length).forEach(ability => {\r\n                senses.push(...ability.senses);\r\n            })\r\n        }\r\n        this.get_AppliedConditions(creature).filter(gain => gain.apply).forEach(gain => {\r\n            let condition = this.conditionsService.get_Conditions(gain.name)[0]\r\n            if (condition?.senses.length) {\r\n                senses.push(...condition.senses.filter(sense => !sense.conditionChoiceFilter || sense.conditionChoiceFilter == gain.choice).map(sense => sense.name))\r\n            }\r\n        });\r\n        return Array.from(new Set(senses));\r\n    }\r\n\r\n    process_Feat(creature: Character | Familiar, feat: Feat, featName: string, choice: FeatChoice, level: Level, taken: boolean) {\r\n        this.featsService.process_Feat(creature, this, feat, featName, choice, level, taken);\r\n    }\r\n\r\n    get_FeatsShowingOn(objectName: string = \"all\") {\r\n        return this.get_FeatsAndFeatures().filter(feat =>\r\n            feat.hints.find(hint =>\r\n                hint.showon?.split(\",\").find(showon =>\r\n                    objectName.toLowerCase() == \"all\" ||\r\n                    showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                    (\r\n                        objectName.toLowerCase().includes(\"lore\") &&\r\n                        showon.trim().toLowerCase() == \"lore\"\r\n                    )\r\n                )\r\n            ) && feat.have(this.get_Character(), this, this.get_Character().level)\r\n        )\r\n    }\r\n\r\n    get_CompanionShowingOn(objectName: string = \"all\") {\r\n        //Get showon elements from Companion Ancestry and Specialization\r\n        return []\r\n            .concat(\r\n                [this.get_Companion().class.ancestry]\r\n                    .filter(ancestry =>\r\n                        ancestry.hints\r\n                            .find(hint =>\r\n                                hint.showon?.split(\",\")\r\n                                    .find(showon =>\r\n                                        objectName == \"all\" ||\r\n                                        showon.trim().toLowerCase() == objectName.toLowerCase()\r\n                                    )\r\n                            )\r\n                    )\r\n            )\r\n            .concat(\r\n                this.get_Companion().class.specializations\r\n                    .filter(spec =>\r\n                        spec.hints\r\n                            .find(hint =>\r\n                                hint.showon?.split(\",\")\r\n                                    .find(showon =>\r\n                                        objectName == \"all\" ||\r\n                                        showon.trim().toLowerCase() == objectName.toLowerCase()\r\n                                    )\r\n                            )\r\n                    )\r\n            )\r\n            //Return any feats that include e.g. Companion:Athletics\r\n            .concat(\r\n                this.get_FeatsShowingOn(\"Companion:\" + objectName)\r\n            )\r\n    }\r\n\r\n    get_FamiliarShowingOn(objectName: string = \"all\") {\r\n        //Get showon elements from Familiar Abilities\r\n        return this.familiarsService.get_FamiliarAbilities().filter(feat =>\r\n            feat.hints.find(hint =>\r\n                hint.showon?.split(\",\").find(showon =>\r\n                    objectName.toLowerCase() == \"all\" ||\r\n                    showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                    (\r\n                        objectName.toLowerCase().includes(\"lore\") &&\r\n                        showon.trim().toLowerCase() == \"lore\"\r\n                    )\r\n                )\r\n            ) && feat.have(this.get_Familiar(), this)\r\n            //Return any feats that include e.g. Companion:Athletics\r\n        ).concat(this.get_FeatsShowingOn(\"Familiar:\" + objectName))\r\n    }\r\n\r\n    get_ConditionsShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        return this.get_AppliedConditions(creature)\r\n            .filter(conditionGain => conditionGain.apply)\r\n            .map(conditionGain => this.get_Conditions(conditionGain.name)[0])\r\n            .filter(condition =>\r\n                condition?.hints.find(hint =>\r\n                    hint.showon?.split(\",\").find(showon =>\r\n                        objectName.trim().toLowerCase() == \"all\" ||\r\n                        showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                        (\r\n                            objectName.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n    }\r\n\r\n    get_OwnedActivities(creature: Creature, levelNumber: number = creature.level, all: boolean = false) {\r\n        let activities: (ActivityGain | ItemActivity)[] = []\r\n        if (!this.still_loading()) {\r\n            if (creature.type == \"Character\") {\r\n                activities.push(...(creature as Character).class.activities.filter(gain => gain.level <= levelNumber));\r\n            }\r\n            if (creature.type == \"Companion\") {\r\n                activities.push(...(creature as AnimalCompanion).class?.ancestry?.activities.filter(gain => gain.level <= levelNumber));\r\n            }\r\n            //Get all applied condition gains' activity gains. These were copied from the condition when it was added.\r\n            this.get_AppliedConditions(creature, \"\", \"\", true).filter(gain => gain.apply).forEach(gain => {\r\n                activities.push(...gain.gainActivities);\r\n            });\r\n            //With the all parameter, get all activities of all items regardless of whether they are equipped or invested or slotted.\r\n            // This is used for ticking down cooldowns.\r\n            if (all) {\r\n                creature.inventories.forEach(inv => {\r\n                    inv.allEquipment().forEach(item => {\r\n                        if (item.gainActivities.length) {\r\n                            activities.push(...item.gainActivities);\r\n                        }\r\n                        if (item.activities.length) {\r\n                            activities.push(...item.activities);\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.propertyRunes) {\r\n                            item.propertyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.bladeAllyRunes) {\r\n                            item.bladeAllyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from Oils emulating runes\r\n                        if (item.oilsApplied) {\r\n                            item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.activities).forEach(oil => {\r\n                                activities.push(...oil.runeEffect.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from slotted Aeon Stones\r\n                        if ((item as WornItem).aeonStones) {\r\n                            (item as WornItem).aeonStones.filter(stone => stone.activities.length).forEach(stone => {\r\n                                activities.push(...stone.activities);\r\n                            })\r\n                        }\r\n                    })\r\n                    inv.allRunes().forEach(rune => {\r\n                        if (rune.activities.length) {\r\n                            activities.push(...rune.activities);\r\n                        }\r\n                    })\r\n                })\r\n            } else {\r\n                //Without the all parameter, get activities only from equipped and invested items and their slotted items.\r\n                creature.inventories[0].allEquipment()\r\n                    .filter(item =>\r\n                        (item.equippable ? item.equipped : true) &&\r\n                        (item.can_Invest() ? item.invested : true) &&\r\n                        !item.broken\r\n                    ).forEach((item: Equipment) => {\r\n                        if (item.gainActivities.length) {\r\n                            activities.push(...item.gainActivities);\r\n                        }\r\n                        //DO NOT get resonant activities at this point\r\n                        if (item.activities.length) {\r\n                            activities.push(...item.activities.filter(activity => !activity.resonant || all));\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.propertyRunes) {\r\n                            item.propertyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.bladeAllyRunes && item[\"bladeAlly\"]) {\r\n                            item.bladeAllyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from Oils emulating runes\r\n                        if (item.oilsApplied) {\r\n                            item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.activities).forEach(oil => {\r\n                                activities.push(...oil.runeEffect.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from slotted Aeon Stones, including resonant activities\r\n                        if ((item as WornItem).aeonStones) {\r\n                            (item as WornItem).aeonStones.filter(stone => stone.activities.length).forEach(stone => {\r\n                                activities.push(...stone.activities);\r\n                            })\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n        return activities.sort(function (a, b) {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    get_ActivitiesShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        return this.get_OwnedActivities(creature)\r\n            //Conflate ActivityGains and their respective Activities into one object...\r\n            .map(gain => gain.constructor == ItemActivity ? [gain, gain] : [gain, this.activitiesService.get_Activities(gain.name)[0]])\r\n            //...so that we can find the activities where the gain is active or the activity doesn't need to be toggled...\r\n            .filter((gainAndActivity: [ActivityGain | ItemActivity, Activity]) => gainAndActivity[1] && (gainAndActivity[0].active || !gainAndActivity[1].toggle))\r\n            //...and then keep only the activities.\r\n            .map((gainAndActivity: [ActivityGain | ItemActivity, Activity]) => gainAndActivity[1])\r\n            .filter(activity =>\r\n                activity?.hints.find(hint =>\r\n                    hint.showon.split(\",\").find(showon =>\r\n                        objectName.trim().toLowerCase() == \"all\" ||\r\n                        showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                        (\r\n                            objectName.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n    }\r\n\r\n    get_ItemsShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        let returnedItems: Item[] = [];\r\n        //Prepare function to add items whose hints match the objectName.\r\n        function get_Hint(item: Equipment | Oil | WornItem | ArmorRune) {\r\n            if (item.hints\r\n                .find(hint =>\r\n                    hint.showon.split(\",\").find(showon =>\r\n                        objectName.trim().toLowerCase() == \"all\" ||\r\n                        showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                        (\r\n                            objectName.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n                )\r\n            ) {\r\n                returnedItems.push(item);\r\n            }\r\n        }\r\n        creature.inventories.forEach(inventory => {\r\n            inventory.allEquipment().filter(item => (item.equippable ? item.equipped : true) && item.amount && !item.broken && (item.can_Invest() ? item.invested : true)).forEach(item => {\r\n                get_Hint(item);\r\n                item.oilsApplied.forEach(oil => {\r\n                    get_Hint(oil);\r\n                });\r\n                if ((item as WornItem).aeonStones) {\r\n                    (item as WornItem).aeonStones.forEach(stone => {\r\n                        get_Hint(stone);\r\n                    });\r\n                }\r\n                if (item.moddable == \"armor\" && (item as Equipment).propertyRunes) {\r\n                    (item as Equipment).propertyRunes.forEach(rune => {\r\n                        get_Hint(rune as ArmorRune);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return returnedItems;\r\n    }\r\n\r\n    get_ArmorSpecializationsShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        if (creature.type == \"Character\") {\r\n            return creature.inventories[0].armors.find(armor => armor.equipped).get_ArmorSpecialization(creature, this)\r\n                .filter(spec =>\r\n                    spec?.hints\r\n                        .find(hint =>\r\n                            hint.showon.split(\",\")\r\n                                .find(showon =>\r\n                                    objectName.trim().toLowerCase() == \"all\" ||\r\n                                    showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                                    (\r\n                                        objectName.toLowerCase().includes(\"lore\") &&\r\n                                        showon.trim().toLowerCase() == \"lore\"\r\n                                    )\r\n                                )\r\n                        )\r\n                )\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_MaxFocusPoints() {\r\n        let focusPoints: number = 0;\r\n        this.effectsService.get_AbsolutesOnThis(this.get_Character(), \"Focus Pool\").forEach(effect => {\r\n            focusPoints = parseInt(effect.setValue);\r\n        })\r\n        this.effectsService.get_RelativesOnThis(this.get_Character(), \"Focus Pool\").forEach(effect => {\r\n            focusPoints += parseInt(effect.value);\r\n        })\r\n        return Math.min(focusPoints, 3);\r\n    }\r\n\r\n    get_AC() {\r\n        return this.defenseService.get_AC();\r\n    }\r\n\r\n    initialize_AnimalCompanion() {\r\n        let character = this.get_Character();\r\n        if (character.class.animalCompanion) {\r\n            character.class.animalCompanion = Object.assign(new AnimalCompanion(), character.class.animalCompanion);\r\n            character.class.animalCompanion = this.reassign(character.class.animalCompanion);\r\n            character.class.animalCompanion.class.reset_levels(this);\r\n            character.class.animalCompanion.set_Level(this);\r\n            this.equip_BasicItems(character.class.animalCompanion);\r\n            this.set_ToChange(\"Companion\", \"all\");\r\n        }\r\n    }\r\n\r\n    cleanup_Familiar() {\r\n        this.get_Familiar().abilities.feats.forEach(gain => {\r\n            this.get_Character().take_Feat(this.get_Familiar(), this, undefined, gain.name, false, this.get_Familiar().abilities, undefined);\r\n        })\r\n    }\r\n\r\n    initialize_Familiar() {\r\n        let character = this.get_Character();\r\n        if (character.class.familiar) {\r\n            character.class.familiar = Object.assign(new Familiar(), character.class.familiar);\r\n            character.class.familiar = this.reassign(character.class.familiar);\r\n            this.set_ToChange(\"Familiar\", \"all\");\r\n        }\r\n    }\r\n\r\n    initialize(id: string) {\r\n        this.set_Changed(\"top-bar\");\r\n        this.loading = true;\r\n        this.traitsService.initialize();\r\n        this.abilitiesService.initialize();\r\n        this.activitiesService.initialize();\r\n        this.featsService.initialize();\r\n        this.historyService.initialize();\r\n        this.classesService.initialize();\r\n        this.conditionsService.initialize();\r\n        this.spellsService.initialize();\r\n        this.skillsService.initialize()\r\n        this.itemsService.initialize();\r\n        this.effectsService.initialize(this);\r\n        this.deitiesService.initialize();\r\n        this.animalCompanionsService.initialize();\r\n        this.familiarsService.initialize();\r\n        this.savegameService.initialize(this);\r\n        if (id) {\r\n            this.me = new Character();\r\n            this.load_CharacterFromDB(id)\r\n                .subscribe((results: string[]) => {\r\n                    this.loader = results;\r\n                    this.finish_loading()\r\n                }, (error) => {\r\n                    console.log('Error loading character from database: ' + error.message);\r\n                });\r\n        } else {\r\n            this.me = new Character();\r\n            this.finish_loading();\r\n        }\r\n    }\r\n\r\n    load_CharacterFromDB(id: string): Observable<string[]> {\r\n        return this.savegameService.load_CharacterFromDB(id);\r\n    }\r\n\r\n    delete_Character(savegame: Savegame) {\r\n        this.savegameService.delete_CharacterFromDB(savegame).subscribe((results) => {\r\n            console.log(\"Deleted \" + (savegame.name || \"character\") + \" from database.\");\r\n            this.savegameService.initialize(this);\r\n        }, (error) => {\r\n            console.log('Error deleting from database: ' + error.message);\r\n        });\r\n    }\r\n\r\n    reassign(object: any) {\r\n        return this.savegameService.reassign(object, \"\", this.itemsService);\r\n    }\r\n\r\n    finish_loading() {\r\n        if (this.loader) {\r\n            this.me = Object.assign(new Character(), JSON.parse(JSON.stringify(this.loader)));\r\n            this.loader = [];\r\n            this.finalize_Character();\r\n        }\r\n    }\r\n\r\n    finalize_Character() {\r\n        if (this.itemsService.still_loading() || this.animalCompanionsService.still_loading()) {\r\n            setTimeout(() => {\r\n                this.finalize_Character();\r\n            }, 500)\r\n        } else {\r\n            //Use this.me here instead of this.get_Character() because we're still_loading()\r\n            this.me = this.savegameService.load_Character(this.me, this.itemsService, this.classesService, this.historyService, this.animalCompanionsService)\r\n            if (this.loading) { this.loading = false; }\r\n            this.grant_BasicItems();\r\n            this.create_WeaponFeats();\r\n            this.characterChanged$ = this.changed.asObservable();\r\n            this.viewChanged$ = this.viewChanged.asObservable();\r\n            this.verify_Feats();\r\n            this.timeService.set_YourTurn(this.get_Character().yourTurn);\r\n            this.set_Accent();\r\n            this.set_Darkmode();\r\n            this.trigger_FinalChange();\r\n        }\r\n    }\r\n\r\n    trigger_FinalChange() {\r\n        if (\r\n            this.traitsService.still_loading() ||\r\n            this.featsService.still_loading() ||\r\n            this.historyService.still_loading() ||\r\n            this.classesService.still_loading() ||\r\n            this.conditionsService.still_loading() ||\r\n            this.spellsService.still_loading() ||\r\n            this.itemsService.still_loading()\r\n        ) {\r\n            setTimeout(() => {\r\n                this.trigger_FinalChange();\r\n            }, 500)\r\n        } else {\r\n            //Update everything once.\r\n            this.set_Changed();\r\n            this.set_ToChange(\"Character\", \"effects\");\r\n            this.process_ToChange();\r\n        }\r\n    }\r\n\r\n    save_Character() {\r\n        this.get_Character().yourTurn = this.timeService.get_YourTurn();\r\n        this.savegameService.save_Character(this.get_Character(), this.itemsService, this.classesService, this.historyService, this.animalCompanionsService).subscribe((result) => {\r\n            if (result[\"lastErrorObject\"] && result[\"lastErrorObject\"].updatedExisting) {\r\n                console.log(\"Saved \" + (this.get_Character().name || \"character\") + \" to database.\");\r\n            } else {\r\n                console.log(\"Created \" + (this.get_Character().name || \"character\") + \" on database.\");\r\n            }\r\n            this.savegameService.initialize(this);\r\n        }, (error) => {\r\n            console.log('Error saving to database: ' + error.message);\r\n        });\r\n\r\n    }\r\n\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { SpellChoice } from './SpellChoice';\r\nimport { Scroll } from './Scroll';\r\n\r\nexport class SpellCasting {\r\n    public readonly _className: string = this.constructor.name;\r\n    //The name of the class that this choice belongs to.\r\n    //Important to identify the class's spellcasting key ability.\r\n    public className: string = \"\";\r\n    public ability: string = \"\";\r\n    //The level where you learn to spell casts using this method.\r\n    public charLevelAvailable: number = 0;\r\n    public tradition: \"\"|\"Arcane\"|\"Divine\"|\"Occult\"|\"Primal\" = \"\";\r\n    public traditionAvailable: 0;\r\n    public traditionFilter: string[] = [];\r\n    public spellChoices: SpellChoice[] = [];\r\n    //SpellSlotsUsed is for spontaneous casters and counts the spells cast on each spell level, where the index is the spell level.\r\n    //Index 0 is for Studious Capacity, which allows a single more casting each day,\r\n    // and index 11 and 12 are for Greater Vital Evolution, which allows two more.\r\n    public spellSlotsUsed: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    //SpellBookSlots is for Wizards and describes how many spells you can learn per level, where the index is the level.\r\n    //Index 0 is for cantrips. Regular wizards get 2 new spells per level and 5 on the first, and the spell level can be up to index/2 (rounded up).\r\n    public spellBookSlots: number[] = [10, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\r\n    //BondedItemCharges is for Wizards and contains charges to restore a used spell. The index is the spell level, and 0 is for all spell levels.\r\n    //Universalists get 1 for each level per rest, and all other schools get 1 for all. These are added at Rest.\r\n    public bondedItemCharges: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    public source: string = \"\";\r\n    public scrollSavant: Scroll[] = [];\r\n    constructor(public castingType: \"Focus\"|\"Innate\"|\"Prepared\"|\"Spontaneous\") {\r\n    }    \r\n}","import core from './core.json';\r\nimport custom_caverns_and_covens from './custom_caverns_and_covens.json'\r\nexport {\r\n    core,\r\n    custom_caverns_and_covens\r\n};","import core from './core.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    custom_kitsune\r\n};","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-abilities-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Abilities</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <ng-container *ngIf=\"!get_Minimized()\">\r\n            <div class=\"list-item\" *ngFor=\"let ability of get_Abilities(); trackBy:trackByIndex;\">\r\n                <ng-container\r\n                    *ngFor=\"let calculatedAbility of [ability.calculate(get_Creature(), characterService, effectsService)]; trackBy:trackByIndex;\">\r\n                    <div class=\"newrow\">\r\n                        <strong>{{ability.name}}</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedAbility.value.explain\"\r\n                                [ngClass]=\"{'penalty':calculatedAbility.penalties, 'bonus':calculatedAbility.bonuses, 'absolute':calculatedAbility.absolutes}\">\r\n                                {{calculatedAbility.value.result}}\r\n                            </div>\r\n                        </span>\r\n                        <strong>Modifier</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedAbility.mod.explain\"\r\n                                [ngClass]=\"{'penalty':calculatedAbility.modpenalties, 'bonus':calculatedAbility.modbonuses, 'absolute':calculatedAbility.modabsolutes}\">\r\n                                {{calculatedAbility.mod.result}}\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <app-tags class=\"newrow tags\" [creature]=\"creature\" [objectName]=ability.name [showTraits]=true\r\n                        [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true\r\n                        [showEffects]=true>\r\n                    </app-tags>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"get_Minimized()\">\r\n            <div class=\"list-item\" *ngFor=\"let subset of [1,2]; trackBy:trackByIndex;\">\r\n                <span *ngFor=\"let ability of get_Abilities(subset); let index = index; trackBy:trackByIndex;\">\r\n                    <ng-container\r\n                        *ngFor=\"let calculatedAbility of [ability.calculate(get_Creature(), characterService, effectsService)]; trackBy:trackByIndex;\">\r\n                        <strong>{{ability.name.substring(0, 3).toUpperCase()}}</strong>&nbsp;\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedAbility.mod.explain\"\r\n                                [ngClass]=\"{'penalty':calculatedAbility.modpenalties, 'bonus':calculatedAbility.modbonuses, 'absolute':calculatedAbility.modabsolutes}\">\r\n                                {{calculatedAbility.mod.result}}\r\n                            </div>\r\n                        </span>\r\n                    </ng-container>\r\n                </span>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { AbilitiesService} from '../abilities.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Creature } from '../Creature';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Character } from '../Character';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-abilities',\r\n    templateUrl: './abilities.component.html',\r\n    styleUrls: ['./abilities.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AbilitiesComponent implements OnInit {\r\n    \r\n    @Input()\r\n    public creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public abilitiesService: AbilitiesService,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.abilitiesMinimized = !this.characterService.get_Character().settings.abilitiesMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.abilitiesMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_CalculatedIndex() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return 0;\r\n            case \"Companion\":\r\n                return 1;\r\n        }\r\n    }\r\n\r\n    get_Abilities(subset: number = 0) {\r\n        switch (subset) {\r\n            case 0:\r\n                return this.abilitiesService.get_Abilities();\r\n            case 1:\r\n                return this.abilitiesService.get_Abilities().filter((ability, index) => index <= 2);\r\n            case 2:\r\n                return this.abilitiesService.get_Abilities().filter((ability, index) => index >= 3);\r\n        }\r\n        \r\n    }\r\n    \r\n    still_loading() {\r\n        return this.abilitiesService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"abilities\", \"all\", this.creature.toLowerCase()].includes(target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"abilities\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div class=\"list-item\"\r\n    [ngClass]=\"{'fullsize-only':(calculatedSkill.value.result == 0), 'character-only':(calculatedSkill.level == 0 && creature == 'Companion')}\"\r\n    *ngFor=\"let calculatedSkill of [skill.calculate(get_Creature(), this.characterService,this.abilitiesService,this.effectsService, get_Character().level, isDC)]; trackBy:trackByIndex;\">\r\n    <div class=\"newrow\">\r\n        <ng-template #AbilityPopover>\r\n            <strong>Ability</strong>\r\n            {{calculatedSkill.ability}}\r\n        </ng-template>\r\n        <span>\r\n            <span class=\"fullsize-only\">\r\n                <input id=\"{{skill.name}}ShowNotes\" class=\"invisible\" type=\"checkbox\" [(ngModel)]=\"skill.showNotes\">\r\n                <label for=\"{{skill.name}}ShowNotes\" [ngbTooltip]=\"'Edit notes'\"><i class='bi-pencil-square'></i>&nbsp;</label>\r\n            </span>\r\n            <strong [ngbPopover]=\"calculatedSkill.ability ? AbilityPopover : null\">{{get_Name(skill)}}</strong>\r\n        </span>\r\n        <app-proficiency-form style=\"flex-grow:0\" [creature]=\"creature\" [skill]=\"skill\"\r\n            [characterService]=\"this.characterService\" [level]=\"this.characterService.get_Character().level\"\r\n            *ngIf=\"creature != 'Familiar'\">\r\n        </app-proficiency-form>\r\n        <span *ngIf=\"showValue\">\r\n            <div class=\"value\" [ngbPopover]=\"((isDC) ? 'DC basis: 10\\n' : '')+calculatedSkill.value.explain\"\r\n                [ngClass]=\"{'penalty':calculatedSkill.penalties, 'bonus':calculatedSkill.bonuses, 'absolute':calculatedSkill.absolutes.length}\">\r\n                {{calculatedSkill.value.result + ((isDC) ? 10 : 0)}}\r\n            </div>\r\n        </span>\r\n    </div>\r\n    <app-tags [creature]=\"creature\" [objectName]=skill.name [showTraits]=true [showFeats]=true [showItems]=true\r\n        [showActivities]=true [showConditions]=true [specialNames]=get_SpecialShowon(skill)\r\n        [specialEffects]=\"calculatedSkill.absolutes.concat(calculatedSkill.relatives)\">\r\n    </app-tags>\r\n    <div class=\"fullwidth\" [ngbCollapse]=\"!skill.showNotes\">\r\n        <div class=\"fullsize-only newrow\">\r\n            <span>\r\n                <strong>Notes</strong>\r\n                <input id=\"{{skill.name}}Notes\" type=\"textarea\" class=\"fullwidth\" [(ngModel)]=\"skill.notes\">\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { SkillsService } from '../skills.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { AbilitiesService } from '../abilities.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Skill } from '../Skill';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Effect } from '../Effect';\r\n\r\n@Component({\r\n    selector: 'app-skill',\r\n    templateUrl: './skill.component.html',\r\n    styleUrls: ['./skill.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SkillComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    skill: Skill;\r\n    @Input()\r\n    showValue: boolean = true;\r\n    @Input()\r\n    isDC: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public abilitiesService: AbilitiesService,\r\n        public skillsService: SkillsService,\r\n        public traitsService: TraitsService,\r\n        public effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        return this.characterService.get_Skills(this.get_Creature(), name, type);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Name(skill: Skill) {\r\n        if (!this.isDC && skill.name.includes(\"Spell DC\")) {\r\n            return skill.name.replace(\"Spell DC\", \"Spell Attacks\");\r\n        } else {\r\n            return skill.name;\r\n        }\r\n    }\r\n\r\n    get_SpecialShowon(skill: Skill) {\r\n        let creature = this.get_Creature();\r\n        //Under certain circumstances, some Feats apply to skills independently of their name.\r\n        //Return names that get_FeatsShowingOn should run on\r\n        let specialNames: string[] = []\r\n        //Show Path to Perfection notices on a save if any skill increases with that PtP as its source can be found\r\n        if (skill.type == \"Save\" && creature.type == \"Character\") {\r\n            if (creature.get_SkillIncreases(this.characterService, 1, this.get_Creature().level, skill.name, \"Path to Perfection\").length) {\r\n                specialNames.push(\"Path to Perfection\");\r\n            }\r\n            if (creature.get_SkillIncreases(this.characterService, 1, this.get_Creature().level, skill.name, \"Second Path to Perfection\").length) {\r\n                specialNames.push(\"Second Path to Perfection\");\r\n            }\r\n            if (creature.get_SkillIncreases(this.characterService, 1, this.get_Creature().level, skill.name, \"Third Path to Perfection\").length) {\r\n                specialNames.push(\"Third Path to Perfection\");\r\n            }\r\n        }\r\n        return specialNames;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.skillsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"individualskills\", \"all\", this.creature.toLowerCase(), this.skill.name.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature == this.creature &&\r\n                        (\r\n                            view.target == \"all\" ||\r\n                            (view.target == \"individualskills\" &&\r\n                                (\r\n                                    [this.skill.name.toLowerCase(), this.skill.ability.toLowerCase(), \"all\"].includes(view.subtarget.toLowerCase()) ||\r\n                                    (\r\n                                        this.get_Name(this.skill).toLowerCase().includes(\"attacks\") &&\r\n                                        view.subtarget == \"attacks\"\r\n                                    )\r\n                                )\r\n                            )\r\n                        )) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { WornItem } from 'src/app/WornItem';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { TimeService } from 'src/app/time.service';\r\n\r\n@Component({\r\n    selector: 'app-itemAeonStones',\r\n    templateUrl: './itemAeonStones.component.html',\r\n    styleUrls: ['./itemAeonStones.component.css']\r\n})\r\nexport class ItemAeonStonesComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: WornItem;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n\r\n    public newAeonStone: { aeonStone: WornItem, inv: ItemCollection }[];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Slots() {\r\n        let indexes: number[] = [];\r\n        for (let index = 0; index < this.item.isWayfinder; index++) {\r\n            indexes.push(index);\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n    get_Inventories() {\r\n        if (this.itemStore) {\r\n            return [this.get_CleanItems()];\r\n        } else {\r\n            return this.get_Character().inventories;\r\n        }\r\n    }\r\n\r\n    get_InitialAeonStones(index: number) {\r\n        let item = this.item;\r\n        //Start with one empty stone to select nothing.\r\n        let allStones: { aeonStone: WornItem, inv: ItemCollection }[] = [{ aeonStone: new WornItem(), inv: null }];\r\n        allStones[0].aeonStone.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (item.aeonStones[index]) {\r\n            allStones.push(this.newAeonStone[index] as { aeonStone: WornItem, inv: ItemCollection });\r\n        }\r\n        return allStones;\r\n    }\r\n\r\n    get_AeonStones(inv: ItemCollection) {\r\n        if (this.itemStore) {\r\n            return inv.wornitems.filter(wornItem => wornItem.isAeonStone).map(aeonStone => ({ aeonStone: aeonStone, inv: null }));\r\n        } else {\r\n            return inv.wornitems.filter(wornItem => wornItem.isAeonStone).map(aeonStone => ({ aeonStone: aeonStone, inv: inv }));\r\n        }\r\n    }\r\n\r\n    get_AeonStoneCooldown(stone: WornItem) {\r\n        //If any resonant activity on this aeon Stone has a cooldown, return the lowest of these in a human readable format.\r\n        if (stone.activities && stone.activities.length && stone.activities.some(activity => activity.resonant && activity.activeCooldown)) {\r\n            let lowestCooldown = Math.min(...stone.activities.filter(activity => activity.resonant && activity.activeCooldown).map(activity => activity.activeCooldown));\r\n            return \" (Cooldown: \"+this.timeService.get_Duration(lowestCooldown)+\")\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    add_AeonStone(index: number) {\r\n        let item: WornItem = this.item;\r\n        let stone: WornItem = this.newAeonStone[index].aeonStone;\r\n        let inv: ItemCollection = this.newAeonStone[index].inv;\r\n        if (!item.aeonStones[index] || stone !== item.aeonStones[index]) {\r\n            //If there is an Aeon Stone in this slot, return the old stone to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (item.aeonStones[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_AeonStone(index);\r\n                }\r\n                item.aeonStones.splice(index, 1);\r\n            }\r\n            //Then add the new Aeon Stone to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (stone.name != \"\") {\r\n                //Add a copy of the stone to the item\r\n                let newLength = item.aeonStones.push(Object.assign(new WornItem, JSON.parse(JSON.stringify(stone))));\r\n                item.aeonStones[newLength - 1] = this.characterService.reassign(item.aeonStones[newLength - 1]);\r\n                let newStone = item.aeonStones[newLength - 1];\r\n                newStone.amount = 1;\r\n                //If we are not in the item store, remove the inserted Aeon Stone from the inventory, either by decreasing the amount or by dropping the item.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, stone, false, false, false, 1);\r\n                }\r\n            }\r\n        }\r\n        this.set_ToChange(stone);\r\n        this.set_AeonStoneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_AeonStone(index: number) {\r\n        let item: WornItem = this.item;\r\n        let oldStone: WornItem = item.aeonStones[index];\r\n        this.set_ToChange(oldStone);\r\n        //Add the extracted stone to the inventory, either on an existing stack or as a new item.\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldStone, false, false, false, 1);\r\n    }\r\n\r\n    set_ToChange(stone: WornItem) {\r\n        stone.hints?.forEach(hint => {\r\n            this.characterService.set_TagsToChange(\"Character\", hint.showon);\r\n        })\r\n        if (stone.effects.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        }\r\n        if (stone.activities.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n    }\r\n\r\n    get_Title(stone: WornItem) {\r\n        if (this.itemStore && stone.price) {\r\n            return \"Price \" + this.get_Price(stone);\r\n        }\r\n    }\r\n\r\n    get_Price(stone: WornItem) {\r\n        if (stone.price) {\r\n            if (stone.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = stone.price;\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100)+\"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) {priceString += \" \";}\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10)+\"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) {priceString += \" \";}\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price+\"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    set_AeonStoneNames() {\r\n        this.newAeonStone = \r\n        (this.item.aeonStones ? [\r\n            (this.item.aeonStones[0] ? { aeonStone: this.item.aeonStones[0], inv: null } : { aeonStone: new WornItem(), inv: null }),\r\n            (this.item.aeonStones[1] ? { aeonStone: this.item.aeonStones[1], inv: null } : { aeonStone: new WornItem(), inv: null }),\r\n        ] : [{ aeonStone: new WornItem(), inv: null }, { aeonStone: new WornItem(), inv: null }]);\r\n        this.newAeonStone.filter(stone => stone.aeonStone.name == \"New Item\").forEach(stone => {\r\n            stone.aeonStone.name = \"\";\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_AeonStoneNames();\r\n    }\r\n\r\n}","<!--Changing Aeon Stones-->\r\n<div class=\"newrow\" *ngFor=\"let index of get_Slots(); trackBy:trackByIndex;\">\r\n    <strong *ngIf=\"index == 0\">Aeon Stones</strong>\r\n    <span *ngIf=\"index != 0\">&nbsp;</span>\r\n    <select [(ngModel)]=\"newAeonStone[index]\" (change)=\"add_AeonStone(index)\" [disabled]=\"!item.aeonStones[index-1] && index > 0\">\r\n        <ng-container *ngFor=\"let stone of get_InitialAeonStones(index); let initialStoneIndex = index; trackBy:trackByIndex;\">\r\n            <option [ngValue]=\"stone\" *ngIf=\"initialStoneIndex == 0\">\r\n                \r\n            </option>\r\n            <optgroup *ngIf=\"initialStoneIndex == 1\" label=\"Current stone\">\r\n                <option [ngValue]=\"stone\">\r\n                    {{stone.aeonStone.name}}\r\n                </option>\r\n            </optgroup>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n            <optgroup label=\"{{itemStore ? 'Available stones' : inv.get_Name(characterService)}}\" *ngIf=\"get_AeonStones(inv).length\">\r\n                <option *ngFor=\"let stone of get_AeonStones(inv); trackBy:trackByIndex;\" [ngValue]=\"stone\"\r\n                title=\"{{get_Title(stone.aeonStone)}}\">\r\n                    {{stone.aeonStone.amount > 1 ? stone.aeonStone.amount+\" \" : \"\"}}{{stone.aeonStone.name}}{{get_AeonStoneCooldown(stone.aeonStone)}}\r\n                </option>\r\n            </optgroup>\r\n        </ng-container>\r\n    </select>\r\n</div>","export class ItemProperty {\r\n    public desc: string = \"\";\r\n    public examples: string = \"\";\r\n    public group: string = \"\";\r\n    public key: string = \"\";\r\n    public locked: boolean = false;\r\n    public name: string = \"\";\r\n    public parent: string = \"\";\r\n    public priority: number = 0;\r\n    public property: any;\r\n    public type: string = \"\";\r\n    public validation: string = \"\";\r\n}\r\n","export class InventoryGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    //You cannot add any items to an inventory that would break its bulk limit.\r\n    public bulkLimit: number = 0;\r\n    //This is the amount of bulk that can be ignored when weighing this inventory.\r\n    public bulkReduction: number = 0;\r\n}","export class SpecializationGain {\r\n    public bladeAlly: boolean = false;\r\n    public condition: string = \"\";\r\n    public featreq: string = \"\";\r\n    public group: string = \"\";\r\n    public name: string = \"\";\r\n    public proficiency: string = \"\";\r\n    public skillLevel: number = 0;\r\n    public range: string = \"\";\r\n    public trait: string = \"\";\r\n}\r\n","<div *ngFor=\"let proficiency of [get_ProficiencyLevel()]; trackBy:trackByIndex;\">\r\n    <span class=\"proficiency\" [ngbTooltip]=\"level.title\" *ngFor=\"let level of get_Levels(); trackBy:trackByIndex;\" [ngClass]=\"{'checked':proficiency == level.value}\">{{level.key}}</span>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Skill } from '../Skill';\r\nimport { CharacterService } from '../character.service';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Character } from '../Character';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-proficiency-form',\r\n    templateUrl: './proficiency-form.component.html',\r\n    styleUrls: ['./proficiency-form.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class ProficiencyFormComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    skill: Skill;\r\n    @Input()\r\n    characterService: CharacterService;\r\n    @Input()\r\n    level: number;\r\n    @Input()\r\n    excludeTemporary: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.triggers = \"hover:click\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.container = \"body\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Character | AnimalCompanion;\r\n    }\r\n\r\n    get_Levels() {\r\n        return [\r\n            { value: 2, key: \"T\", title: \"Trained\" },\r\n            { value: 4, key: \"E\", title: \"Expert\" },\r\n            { value: 6, key: \"M\", title: \"Master\" },\r\n            { value: 8, key: \"L\", title: \"Legendary\" }\r\n        ]\r\n    }\r\n\r\n    get_ProficiencyLevel() {\r\n        return this.skill.level(this.get_Creature(), this.characterService, this.level, this.excludeTemporary);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"individualskills\", \"all\", this.creature.toLowerCase(), this.skill.name.toLowerCase()].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges()\r\n                }\r\n            });\r\n        this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature == this.creature &&\r\n                    (\r\n                        view.target == \"all\" ||\r\n                        (view.target.toLowerCase() == \"individualskills\" && [this.skill.name.toLowerCase(), this.skill.ability.toLowerCase(), \"all\"].includes(view.subtarget.toLowerCase()))\r\n                    )) {\r\n                    this.changeDetector.detectChanges()\r\n                }\r\n            });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { Condition } from '../Condition';\r\nimport { TimeService } from '../time.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { ItemProperty } from '../ItemProperty';\r\nimport { EffectGain } from '../EffectGain';\r\nimport { ItemsService } from '../items.service';\r\nimport { Creature } from '../Creature';\r\nimport { Skill } from '../Skill';\r\nimport { Ability } from '../Ability';\r\nimport { Activity } from '../Activity';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { Equipment } from '../Equipment';\r\nimport { Consumable } from '../Consumable';\r\nimport { Effect } from '../Effect';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-conditions',\r\n    templateUrl: './conditions.component.html',\r\n    styleUrls: ['./conditions.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConditionsComponent implements OnInit {\r\n\r\n    public endOn: number = 5;\r\n    public value: number = 1;\r\n    public heightened: number = 1;\r\n    public showList: string = \"\";\r\n    public showItem: string = \"\";\r\n    public wordFilter: string = \"\";\r\n    public permanent: boolean = true;\r\n    public days: number = 0;\r\n    public hours: number = 0;\r\n    public minutes: number = 0;\r\n    public turns: number = 0;\r\n    private purpose: \"conditions\" | \"customeffects\" = \"conditions\";\r\n    public newEffect: EffectGain = new EffectGain();\r\n    public validationError: string[] = [];\r\n    public validationResult: string[] = [];\r\n    public parseInt = parseInt;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private activitiesService: ActivitiesService,\r\n        private conditionsService: ConditionsService,\r\n        private effectsService: EffectsService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private traitsService: TraitsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(type) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    toggle_Item(type) {\r\n        if (this.showItem == type) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = type;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Purpose(purpose: \"conditions\" | \"customeffects\") {\r\n        this.purpose = purpose;\r\n    }\r\n\r\n    get_ShowPurpose() {\r\n        return this.purpose;\r\n    }\r\n\r\n    //If you don't use trackByIndex on certain inputs, you lose focus everytime the value changes. I don't get that, but I'm using it now.\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList) {\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = \"All\";\r\n        }\r\n    }\r\n\r\n    get_EndOn() {\r\n        return this.endOn;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.conditionsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    toggleConditionsMenu() {\r\n        this.characterService.toggle_Menu(\"conditions\");\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.characterService.get_ConditionsMenuState();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Companion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    get_Creatures(companionAvailable: boolean = undefined, familiarAvailable: boolean = undefined) {\r\n        return this.characterService.get_Creatures(companionAvailable, familiarAvailable);\r\n    }\r\n\r\n    get_VisibleConditionsSet(type: string) {\r\n        let typeKey = \"\";\r\n        switch (type) {\r\n            case \"Generic\":\r\n                typeKey = \"generic\";\r\n                break;\r\n            case \"Activities\":\r\n                typeKey = \"activities\";\r\n                break;\r\n            case \"Afflictions\":\r\n                typeKey = \"afflictions\";\r\n                break;\r\n            case \"Alchemical Elixirs\":\r\n                typeKey = \"alchemicalelixirs\";\r\n                break;\r\n            case \"Alchemical Tools\":\r\n                typeKey = \"alchemicaltools\";\r\n                break;\r\n            case \"Ammunition\":\r\n                typeKey = \"ammunition\";\r\n                break;\r\n            case \"Blood Magic\":\r\n                typeKey = \"bloodmagic\";\r\n                break;\r\n            case \"Feats\":\r\n                typeKey = \"feats\";\r\n                break;\r\n            case \"Other Consumables\":\r\n                typeKey = \"otherconsumables\";\r\n                break;\r\n            case \"Potions\":\r\n                typeKey = \"potions\";\r\n                break;\r\n            case \"Spells\":\r\n                typeKey = \"spells\";\r\n                break;\r\n            case \"Talismans\":\r\n                typeKey = \"talismans\";\r\n                break;\r\n            case \"Worn Items\":\r\n                typeKey = \"wornitems\";\r\n                break;\r\n            case \"Held Items\":\r\n                typeKey = \"helditems\";\r\n                break;\r\n        }\r\n\r\n        if (typeKey) {\r\n            return this.get_Conditions(\"\", typeKey).filter(condition =>\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        condition.name.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        condition.desc.toLowerCase().includes(this.wordFilter.toLowerCase())\r\n                    )\r\n                )\r\n            ).sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Conditions(name: string = \"\", type: string = \"\") {\r\n        return this.conditionsService.get_Conditions(name, type);\r\n    }\r\n\r\n    set_Permanent() {\r\n        this.permanent = true;\r\n        this.days = 0;\r\n        this.hours = 0;\r\n        this.minutes = 0;\r\n        this.turns = 0;\r\n    }\r\n\r\n    add_Day(days: number) {\r\n        this.days = Math.max(this.days + days, 0);\r\n        this.permanent = false;\r\n    }\r\n\r\n    set_Duration() {\r\n        if (this.permanent) {\r\n            this.permanent = false;\r\n        }\r\n    }\r\n\r\n    get_ConditionDuration(includeTurn: boolean = true) {\r\n        return this.permanent ? -1 :\r\n            (\r\n                this.days * 144000 +\r\n                this.hours * 6000 +\r\n                this.minutes * 100 +\r\n                this.turns * 10 +\r\n                (includeTurn ? (this.endOn == this.timeService.get_YourTurn() ? 0 : 5) : 0)\r\n            )\r\n    }\r\n\r\n    get_ConditionChoices(condition: Condition) {\r\n        return condition.get_Choices(this.characterService, false);\r\n    }\r\n\r\n    get_Duration(duration: number = this.get_ConditionDuration()) {\r\n        return this.timeService.get_Duration(duration, true);\r\n    }\r\n\r\n    add_Condition(creature: Creature, condition: Condition, duration: number = this.get_ConditionDuration(false)) {\r\n        let newGain = new ConditionGain();\r\n        newGain.name = condition.name;\r\n        if (duration == -1) {\r\n            newGain.duration = duration;\r\n        } else {\r\n            newGain.duration = duration + (this.endOn == this.timeService.get_YourTurn() ? 0 : 5);\r\n        }\r\n        newGain.choice = condition.choice;\r\n        if (condition.hasValue) {\r\n            newGain.value = this.value;\r\n        }\r\n        if (condition.type == \"spells\") {\r\n            newGain.heightened = this.heightened;\r\n        }\r\n        newGain.source = \"Manual\";\r\n        this.characterService.add_Condition(creature, newGain, true);\r\n    }\r\n\r\n    get_EffectsProperty() {\r\n        return this.effectsService.get_EffectProperties().find(property => !property.parent && property.key == \"effects\");\r\n    }\r\n\r\n    get_EffectValue(creature: Creature, effect: EffectGain) {\r\n        //Fit the custom effect into the box defined by get_SimpleEffects\r\n        let effectsObject = { effects: [effect] }\r\n        let result = this.effectsService.get_SimpleEffects(creature, this.characterService, effectsObject);\r\n        if (result.length) {\r\n            return result;\r\n        } else {\r\n            //If the EffectGain did not produce an effect, return a blank effect instead.\r\n            return [new Effect()];\r\n        }\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode != 45 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_Items();\r\n    }\r\n\r\n    get_Inventories() {\r\n        return this.get_Character().inventories;\r\n    }\r\n\r\n    get_EffectInvalid() {\r\n        if (!this.newEffect.affected || (!this.newEffect.toggle && !this.newEffect.setValue && this.newEffect.value == \"0\")) {\r\n            return \"This effect will not do anything.\"\r\n        };\r\n    }\r\n\r\n    add_Effect(creature: Creature) {\r\n        let duration: number = this.get_ConditionDuration(false);\r\n        let newLength = creature.effects.push(Object.assign(new EffectGain(), JSON.parse(JSON.stringify(this.newEffect))));\r\n        if (duration == -1) {\r\n            creature.effects[newLength - 1].duration = duration;\r\n        } else {\r\n            creature.effects[newLength - 1].duration = duration + (this.endOn == this.timeService.get_YourTurn() ? 0 : 5);\r\n        }\r\n        creature.effects[newLength - 1].maxDuration = creature.effects[newLength - 1].duration;\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.set_ToChange(creature.type, \"conditions\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_Effect(creature: Creature, index: number) {\r\n        creature.effects.splice(index, 1);\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.set_ToChange(creature.type, \"conditions\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    update_Effects(creature: Creature) {\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.set_ToChange(creature.type, \"conditions\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    validate(propertyData: ItemProperty, index: number) {\r\n        let value = this.newEffect[propertyData.key]\r\n        if (propertyData.key == \"value\" && propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && effect.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError[index] = \"\";\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError[index] = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError[index] = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                        this.validationResult[index] = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError[index] = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                    this.validationResult[index] = \"\";\r\n                }\r\n            }\r\n        } else if (propertyData.key == \"setValue\" && propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && (parseInt(effect.value) || parseFloat(effect.value)) || parseInt(effect.value) == 0) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError[index] = \"\";\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError[index] = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError[index] = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                        this.validationResult[index] = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError[index] = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                    this.validationResult[index] = \"\";\r\n                }\r\n            }\r\n        } else if (propertyData.validation == \"1plus\") {\r\n            if (parseInt(value) >= 1) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = 1\r\n            }\r\n        } else if (propertyData.validation == \"0plus\") {\r\n            if (parseInt(value) >= 0) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = 0\r\n            }\r\n        } else if (propertyData.validation == \"=1plus\") {\r\n            if (parseInt(value) >= -1) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = -1\r\n            }\r\n        } else if (propertyData.validation == \"0minus\") {\r\n            if (parseInt(value) <= 0) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = 0\r\n            }\r\n        }\r\n    }\r\n\r\n    get_CustomEffectProperties() {\r\n        function get_PropertyData(key: string, effectsService: EffectsService) {\r\n            return effectsService.get_EffectProperties().filter(property => property.key == key)[0];\r\n        }\r\n        return Object.keys(this.newEffect).map((key) => get_PropertyData(key, this.effectsService)).filter(property => property != undefined).sort((a, b) => {\r\n            if (a.priority > b.priority) {\r\n                return 1;\r\n            }\r\n            if (a.priority < b.priority) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => {\r\n            if (a.group > b.group) {\r\n                return 1;\r\n            }\r\n            if (a.group < b.group) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_Examples(propertyData: ItemProperty) {\r\n        let examples: string[] = [\"\"];\r\n\r\n        switch (propertyData.examples) {\r\n            case \"effects affected\":\r\n                examples.push(...this.characterService.get_Skills(this.get_Character()).map((skill: Skill) => skill.name));\r\n                examples.push(...this.characterService.get_Abilities().map((ability: Ability) => { return ability.name }));\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.affected))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.affected))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.affected))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.affected))\r\n                    });\r\n                });\r\n                break;\r\n            case \"effects value\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.value))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.value))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.value))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"effects setvalue\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.setValue))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.setValue))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"effects type\":\r\n                examples = [\"\", \"item\", \"circumstance\", \"status\", \"proficiency\"];\r\n                break;\r\n        }\r\n\r\n        let uniqueExamples = Array.from(new Set(examples))\r\n        return uniqueExamples\r\n            .sort(function (a, b) {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"conditions\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"conditions\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n\r\n}\r\n","<div id=\"conditions\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleConditionsMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading() && get_ConditionsMenuState()=='in'\">\r\n        <header class=\"sectionHeader\">Duration: {{get_Duration()}}</header>\r\n        <div class=\"itembox-inner\">\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <button class=\"center-aligned\" (click)=\"set_Permanent()\">Permanent</button>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <button class=\"center-aligned\" (click)=\"add_Day(-1)\">-1 Day</button>\r\n                    <button class=\"center-aligned\" (click)=\"add_Day(1)\">+1 Day</button>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <strong style=\"flex-basis: 10%; flex-grow: 0;\">Hours</strong>\r\n                    <input class=\"slider\" type=\"range\" min=\"0\" max=\"23\" [(ngModel)]=\"hours\"\r\n                        (ngModelChange)=\"set_Duration()\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <strong style=\"flex-basis: 10%; flex-grow: 0;\">Minutes</strong>\r\n                    <input class=\"slider\" type=\"range\" min=\"0\" max=\"59\" [(ngModel)]=\"minutes\"\r\n                        (ngModelChange)=\"set_Duration()\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <strong style=\"flex-basis: 10%; flex-grow: 0;\">Turns</strong>\r\n                    <input class=\"slider\" type=\"range\" min=\"0\" max=\"9\" [(ngModel)]=\"turns\"\r\n                        (ngModelChange)=\"set_Duration()\">\r\n                </div>\r\n                <div class=\"newrow left-aligned\">\r\n                    End on:\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span><input type=\"radio\" [(ngModel)]=\"endOn\" [value]=\"5\">&nbsp;Turn Start</span>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span><input type=\"radio\" [(ngModel)]=\"endOn\" [value]=\"0\">&nbsp;Turn End</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"list-item\">\r\n                <button (click)=\"toggle_Purpose('conditions')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='conditions'}\">Add Conditions</button>\r\n                <button (click)=\"toggle_Purpose('customeffects')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='customeffects'}\">Custom Effects</button>\r\n            </div>\r\n            <ng-container *ngIf=\"get_ShowPurpose()=='conditions'\">\r\n                <header class=\"sectionHeader\">Add Conditions</header>\r\n                <div class=\"list-item\">\r\n                    <strong>Find (in Name or Description)</strong>\r\n                    <span>\r\n                        <input type=text [(ngModel)]=\"wordFilter\" (keypress)=check_Filter() />\r\n                        <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                        <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n                    </span>\r\n                </div>\r\n                <ng-container\r\n                    *ngFor=\"let set of ['Generic','Activities','Afflictions','Alchemical Elixirs','Alchemical Tools','Ammunition','Blood Magic','Feats','Held Items','Other Consumables','Potions','Spells','Talismans','Worn Items']; trackBy:trackByIndex;\">\r\n                    <ng-container\r\n                        *ngFor=\"let visibleConditions of [get_VisibleConditionsSet(set)]; trackBy:trackByIndex;\">\r\n                        <button class=\"list-item\" (click)=\"toggle_List(set)\" *ngIf=\"visibleConditions.length\">\r\n                            <header class=\"sectionHeader\">{{set}}</header>\r\n                        </button>\r\n                        <div class=\"list-item\"\r\n                            *ngIf=\"visibleConditions.length && (get_ShowList()==set||get_ShowList()=='All')\">\r\n                            <div class=\"list-item\" *ngFor=\"let condition of visibleConditions; trackBy:trackByIndex;\">\r\n                                <strong>{{condition.name}}</strong>&nbsp;\r\n                                <div class=\"newrow\" *ngIf=\"condition.hasValue\">\r\n                                    <span>\r\n                                        Value: <select [(ngModel)]=\"value\">\r\n                                            <option\r\n                                                *ngFor=\"let valueNumber of [1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"valueNumber\">{{valueNumber}}\r\n                                            </option>\r\n                                        </select><br>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"condition.type == 'spells'\">\r\n                                    <span>\r\n                                        Spell level (for effect values): <select [(ngModel)]=\"heightened\">\r\n                                            <option\r\n                                                *ngFor=\"let valueNumber of [1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"valueNumber\" [disabled]=\"valueNumber < condition.minLevel\">\r\n                                                {{valueNumber}}\r\n                                            </option>\r\n                                        </select><br>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"condition.name == 'Persistent Damage'\">\r\n                                    <span>\r\n                                        Damage type and amount: <input type=\"text\" id=\"persistentDamage\"\r\n                                            [(ngModel)]=\"condition.choice\" maxLength=\"30\">\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"condition.choices.length\">\r\n                                    <span>Effect selection:\r\n                                        <select [(ngModel)]=\"condition.choice\">\r\n                                            <option\r\n                                                *ngFor=\"let choice of get_ConditionChoices(condition); trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"choice\">\r\n                                                {{choice}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </span>\r\n                                </div>\r\n                                <ng-container *ngFor=\"let companionAvailable of [get_CompanionAvailable()]\">\r\n                                    <ng-container *ngFor=\"let familiarAvailable of [get_FamiliarAvailable()]\">\r\n                                        <div class=\"newrow\" *ngIf=\"!condition.restricted\">\r\n                                            <span>\r\n                                                Add ({{get_Duration()}})\r\n                                            </span>\r\n                                            <span>\r\n                                                <span *ngIf=\"condition.fixedDuration\">Add\r\n                                                    (Default duration: {{get_Duration(condition.fixedDuration)}})\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\">\r\n                                            <span>\r\n                                                <button (click)=\"add_Condition(get_Character(), condition)\"\r\n                                                    *ngIf=\"!condition.restricted\">\r\n                                                    to Character\r\n                                                </button>\r\n                                            </span>\r\n                                            <span>\r\n                                                <button\r\n                                                    (click)=\"add_Condition(get_Character(), condition, condition.fixedDuration)\"\r\n                                                    *ngIf=\"condition.fixedDuration && !condition.restricted\">\r\n                                                    to Character\r\n                                                </button>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\" *ngIf=\"companionAvailable\">\r\n                                            <span>\r\n                                                <button (click)=\"add_Condition(get_Companion(), condition)\"\r\n                                                    *ngIf=\"!condition.restricted\">to Animal Companion\r\n                                                </button>\r\n                                            </span>\r\n                                            <span>\r\n                                                <button\r\n                                                    (click)=\"add_Condition(get_Companion(), condition, condition.fixedDuration)\"\r\n                                                    *ngIf=\"condition.fixedDuration && !condition.restricted\">\r\n                                                    to Animal Companion\r\n                                                </button>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\" *ngIf=\"familiarAvailable\">\r\n                                            <span>\r\n                                                <button (click)=\"add_Condition(get_Familiar(), condition)\"\r\n                                                    *ngIf=\"!condition.restricted\">to Familiar\r\n                                                </button>\r\n                                            </span>\r\n                                            <span>\r\n                                                <button\r\n                                                    (click)=\"add_Condition(get_Familiar(), condition, condition.fixedDuration)\"\r\n                                                    *ngIf=\"condition.fixedDuration && !condition.restricted\">\r\n                                                    to Familiar\r\n                                                </button>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\">\r\n                                            <button (click)=\"toggle_Item(set+condition.name)\"\r\n                                                [ngClass]=\"{'fancy-button':get_ShowItem()==set+condition.name}\">\r\n                                                {{get_ShowItem()==set+condition.name ? \"Hide\" : \"Show\"}} Description\r\n                                            </button>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"get_ShowItem()==set+condition.name\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let desc of condition.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n                                                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\"\r\n                                                        [innerHTML]=\"line\">\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"get_ShowPurpose()=='customeffects'\">\r\n                <header class=\"sectionHeader\">Custom Effects</header>\r\n                <button class=\"list-item\" (click)=\"toggle_List('addCustomEffect')\"\r\n                    *ngIf=\"get_ShowPurpose()=='customeffects'\">\r\n                    <header class=\"sectionHeader\">Add Custom Effect</header>\r\n                </button>\r\n                <div class=\"newrow list-item\"\r\n                    *ngIf=\"get_ShowPurpose()=='customeffects' && get_ShowList()=='addCustomEffect'\">\r\n                    <div class=\"newrow list-item\"\r\n                        *ngFor=\"let property of get_CustomEffectProperties(); let index = index; trackBy:trackByIndex;\">\r\n                        <div class=\"newrow left-aligned\">\r\n                            <strong [ngbPopover]=\"property.desc\">{{property.name}}</strong>\r\n                        </div>\r\n                        <div class=\"newrow\">\r\n                            <input class=\"newrow\" type=\"text\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                (blur)=\"validate(property.key, index)\" *ngIf=\"!property.type && !property.locked\">\r\n                            <textarea class=\"newrow\" rows=3 [(ngModel)]=\"newEffect[property.key]\"\r\n                                *ngIf=\"property.type=='textarea'\"></textarea>\r\n                            <input type=\"checkbox\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                *ngIf=\"property.type=='checkbox'\">\r\n                            <input type=\"number\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                (blur)=\"validate(property, index)\" (keypress)=\"numbersOnly($event)\"\r\n                                *ngIf=\"property.type=='number'\">\r\n                        </div>\r\n                        <div class=\"newrow\" *ngIf=\"validationError[index]\">\r\n                            <span class=\"problem\">{{validationError[index]}}</span>\r\n                        </div>\r\n                        <div class=\"newrow\" *ngIf=\"validationResult[index]\">\r\n                            <span>Current result: {{validationResult[index]}}</span>\r\n                        </div>\r\n                        <div class=\"list-item\" style=\"margin: initial 0\"\r\n                            *ngIf=\"property.type!='textarea' && property.type!='checkbox'\">\r\n                            <select class=\"newrow\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                [disabled]=\"!get_Examples(property).length\" (ngModelChange)=\"validate(property, index)\">\r\n                                <option *ngFor=\"let example of get_Examples(property); trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"example\">\r\n                                    {{example}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container *ngFor=\"let creature of get_Creatures(); trackBy:trackByIndex\"\r\n                        [ngbPopover]=\"get_EffectInvalid()\">\r\n                        <div>\r\n                            <button class=\"list-item newrow\" (click)=\"add_Effect(creature)\"\r\n                                [disabled]=\"get_EffectInvalid()\">\r\n                                <header class=\"sectionHeader\">Add to {{creature.type}}</header>\r\n                            </button>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <ng-container *ngFor=\"let creature of get_Creatures()\">\r\n                    <ng-container *ngIf=\"creature.effects.length\">\r\n                        <button class=\"list-item\" (click)=\"toggle_List('customEffects'+creature.type)\">\r\n                            <header class=\"sectionHeader\">Custom effects on {{creature.type}}</header>\r\n                        </button>\r\n                        <div class=\"list-item\" *ngIf=\"get_ShowList()=='customEffects'+creature.type\">\r\n                            <ng-container\r\n                                *ngFor=\"let effectGain of creature.effects; let index = index; trackBy:trackByIndex;\">\r\n                                <div class=\"list-item\"\r\n                                    *ngFor=\"let effectResult of get_EffectValue(creature, effectGain)\">\r\n                                    <span>\r\n                                        <span>{{effectGain.source || \"Custom effect\"}}: </span>\r\n                                        <strong\r\n                                            [ngClass]=\"{'penalty':effectResult.penalty, 'bonus':!effectResult.penalty && !effectResult.setValue, 'absolute':effectResult.setValue}\"\r\n                                            [ngbPopover]=\"effectGain.setValue ? effectGain.setValue : (effectGain.value ? effectGain.value : '')\">{{effectGain.affected}}\r\n                                            {{parseInt(effectResult.value) ? effectResult.value :\r\n                                            ''}}{{effectResult.setValue ? \"= \"+effectResult.setValue : ''}}\r\n                                        </strong>\r\n                                        <span\r\n                                            *ngIf=\"effectResult.value || effectResult.setValue || effectResult.toggle\">{{(effectResult.type\r\n                                            != \"untyped\") ? effectResult.type+' ' : ''}}{{(effectResult.toggle ||\r\n                                            effectResult.setValue) ? '' : (effectResult.penalty ? 'penalty' :\r\n                                            'bonus')}}</span>\r\n                                        <span\r\n                                            *ngIf=\"!effectResult.value && !effectResult.setValue && !effectResult.toggle\">no\r\n                                            effect</span> {{effectGain.duration ? \"(\" +\r\n                                        get_Duration(effectGain.duration) + \")\" : ''}}\r\n                                    </span>\r\n                                    <button class=\"list-item newrow\" (click)=\"remove_Effect(creature, index)\">\r\n                                        Remove\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { ConditionGain } from './ConditionGain';\r\nimport { Item } from './Item';\r\nimport { EffectGain } from './EffectGain';\r\n\r\nexport class Consumable extends Item {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    readonly allowEquippable = false;\r\n    //Consumables can not be equipped.\r\n    readonly equippable = false;\r\n    public readonly baseType = \"Consumable\";\r\n    //How many Actions does it take to use this item?\r\n    //Usually \"Free\", \"Reaction\", \"1\", \"2\" or \"3\", but can be something special like \"1 hour\"\r\n    public actions: string = \"1A\";\r\n    //What needs to be done to activate? Example: \"Command\", \"Manipulate\"\r\n    public activationType: string = \"\";\r\n    public inputRequired: string = \"\";\r\n    //List ConditionGain for every condition that you gain from using this item\r\n    public gainConditions: ConditionGain[] = [];\r\n    //List EffectGain for every effect that happens instantly when the item is used\r\n    public onceEffects: EffectGain[] = [];\r\n    //Some Items get bought in stacks. Stack defines how many you buy at once,\r\n    //and how many make up one instance of the items Bulk.\r\n    public stack: number = 1;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Feat } from './Feat';\r\nimport { Level } from './Level';\r\nimport { CharacterService } from './character.service';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Character } from './Character';\r\nimport { Speed } from './Speed';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { Heritage } from './Heritage';\r\nimport { ItemGain } from './ItemGain';\r\nimport { Item } from './Item';\r\nimport * as json_feats from '../assets/json/feats';\r\nimport * as json_features from '../assets/json/features';\r\nimport { LanguageGain } from './LanguageGain';\r\nimport { SpellCast } from './SpellCast';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FeatsService {\r\n    private feats: Feat[] = [];\r\n    private features: Feat[] = [];\r\n    private loading_feats: boolean = false;\r\n    private loading_features: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Feats(loreFeats: Feat[], name: string = \"\", type: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            let feats: Feat[] = this.feats.concat(loreFeats);\r\n            //I wrote this function to use indexOf instead of == and don't remember why, but problems arose with feats that contained other feats' names.\r\n            //I checked that all references to the function were specific, and changed it back. If any bugs should come from this, now it's documented.\r\n            //It was probably for featreqs, which have now been changed to be arrays and allow to check for all possible options instead of a matching substring\r\n            return feats.filter(feat =>\r\n            ((feat.name.toLowerCase() == name.toLowerCase() || name == \"\") &&\r\n                (feat.traits.map(trait => trait.toLowerCase()).includes(type.toLowerCase()) || type == \"\")));\r\n        } else { return [new Feat()]; }\r\n    }\r\n\r\n    get_Features(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.features.filter(feature => (feature.name.toLowerCase() == name.toLowerCase() || name == \"\"));\r\n        } else { return [new Feat()]; }\r\n    }\r\n\r\n    get_All(loreFeats: Feat[], name: string = \"\", type: string = \"\", includeSubTypes: boolean = false, includeCountAs: boolean = false) {\r\n        //ATTENTION: Use this function sparingly!\r\n        //There are thousands of feats. Particularly if you need to find out if you have a feat with an attribute:\r\n        // DON'T take all your feats, do get_All([], name)[0] and check the attribute\r\n        // DO get_All(), check the attribute and THEN check if you have the feat.\r\n        // That way, if you have 20 feats, and there are 4 feats with that attribute, you only do 4 * 20 comparisons instead of 20 * 1000\r\n        if (!this.still_loading()) {\r\n            let feats: Feat[] = this.feats.concat(loreFeats).concat(this.features);\r\n            return feats.filter(feat =>\r\n                name == \"\" ||\r\n                //For names like \"Aggressive Block or Brutish Shove\", split the string into the two feat names and return both.\r\n                name.split(\" or \").some(alternative =>\r\n                (\r\n                    feat.name.toLowerCase() == alternative.toLowerCase() ||\r\n                    (\r\n                        includeSubTypes &&\r\n                        feat.superType.toLowerCase() == alternative.toLowerCase()\r\n                    ) ||\r\n                    (\r\n                        includeCountAs &&\r\n                        feat.countAsFeat.toLowerCase() == alternative.toLowerCase()\r\n                    ) ||\r\n                    alternative == \"\"\r\n                )\r\n                ) &&\r\n                (\r\n                    type == \"\" ||\r\n                    feat.traits.map(trait => trait.toLowerCase()).includes(type.toLowerCase())\r\n                )\r\n            );\r\n        } else { return [new Feat()]; }\r\n    }\r\n\r\n    process_Feat(creature: Character | Familiar, characterService: CharacterService, feat: Feat, featName: string, choice: FeatChoice, level: Level, taken: boolean) {\r\n        let character = characterService.get_Character();\r\n        //Get feats and features via the characterService in order to include custom feats\r\n        let feats: Feat[] = [];\r\n        if (feat) {\r\n            feats = [feat];\r\n        } else {\r\n            if (creature.type == \"Familiar\") {\r\n                feats = characterService.familiarsService.get_FamiliarAbilities(featName);\r\n            } else {\r\n                feats = characterService.get_FeatsAndFeatures(featName);\r\n            }\r\n        }\r\n\r\n        if (feats.length) {\r\n            let feat = feats[0];\r\n\r\n            feat.hints.forEach(hint => {\r\n                characterService.set_TagsToChange(creature.type, hint.showon);\r\n            })\r\n            if (feat.effects.length) {\r\n                characterService.set_ToChange(creature.type, \"effects\");\r\n            }\r\n\r\n            //Gain another Feat\r\n            if (feat.gainFeatChoice.length) {\r\n                if (taken) {\r\n                    feat.gainFeatChoice.forEach(newFeatChoice => {\r\n                        let insertedFeatChoice: FeatChoice;\r\n                        //Skip if you don't have the required Class for this granted feat choice.\r\n                        if (newFeatChoice.insertClass ? character.class.name == newFeatChoice.insertClass : true) {\r\n                            //Check if the feat choice gets applied on a certain level and do that, or apply it on the current level.\r\n                            if (newFeatChoice.insertLevel && character.class.levels[newFeatChoice.insertLevel]) {\r\n                                insertedFeatChoice = character.add_FeatChoice(character.class.levels[newFeatChoice.insertLevel], newFeatChoice)\r\n                            } else {\r\n                                insertedFeatChoice = character.add_FeatChoice(level, newFeatChoice);\r\n                            }\r\n                            insertedFeatChoice.feats.forEach(gain => {\r\n                                this.process_Feat(creature, characterService, undefined, gain.name, insertedFeatChoice, level, true);\r\n                            })\r\n                            if (insertedFeatChoice.showOnSheet) {\r\n                                characterService.set_ToChange(creature.type, \"activities\");\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainFeatChoice.forEach(oldFeatChoice => {\r\n                        //Skip if you don't have the required Class for this granted feat choice, since you didn't get the choice in the first place.\r\n                        if (oldFeatChoice.insertClass ? (character.class.name == oldFeatChoice.insertClass) : true) {\r\n                            if (oldFeatChoice.showOnSheet) {\r\n                                characterService.set_ToChange(creature.type, \"activities\");\r\n                            }\r\n                            let a: FeatChoice[] = [];\r\n                            //If the feat choice got applied on a certain level, it needs to be removed from that level.\r\n                            if (oldFeatChoice.insertLevel && character.class.levels[oldFeatChoice.insertLevel]) {\r\n                                a = character.class.levels[oldFeatChoice.insertLevel].featChoices;\r\n                            } else {\r\n                                a = level.featChoices;\r\n                            }\r\n                            if (a.length) {\r\n                                //You might have taken this feat multiple times on the same level, so we are only removing one instance of each of its featChoices.\r\n                                let b: FeatChoice = a.filter(choice => choice.source == oldFeatChoice.source)[0];\r\n                                //Feats must explicitly be un-taken instead of just removed from the array, in case they made fixed changes\r\n                                if (b) {\r\n                                    b?.feats.forEach(feat => {\r\n                                        character.take_Feat(character, characterService, undefined, feat.name, false, b, false);\r\n                                    });\r\n                                    a.splice(a.indexOf(b), 1)\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Boost Ability (may happen in class subtype choices)\r\n            if (feat.gainAbilityChoice.length) {\r\n                if (taken) {\r\n                    feat.gainAbilityChoice.forEach(newAbilityChoice => {\r\n                        character.add_AbilityChoice(level, newAbilityChoice);\r\n                    });\r\n                } else {\r\n                    let a = level.abilityChoices;\r\n                    feat.gainAbilityChoice.forEach(oldAbilityChoice => {\r\n                        let oldChoice = a.filter(choice => choice.source == oldAbilityChoice.source)[0];\r\n                        if (oldChoice) {\r\n                            character.remove_AbilityChoice(oldChoice);\r\n                        }\r\n                    })\r\n                }\r\n                characterService.set_ToChange(creature.type, \"abilities\");\r\n                feat.gainAbilityChoice.forEach(abilityChoice => {\r\n                    abilityChoice.boosts.forEach(boost => {\r\n                        characterService.set_AbilityToChange(creature.type, boost.name);\r\n                    })\r\n                })\r\n\r\n            }\r\n\r\n            //Train free Skill or increase existing Skill\r\n            if (feat.gainSkillChoice.length) {\r\n                if (taken) {\r\n                    feat.gainSkillChoice.forEach(newSkillChoice => {\r\n                        let insertSkillChoice: SkillChoice = Object.assign(new SkillChoice(), JSON.parse(JSON.stringify(newSkillChoice)));\r\n                        let newChoice: SkillChoice;\r\n                        //Check if the skill choice has a class requirement, and if so, only apply it if you have that class.\r\n\r\n                        if (insertSkillChoice.insertClass ? character.class.name == insertSkillChoice.insertClass : true) {\r\n                            //For new training skill increases - that is, locked increases with maxRank 2 and type \"Skill\"\r\n                            //  - we need to check if you are already trained in it. If so, unlock this skill choice and set one\r\n                            //  available so that you can pick another skill.\r\n                            //  We can keep it if this is the first level and the other increase is not locked - the other increase will be freed up automatically.\r\n                            if (insertSkillChoice.type == \"Skill\") {\r\n                                insertSkillChoice.increases.filter(increase => increase.locked && increase.maxRank == 2).forEach(increase => {\r\n                                    let existingIncreases = character.get_SkillIncreases(characterService, 1, level.number, increase.name);\r\n                                    if (existingIncreases.filter(existingIncrease => existingIncrease.maxRank == 2).length &&\r\n                                        (\r\n                                            level.number > 1 ||\r\n                                            !existingIncreases.some(existingIncrease => existingIncrease.maxRank == 2 && !existingIncrease.locked))\r\n                                    ) {\r\n                                        increase.name = \"DELETE\";\r\n                                        insertSkillChoice.available += 1;\r\n                                    }\r\n                                })\r\n                                insertSkillChoice.increases = insertSkillChoice.increases.filter(increase => increase.name != \"DELETE\");\r\n                                //Add the still locked increases to the available value so they don't take away from it.\r\n                                if (insertSkillChoice.available) {\r\n                                    insertSkillChoice.available += insertSkillChoice.increases.length;\r\n                                }\r\n                            }\r\n                            //Check if the skill choice gets applied on a certain level and do that, or apply it on the current level.\r\n                            if (insertSkillChoice.insertLevel && character.class.levels[insertSkillChoice.insertLevel]) {\r\n                                newChoice = character.add_SkillChoice(character.class.levels[insertSkillChoice.insertLevel], insertSkillChoice)\r\n                            } else {\r\n                                newChoice = character.add_SkillChoice(level, insertSkillChoice);\r\n                            }\r\n                            //Apply any included Skill increases\r\n                            newChoice.increases.forEach(increase => {\r\n                                increase.sourceId = newChoice.id;\r\n                                character.process_Skill(characterService, increase.name, true, newChoice, true);\r\n                            })\r\n                            if (newChoice.showOnSheet) {\r\n                                characterService.set_ToChange(creature.type, \"skills\");\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainSkillChoice.forEach(oldSkillChoice => {\r\n                        //Skip if you don't have the required Class for this granted feat choice, since you didn't get the choice in the first place.\r\n                        if (oldSkillChoice.insertClass ? (character.class.name == oldSkillChoice.insertClass) : true) {\r\n                            let a: SkillChoice[];\r\n                            //If the feat choice got applied on a certain level, it needs to be removed from that level, too.\r\n                            if (oldSkillChoice.insertLevel && character.class.levels[oldSkillChoice.insertLevel]) {\r\n                                a = character.class.levels[oldSkillChoice.insertLevel].skillChoices;\r\n                            } else {\r\n                                a = level.skillChoices;\r\n                            }\r\n                            //We only retrieve one instance of the included SkillChoice, as the feat may have been taken multiple times.\r\n                            let oldChoice = a.filter(choice => choice.source == oldSkillChoice.source)[0];\r\n                            //Process and undo included Skill increases\r\n                            oldChoice?.increases.forEach(increase => {\r\n                                character.increase_Skill(characterService, increase.name, false, oldChoice, increase.locked);\r\n                            })\r\n                            if (oldChoice) {\r\n                                character.remove_SkillChoice(oldChoice);\r\n                                if (oldChoice.showOnSheet) {\r\n                                    characterService.set_ToChange(creature.type, \"skills\");\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain a spellcasting ability\r\n            if (feat.gainSpellCasting.length) {\r\n                if (taken) {\r\n                    feat.gainSpellCasting.forEach(casting => {\r\n                        character.add_SpellCasting(characterService, level, casting);\r\n                    });\r\n                } else {\r\n                    feat.gainSpellCasting.forEach(casting => {\r\n                        let oldCasting = character.class.spellCasting.find(ownedCasting => ownedCasting.className == casting.className &&\r\n                            ownedCasting.castingType == casting.castingType &&\r\n                            ownedCasting.source == casting.source);\r\n                        if (oldCasting) {\r\n                            character.remove_SpellCasting(characterService, oldCasting);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain Spell or Spell Option\r\n            if (feat.gainSpellChoice.length) {\r\n                if (taken) {\r\n                    feat.gainSpellChoice.forEach(newSpellChoice => {\r\n                        if (newSpellChoice.insertClass ? character.class.name == newSpellChoice.insertClass : true) {\r\n                            let insertSpellChoice: SpellChoice = Object.assign(new SpellChoice(), JSON.parse(JSON.stringify(newSpellChoice)));\r\n                            //Allow adding Spellchoices without a class to automatically add the correct class.\r\n                            // This finds the correct class either from the choice (if its type is a class name) or from the character's main class.\r\n                            if (!insertSpellChoice.className) {\r\n                                let classNames: string[] = characterService.classesService.get_Classes().map(characterclass => characterclass.name);\r\n                                if (classNames.includes(choice.type)) {\r\n                                    insertSpellChoice.className = choice.type;\r\n                                } else {\r\n                                    insertSpellChoice.className = characterService.get_Character().class.name;\r\n                                }\r\n                            }\r\n                            //Wellspring Gnome changes:\r\n                            //\"Whenever you gain a primal innate spell from a gnome ancestry feat, change its tradition from primal to your chosen tradition.\"\r\n                            if (character.class.heritage.name.includes(\"Wellspring Gnome\")) {\r\n                                if (insertSpellChoice.tradition && insertSpellChoice.castingType == \"Innate\" && insertSpellChoice.tradition == \"Primal\" && feat.traits.includes(\"Gnome\")) {\r\n                                    insertSpellChoice.tradition = character.class.heritage.subType;\r\n                                }\r\n                            }\r\n                            //Copy some information for functions that know the SpellGain, but not the SpellChoice.\r\n                            insertSpellChoice.spells.forEach(gain => {\r\n                                gain.sourceId = insertSpellChoice.id;\r\n                                gain.source = insertSpellChoice.source;\r\n                                gain.frequency = insertSpellChoice.frequency;\r\n                                gain.cooldown = insertSpellChoice.cooldown;\r\n                            })\r\n                            insertSpellChoice.source == \"Feat: \" + feat.name;\r\n                            character.add_SpellChoice(characterService, level.number, insertSpellChoice);\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainSpellChoice.forEach(newSpellChoice => {\r\n                        //Skip if you don't have the required Class for this granted spell choice, since you didn't get the choice in the first place.\r\n                        if (newSpellChoice.insertClass ? (character.class.name == newSpellChoice.insertClass) : true) {\r\n                            character.remove_SpellChoice(characterService, newSpellChoice);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain Lore\r\n            if (feat.gainLoreChoice.length) {\r\n                if (taken) {\r\n                    feat.gainLoreChoice.forEach(choice => {\r\n                        let newChoice = character.add_LoreChoice(level, choice);\r\n                        if (choice.loreName) {\r\n                            //If this feat gives you a specific lore, and you previously got the same lore from a free choice, that choice gets undone.\r\n                            if (character.customSkills.find(skill => skill.name == \"Lore: \" + choice.loreName)) {\r\n                                character.class.levels.forEach(searchLevel => {\r\n                                    searchLevel.loreChoices.filter(searchChoice => searchChoice.loreName == choice.loreName && searchChoice.available).forEach(searchChoice => {\r\n                                        character.remove_Lore(characterService, searchChoice);\r\n                                        searchChoice.loreName == \"\";\r\n                                    })\r\n                                })\r\n                            }\r\n                            character.add_Lore(characterService, newChoice);\r\n                        }\r\n                    })\r\n                } else {\r\n                    let a = level.loreChoices;\r\n                    let oldChoice = a.filter(choice => choice.source == 'Feat: ' + featName)[0];\r\n                    if (oldChoice) {\r\n                        if (oldChoice.loreName) {\r\n                            character.remove_Lore(characterService, oldChoice);\r\n                        }\r\n                        a.splice(a.indexOf(oldChoice), 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Gain Action or Activity\r\n            if (feat.gainActivities.length) {\r\n                if (taken) {\r\n                    feat.gainActivities.forEach((gainActivity: string) => {\r\n                        if (feat.name == \"Trickster's Ace\") {\r\n                            character.gain_Activity(characterService, Object.assign(new ActivityGain(), { name: gainActivity, source: feat.name, data: [{ name: \"Trigger\", value: \"\" }] }), level.number);\r\n                        } else {\r\n                            character.gain_Activity(characterService, Object.assign(new ActivityGain(), { name: gainActivity, source: feat.name }), level.number);\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainActivities.forEach((gainActivity: string) => {\r\n                        let oldGain = character.class.activities.find(gain => gain.name == gainActivity && gain.source == feat.name);\r\n                        if (oldGain) {\r\n                            character.lose_Activity(characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, characterService.activitiesService, oldGain);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain conditions. Some Feats do give you a permanent condition.\r\n            if (feat.gainConditions.length) {\r\n                if (taken) {\r\n                    feat.gainConditions.forEach(gain => {\r\n                        let newConditionGain = Object.assign(new ConditionGain(), gain);\r\n                        characterService.add_Condition(character, newConditionGain, false);\r\n                    });\r\n                } else {\r\n                    feat.gainConditions.forEach(gain => {\r\n                        let conditionGains = characterService.get_AppliedConditions(character, gain.name).filter(conditionGain => conditionGain.source == gain.source);\r\n                        if (conditionGains.length) {\r\n                            characterService.remove_Condition(character, conditionGains[0], false);\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Gain items. Only items with on == \"grant\" are given at the moment the feat is taken.\r\n            if (feat.gainItems.length) {\r\n                if (taken) {\r\n                    feat.gainItems.filter(freeItem => freeItem.on == \"grant\").forEach((freeItem: ItemGain) => {\r\n                        let item: Item = characterService.itemsService.get_Items()[freeItem.type].filter((item: Item) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                        if (item) {\r\n                            characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainItems.filter(freeItem => freeItem.on == \"grant\").forEach((freeItem: ItemGain) => {\r\n                        let done: boolean = false;\r\n                        character.inventories.forEach(inv => {\r\n                            if (!done) {\r\n                                inv[freeItem.type].filter((item: Item) => item.name == freeItem.name).forEach(item => {\r\n                                    if (!done) {\r\n                                        characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                                        done = true;\r\n                                    }\r\n                                });\r\n                            }\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Add spells to your spell list.\r\n            if (feat.gainSpellListSpells.length) {\r\n                if (taken) {\r\n                    feat.gainSpellListSpells.forEach(spellName => {\r\n                        character.add_SpellListSpell(spellName, \"Feat: \" + feat.name, level.number)\r\n                    })\r\n                } else {\r\n                    feat.gainSpellListSpells.forEach(spellName => {\r\n                        character.remove_SpellListSpell(spellName, \"Feat: \" + feat.name, level.number)\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Gain ancestries\r\n            if (feat.gainAncestry.length) {\r\n                if (taken) {\r\n                    character.class.ancestry.ancestries.push(...feat.gainAncestry);\r\n                } else {\r\n                    feat.gainAncestry.forEach(ancestryGain => {\r\n                        let a = character.class.ancestry.ancestries;\r\n                        a.splice(a.indexOf(ancestryGain), 1);\r\n                    })\r\n                }\r\n                characterService.set_ToChange(\"Character\", \"general\");\r\n            }\r\n\r\n            //One time effects\r\n            if (feat.onceEffects) {\r\n                if (taken) {\r\n                    feat.onceEffects.forEach(effect => {\r\n                        characterService.process_OnceEffect(character, effect);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Bargain Hunter adds to your starting cash at level 1\r\n            if (feat.name == \"Bargain Hunter\") {\r\n                if (taken && level.number == 1) {\r\n                    character.cash[1] += 2;\r\n                } else if (level.number == 1) {\r\n                    character.cash[1] -= 2;\r\n                }\r\n                characterService.set_ToChange(\"Character\", \"inventory\");\r\n            }\r\n\r\n            //Different Worlds\r\n            //Here we copy the original feat so that we can change the included data property persistently, but we remove the copy's hints so they don't show twice.\r\n            if (feat.name == \"Different Worlds\") {\r\n                if (taken) {\r\n                    if (character.customFeats.filter(customFeat => customFeat.name == \"Different Worlds\").length == 0) {\r\n                        let newLength = characterService.add_CustomFeat(feat);\r\n                        let newFeat = character.customFeats[newLength - 1];\r\n                        newFeat.hide = true;\r\n                        newFeat.data = { background: \"\", name: \"\" }\r\n                        newFeat.hints.length = 0;\r\n                    }\r\n                } else {\r\n                    let oldChoices: LoreChoice[] = level.loreChoices.filter(choice => choice.source == \"Different Worlds\");\r\n                    let oldChoice = oldChoices[oldChoices.length - 1];\r\n                    if (oldChoice?.increases.length) {\r\n                        character.remove_Lore(characterService, oldChoice);\r\n                    }\r\n                    level.loreChoices = level.loreChoices.filter(choice => choice.source != \"Different Worlds\");\r\n                    let oldFeats = character.customFeats.filter(customFeat => customFeat.name == \"Different Worlds\")\r\n                    character.customFeats.filter(customFeat => customFeat.name == \"Different Worlds\").forEach(oldFeat => {\r\n                        characterService.remove_CustomFeat(oldFeat);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Gain Additional Heritages\r\n            //We add an additional heritage to the character so we can work with it.\r\n            if (feat.gainHeritage.length) {\r\n                if (taken) {\r\n                    feat.gainHeritage.forEach(heritageGain => {\r\n                        let newLength = character.class.additionalHeritages.push(new Heritage());\r\n                        character.class.additionalHeritages[newLength - 1].source = heritageGain.source;\r\n                    })\r\n                } else {\r\n                    feat.gainHeritage.forEach(heritageGain => {\r\n                        let oldHeritage = character.class.additionalHeritages.find(heritage => heritage.source == heritageGain.source);\r\n                        let heritageIndex = character.class.additionalHeritages.indexOf(oldHeritage);\r\n                        character.class.on_ChangeHeritage(characterService, heritageIndex);\r\n                        character.class.additionalHeritages.splice(heritageIndex, 1);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Fuse Stance\r\n            //We copy the original feat so that we can change the included data property persistently, but we remove the copy's hints so they don't show twice.\r\n            if (feat.name == \"Fuse Stance\") {\r\n                if (taken) {\r\n                    if (character.customFeats.filter(customFeat => customFeat.name == \"Fuse Stance\").length == 0) {\r\n                        let newLength = characterService.add_CustomFeat(feat);\r\n                        let newFeat = character.customFeats[newLength - 1];\r\n                        newFeat.hide = true;\r\n                        newFeat.data = { name: \"\", stances: [] as string[] }\r\n                        newFeat.hints.length = 0;\r\n                    }\r\n                } else {\r\n                    character.customFeats.filter(customFeat => customFeat.name == \"Fuse Stance\").forEach(oldFeat => {\r\n                        characterService.remove_CustomFeat(oldFeat);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Remove spells that were granted by Blessed Blood.\r\n            if (feat.name == \"Blessed Blood\") {\r\n                if (!taken) {\r\n                    let removeList: { name: string, levelNumber: number }[] = character.class.spellList.filter(listSpell => listSpell.source == \"Feat: Blessed Blood\").map(listSpell => { return { name: listSpell.name, levelNumber: listSpell.level } });\r\n                    removeList.forEach(spell => {\r\n                        character.remove_SpellListSpell(spell.name, \"Feat: \" + feat.name, spell.levelNumber)\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Feats that grant a familiar\r\n            if (feat.gainFamiliar) {\r\n                if (taken) {\r\n                    //Set the originClass to be the same as the feat choice type.\r\n                    //If the type is not a class name, set your main class name.\r\n                    if ([\"\", \"General\", \"Skill\", \"Ancestry\", \"Class\", \"Feat\"].includes(choice.type)) {\r\n                        character.class.familiar.originClass = character.class.name;\r\n                    } else {\r\n                        character.class.familiar.originClass = choice.type;\r\n                    }\r\n                } else {\r\n                    //Reset the familiar\r\n                    characterService.cleanup_Familiar();\r\n                    character.class.familiar = new Familiar();\r\n                }\r\n                characterService.set_ToChange(\"Familiar\", \"all\");\r\n                characterService.set_ToChange(\"Character\", \"top-bar\");\r\n            }\r\n\r\n            //Feats that grant an animal companion\r\n            if (feat.gainAnimalCompanion == 1) {\r\n                //Reset the animal companion\r\n                character.class.animalCompanion = new AnimalCompanion();\r\n                character.class.animalCompanion.class = new AnimalCompanionClass();\r\n                if (taken) {\r\n                    characterService.initialize_AnimalCompanion();\r\n                }\r\n                characterService.set_ToChange(\"Companion\", \"all\");\r\n            }\r\n\r\n            //Feats that level up the animal companion to Mature, Nimble or Savage\r\n            if (feat.gainAnimalCompanion > 1 && feat.gainAnimalCompanion < 6 && characterService.get_Companion()) {\r\n                let companion = characterService.get_Companion();\r\n                if (companion.class.levels.length) {\r\n                    if (taken) {\r\n                        if (feat.gainAnimalCompanion > 3) {\r\n                            companion.class.levels[3] = Object.assign(new AnimalCompanionLevel(), companion.class.levels[feat.gainAnimalCompanion]);\r\n                            companion.class.levels[3].number = 3;\r\n                        }\r\n                    } else {\r\n                        if (feat.gainAnimalCompanion > 3) {\r\n                            companion.class.levels[3] = new AnimalCompanionLevel();\r\n                            companion.class.levels[3].number = 3;\r\n                        }\r\n                    }\r\n                    companion.set_Level(characterService);\r\n                }\r\n                characterService.set_ToChange(\"Companion\", \"all\");\r\n            }\r\n\r\n            //Feats that grant an animal companion specialization\r\n            if (feat.gainAnimalCompanion == 6) {\r\n                let companion = characterService.get_Companion();\r\n                if (!taken) {\r\n                    //Remove the latest specialization chosen on this level, only if all choices are taken\r\n                    let specializations = companion.class.specializations.filter(spec => spec.level == level.number);\r\n                    if (specializations.length) {\r\n                        if (specializations.length >= characterService.get_FeatsAndFeatures()\r\n                            .filter(feat => feat.gainAnimalCompanion == 6 && character.get_FeatsTaken(level.number, level.number, feat.name)).length\r\n                        ) {\r\n                            companion.class.specializations = companion.class.specializations.filter(spec => spec.name != specializations[specializations.length - 1].name)\r\n                        }\r\n                    }\r\n                    characterService.set_ToChange(\"Companion\", \"all\");\r\n                }\r\n            }\r\n\r\n            //Feats that add Speeds should add them to the Speeds list as well. This can be applied for both Familiars and Characters, so we use Creature.\r\n            feat.effects.filter(effect => effect.affected.includes(\"Speed\") && effect.affected != \"Speed\").forEach(effect => {\r\n                if (taken) {\r\n                    let newLength = creature.speeds.push(new Speed(effect.affected));\r\n                    creature.speeds[newLength - 1].source = \"Feat: \" + feat.name;\r\n                } else {\r\n                    creature.speeds = creature.speeds.filter(speed => !(speed.name == effect.affected && speed.source == \"Feat: \" + feat.name));\r\n                }\r\n            })\r\n\r\n            //Cantrip Connection\r\n            if (feat.name == \"Cantrip Connection\") {\r\n                let spellCasting = character.class.spellCasting.find(casting => casting.className == characterService.get_Familiar().originClass && casting.castingType != \"Focus\");\r\n                if (taken) {\r\n                    if (spellCasting) {\r\n                        let newSpellChoice = new SpellChoice();\r\n                        newSpellChoice.available = 1;\r\n                        newSpellChoice.level = 0;\r\n                        newSpellChoice.className = spellCasting.className;\r\n                        newSpellChoice.castingType = spellCasting.castingType;\r\n                        newSpellChoice.source = \"Feat: \" + feat.name;\r\n\r\n                        let familiarLevel = characterService.get_FeatsAndFeatures()\r\n                            .filter(feat => feat.gainFamiliar && feat.have(character, characterService, character.level))\r\n                            .map(feat => character.class.levels.find(level => level.featChoices\r\n                                .find(choice => choice.feats\r\n                                    .find(featTaken => featTaken.name == feat.name)\r\n                                )\r\n                            ))[0];\r\n                        character.add_SpellChoice(characterService, familiarLevel.number, newSpellChoice)\r\n                    }\r\n                } else {\r\n                    let oldSpellChoice = spellCasting.spellChoices.find(choice => choice.source == \"Feat: \" + feat.name);\r\n                    if (oldSpellChoice) {\r\n                        character.remove_SpellChoice(characterService, oldSpellChoice);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Spell Battery\r\n            if (feat.name == \"Spell Battery\") {\r\n                let spellCasting = character.class.spellCasting.find(casting => casting.className == characterService.get_Familiar().originClass && casting.castingType != \"Focus\");\r\n                if (taken) {\r\n                    if (spellCasting) {\r\n                        let newSpellChoice = new SpellChoice();\r\n                        newSpellChoice.available = 1;\r\n                        newSpellChoice.dynamicLevel = \"highestSpellLevel - 3\"\r\n                        newSpellChoice.className = spellCasting.className;\r\n                        newSpellChoice.castingType = spellCasting.castingType;\r\n                        newSpellChoice.source = \"Feat: \" + feat.name;\r\n                        let familiarLevel = characterService.get_FeatsAndFeatures()\r\n                            .filter(feat => feat.gainFamiliar && feat.have(character, characterService, character.level))\r\n                            .map(feat => character.class.levels.find(level => level.featChoices\r\n                                .find(choice => choice.feats\r\n                                    .find(featTaken => featTaken.name == feat.name)\r\n                                )\r\n                            ))[0];\r\n                        character.add_SpellChoice(characterService, familiarLevel.number, newSpellChoice)\r\n                    }\r\n                } else {\r\n                    let oldSpellChoice = spellCasting.spellChoices.find(choice => choice.source == \"Feat: \" + feat.name);\r\n                    if (oldSpellChoice) {\r\n                        character.remove_SpellChoice(characterService, oldSpellChoice);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Feats that let you learn more spells.\r\n            if (feat.gainSpellBookSlots.length) {\r\n                if (taken) {\r\n                    feat.gainSpellBookSlots.forEach(slots => {\r\n                        let spellCasting = character.class.spellCasting.find(casting => casting.className == slots.className && casting.castingType == \"Prepared\");\r\n                        if (spellCasting) {\r\n                            for (let index = 0; index < spellCasting.spellBookSlots.length; index++) {\r\n                                spellCasting.spellBookSlots[index] += slots.spellBookSlots[index];\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainSpellBookSlots.forEach(slots => {\r\n                        let spellCasting = character.class.spellCasting.find(casting => casting.className == slots.className && casting.castingType == \"Prepared\");\r\n                        if (spellCasting) {\r\n                            for (let index = 0; index < spellCasting.spellBookSlots.length; index++) {\r\n                                spellCasting.spellBookSlots[index] -= slots.spellBookSlots[index];\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Feats that add languages.\r\n            if (feat.gainLanguages.length) {\r\n                if (taken) {\r\n                    feat.gainLanguages.forEach(languageGain => {\r\n                        let newLanguageGain = Object.assign(new LanguageGain(), JSON.parse(JSON.stringify(languageGain)));\r\n                        newLanguageGain.level = level.number;\r\n                        character.class.languages.push(newLanguageGain);\r\n                    })\r\n                } else {\r\n                    feat.gainLanguages.forEach(languageGain => {\r\n                        let langIndex = character.class.languages.indexOf(character.class.languages.find(lang => (!lang.locked || lang.name == languageGain.name) && lang.source == languageGain.source && lang.level == level.number))\r\n                        if (langIndex != -1) {\r\n                            character.class.languages = character.class.languages.splice(langIndex, 1);\r\n                        }\r\n                    })\r\n                }\r\n                characterService.set_ToChange(\"Character\", \"general\");\r\n            }\r\n\r\n            //Reset bonded item charges when selecting or deselecting Wizard schools.\r\n            if ([\"Abjuration School\", \"Conjuration School\", \"Divination School\", \"Enchantment School\", \"Evocation School\",\r\n                \"Illusion School\", \"Necromancy School\", \"Transmutation School\", \"Universalist Wizard\"].includes(feat.name)) {\r\n                if (taken) {\r\n                    character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\").forEach(casting => {\r\n                        let superiorBond = character.get_FeatsTaken(1, character.level, \"Superior Bond\").length;\r\n                        if (feat.name == \"Universalist Wizard\") {\r\n                            casting.bondedItemCharges = [superiorBond, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n                        } else {\r\n                            casting.bondedItemCharges = [1 + superiorBond, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                        }\r\n                    });\r\n                } else {\r\n                    character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\").forEach(casting => {\r\n                        casting.bondedItemCharges = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                    });\r\n                    character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"school\")\r\n                }\r\n            }\r\n\r\n            //Reset changes made with Spell Blending.\r\n            if (feat.name == \"Spell Blending\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.spellBlending = [0, 0, 0];\r\n                    })\r\n                })\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Infinite Possibilities.\r\n            if (feat.name == \"Infinite Possibilities\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.infinitePossibilities = false;\r\n                    })\r\n                })\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Adapted Cantrip.\r\n            if (feat.name == \"Adapted Cantrip\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.adaptedCantrip = false;\r\n                    })\r\n                })\r\n                character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"adaptedcantrip\")\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Adaptive Adept.\r\n            if (feat.name.includes(\"Adaptive Adept\")) {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.adaptiveAdept = false;\r\n                    })\r\n                })\r\n                character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"adaptiveadept\")\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Giant Instinct.\r\n            if (feat.name == \"Giant Instinct\") {\r\n                character.inventories.forEach(inv => {\r\n                    inv.weapons.forEach(weapon => {\r\n                        weapon.large = false;\r\n                    })\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n            }\r\n\r\n            //Reset changes made with Blade Ally.\r\n            if (feat.name == \"Divine Ally: Blade Ally\") {\r\n                character.inventories.forEach(inv => {\r\n                    inv.weapons.forEach(weapon => {\r\n                        weapon.bladeAlly = false;\r\n                        weapon.bladeAllyRunes = [];\r\n                    })\r\n                    inv.wornitems.forEach(wornItem => {\r\n                        wornItem.bladeAlly = false;\r\n                        wornItem.bladeAllyRunes = [];\r\n                    })\r\n                    characterService.set_ToChange(creature.type, \"inventory\");\r\n                    characterService.set_ToChange(creature.type, \"attacks\");\r\n                })\r\n            }\r\n\r\n            //Spell Combination changes certain spell choices permanently.\r\n            if (feat.name == \"Spell Combination\") {\r\n                if (taken) {\r\n                    character.class.spellCasting.filter(casting => casting.className == \"Wizard\" && casting.castingType == \"Prepared\").forEach(casting => {\r\n                        [3, 4, 5, 6, 7, 8, 9, 10].forEach(spellLevel => {\r\n                            casting.spellChoices.find(choice => choice.level == spellLevel && choice.available == 1).spellCombinationAllowed = true;\r\n                        });\r\n                    });\r\n                    characterService.set_ToChange(creature.type, \"spells\");\r\n                    characterService.set_ToChange(creature.type, \"spellchoices\");\r\n                    characterService.set_ToChange(creature.type, \"spellbook\");\r\n                } else {\r\n                    character.class.spellCasting.filter(casting => casting.className == \"Wizard\" && casting.castingType == \"Prepared\").forEach(casting => {\r\n                        casting.spellChoices.filter(choice => choice.spellCombinationAllowed).forEach(choice => {\r\n                            choice.spellCombinationAllowed = false;\r\n                            choice.spellCombination = false;\r\n                            choice.spells.forEach(gain => gain.combinationSpellName = \"\");\r\n                        });\r\n                    });\r\n                    characterService.set_ToChange(creature.type, \"spells\");\r\n                    characterService.set_ToChange(creature.type, \"spellchoices\");\r\n                    characterService.set_ToChange(creature.type, \"spellbook\");\r\n                }\r\n            }\r\n\r\n            //Reset changes made with Arcane Evolution.\r\n            if (feat.name.includes(\"Arcane Evolution\")) {\r\n                character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"arcaneevolution\")\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellchoices\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Spell Mastery\r\n            if (feat.name == \"Spell Mastery\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices = casting.spellChoices.filter(choice => choice.source != \"Feat: Spell Mastery\");\r\n                })\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Familiar abilities should update the familiar's general information.\r\n            if (creature.type == \"Familiar\") {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n\r\n            //Snare Specialists and following feats change inventory aspects.\r\n            if (feat.name == \"Snare Specialist\" || feat.featreq.includes(\"Snare Specialist\")) {\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n\r\n            //Arcane Breadth gives hardcoded spell slots and needs to update the spellbook menu.\r\n            if (feat.name == \"Arcane Breadth\") {\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n            }\r\n\r\n            //Verdant Metamorphosis changes your traits and needs to update general.\r\n            if (feat.name == \"Verdant Metamorphosis\") {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n\r\n            //Feats that grant specializations or change proficiencies need to update defense and attacks.\r\n            if (feat.gainSpecialization || feat.changeProficiency.length || feat.copyProficiency.length) {\r\n                characterService.set_ToChange(creature.type, \"defense\");\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n                feat.changeProficiency.forEach(change => {\r\n                    if (change.name) { characterService.set_ToChange(creature.type, \"individualskills\", change.name); }\r\n                    if (change.group) { characterService.set_ToChange(creature.type, \"individualskills\", change.group); }\r\n                    if (change.trait) { characterService.set_ToChange(creature.type, \"individualskills\", change.name); }\r\n                })\r\n                feat.copyProficiency.forEach(change => {\r\n                    if (change.name) { characterService.set_ToChange(creature.type, \"individualskills\", change.name); }\r\n                })\r\n            }\r\n\r\n            //Feats that grant tenets and anathema need to update general.\r\n            if (feat.tenets.length || feat.anathema.length) {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n\r\n            //Feats that grant senses need to update skills.\r\n            if (feat.senses.length) {\r\n                characterService.set_ToChange(creature.type, \"skills\");\r\n            }\r\n\r\n            //Archetype \" Breadth\" spells need to update spells.\r\n            if (feat.name.includes(\" Breadth\")) {\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n            }\r\n\r\n            //Some hardcoded effects change depending on feats. There is no good way to resolve this, so we calculate the effects whenever we take a feat.\r\n            characterService.set_ToChange(creature.type, \"effects\");\r\n\r\n            //Condition choices can be dependent on feats, so we need to update spellbook and activities;\r\n            characterService.set_ToChange(creature.type, \"spellbook\");\r\n            characterService.set_ToChange(creature.type, \"activities\");\r\n\r\n            if (creature.type == \"Familiar\") {\r\n                characterService.set_ToChange(\"Familiar\", \"familiarabilities\");\r\n            } else {\r\n                characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading_feats || this.loading_features);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.feats.length) {\r\n            this.loading_feats = true;\r\n            this.load(json_feats, \"feats\");\r\n            this.loading_feats = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.feats.forEach(feat => {\r\n                feat.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n        if (!this.features.length) {\r\n            this.loading_features = true;\r\n            this.load(json_features, \"features\");\r\n            this.loading_features = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.features.forEach(feat => {\r\n                feat.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load(source, target: string) {\r\n        this[target] = [];\r\n        Object.keys(source).forEach(key => {\r\n            this[target].push(...source[key].map(obj => Object.assign(new Feat(), obj)));\r\n        });\r\n        this[target].forEach((feat: Feat) => {\r\n            feat.gainFeatChoice = feat.gainFeatChoice.map(choice => Object.assign(new FeatChoice(), choice));\r\n            feat.gainConditions = feat.gainConditions.map(choice => Object.assign(new ConditionGain(), choice));\r\n            feat.gainSpecialization = feat.gainSpecialization.map(spec => Object.assign(new SpecializationGain, spec));\r\n            //feat.gainFormulaChoice = feat.gainFormulaChoice.map(choice => Object.assign(new FormulaChoice(), choice));\r\n            feat.gainAbilityChoice = feat.gainAbilityChoice.map(choice => Object.assign(new AbilityChoice, choice));\r\n            feat.gainSkillChoice = feat.gainSkillChoice.map(choice => Object.assign(new SkillChoice, choice));\r\n            feat.gainSpellChoice = feat.gainSpellChoice.map(choice => Object.assign(new SpellChoice, choice));\r\n            feat.gainSpellCasting = feat.gainSpellCasting.map(choice => Object.assign(new SpellCasting(choice.castingType), choice));\r\n        })\r\n\r\n        let duplicates: string[] = Array.from(new Set(\r\n            this[target]\r\n                .filter((feat: Feat) =>\r\n                    this[target].filter((otherFeat: Feat) =>\r\n                        otherFeat.name == feat.name\r\n                    ).length > 1\r\n                ).map((feat: Feat) => feat.name)\r\n        ));\r\n        duplicates.forEach((featName) => {\r\n            let highestPriority = Math.max(\r\n                ...this[target]\r\n                    .filter((feat: Feat) => feat.name == featName)\r\n                    .map((feat: Feat) => feat.overridePriority)\r\n            );\r\n            let highestFeat = this[target].find((feat: Feat) => feat.name == featName && feat.overridePriority == highestPriority);\r\n            this[target] = this[target].filter((feat: Feat) => !(feat.name == featName && feat !== highestFeat));\r\n        })\r\n    }\r\n\r\n}","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Effect } from '../Effect';\r\nimport { Consumable } from '../Consumable';\r\nimport { Equipment } from '../Equipment';\r\nimport { OtherItem } from '../OtherItem';\r\nimport { Item } from '../Item';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { ItemCollection } from '../ItemCollection';\r\nimport { WornItem } from '../WornItem';\r\nimport { TimeService } from '../time.service';\r\nimport { FormulaLearned } from '../FormulaLearned';\r\nimport { Snare } from '../Snare';\r\nimport { SpellsService } from '../spells.service';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { Wand } from '../Wand';\r\nimport { Shield } from '../Shield';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { Weapon } from '../Weapon';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-inventory',\r\n    templateUrl: './inventory.component.html',\r\n    styleUrls: ['./inventory.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private id: number = 0;\r\n    private showItem: number = 0;\r\n    private showList: string = \"\";\r\n    public shieldDamage: number = 0;\r\n    public targetInventory = null;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public itemsService: ItemsService,\r\n        public traitsService: TraitsService,\r\n        public effectsService: EffectsService,\r\n        private timeService: TimeService,\r\n        private spellsService: SpellsService,\r\n        private conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.inventoryMinimized = !this.characterService.get_Character().settings.inventoryMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.inventoryMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    set_ItemsMenuTarget(target: string) {\r\n        this.characterService.set_ItemsMenuTarget(target);\r\n    }\r\n\r\n    toggle_Menu(menu: string = \"\") {\r\n        this.characterService.toggle_Menu(menu);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_List(type: string) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Item(id: number) {\r\n        if (this.showItem == id) {\r\n            this.showItem = 0;\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature(creature: string = this.creature) {\r\n        return this.characterService.get_Creature(creature) as Character | AnimalCompanion;\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Creatures() {\r\n        return this.characterService.get_Creatures();\r\n    }\r\n\r\n    get_Inventories(creature: string = this.creature, newID: boolean = false, calculate: boolean = false) {\r\n        if (newID) {\r\n            this.id = 0;\r\n        }\r\n        return this.get_Creature(creature).inventories;\r\n    }\r\n\r\n    get_TargetInventories(item: Item) {\r\n        //Return your inventories and your companion's main inventory (or the character's if called by the companion)\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                if (this.characterService.get_CompanionAvailable()) {\r\n                    return [this.get_Creature(\"Companion\").inventories[0]].concat(...this.get_Creature().inventories);\r\n                } else {\r\n                    return this.get_Creature().inventories;\r\n                }\r\n            case \"Companion\":\r\n                return [this.get_Creature(\"Character\").inventories[0]].concat(...this.get_Creature().inventories);\r\n        }\r\n    }\r\n\r\n    get_ContainedItems(item: Item) {\r\n        //Add up the number of items in each inventory with this item's id\r\n        //We have to sum up the items in each inventory, and then sum up those sums.\r\n        //Return a number\r\n        if (item.id && item[\"gainInventory\"] && item[\"gainInventory\"].length && this.get_Creature().inventories.length > 1) {\r\n            return this.get_Creature().inventories\r\n                .filter(inventory =>\r\n                    inventory.itemId == item.id\r\n                ).map(inventory => inventory.allItems()\r\n                    .map(item => item.amount)\r\n                    .reduce((a, b) => a + b, 0)\r\n                ).reduce((a, b) => a + b, 0);\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    can_Fit(item: Item, targetInventory: ItemCollection, sourceInventory: ItemCollection) {\r\n        if (targetInventory.itemId == item.id || targetInventory === sourceInventory) {\r\n            return false;\r\n        } else if (targetInventory.bulkLimit) {\r\n            let itemBulk = 0;\r\n            //Moving items will always unequip them. If the item has a carrying bulk, use that for the check.\r\n            switch ((item as Equipment).carryingBulk ? (item as Equipment).carryingBulk : item.get_Bulk()) {\r\n                case \"\":\r\n                    break;\r\n                case \"-\":\r\n                    break;\r\n                case \"L\":\r\n                    if (item.amount) {\r\n                        itemBulk += 0.1 * Math.floor(item.amount / (item[\"stack\"] ? item[\"stack\"] : 1));\r\n                    } else {\r\n                        itemBulk += 0.1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (item.amount) {\r\n                        itemBulk += parseInt(item.get_Bulk()) * Math.floor(item.amount / (item[\"stack\"] ? item[\"stack\"] : 1));\r\n                    } else {\r\n                        itemBulk += parseInt(item.get_Bulk());\r\n                    }\r\n                    break;\r\n            }\r\n            return (targetInventory.get_Bulk(false) + itemBulk <= targetInventory.bulkLimit)\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    sort_Cash() {\r\n        this.characterService.sort_Cash();\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_Items();\r\n    }\r\n\r\n    sort_ItemSet(itemSet) {\r\n        return itemSet.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    can_Equip(item: Item, inventoryIndex: number) {\r\n        return (inventoryIndex == 0 && item.equippable && this.creature == \"Character\" && !item.traits.includes(\"Companion\")) || (item.traits.includes(\"Companion\") && this.creature == \"Companion\") || item.name == \"Unarmored\"\r\n    }\r\n\r\n    can_Invest(item: Item, inventoryIndex: number) {\r\n        return inventoryIndex == 0 && item.can_Invest() && ((this.creature == \"Character\" && !item.traits.includes(\"Companion\")) || (item.traits.includes(\"Companion\") && this.creature == \"Companion\"))\r\n    }\r\n\r\n    can_Drop(item: Item) {\r\n        //Hidden items are never bought from the store. This implies that you gained them via an activity, spell, etc. and should not drop it.\r\n        //For Companions, the same goes for their basic attacks;\r\n        return !item.hide\r\n    }\r\n\r\n    can_DropAll(item: Item) {\r\n        //You can use the \"Drop All\" button if this item grants other items on grant or equip.\r\n        return item.gainItems && item.gainItems.filter(gain => gain.on != \"use\").length;\r\n    }\r\n\r\n    drop_InventoryItem(item: Item, inventory: ItemCollection, pay: boolean = false) {\r\n        this.showItem = 0;\r\n        if (pay) {\r\n            if (this.get_Price(item)) {\r\n                let price = this.get_Price(item);\r\n                if (item[\"stack\"]) {\r\n                    price *= Math.floor(item.amount / item[\"stack\"]);\r\n                } else {\r\n                    price *= item.amount;\r\n                }\r\n                if (price) {\r\n                    this.change_Cash(1, Math.floor(price / 2));\r\n                }\r\n            }\r\n        }\r\n        this.characterService.drop_InventoryItem(this.get_Creature(), inventory, item, false, true, true, item.amount);\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    move_InventoryItem(item: Item, inventory: ItemCollection, changeafter: boolean = true) {\r\n        this.itemsService.move_InventoryItem(this.get_Creature(), item, this.targetInventory, inventory, this.characterService)\r\n        if (changeafter) {\r\n            this.targetInventory = null;\r\n            this.characterService.set_ToChange(this.creature, \"inventory\");\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    drop_ContainerOnly(item: Item, inventory: ItemCollection) {\r\n        this.showItem = 0;\r\n        this.characterService.drop_InventoryItem(this.get_Creature(), inventory, item, false, true, false, item.amount);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    add_NewOtherItem(inventory: ItemCollection) {\r\n        inventory.otheritems.push(new OtherItem());\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    bulkOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode != 76 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validate_Bulk(item: OtherItem) {\r\n        if (parseInt(item.bulk) || parseInt(item.bulk) == 0 || item.bulk == \"L\" || item.bulk == \"\") {\r\n            //OK - no change needed.\r\n        } else {\r\n            item.bulk = \"\";\r\n        }\r\n    }\r\n\r\n    remove_OtherItem(item: OtherItem, inventory: ItemCollection) {\r\n        inventory.otheritems.splice(inventory.otheritems.indexOf(item), 1);\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Duration(turns: number) {\r\n        return this.timeService.get_Duration(turns);\r\n    }\r\n\r\n    get_CalculatedBulk() {\r\n        return this.get_Creature().bulk.calculate(this.get_Creature(), this.characterService, this.effectsService);\r\n    }\r\n\r\n    get_MaxInvested() {\r\n        let maxInvest = 0;\r\n        let effects: Effect[] = [];\r\n        let penalties: boolean = false;\r\n        let bonuses: boolean = false;\r\n        let absolutes: boolean = false;\r\n        let explain: string = \"\"\r\n        if (this.creature == \"Character\") {\r\n            maxInvest = 10;\r\n            explain = \"Base limit: 10\";\r\n        } else if (this.creature == \"Companion\") {\r\n            maxInvest = 2;\r\n            explain = \"Base limit: 2\";\r\n        }\r\n        this.effectsService.get_AbsolutesOnThis(this.get_Creature(), \"Max Invested\").forEach(effect => {\r\n            maxInvest = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n            absolutes = true;\r\n            effects.push(effect);\r\n        });\r\n        this.effectsService.get_RelativesOnThis(this.get_Creature(), \"Max Invested\").forEach(effect => {\r\n            maxInvest += parseInt(effect.value);\r\n            explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            if (parseInt(effect.value) < 0) {\r\n                penalties = true;\r\n            } else {\r\n                bonuses = true;\r\n            }\r\n            effects.push(effect);\r\n        });\r\n        return { value: maxInvest, explain: explain, effects: effects, penalties: penalties, bonuses: bonuses, absolutes: absolutes };\r\n    }\r\n\r\n    get_InvestedItems() {\r\n        return this.characterService.get_InvestedItems(this.get_Creature());\r\n    }\r\n\r\n    get_Invested() {\r\n        //Sum up the invested items: 1 for each item other than Wayfinders,\r\n        //  and for Wayfinders: 1 for the Wayfinder, and 1 for each Aeon Stone but the first. That is represented by 1 for each Aeon Stone (but at least 1).\r\n        return this.get_InvestedItems().map((item: WornItem) =>\r\n            (item.isWayfinder && item.aeonStones) ? Math.max(item.aeonStones.length, 1) : 1\r\n        ).reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    on_Equip(item: Equipment, inventory: ItemCollection, equipped: boolean) {\r\n        this.characterService.onEquip(this.get_Creature(), inventory, item, equipped);\r\n    }\r\n\r\n    on_Invest(item: Equipment, inventory: ItemCollection, invested: boolean) {\r\n        this.characterService.on_Invest(this.get_Creature(), inventory, item, invested);\r\n    }\r\n\r\n    onItemChange(item: Item) {\r\n        this.characterService.set_ItemViewChanges(this.get_Creature(), item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    onAmountChange(item: Consumable, amount: number, pay: boolean = false) {\r\n        item.amount += amount;\r\n        if (pay) {\r\n            if (amount > 0) {\r\n                this.change_Cash(-1, this.get_Price(item));\r\n            } else if (amount < 0) {\r\n                this.change_Cash(1, Math.floor(this.get_Price(item) / 2));\r\n            }\r\n        }\r\n        this.characterService.set_ItemViewChanges(this.get_Creature(), item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_InventoryName(inventory: ItemCollection) {\r\n        return inventory.get_Name(this.characterService);\r\n    }\r\n\r\n    on_SpellItemUse(item: Item, creature: string, inventory: ItemCollection) {\r\n        let spellName = item.storedSpells[0]?.spells[0]?.name || \"\";\r\n        let spellChoice = item.storedSpells[0];\r\n        if (spellChoice && spellName) {\r\n            let spell = this.get_Spells(item.storedSpells[0]?.spells[0]?.name)[0];\r\n            if (spell && !(item instanceof Wand && item.overcharged)) {\r\n                let tempGain: SpellGain = new SpellGain();\r\n                this.spellsService.process_Spell(this.get_Character(), creature, this.characterService, this.itemsService, this.conditionsService, null, tempGain, spell, spellChoice.level, true, true, false);\r\n            }\r\n            if (item instanceof Wand) {\r\n                if (item.cooldown) {\r\n                    if (item.overcharged) {\r\n                        this.drop_InventoryItem(item, inventory, false);\r\n                    } else {\r\n                        item.overcharged = true;\r\n                        item.broken = true;\r\n                    }\r\n                } else {\r\n                    item.cooldown = 144000;\r\n                }\r\n            } else {\r\n                spellChoice.spells.shift();\r\n            }\r\n        }\r\n        if (item instanceof Consumable) {\r\n            this.on_ConsumableUse(item, creature, inventory)\r\n        } else {\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    on_ConsumableUse(item: Consumable, creature: string, inventory: ItemCollection) {\r\n        this.characterService.on_ConsumableUse(this.get_Creature(creature), item);\r\n        if (this.can_Drop(item) && !item.can_Stack()) {\r\n            this.drop_InventoryItem(item, inventory, false);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    can_ApplyTalismans(item: Item) {\r\n        return ([\"armors\", \"shields\", \"weapons\"].includes(item.type)) &&\r\n            (\r\n                (item as Equipment).talismans.length ||\r\n                this.get_Creature().inventories.some(inv => inv.talismans.some(talisman => talisman.targets.includes(item.type)))\r\n            )\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    have_Funds(sum: number = 0) {\r\n        let character = this.characterService.get_Character();\r\n        let funds = (character.cash[0] * 1000) + (character.cash[1] * 100) + (character.cash[2] * 10) + (character.cash[3]);\r\n        if (sum <= funds) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number = 0, changeafter: boolean = false) {\r\n        this.characterService.change_Cash(multiplier, sum);\r\n        if (changeafter) {\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        if (this.creature == \"Character\") {\r\n            let character = this.get_Character();\r\n            return character.get_FeatsTaken(1, character.level, name).length;\r\n        }\r\n    }\r\n\r\n    have_QuickCrafting() {\r\n        if (this.creature == \"Character\") {\r\n            return this.have_Feat(\"Quick Alchemy\") ||\r\n                this.have_Feat(\"Snare Specialist\");\r\n        }\r\n    }\r\n\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.get_Character().get_FormulasLearned(id, source);\r\n    }\r\n\r\n    get_PreparedItems(type: string) {\r\n        if (type == 'snarespecialist') {\r\n            return this.get_FormulasLearned()\r\n                .filter(learned => learned.snareSpecialistPrepared)\r\n                .map(learned => Object.assign(new Object(), { learned: learned, item: this.itemsService.get_CleanItemByID(learned.id) }))\r\n                .sort(function (a, b) {\r\n                    if (a.item.name > b.item.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.item.name < b.item.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n        }\r\n    }\r\n\r\n    cannot_Craft(item: Item, learned: FormulaLearned, type: string) {\r\n        //Return any reasons why you cannot craft an item.\r\n        let character: Character = this.get_Character();\r\n        let reasons: string[] = [];\r\n        if (item.traits.includes(\"Alchemical\") && !character.get_FeatsTaken(1, character.level, \"Alchemical Crafting\").length) {\r\n            reasons.push(\"You need the Alchemical Crafting skill feat to create alchemical items.\")\r\n        }\r\n        if (item.traits.includes(\"Magical\") && !character.get_FeatsTaken(1, character.level, \"Magical Crafting\").length) {\r\n            reasons.push(\"You need the Magical Crafting skill feat to create magic items.\")\r\n        }\r\n        if (item.traits.includes(\"Snare\") && !character.get_FeatsTaken(1, character.level, \"Snare Crafting\").length) {\r\n            reasons.push(\"You need the Snare Crafting skill feat to create snares.\")\r\n        }\r\n        if (item.level > character.level) {\r\n            reasons.push(\"The item to craft must be your level or lower.\")\r\n        }\r\n        if (item.level >= 16 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 8) {\r\n            reasons.push(\"You must be legendary in Crafting to craft items of 16th level or higher.\")\r\n        } else if (item.level >= 9 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 6) {\r\n            reasons.push(\"You must be a master in Crafting to craft items of 9th level or higher.\")\r\n        }\r\n        if (type == \"snarespecialist\" && !learned.snareSpecialistAvailable) {\r\n            reasons.push(\"You must do your preparations again before you can deploy more of this item.\")\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    craft_Item(item: Item, learned: FormulaLearned, type: string) {\r\n        let amount = 1;\r\n        if (item[\"stack\"]) {\r\n            amount = item[\"stack\"];\r\n        }\r\n        this.characterService.grant_InventoryItem(this.characterService.get_Character(), this.characterService.get_Character().inventories[0], item, false, true, true, amount);\r\n        if (type == \"snarespecialist\") {\r\n            learned.snareSpecialistAvailable--\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_SnareSpecialistActions(item: Snare) {\r\n        //The rules for snare specialist and lightning snares say that these numbers apply to snares that take 1 minute to craft,\r\n        //  but there doesn't seem to be any other type of snare.\r\n        if (item.actions == \"1 minute\") {\r\n            if (this.have_Feat(\"Lightning Snares\")) {\r\n                return \"1A\"\r\n            } else {\r\n                return \"3A\";\r\n            }\r\n        } else {\r\n            return item.actions;\r\n        }\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    get_ItemSpell(item: Item) {\r\n        if (item.storedSpells.length && item.storedSpells[0].spells.length) {\r\n            let spell = this.get_Spells(item.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return [spell];\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_LargeWeaponAllowed(item: Item) {\r\n        return this.creature == \"Character\" && (this.get_Character().get_FeatsTaken(1, this.get_Character().level, 'Titan Mauler').length || this.effectsService.get_EffectsOnThis(this.get_Creature(), \"Use Large Weapons\").length) && item.type == \"weapons\" && ((item as Weapon).prof != \"Unarmed Attacks\");\r\n    }\r\n\r\n    get_BladeAllyAllowed(item: Item) {\r\n        return this.creature == \"Character\" && this.get_Character().get_FeatsTaken(1, this.get_Character().level, 'Divine Ally: Blade Ally').length && ((item.type == \"weapons\" && (item as Weapon).prof != \"Unarmed Attacks\") || (item.type == \"wornitems\" && (item as WornItem).isHandwrapsOfMightyBlows));\r\n    }\r\n\r\n    get_BladeAllyUsed() {\r\n        return this.get_Character().inventories.find(inventory => inventory.weapons.find(weapon => weapon.bladeAlly) || inventory.wornitems.find(wornItem => wornItem.isHandwrapsOfMightyBlows && wornItem.bladeAlly));\r\n    }\r\n\r\n    get_BattleforgedAllowed(item: Item) {\r\n        return (\r\n            this.get_Character().get_FeatsTaken(1, this.get_Character().level, 'Battleforger').length ||\r\n            this.effectsService.get_EffectsOnThis(this.get_Character(), \"Allow Battleforger\").length\r\n        ) && (\r\n                (\r\n                    item.type == \"weapons\" &&\r\n                    (item as Weapon).prof != \"Unarmed Attacks\"\r\n                ) ||\r\n                item.type == \"armors\" ||\r\n                (\r\n                    item.type == \"wornitems\" &&\r\n                    (item as WornItem).isHandwrapsOfMightyBlows)\r\n            );\r\n    }\r\n\r\n    on_ShieldHPChange(shield: Shield, amount: number) {\r\n        shield.damage += amount;\r\n        if (shield.equipped) {\r\n            this.characterService.set_ToChange(this.creature, \"defense\");\r\n        }\r\n        if (shield.get_HitPoints() < shield.get_BrokenThreshold()) {\r\n            shield.broken = true;\r\n        } else {\r\n            shield.broken = false;\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_RepairAllowed(item: Item) {\r\n        if ((item as Equipment).broken) {\r\n            if (item.constructor == Shield) {\r\n                if ((item as Shield).get_HitPoints() < (item as Shield).get_BrokenThreshold()) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"inventory\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"inventory\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-inventory-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Inventory</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <button class=\"fullsize-only list-item center-aligned\"\r\n            (click)=\"set_ItemsMenuTarget(creature); toggle_Menu('items')\">\r\n            Get Items\r\n        </button>\r\n        <header class=\"subsectionHeader\" *ngIf=\"creature=='Character'\">Currency</header>\r\n        <div class=\"list-item\" *ngIf=\"creature=='Character'\">\r\n            <span [ngbTooltip]=\"'Platinum'\">P</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[0]}}</div>\r\n            <span [ngbTooltip]=\"'Gold'\">G</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[1]}}</div>\r\n            <span [ngbTooltip]=\"'Silver'\">S</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[2]}}</div>\r\n            <span [ngbTooltip]=\"'Copper'\">C</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[3]}}</div>\r\n            <button class=\"center-aligned\" [ngbTooltip]=\"'Exchange coins for higher currency (no higher than Gold).'\"\r\n                (click)=\"sort_Cash();\">Sort</button>\r\n        </div>\r\n        <header class=\"subsectionHeader\">Bulk</header>\r\n        <ng-container *ngFor=\"let calculatedBulk of [get_CalculatedBulk()]; trackBy:trackByIndex;\">\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Bulk</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngbPopover]=\"calculatedBulk.current?.explain\"\r\n                            [ngClass]=\"{'penalty':calculatedBulk.currentpenalties, 'bonus':calculatedBulk.currentbonuses, 'absolute':calculatedBulk.currentabsolutes?.length}\">\r\n                            {{calculatedBulk.current?.value}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Bulk'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Encumbrance Limit</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngbPopover]=\"calculatedBulk.encumbered?.explain\"\r\n                            [ngClass]=\"{'penalty':calculatedBulk.penalties, 'bonus':calculatedBulk.bonuses, 'absolute':calculatedBulk.absolutes?.length}\">\r\n                            {{calculatedBulk.encumbered?.value}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Encumbered Limit'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Maximum Bulk</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngbPopover]=\"calculatedBulk.max?.explain\"\r\n                            [ngClass]=\"{'penalty':calculatedBulk.maxpenalties, 'bonus':calculatedBulk.maxbonuses, 'absolute':calculatedBulk.maxabsolutes?.length}\">\r\n                            {{calculatedBulk.max?.value}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Max Bulk'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"have_QuickCrafting()\">\r\n            <header class=\"sectionHeader fullsize-only box-header\">Quick Crafting</header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Quick Crafting'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <button class=\"list-item\" *ngIf=\"have_Feat('Snare Specialist')\" (click)=\"toggle_List('snarespecialist')\">\r\n                <header class=\"sectionHeader\">Snare Specialist</header>\r\n            </button>\r\n            <ng-container *ngIf=\"get_ShowList()=='snarespecialist'\">\r\n                <div class=\"newrow\" *ngIf=\"!get_PreparedItems('snarespecialist').length\">You don't have any snares\r\n                    prepared for quick deployment.</div>\r\n                <ng-container *ngFor=\"let preparedItem of get_PreparedItems('snarespecialist'); trackBy:trackByIndex;\">\r\n                    <div class=\"list-item\"\r\n                        *ngFor=\"let inventoryID of ['snarespecialist'+preparedItem.item.id]; trackBy:trackByIndex;\">\r\n                        <button class=\"newrow sublist-toggle\" (click)=\"toggle_Item(inventoryID)\"\r\n                            [ngClass]=\"{'inactive-button':!preparedItem.learned.snareSpecialistAvailable}\">\r\n                            <span>{{preparedItem.learned.snareSpecialistAvailable}}\r\n                                {{(preparedItem.item.get_Name) ? preparedItem.item.get_Name() :\r\n                                preparedItem.item.name}}</span>\r\n                            <span>{{(preparedItem.item.level) ? \"Level \"+preparedItem.item.level :\r\n                                \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"}}</span>\r\n                        </button>\r\n                        <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==inventoryID\"\r\n                            [ngClass]=\"{'inactive-list':!preparedItem.learned.snareSpecialistAvailable}\">\r\n                            <div\r\n                                [ngbTooltip]=\"cannot_Craft(preparedItem.item, preparedItem.learned, 'snarespecialist').join('\\n')\">\r\n                                <button class=\"newrow center-aligned\"\r\n                                    (click)=\"craft_Item(preparedItem.item, preparedItem.learned, 'snarespecialist')\"\r\n                                    [disabled]=\"cannot_Craft(preparedItem.item, preparedItem.learned, 'snarespecialist').length\">\r\n                                    <span>Deploy Snare <app-actionIcons\r\n                                            [actionString]=\"get_SnareSpecialistActions(preparedItem.item)\">\r\n                                        </app-actionIcons>\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                            <app-item [item]=preparedItem.item [itemStore]=true></app-item>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n        <header class=\"sectionHeader fullsize-only box-header\">Items</header>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Inventory'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <div class=\"fullsize-only list-item\" *ngFor=\"let maxInvested of [get_MaxInvested()]; trackBy:trackByIndex;\">\r\n            <strong>Invested</strong>\r\n            <div class=\"value\" [ngClass]=\"{'problem':(get_Invested() > maxInvested.value)}\">\r\n                {{get_Invested()}}\r\n            </div>\r\n            <strong>Max Invested</strong>\r\n            <div class=\"value\" [ngbPopover]=\"maxInvested.explain\"\r\n                [ngClass]=\"{'penalty':maxInvested.penalties, 'bonus':maxInvested.bonuses, 'absolute':maxInvested.absolutes}\">\r\n                {{get_MaxInvested().value}}\r\n            </div>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Max Invested'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        </div>\r\n        <div class=\"list-item\" [ngClass]=\"{'fullsize-only':inventoryIndex != 0}\"\r\n            *ngFor=\"let inventory of get_Inventories(creature, true, true); let inventoryIndex = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader fullsize-only newrow\">{{get_InventoryName(inventory)}}\r\n                <span *ngIf=\"inventory.bulkLimit && inventory.bulkLimit % 1 == 0\">&nbsp;{{\"(\"+inventory.get_Bulk()+\" /\r\n                    \"+inventory.bulkLimit+\" Bulk)\"}}</span>\r\n                <span\r\n                    *ngIf=\"inventory.bulkLimit && inventory.bulkLimit % 1 != 0\">&nbsp;{{\"(\"+(inventory.get_Bulk(false)*10)+\"L\r\n                    / \"+(inventory.bulkLimit*10)+\"L Bulk)\"}}</span>\r\n            </header>\r\n            <ng-container *ngFor=\"let itemSet of inventory.names; trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let listID of [get_ID()*1000]\">\r\n                    <header class=\"subsectionHeader newrow\" *ngIf=\"inventory[itemSet.key].length\">{{itemSet.name}}\r\n                    </header>\r\n                    <ng-container *ngFor=\"let item of sort_ItemSet(inventory[itemSet.key]); trackBy:trackByIndex;\">\r\n                        <div class=\"list-item\" *ngFor=\"let inventoryID of [item.id]; trackBy:trackByIndex;\">\r\n                            <button class=\"newrow left-aligned sublist-toggle\"\r\n                                [ngClass]=\"{'fancy-button':((item.equippable && item.equipped) || (item.can_Invest() && item.invested)), 'problem':item.broken}\"\r\n                                (click)=\"toggle_Item(inventoryID)\">\r\n                                <span [ngbTooltip]=\"'Broken'\" *ngIf=\"item.broken\"><i class='ra ra-broken-shield'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Shoddy'\" *ngIf=\"item.shoddy\"><i class='ra ra-broken-bottle'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Temporary Item'\" *ngIf=\"item.expiration\"><i class='ra ra-clockwork'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Large Weapon'\" *ngIf=\"item.large\"><i class='ra ra-large-hammer'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Blade Ally'\" *ngIf=\"item.bladeAlly\"><i class='ra ra-fireball-sword'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Battleforged'\" *ngIf=\"item.battleforged\"><i class='ra ra-anvil'></i>&nbsp;</span>\r\n                                {{(item.amount != undefined && item.amount != 1) ? item.amount+\" \" : \"\"}}\r\n                                {{(item['get_Name']) ? item.get_Name() : item.name}}&nbsp;\r\n                                <span class=\"lower\"\r\n                                    *ngFor=\"let containedItems of [get_ContainedItems(item)]\">{{containedItems ?\r\n                                    \"contains \"+containedItems+\" items\" : \"\"}}</span>\r\n                            </button>\r\n                            <div class=\"list-item sublist lower\"\r\n                                [ngClass]=\"{'fancy-list':((item.equippable && item.equipped) || (item.can_Invest() && item.invested)), 'problem':item.broken}\"\r\n                                *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                <div class=\"newrow\"\r\n                                    *ngFor=\"let prof of [(item.get_Proficiency ? item.get_Proficiency(get_Creature(), characterService) : item.prof)]; trackBy:trackByIndex;\">\r\n                                    <span [ngClass]=\"item.prof != prof ? 'absolute' : ''\"\r\n                                        *ngIf=\"item.type == 'armors'\">{{([\"Light Barding\",\"Heavy\r\n                                        Barding\"].includes(prof)) ? prof : prof.split(\" \")[0]}}\r\n                                        {{item.group}}\r\n                                        {{(item.type==\"armors\" && (![\"Unarmored Defense\",\"Light Barding\",\"Heavy\r\n                                        Barding\"].includes(prof))) ? \"Armor\" : \"\"}}</span>\r\n                                    <span [ngClass]=\"item.prof != prof ? 'absolute' : ''\"\r\n                                        *ngIf=\"item.type == 'weapons'\">{{(prof == 'Unarmed') ? prof : prof.substr(0,\r\n                                        prof.length - 8)}}\r\n                                        {{item.group}}</span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"item.expiration\">\r\n                                    <span><strong>Duration</strong> {{get_Duration(item.expiration)}}</span>\r\n                                </div>\r\n                                <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                    (click)=\"on_ConsumableUse(item, creature, inventory)\"\r\n                                    *ngIf=\"item.amount != undefined && !['alchemicalelixirs','potions','scrolls'].includes(item.type) && item.actions && (!item.targets || item.targets.length == 0)\">\r\n                                    <span>Use<app-actionIcons [actionString]=\"item.actions\">\r\n                                        </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                    </span>\r\n                                </button>\r\n                                <ng-container\r\n                                    *ngIf=\"item.amount != undefined && item.storedSpells.length && !['weaponrunes', 'armorrunes', 'oils'].includes(this.item.type)\">\r\n                                    <ng-container *ngFor=\"let spell of get_ItemSpell(item); trackBy:trackByIndex;\">\r\n                                        <div class=\"newrow\"\r\n                                            [ngbTooltip]=\"item.broken ? 'The item is broken and cannot be used.' : ''\">\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, creature, inventory)\"\r\n                                                *ngIf=\"['self', 'ally'].includes(spell.target)\"\r\n                                                [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    {{spell.target == 'ally' ? \"(Cast spell on yourself)\" : \"(Cast\r\n                                                    spell)\"}}\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, (creature=='Character' ? 'Companion' : 'Character'), inventory)\"\r\n                                                *ngIf=\"['companion', 'ally'].includes(spell.target) && get_CompanionAvailable()\"\r\n                                                [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell on\r\n                                                    {{creature == \"Character\" ? \"your animal companion\" : \"your\r\n                                                    master\"}})\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, 'Familiar', inventory)\"\r\n                                                *ngIf=\"['companion', 'ally'].includes(spell.target) && get_FamiliarAvailable()\"\r\n                                                [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell on your familiar)\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, '', inventory)\"\r\n                                                *ngIf=\"spell.target == 'ally'\" [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell on ally)\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, '', inventory)\"\r\n                                                *ngIf=\"spell.target == ''\" [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell)\r\n                                                </span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                                <ng-container\r\n                                    *ngIf=\"item.amount != undefined && ['alchemicalelixirs','potions'].includes(item.type) && item.actions && (!item.targets || item.targets.length == 0)\">\r\n                                    <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                        (click)=\"on_ConsumableUse(item, creature, inventory)\">\r\n                                        <span>Use<app-actionIcons [actionString]=\"item.actions\">\r\n                                            </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                        </span>\r\n                                    </button>\r\n                                    <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                        (click)=\"on_ConsumableUse(item, 'Companion', inventory)\"\r\n                                        *ngIf=\"get_CompanionAvailable()\">\r\n                                        <span>Use (Give to your animal companion)<app-actionIcons\r\n                                                [actionString]=\"item.actions\">\r\n                                            </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                        </span>\r\n                                    </button>\r\n                                    <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                        (click)=\"on_ConsumableUse(item, 'Familiar', inventory)\"\r\n                                        *ngIf=\"get_FamiliarAvailable()\">\r\n                                        <span>Use (Give to your familiar)<app-actionIcons [actionString]=\"item.actions\">\r\n                                            </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                        </span>\r\n                                    </button>\r\n                                </ng-container>\r\n                                <div class=\"newrow\">\r\n                                    <span *ngIf=\"can_Equip(item, inventoryIndex)\">\r\n                                        <button *ngIf=\"!item.equipped\"\r\n                                            (click)=\"on_Equip(item, inventory, true)\">Equip</button>\r\n                                        <button *ngIf=\"item.equipped\"\r\n                                            (click)=\"on_Equip(item, inventory, false)\">Unequip</button>\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Invest(item, inventoryIndex)\">\r\n                                        <button *ngIf=\"!item.invested\" (click)=\"on_Invest(item, inventory, true)\"\r\n                                            [disabled]=\"get_Invested() >= get_MaxInvested().value && !item.invested\">Invest</button>\r\n                                        <button *ngIf=\"item.invested\"\r\n                                            (click)=\"on_Invest(item, inventory, false)\">Uninvest</button>\r\n                                    </span>\r\n                                    <span *ngIf=\"item.can_Stack()\">\r\n                                        <button (click)=\"onAmountChange(item, -1)\"\r\n                                            [disabled]=\"item.amount <= 0\">-1</button>\r\n                                        <button (click)=\"onAmountChange(item, 1)\">+1</button>\r\n                                    </span>\r\n                                    <span\r\n                                        *ngIf=\"!can_Equip(item, inventoryIndex) && !can_Invest(item, inventoryIndex) && !item.can_Stack()\">\r\n                                        &nbsp;\r\n                                        <!-- This span is a placeholder that appears if no other button is valid on the left side of the Drop button -->\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Drop(item) && can_DropAll(item)\">\r\n                                        <button (click)=\"drop_ContainerOnly(item, inventory)\"\r\n                                            [ngbTooltip]=\"'Drop this item, but keep all items granted by it'\">\r\n                                            Drop this item only\r\n                                        </button>\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Drop(item) && !can_DropAll(item)\">\r\n                                        <button (click)=\"drop_InventoryItem(item, inventory)\">\r\n                                            Drop\r\n                                        </button>\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Drop(item) && can_DropAll(item)\">\r\n                                        <button (click)=\"drop_InventoryItem(item, inventory)\"\r\n                                            [ngbTooltip]=\"'Drop this item and all items granted by it'\">\r\n                                            Drop with all parts\r\n                                        </button>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"get_Price(item) && item.tradeable\">\r\n                                    <span *ngIf=\"item.can_Stack()\">\r\n                                        <span [ngbTooltip]=\"'Sell at half price'\">\r\n                                            <button (click)=\"onAmountChange(item, -1, true)\"\r\n                                                [disabled]=\"item.amount <= 0 || item.broken || item.shoddy\">Sell\r\n                                                1</button>\r\n                                        </span>\r\n                                        <button (click)=\"onAmountChange(item, 1, true)\"\r\n                                            [disabled]=\"!have_Funds(get_Price(item))\">Buy 1</button>\r\n                                    </span>\r\n                                    <span *ngIf=\"!item.can_Stack()\">\r\n                                        &nbsp;\r\n                                        <!-- This span is a placeholder that appears if no other button is valid on the left side of the Sell button -->\r\n                                    </span>\r\n                                    <span>\r\n                                        <span [ngbTooltip]=\"'Sell at half price'\">\r\n                                            <button (click)=\"drop_InventoryItem(item, inventory, true)\"\r\n                                                [disabled]=\"item.amount <= 0 || item.broken || item.shoddy\">\r\n                                                Sell {{can_DropAll(item) ? \" with all parts\" : \"\"}}\r\n                                            </button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"list-item\" *ngIf=can_Drop(item)>\r\n                                    <strong>Move to container</strong>\r\n                                    <span>\r\n                                        <select [(ngModel)]=\"targetInventory\"\r\n                                            (ngModelChange)=\"move_InventoryItem(item, inventory)\">\r\n                                            <option [ngValue]=\"null\"></option>\r\n                                            <option\r\n                                                *ngFor=\"let newTargetInventory of get_TargetInventories(item); trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"newTargetInventory\"\r\n                                                [disabled]=\"!can_Fit(item, newTargetInventory, inventory)\">\r\n                                                {{get_InventoryName(newTargetInventory)}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"list-item newrow left-aligned\">\r\n                                    <span *ngIf=\"item['get_Name']\">\r\n                                        <input id=\"{{item.id}}showname\" type=\"checkbox\" [(ngModel)]=\"item.showName\">\r\n                                        <label for=\"{{item.id}}showname\">&nbsp;Name&nbsp;</label>\r\n                                    </span>\r\n                                    <span>\r\n                                        <input id=\"{{item.id}}shownotes\" type=\"checkbox\" [(ngModel)]=\"item.showNotes\">\r\n                                        <label for=\"{{item.id}}shownotes\">&nbsp;Notes&nbsp;</label>\r\n                                    </span>\r\n                                    <span\r\n                                        *ngIf=\"!['Fist','Unarmored'].includes(item.name) && item.baseType == 'Equipment'\">\r\n                                        <input id=\"{{item.id}}showstatus\" type=\"checkbox\" [(ngModel)]=\"item.showStatus\">\r\n                                        <label for=\"{{item.id}}showstatus\">&nbsp;Status&nbsp;</label>\r\n                                    </span>\r\n                                    <span *ngIf=\"item.moddable && item.moddable != '-' && item.type != 'shield'\">\r\n                                        <input id=\"{{item.id}}showrunes\" type=\"checkbox\" [(ngModel)]=\"item.showRunes\">\r\n                                        <label for=\"{{item.id}}showrunes\">&nbsp;Runes&nbsp;</label>\r\n                                    </span>\r\n                                </div>\r\n                                <!--Changing Name-->\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!item.showName\">\r\n                                    <div class=\"list-item newrow left-aligned\">\r\n                                        <span>Name</span> <input type=\"textarea\" class=\"fullwidth\"\r\n                                            [(ngModel)]=\"item.displayName\" (blur)=\"onItemChange(item)\">\r\n                                    </div>\r\n                                </div>\r\n                                <!--Changing Notes-->\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!item.showNotes\">\r\n                                    <div class=\"list-item newrow left-aligned\">\r\n                                        <span>Notes</span> <input type=\"textarea\" class=\"fullwidth\"\r\n                                            [(ngModel)]=\"item.notes\">\r\n                                    </div>\r\n                                </div>\r\n                                <!--Changing Status-->\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!(item.showStatus || item.broken || item.shoddy)\"\r\n                                    *ngIf=\"!['Fist','Unarmored'].includes(item.name) && item.baseType == 'Equipment'\">\r\n                                    <div class=\"list-item newrow left-aligned\">\r\n                                        <span>Status</span>\r\n                                        <div class=\"newrow\">\r\n                                            <span\r\n                                                [ngbPopover]=\"!get_RepairAllowed(item) ? 'You cannot repair a broken shield unless you restore its hit points above the Broken Threshold.' : ''\">\r\n                                                <input id=\"{{item.id}}broken\" type=\"checkbox\" [(ngModel)]=\"item.broken\"\r\n                                                    (ngModelChange)=onItemChange(item)\r\n                                                    [disabled]=\"!get_RepairAllowed(item)\">\r\n                                                <label for=\"{{item.id}}broken\">&nbsp;<i class='ra ra-broken-shield'></i>&nbsp;Broken</label>\r\n                                            </span>\r\n                                            <span>\r\n                                                <span\r\n                                                    [ngbPopover]=\"'A broken object can\\'t be used for its normal function, nor does it grant bonuses - with the exception of armor. Broken armor still grants its item bonus to AC, but it also imparts a status penalty to AC depending on its category: -1 for broken light armor, -2 for broken medium armor, or -3 for broken heavy armor. A broken item still imposes penalties and limitations normally incurred by carrying, holding, or wearing it. For example, broken armor would still impose its Dexterity modifier cap, check penalty, and so forth.'\">\r\n                                                    <button class=\"lower inactive-button\">Details</button>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\">\r\n                                            <span>\r\n                                                <input id=\"{{item.id}}shoddy\" type=\"checkbox\" [(ngModel)]=\"item.shoddy\"\r\n                                                    (ngModelChange)=onItemChange(item)>\r\n                                                <label for=\"{{item.id}}shoddy\">&nbsp;<i class='ra ra-broken-bottle'></i>&nbsp;Shoddy</label>\r\n                                            </span>\r\n                                            <span>\r\n                                                <span\r\n                                                    [ngbPopover]=\"'When available, a shoddy item usually costs half the Price of a standard item, though you can never sell one in any case. Attacks and checks involving a shoddy item take a –2 item penalty. This penalty also applies to any DCs that a shoddy item applies to (such as AC, for shoddy armor). A shoddy suit of armor also worsens the armor\\'s check penalty by 2. A shoddy item\\'s Hit Points and Broken Threshold are each half that of a normal item of its type.'\">\r\n                                                    <button class=\"lower inactive-button\">Details</button>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"list-item newrow\" *ngIf=\"get_LargeWeaponAllowed(item) || item.large\">\r\n                                    <span>\r\n                                        <input id=\"{{item.id}}large\" type=\"checkbox\" [(ngModel)]=\"item.large\"\r\n                                            (ngModelChange)=onItemChange(item)>\r\n                                        <label for=\"{{item.id}}large\">&nbsp;<i class='ra ra-large-hammer'></i>&nbsp;Large</label>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span\r\n                                            [ngbPopover]=\"'You can use a weapon built for a Large creature if you are Small or Medium (both normally and when raging). If you\\'re not Small or Medium, you can use a weapon built for a creature one size larger than you. While wielding the weapon, you have the clumsy 1 condition because of its unwieldy size.'\">\r\n                                            <button class=\"lower inactive-button\">Details</button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"list-item newrow\" *ngIf=\"get_BladeAllyAllowed(item) || item.bladeAlly\">\r\n                                    <div class=\"newrow\">\r\n                                        <span\r\n                                            [ngbPopover]=\"(get_BladeAllyUsed() && !item.bladeAlly) ? 'Another item is already designated as your blade ally.' : ''\">\r\n                                            <input id=\"{{item.id}}bladeally\" type=\"checkbox\"\r\n                                                [(ngModel)]=\"item.bladeAlly\" (ngModelChange)=onItemChange(item)\r\n                                                [disabled]=\"get_BladeAllyUsed() && !item.bladeAlly\">\r\n                                            <label for=\"{{item.id}}bladeally\">&nbsp;<i class='ra ra-fireball-sword'></i>&nbsp;Blade Ally</label>\r\n                                        </span>\r\n                                        <span>\r\n                                            <span\r\n                                                [ngbPopover]=\"'You can select one weapon or handwraps of mighty blows when you make your daily preparations. In your hands, the item gains the effect of a property rune and you also gain the weapon\\'s critical specialization effect. For a champion following the tenets of good, choose disrupting, ghost touch, returning, or shifting. For a champion following the tenets of evil, choose fearsome, returning, or shifting.'\">\r\n                                                <button class=\"lower inactive-button\">Details</button>\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <app-itemBladeAlly class=\"list-item newrow\" [item]=item *ngIf=\"item.bladeAlly\">\r\n                                    </app-itemBladeAlly>\r\n                                </div>\r\n                                <div class=\"list-item newrow\"\r\n                                    *ngIf=\"get_BattleforgedAllowed(item) || item.battleforged\">\r\n                                    <span>\r\n                                        <input id=\"{{item.id}}battleforged\" type=\"checkbox\"\r\n                                            [(ngModel)]=\"item.battleforged\" (ngModelChange)=onItemChange(item)>\r\n                                        <label for=\"{{item.id}}battleforged\">&nbsp;<i class='ra ra-anvil'></i>&nbsp;Battleforged</label>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span\r\n                                            [ngbPopover]=\"'You can sharpen weapons, polish armor, and apply special techniques to temporarily gain better effects from your armaments. By spending 1 hour working on a weapon or armor, you can grant it the effects of a +1 potency rune until your next daily preparations, gaining a +1 item bonus to attack rolls for a weapon or increasing armor\\'s item bonus to AC by 1. This has no effect if the weapon or armor already had a potency rune.'\">\r\n                                            <button class=\"lower inactive-button\">Details</button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!item.showRunes\"\r\n                                    *ngIf=\"item.moddable && item.moddable != '-' && item.type != 'shield'\">\r\n                                    <app-itemRunes class=\"list-item\" [item]=item [itemStore]=false>\r\n                                    </app-itemRunes>\r\n                                </div>\r\n                                <app-itemOils [item]=item [itemStore]=false *ngIf=\"item.type != 'oils'\">\r\n                                </app-itemOils>\r\n                                <app-itemPoisons [item]=item [itemStore]=false *ngIf=\"item.type == 'weapons'\">\r\n                                </app-itemPoisons>\r\n                                <app-itemTalismans [item]=item [itemStore]=false *ngIf=\"can_ApplyTalismans(item)\">\r\n                                </app-itemTalismans>\r\n                                <ng-container *ngIf=\"item.type =='shields'\">\r\n                                    <div class=\"list-item newrow\">\r\n                                        <strong>HP</strong>\r\n                                        <div class=\"value\"> {{item.get_HitPoints()}}</div>\r\n                                        <strong>Max HP</strong>\r\n                                        <div class=\"value\"> {{item.get_MaxHP()}}</div>\r\n                                        <strong>BT</strong>\r\n                                        <div class=\"value\"> {{item.get_BrokenThreshold()}}</div>\r\n                                    </div>\r\n                                    <div class=\"list-item newrow\">\r\n                                        <span>\r\n                                            <button [disabled]=\"shieldDamage == 0\"\r\n                                                (click)=\"on_ShieldHPChange(item, shieldDamage)\">Damage</button>\r\n                                        </span>\r\n                                        <span>\r\n                                            <input class=\"number3\" type=\"number\" [(ngModel)]=\"shieldDamage\"\r\n                                                maxLength=\"3\">\r\n                                        </span>\r\n                                        <span>\r\n                                            <button [disabled]=\"shieldDamage == 0\"\r\n                                                (click)=\"on_ShieldHPChange(item, -shieldDamage)\">Repair</button>\r\n                                        </span>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <app-item class=\"lower\" [creature]=\"creature\" [item]=item\r\n                                    [allowActivate]=\"(item.equippable ? item.equipped : true) && (item.can_Invest() ? item.invested : true)\"\r\n                                    [armoredSkirt]=\"item.get_ArmoredSkirt ? item.get_ArmoredSkirt(get_Creature(), characterService) : null\">\r\n                                </app-item>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n            <!--Other Items-->\r\n            <header class=\"subsectionHeader fullsize-only\">Miscellaneous Items</header>\r\n            <button class=\"fullsize-only newrow center-aligned\" (click)=\"add_NewOtherItem(inventory)\">Add</button>\r\n            <div class=\"fullsize-only list-item\" *ngFor=\"let item of inventory.otheritems; let index = index; trackBy:trackByIndex;\">\r\n                <strong>Name</strong>\r\n                <input id=\"miscellaneousItemName{{inventory.itemId}}{{index}}\" type=\"text\" [(ngModel)]=\"item.name\">\r\n                <strong>Bulk</strong>\r\n                <input id=\"miscellaneousItemBulk{{inventory.itemId}}{{index}}\" class=\"number2\" [(ngModel)]=\"item.bulk\" (blur)=\"validate_Bulk(item)\"\r\n                    (keypress)=\"bulkOnly($event)\">\r\n                <button (click)=\"remove_OtherItem(item, inventory)\">Drop</button>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Talisman } from 'src/app/Talisman';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { Shield } from 'src/app/Shield';\r\n\r\n@Component({\r\n    selector: 'app-itemTalismans',\r\n    templateUrl: './itemTalismans.component.html',\r\n    styleUrls: ['./itemTalismans.component.css']\r\n})\r\nexport class ItemTalismansComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Equipment;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    newTalisman: { talisman: Talisman, inv: ItemCollection }[];\r\n\r\n    public newPropertyRuneName: string[] = [\"\", \"\", \"\"];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Slots() {\r\n        let indexes: number[] = [];\r\n        for (let index = 0; index < this.item.talismans.length; index++) {\r\n            indexes.push(index);\r\n        }\r\n        //If Talismans are available, add one more slot.\r\n        if (this.itemStore || this.get_Character().inventories.some(inv => this.get_Talismans(inv).length)) {\r\n            indexes.push(indexes.length);\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n    get_Inventories() {\r\n        if (this.itemStore) {\r\n            return [this.get_CleanItems()];\r\n        } else {\r\n            return this.get_Character().inventories;\r\n        }\r\n    }\r\n\r\n    get_InitialTalismans(index: number) {\r\n        let item = this.item;\r\n        //Start with one empty talisman to select nothing.\r\n        let allTalismans: { talisman: Talisman, inv: ItemCollection }[] = [{ talisman: new Talisman(), inv: null }];\r\n        allTalismans[0].talisman.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (item.talismans[index]) {\r\n            allTalismans.push(this.newTalisman[index] as { talisman: Talisman, inv: ItemCollection });\r\n        }\r\n        return allTalismans;\r\n    }\r\n\r\n    get_Talismans(inv: ItemCollection) {\r\n        return inv.talismans.filter(talisman => talisman.targets.length && talisman.amount)\r\n            .map(talisman => ({ talisman: talisman, inv: (this.itemStore ? null : inv) }))\r\n            .filter((talisman: { talisman: Talisman, inv: ItemCollection }) =>\r\n                talisman.talisman.targets.length &&\r\n                (\r\n                    talisman.talisman.targets.includes(this.item.type) ||\r\n                    (\r\n                        //One Exception: The jade bauble is affixed to a melee weapon, which is not a weapon type.\r\n                        (this.item as Weapon).melee && talisman.talisman.targets.includes(\"melee weapons\")\r\n                    )\r\n                )\r\n            ).sort(function (a, b) {\r\n                if (a.talisman.name > b.talisman.name) {\r\n                    return 1;\r\n                }\r\n                if (a.talisman.name < b.talisman.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort((a, b) => a.talisman.level - b.talisman.level);;\r\n    }\r\n\r\n    add_Talisman(index: number) {\r\n        let item: Equipment = this.item;\r\n        let talisman: Talisman = this.newTalisman[index].talisman;\r\n        let inv: ItemCollection = this.newTalisman[index].inv;\r\n        if (!item.talismans[index] || talisman !== item.talismans[index]) {\r\n            //If there is a Talisman in this slot, return the old one to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (item.talismans[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_Talisman(index);\r\n                }\r\n                item.talismans.splice(index, 1);\r\n            }\r\n            //Then add the new Talisman to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (talisman.name != \"\") {\r\n                //Add a copy of Talisman to the item\r\n                let newLength = item.talismans.push(Object.assign(new Talisman, JSON.parse(JSON.stringify(talisman))));\r\n                item.talismans[newLength - 1] = this.characterService.reassign(item.talismans[newLength - 1]);\r\n                let newTalisman = item.talismans[newLength - 1];\r\n                newTalisman.amount = 1;\r\n                //If we are not in the item store, remove the inserted Talisman from the inventory, either by decreasing the amount or by dropping the item.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, talisman, false, false, false, 1);\r\n                }\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        if (this.item.constructor == Weapon) {\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        if (this.item.constructor == Armor || this.item.constructor == Shield) {\r\n            this.characterService.set_ToChange(\"Character\", \"defense\");\r\n        }\r\n        this.set_TalismanNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_Talisman(index: number) {\r\n        let item: Equipment = this.item;\r\n        let oldTalisman: Talisman = item.talismans[index];\r\n        //Add the extracted stone to the inventory, either on an existing stack or as a new item.\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldTalisman, false, false, false, 1);\r\n    }\r\n\r\n    get_Title(talisman: Talisman) {\r\n        if (this.itemStore && talisman.price) {\r\n            return \"Price \" + this.get_Price(talisman);\r\n        }\r\n    }\r\n\r\n    get_Price(talisman: Talisman) {\r\n        if (talisman.price) {\r\n            if (talisman.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = talisman.price;\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100)+\"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) {priceString += \" \";}\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10)+\"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) {priceString += \" \";}\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price+\"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    set_TalismanNames() {\r\n        this.newTalisman = [];\r\n        if (this.item.talismans) {\r\n            for (let index = 0; index < this.item.talismans.length; index++) {\r\n                if (this.item.talismans[index]) {\r\n                    this.newTalisman.push({ talisman: this.item.talismans[index], inv: null })\r\n                } else {\r\n                    this.newTalisman.push({ talisman: new Talisman(), inv: null })\r\n                }\r\n            }\r\n        } else {\r\n            this.newTalisman = [{ talisman: new Talisman(), inv: null }];\r\n        }\r\n        this.newTalisman.filter(talisman => talisman.talisman.name == \"New Item\").forEach(talisman => {\r\n            talisman.talisman.name = \"\";\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_TalismanNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Talismans-->\r\n<div class=\"list-item\">\r\n    <div class=\"newrow\" *ngFor=\"let index of get_Slots(); trackBy:trackByIndex;\">\r\n        <strong *ngIf=\"index == 0\">Affix Talisman</strong>\r\n        <span *ngIf=\"index != 0\">&nbsp;</span>\r\n        <select [(ngModel)]=\"newTalisman[index]\" (change)=\"add_Talisman(index)\" [disabled]=\"!item.talismans[index-1] && index > 0\">\r\n            <ng-container *ngFor=\"let talisman of get_InitialTalismans(index); let initialTalismanIndex = index; trackBy:trackByIndex;\">\r\n                <option [ngValue]=\"talisman\" *ngIf=\"initialTalismanIndex == 0\">\r\n                    \r\n                </option>\r\n                <optgroup *ngIf=\"initialTalismanIndex == 1\" label=\"Current Talisman\">\r\n                    <option [ngValue]=\"talisman\">\r\n                        {{talisman.talisman.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </ng-container>\r\n            <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n                <optgroup label=\"{{itemStore ? 'Available talismans' : inv.get_Name(characterService)}}\" *ngIf=\"get_Talismans(inv).length\">\r\n                    <option *ngFor=\"let talisman of get_Talismans(inv); trackBy:trackByIndex;\" [ngValue]=\"talisman\"\r\n                    title=\"{{get_Title(talisman.talisman)}}\">\r\n                        {{talisman.talisman.amount > 1 ? talisman.talisman.amount+\" \" : \"\"}}{{talisman.talisman.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </ng-container>\r\n        </select>\r\n    </div>\r\n</div>","import { Creature } from './Creature';\r\nimport { Skill } from './Skill';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { AbilityBoost } from './AbilityBoost';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\n\r\nexport class AnimalCompanion extends Creature {\r\n    public readonly _className: string = this.constructor.name;\r\n    public class: AnimalCompanionClass = new AnimalCompanionClass();\r\n    public customSkills: Skill[] = [\r\n        Object.assign(new Skill(), { name:\"Light Barding\", type:\"Armor Proficiency\" }),\r\n        Object.assign(new Skill(), { name:\"Heavy Barding\", type:\"Armor Proficiency\" })\r\n    ];\r\n    public species: string = \"\";\r\n    public readonly type = \"Companion\";\r\n    get_BaseSize() {\r\n        let size: number = (this.class.ancestry.size ? this.class.ancestry.size : 0);\r\n        this.class.levels.filter(level => level.number <= this.level).forEach(level => {\r\n            if (level.sizeChange) {\r\n                size = Math.min(size + level.sizeChange, 1)\r\n            }\r\n        })\r\n        return size;\r\n    }\r\n    get_Size(effectsService: EffectsService) {\r\n        let size: number = this.get_BaseSize()\r\n        \r\n        let setSizeEffects = effectsService.get_AbsolutesOnThis(this, \"Size\");\r\n        if (setSizeEffects.length) {\r\n            size = Math.max(...setSizeEffects.map(effect => parseInt(effect.setValue)));\r\n        }\r\n                \r\n        let sizeEffects = effectsService.get_RelativesOnThis(this, \"Size\");\r\n        sizeEffects.forEach(effect => {\r\n            size += parseInt(effect.value)\r\n        })\r\n\r\n        switch (size) {\r\n            case -2:\r\n                return \"Tiny\";\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\"\r\n            case 1:\r\n                return \"Large\"\r\n            case 2:\r\n                return \"Huge\"\r\n            case 3:\r\n                return \"Gargantuan\"\r\n        }\r\n    }\r\n    set_Level(characterService: CharacterService) {\r\n        let character = characterService.get_Character();\r\n        //Get all taken feats at this character level that grow the animal companion, then set the companion level to the highest option (or 1).\r\n        //Level 3 is a placeholder, Levels 4 and 5 are Nimble and Savage - when you take a feat with growAnimalCompanion > 3,\r\n        //  level 3 gets replaced with that level\r\n        //  That means that level 3 is the highest we need to go, as Nimble or Savage will be placed there.\r\n        this.level = Math.min(3, Math.max(1, ...characterService.get_FeatsAndFeatures()\r\n            .filter(feat => feat.gainAnimalCompanion && feat.have(character, characterService, character.level))\r\n            .map(feat => feat.gainAnimalCompanion)));\r\n        characterService.set_ToChange(\"Companion\", \"all\");\r\n    }\r\n    get_AbilityBoosts(minLevelNumber: number, maxLevelNumber: number, abilityName: string = \"\", type: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined ) {\r\n        if (this.class) {\r\n            let boosts = [];\r\n            //When animal companion levels are checked for ability boosts, we don't care about the character level - so we use the companion's level here.\r\n            let levels: (AnimalCompanionLevel|AnimalCompanionAncestry)[] = this.class.levels.filter(level => level.number >= 0 && level.number <= this.level );\r\n            levels.push(this.class.ancestry);\r\n            levels.forEach((level: AnimalCompanionLevel|AnimalCompanionAncestry) => {\r\n                level.abilityChoices.forEach(choice => {\r\n                    choice.boosts.filter(boost => \r\n                        (boost.name == abilityName || abilityName == \"\") &&\r\n                        (boost.type == type || type == \"\") &&\r\n                        (boost.source == source || source == \"\") &&\r\n                        (boost.sourceId == sourceId || sourceId == \"\") &&\r\n                        (boost.locked == locked || locked == undefined)\r\n                    ).forEach(boost => {\r\n                        boosts.push(boost);\r\n                    });\r\n                });\r\n            });\r\n            //When specializations are checked for ability boosts, we want to be certain we don't get a specialization that is taken on a higher character level\r\n            let specializations: (AnimalCompanionSpecialization)[] = this.class.specializations.filter(spec => spec.level >= minLevelNumber && spec.level <= maxLevelNumber);\r\n            //Only the first specialization may add the \"First specialization\" boosts.\r\n            specializations.forEach((spec: AnimalCompanionSpecialization, index) => {\r\n                spec.abilityChoices.forEach(choice => {\r\n                    if ((choice.source == \"First specialization\") ? index == 0 : true) {\r\n                        choice.boosts.filter(boost => \r\n                            (boost.name == abilityName || abilityName == \"\") &&\r\n                            (boost.type == type || type == \"\") &&\r\n                            (boost.source == source || source == \"\") &&\r\n                            (boost.sourceId == sourceId || sourceId == \"\") &&\r\n                            (boost.locked == locked || locked == undefined)\r\n                        ).forEach(boost => {\r\n                            boosts.push(boost);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            return boosts as AbilityBoost[];\r\n        }\r\n    }\r\n    get_SkillIncreases(characterService: CharacterService, minLevelNumber: number, maxLevelNumber: number, skillName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        if (this.class) {\r\n            //When animal companion species and levels are checked for skill increases, we don't care about the character level - so we replace minLevelNumber and maxLevelNumber here.\r\n            let increases = [];\r\n            this.class.levels\r\n                .filter(level => level.number >= 1 && level.number <= this.level )\r\n                .forEach(level => {\r\n                level.skillChoices.forEach(choice => {\r\n                    choice.increases.filter(increase => \r\n                        (increase.name == skillName || skillName == \"\") &&\r\n                        (increase.source == source || source == \"\") &&\r\n                        (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                        (increase.locked == locked || locked == undefined)\r\n                        ).forEach(increase => {\r\n                        increases.push(increase);\r\n                    })\r\n                })\r\n            })\r\n            if (this.class.ancestry.name) {\r\n                this.class.ancestry.skillChoices.forEach(choice => {\r\n                    choice.increases.filter(increase => \r\n                        (increase.name == skillName || skillName == \"\") &&\r\n                        (increase.source == source || source == \"\") &&\r\n                        (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                        (increase.locked == locked || locked == undefined)\r\n                        ).forEach(increase => {\r\n                        increases.push(increase);\r\n                    })\r\n                })\r\n            }\r\n            //When specializations are checked for skill increases, we want to be certain we don't get a specialization that is taken on a higher character level (maxLevelNumber)\r\n            let specializations: (AnimalCompanionSpecialization)[] = this.class.specializations.filter(spec => spec.level >= minLevelNumber && spec.level <= maxLevelNumber);\r\n            //Only the first specialization may add the \"First specialization\" increases.\r\n            specializations.forEach((spec: AnimalCompanionSpecialization, index) => {\r\n                spec.skillChoices.forEach(choice => {\r\n                    if ((choice.source == \"First specialization\") ? index == 0 : true) {\r\n                        choice.increases.filter(increase => \r\n                            (increase.name == skillName || skillName == \"\") &&\r\n                            (increase.source == source || source == \"\") &&\r\n                            (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                            (increase.locked == locked || locked == undefined)\r\n                            ).forEach(increase => {\r\n                            increases.push(increase);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            return increases;\r\n        }\r\n    }\r\n}\r\n","import { ActivityGain } from './ActivityGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nexport class ConditionGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public addValue: number = 0;\r\n    public id = uuidv1();\r\n    public apply: boolean = true;\r\n    public decreasingValue: boolean = false;\r\n    //duration in turns * 10, -1 for permanent or 1 for instant\r\n    public duration: number = -1;\r\n    public maxDuration: number = -1;\r\n    //nextStage in turns * 10\r\n    public nextStage: number = 0;\r\n    public name: string = \"\";\r\n    public showChoices: boolean = false;\r\n    public showNotes: boolean = false;\r\n    public showDuration: boolean = false;\r\n    public showValue: boolean = false;\r\n    public showRadius: boolean = false;\r\n    public notes: string = \"\";\r\n    public source: string = \"\";\r\n    public parentID: string = \"\";\r\n    public value: number = 0;\r\n    //Remove this condition if any of the endsWithConditions is removed.\r\n    public endsWithConditions: string[] = [];\r\n    //Only activate this condition if this string evaluates to a numeral nonzero value. This is tested at the add_condition stage, so it can be combined with conditionChoiceFilter.\r\n    public activationPrerequisite: string = \"\";\r\n    //For conditions within conditions, activate this condition only if this choice was made on the original condition.\r\n    public conditionChoiceFilter: string = \"\";\r\n    //Spells choose from multiple conditions those that match their level.\r\n    //For example, if a spell has a ConditionGain with heightenedFilter 1 and one with heightenedFilter 2, and the spell is cast at 2nd level, only the heightenedFilter 2 ConditionGain is used.\r\n    public heightenedFilter: number = 0;\r\n    //When casting a spell, the spell level is inserted here so it can be used for calculations.\r\n    public heightened: number = 0;\r\n    //When casting a spell, a different radius for a condition may be wanted.\r\n    public radius: number = 0;\r\n    //When casting a spell, some conditions want to calculate the spellcasting modifier, so we copy the spellcasting ability.\r\n    public spellCastingAbility: string = \"\";\r\n    //Some conditions change depending on how the spell was cast (particularly if they were cast as an Innate spell), so we copy the spell's source.\r\n    public spellSource: string = \"\";\r\n    //Save the id of the spellGain so that the spellgain can be deactivated when the condition ends.\r\n    public spellGainID: string = \"\";\r\n    //A condition's gainActivities gets copied here to track.\r\n    public gainActivities: ActivityGain[] = [];\r\n    //A condition's gainItems gets copied here to track.\r\n    public gainItems: ItemGain[] = [];\r\n    //If the gain is persistent, it does not get removed when its source is deactivated.\r\n    public persistent: boolean = false;\r\n    //If the gain is ignorePersistent, it gets removed when its source is deactivated, even when the condition is usually persistent.\r\n    public ignorePersistent: boolean = false;\r\n    //If the gain is ignorePersistentAtChoiceChange, it gets removed when the parent condition changes choices, even when it is persistent.\r\n    public ignorePersistentAtChoiceChange: boolean = false;\r\n    //For conditions gained by conditions, if lockedByParent is set, this condition cannot be removed until the condition with the source ID is gone.\r\n    public lockedByParent: boolean = false;\r\n    //If valueLockedByParent is set, the condition value can't be changed while the parent condition exists.\r\n    public valueLockedByParent: boolean = false;\r\n    //For spells, designate if the condition is meant for the caster or \"\" for the normal target creature.\r\n    public targetFilter: string = \"\";\r\n    //Some conditions have a choice that you can make. That is stored in this value.\r\n    public choice: string = \"\";\r\n    //If there is a choiceBySubType value, and you have a feat with superType == choiceBySubType, the choice will be set to the subtype of that feat. This overrides any manual choice.\r\n    public choiceBySubType: string = \"\";\r\n    //If choiceLocked is true, the choice can't be changed manually.\r\n    public choiceLocked: boolean = false;\r\n    //If hideChoices is true, the choice isn't visible on activities or spells.\r\n    public hideChoices: boolean = false;\r\n    //If acknowledgedInputRequired is true, the inputRequired message is not shown.\r\n    public acknowledgedInputRequired: boolean = false;\r\n}","import { Weapon } from './Weapon';\r\n\r\nexport class AlchemicalBomb extends Weapon {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical bombs should be type \"alchemicalbombs\" to be found in the database\r\n    public type = \"alchemicalbombs\";\r\n    //Weapons are usually moddable like a weapon. Weapons that cannot be modded should be set to \"-\"\r\n    readonly moddable = \"-\" as \"\"|\"-\"|\"weapon\"|\"armor\"|\"shield\";\r\n    //What kind of weapon is this based on? Needed for weapon proficiencies for specific magical items.\r\n    public readonly weaponBase: string = \"Alchemical Bomb\";\r\n    public readonly equippable = false;\r\n    get_Name() {\r\n        return this.displayName || this.name;\r\n    }\r\n    \r\n}","import { Equipment } from './Equipment';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ItemsService } from './items.service';\r\n\r\nexport class WornItem extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    readonly allowEquippable = false;\r\n    //Worn Items cannot be equipped or unequipped, but can be invested\r\n    readonly equippable = false;\r\n    //Worn Items should be type \"wornitems\" to be found in the database\r\n    readonly type = \"wornitems\";\r\n    //List any Aeon Stones equipped in this item (only for Wayfinders)\r\n    public aeonStones: WornItem[] = [];\r\n    //Does this item use the Doubling Rings functionality, and on which level?\r\n    public isDoublingRings: \"\"|\"Doubling Rings\"|\"Doubling Rings (Greater)\" = \"\";\r\n    //Does this item count for the \"Handwraps of Mighty Blows\" functionality? If so, be sure to make it moddable like a weapon.\r\n    public isHandwrapsOfMightyBlows: boolean = false;\r\n    //A Champion with the Divine Ally: Blade Ally Feat can designate one weapon or handwraps as his blade ally.\r\n    public bladeAlly: boolean = false;\r\n    //Does this item use the Wayfinder functionality to store Aeon Stones, and how many?\r\n    public isWayfinder: number = 0;\r\n    //Is this an Aeon Stone and can be stored in a Wayfinder?\r\n    public isAeonStone: boolean = false;\r\n    //How is this item worn? Example: \"worn belt\"\r\n    public usage: string = \"\";\r\n    //A Dwarf with the Battleforger feat can sharpen a weapon to grant the effect of a +1 potency rune. This applies to Handwraps of Mighty Blows only.\r\n    public battleforged: boolean = false;\r\n    get_Price(itemsService: ItemsService) {\r\n        let price = this.price;\r\n        if (this.moddable == \"weapon\") {\r\n            if (this.potencyRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.filter(rune => rune.potency == this.potencyRune)[0].price;\r\n            }\r\n            if (this.strikingRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.filter(rune => rune.striking == this.strikingRune)[0].price;\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                price += itemsService.get_CleanItems().weaponrunes.find(weaponRune => weaponRune.name.toLowerCase() == rune.name.toLowerCase()).price;\r\n            })\r\n        }\r\n        this.aeonStones.forEach(aeonStone => {\r\n            price += itemsService.get_CleanItems().wornitems.find(wornItem => wornItem.name.toLowerCase() == aeonStone.name.toLowerCase()).price;\r\n        })\r\n        return price;\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { DefenseService } from '../defense.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { Armor } from '../Armor';\r\nimport { EffectsService } from '../effects.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { AbilitiesService } from '../abilities.service';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Talisman } from '../Talisman';\r\nimport { Shield } from '../Shield';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-defense',\r\n    templateUrl: './defense.component.html',\r\n    styleUrls: ['./defense.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefenseComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    public shieldDamage: number = 0;\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private defenseService: DefenseService,\r\n        private traitsService: TraitsService,\r\n        private conditionsService: ConditionsService,\r\n        public effectsService: EffectsService,\r\n        public abilitiesService: AbilitiesService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.defenseMinimized = !this.characterService.get_Character().settings.defenseMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.defenseMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    get_ArmorSpecialization(armor: Armor) {\r\n        return armor.get_ArmorSpecialization(this.get_Creature(), this.characterService);\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_AC() {\r\n        return this.defenseService.get_AC();\r\n    }\r\n\r\n    get_CalculatedAC() {\r\n        return this.get_AC().calculate(this.get_Creature(), this.characterService, this.defenseService, this.effectsService);\r\n    }\r\n\r\n    get_Cover() {\r\n        let creature = this.get_Creature();\r\n        let conditions: string[] = this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n            .filter(gain => [\"Lesser Cover\", \"Standard Cover\", \"Greater Cover\"].includes(gain.name) && gain.source == \"Defense\")\r\n            .map(gain => gain.name);\r\n        if (conditions.includes(\"Greater Cover\")) {\r\n            return 4;\r\n        }\r\n        if (conditions.includes(\"Standard Cover\")) {\r\n            return 2;\r\n        }\r\n        if (conditions.includes(\"Lesser Cover\")) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    set_Cover(cover: number, shield: Shield = null) {\r\n        this.get_AC().set_Cover(this.get_Creature(), cover, shield, this.characterService, this.conditionsService);\r\n    }\r\n\r\n    raise_Shield(raised: boolean = false, shield: Shield) {\r\n        if (shield) {\r\n            shield.raised = raised;\r\n            if (!raised && shield.takingCover) {\r\n                this.set_Cover(0, shield);\r\n            }\r\n            this.set_DefenseChanged();\r\n        }\r\n    }\r\n\r\n    get_FlatFooted() {\r\n        let creature = this.get_Creature();\r\n        return this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n            .find(gain => gain.name == \"Flat-Footed\" && gain.source == \"Defense\");\r\n    }\r\n\r\n    set_FlatFooted(active: boolean) {\r\n        let creature = this.get_Creature();\r\n        let flatFooted = this.get_FlatFooted();\r\n        if (active) {\r\n            if (!flatFooted) {\r\n                let newCondition: ConditionGain = Object.assign(new ConditionGain(), { name: \"Flat-Footed\", source: \"Defense\", duration: -1, locked: true })\r\n                this.characterService.add_Condition(creature, newCondition, false);\r\n            }\r\n        } else {\r\n            if (flatFooted) {\r\n                this.characterService.remove_Condition(creature, flatFooted, false);\r\n            }\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_EquippedArmor() {\r\n        return this.defenseService.get_EquippedArmor(this.get_Creature() as Character | AnimalCompanion);\r\n    }\r\n\r\n    get_EquippedShield() {\r\n        return this.defenseService.get_EquippedShield(this.get_Creature() as Character | AnimalCompanion);\r\n    }\r\n\r\n    on_ShieldHPChange(shield: Shield, amount: number) {\r\n        shield.damage += amount;\r\n        if (shield.get_HitPoints() < shield.get_BrokenThreshold()) {\r\n            shield.broken = true;\r\n        } else {\r\n            shield.broken = false;\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.set_ToChange(this.creature, \"defense\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        return this.characterService.get_Skills(this.get_Creature(), name, type)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_TalismanTitle(talisman: Talisman) {\r\n        return (talisman.trigger ? \"Trigger: \" + talisman.trigger + \"\\n\\n\" : \"\") + talisman.desc;\r\n    }\r\n\r\n    on_TalismanUse(item: Armor | Shield, talisman: Talisman, index: number) {\r\n        this.characterService.set_ToChange(this.creature, \"defense\");\r\n        this.characterService.on_ConsumableUse(this.get_Creature() as Character | AnimalCompanion, talisman);\r\n        item.talismans.splice(index, 1)\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_DefenseChanged() {\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"defense\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"defense\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-defense-height\" class=\"attributeBox\">\r\n    <ng-container *ngFor=\"let calculatedAC of [get_CalculatedAC()]; trackBy:trackByIndex;\">\r\n        <header class=\"sectionHeader box-header\">Defense: Armor Class\r\n            <span [ngbPopover]=\"calculatedAC.value.explain\"\r\n                [ngClass]=\"{'penalty':calculatedAC.penalties, 'bonus':calculatedAC.bonuses, 'absolute':calculatedAC.absolutes.length}\">\r\n                {{calculatedAC.value.result}}</span>\r\n        </header>\r\n        <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n        <ng-container *ngIf=\"!still_loading()\">\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'AC'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true [showEffects]=false\r\n                [specialEffects]=\"calculatedAC.relatives.concat(calculatedAC.absolutes)\">\r\n            </app-tags>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Defense'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"list-item\">\r\n                <button class=\"newrow sublist-toggle center-aligned\" (click)=\"toggle_List('QuickStatus')\">\r\n                    Quick Status\r\n                </button>\r\n                <div class=\"list-item sublist\" *ngIf=\"get_ShowList()=='QuickStatus'\">\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"!get_FlatFooted()\" (click)=\"set_FlatFooted(true)\">Enable\r\n                            Flat-Footed</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_FlatFooted()\" (click)=\"set_FlatFooted(false)\">Disable\r\n                            Flat-Footed</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_Cover() != 1\" (click)=\"set_Cover(1)\">Lesser\r\n                            Cover</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_Cover() == 1\" (click)=\"set_Cover(0)\">End\r\n                            Cover</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_Cover() != 2\" (click)=\"set_Cover(2)\">Standard\r\n                            Cover</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_Cover() == 2\" (click)=\"set_Cover(0)\">End\r\n                            Cover</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_Cover() != 4\" (click)=\"set_Cover(4)\">Greater\r\n                            Cover</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_Cover() == 4\" (click)=\"set_Cover(0)\">End\r\n                            Cover</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf=\"creature != 'Familiar'\">\r\n                <header class=\"subsectionHeader fullsize-only\">Armor</header>\r\n                <div class=\"fullsize-only list-item\" *ngFor=\"let armor of get_EquippedArmor(); trackBy:trackByIndex;\">\r\n                    <div>\r\n                        {{armor.get_Name()}}\r\n                    </div>\r\n                    <div class=\"fullsize-only newrow left-aligned\" *ngIf=\"armor.traits.length\">\r\n                        <cite class=\"trait\" *ngFor=\"let trait of armor.traits; trackBy:trackByIndex;\"\r\n                            [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n                    </div>\r\n                    <app-tags [creature]=\"creature\" [objectName]=\"'Armor'\" [showTraits]=true [showFeats]=true\r\n                        [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                    <app-tags [creature]=\"creature\" [objectName]=\"armor.name\" [showItems]=true></app-tags>\r\n                    <div class=\"fullsize-only lower newrow left-aligned\"\r\n                        *ngFor=\"let talisman of armor.talismans; let index = index; trackBy:trackByIndex;\">\r\n                        <button [ngbTooltip]=\"get_TalismanTitle(talisman)\"\r\n                            (click)=\"on_TalismanUse(armor, talisman, index)\">\r\n                            <span>Activate {{talisman.name}}<app-actionIcons [actionString]=\"talisman.actions\">\r\n                                </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"fullsize-only lower newrow left-aligned\"\r\n                        *ngFor=\"let spec of get_ArmorSpecialization(armor); trackBy:trackByIndex;\">\r\n                        <strong>Armor specialization effect&nbsp;</strong>{{spec.desc}}\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngFor=\"let shield of get_EquippedShield(); trackBy:trackByIndex;\">\r\n                    <header class=\"subsectionHeader fullsize-only\">Shield</header>\r\n                    <div class=\"newrow list-item\">\r\n                        <div>{{shield.get_Name()}} AC <div class=\"value\">{{shield.get_ACBonus()}}</div>\r\n                                Hardness: <div class=\"value\">{{shield.get_Hardness()}}</div>\r\n                            <div class=\"fullsize-only newrow left-aligned\" *ngIf=\"shield.traits.length\">\r\n                                <cite class=\"trait\" *ngFor=\"let trait of shield.traits; trackBy:trackByIndex;\"\r\n                                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n                            </div>\r\n                            <app-tags [creature]=\"creature\" [objectName]=\"'Shield'\" [showTraits]=true [showFeats]=true\r\n                                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true>\r\n                            </app-tags>\r\n                            <div class=\"newrow\">\r\n                                <button class=\"center-aligned\" *ngIf=\"!shield.raised\"\r\n                                    (click)=\"raise_Shield(true, shield)\">Raise shield</button>\r\n                                <button class=\"center-aligned fancy-button\" *ngIf=\"shield.raised\"\r\n                                    (click)=\"raise_Shield(false, shield)\">Lower\r\n                                    shield</button>\r\n                                <button class=\"center-aligned\"\r\n                                    *ngIf=\"shield.raised && shield.coverbonus && !shield.takingCover\"\r\n                                    (click)=\"set_Cover(4, shield)\">Take cover</button>\r\n                                <button class=\"center-aligned fancy-button\"\r\n                                    *ngIf=\"shield.raised && shield.coverbonus && shield.takingCover\"\r\n                                    (click)=\"set_Cover(0, shield)\">End cover</button>\r\n                            </div>\r\n                            <div class=\"list-item newrow\">\r\n                                <strong>HP</strong> <div class=\"value\">{{shield.get_HitPoints()}}</div>\r\n                                <strong>Max HP</strong> <div class=\"value\">{{shield.get_MaxHP()}}</div>\r\n                                <strong>BT</strong> <div class=\"value\">{{shield.get_BrokenThreshold()}}</div>\r\n                            </div>\r\n                            <div class=\"list-item newrow\">\r\n                                <span>\r\n                                    <button [disabled]=\"shieldDamage == 0\"\r\n                                        (click)=\"on_ShieldHPChange(shield, shieldDamage)\">Damage</button>\r\n                                </span>\r\n                                <span>\r\n                                    <input class=\"number3\" type=\"number\" [(ngModel)]=\"shieldDamage\" maxLength=\"3\">\r\n                                </span>\r\n                                <span>\r\n                                    <button [disabled]=\"shieldDamage == 0\"\r\n                                        (click)=\"on_ShieldHPChange(shield, -shieldDamage)\">Repair</button>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"fullsize-only lower newrow left-aligned\"\r\n                                *ngFor=\"let talisman of shield.talismans; let index = index; trackBy:trackByIndex;\">\r\n                                <button [ngbTooltip]=\"get_TalismanTitle(talisman)\"\r\n                                    (click)=\"on_TalismanUse(shield, talisman, index)\">\r\n                                    <span>Activate {{talisman.name}}<app-actionIcons [actionString]=\"talisman.actions\">\r\n                                        </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <header class=\"sectionHeader fullsize-only box-header\" *ngIf=\"!still_loading()\">Saving Throws</header>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Saving Throws'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                <ng-container *ngFor=\"let skill of get_Skills('', 'Save'); trackBy:trackByIndex;\">\r\n                    <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!still_loading()\">\r\n                    <header class=\"sectionHeader fullsize-only box-header\">Armor Proficiencies</header>\r\n                    <ng-container *ngFor=\"let skill of get_Skills('', 'Armor Proficiency'); trackBy:trackByIndex;\">\r\n                        <app-skill class=\"fullsize-only\" [creature]=\"creature\" [skill]=skill [showValue]=false>\r\n                        </app-skill>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"creature == 'Familiar'\">\r\n                <header class=\"sectionHeader fullsize-only box-header\" *ngIf=\"!still_loading()\">Saving Throws</header>\r\n                <ng-container *ngFor=\"let skill of get_Skills('', 'Save'); trackBy:trackByIndex;\">\r\n                    <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n                </ng-container>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Saving Throws'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Consumable } from 'src/app/Consumable';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { ItemActivity } from 'src/app/ItemActivity';\r\nimport { ActivityGain } from 'src/app/ActivityGain';\r\nimport { ItemGain } from 'src/app/ItemGain';\r\nimport { EffectGain } from 'src/app/EffectGain';\r\nimport { ConditionGain } from 'src/app/ConditionGain';\r\nimport { Item } from 'src/app/Item';\r\nimport { ItemProperty } from 'src/app/ItemProperty';\r\nimport { SpellCast } from 'src/app/SpellCast';\r\nimport { EffectsService } from 'src/app/effects.service';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { Activity } from 'src/app/Activity';\r\nimport { Condition } from 'src/app/Condition';\r\nimport { Skill } from 'src/app/Skill';\r\nimport { Ability } from 'src/app/Ability';\r\nimport { SpellChoice } from 'src/app/SpellChoice';\r\nimport { InventoryGain } from 'src/app/InventoryGain';\r\nimport { Hint } from 'src/app/Hint';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-newItemProperty',\r\n    templateUrl: './newItemProperty.component.html',\r\n    styleUrls: ['./newItemProperty.component.css']\r\n})\r\nexport class NewItemPropertyComponent implements OnInit {\r\n\r\n    @Input()\r\n    propertyKey: string;\r\n    @Input()\r\n    parents: string[] = [];\r\n    @Input()\r\n    newItem: Item;\r\n    @Input()\r\n    propertyData: ItemProperty;\r\n    @Input()\r\n    noTitle: boolean = false;\r\n\r\n    public validationError: string = \"\";\r\n    public validationResult: string = \"\";\r\n\r\n    constructor(\r\n        private itemsService: ItemsService,\r\n        private characterService: CharacterService,\r\n        private effectsService: EffectsService,\r\n        private traitsService: TraitsService,\r\n        private activitiesService: ActivitiesService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    get_Parent() {\r\n        let item = this.newItem;\r\n        this.parents.forEach(parent => {\r\n            item = item[parent];\r\n        })\r\n        return item;\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode != 45 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_Items();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Inventories() {\r\n        return this.get_Character().inventories;\r\n    }\r\n\r\n    validate() {\r\n        let value = this.get_Parent()[this.propertyKey]\r\n        if (this.propertyKey == \"name\" && !this.propertyData.parent) {\r\n            if (!value) {\r\n                this.get_Parent()[this.propertyKey] = \"New Item\"\r\n            }\r\n            let existingItems = this.get_Inventories()[0][this.newItem.type].filter((existing: Item) => existing.name == value);\r\n            let existingCleanItems = this.itemsService.get_CleanItems()[this.newItem.type].filter((existing: Item) => existing.name == value);\r\n            if (existingItems.length && existingItems.some((existing: Item) => existing.can_Stack())) {\r\n                this.validationError = \"If you use this name, this item will be added to the \" + existingItems[0].name + \" stack in your inventory. All changes you make here will be lost.\";\r\n            } else if (existingItems.length) {\r\n                this.validationError = \"You already own an item with this name and type.\";\r\n            } else if (existingCleanItems.length) {\r\n                this.validationError = \"An item with this name and type already exists.\";\r\n            }\r\n        }\r\n        if (this.propertyKey == \"value\" && this.propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && effect.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError = \"\";\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError = \"This may result in a decimal value, which will be turned into a whole number.\"\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                        this.validationResult = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                    this.validationResult = \"\";\r\n                }\r\n            }\r\n        } else if (this.propertyKey == \"setValue\" && this.propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && (parseInt(effect.value) || parseFloat(effect.value)) || parseInt(effect.value) == 0) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError = \"\";\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                        this.validationResult = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                    this.validationResult = \"\";\r\n                }\r\n            }\r\n        } else if (this.propertyKey == \"value\" && this.propertyData.parent == \"onceEffects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && effect.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError = \"\";\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError = \"This may result in an invalid value or 0. This is allowed for languages; for all other targets, invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                        this.validationResult = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError = \"This may result in an invalid value or 0. This is allowed for languages; for all other targets, invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                    this.validationResult = \"\";\r\n                }\r\n            }\r\n        } else if (this.propertyKey == \"moddable\") {\r\n            if (this.newItem[\"potencyRune\"]) {\r\n                this.newItem[\"potencyRune\"] = 0;\r\n            }\r\n            if (this.newItem[\"strikingRune\"]) {\r\n                this.newItem[\"strikingRune\"] = 0;\r\n            }\r\n            if (this.newItem[\"propertyRunes\"]) {\r\n                this.newItem[\"propertyRunes\"].length = 0;\r\n            }\r\n        } else if (this.propertyKey == \"bulk\" || this.propertyKey == \"carryingBulk\") {\r\n            if (parseInt(value) || parseInt(value) == 0 || value == \"L\" || value == \"\") {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = \"\"\r\n            }\r\n        } else if (this.propertyData.validation == \"1plus\") {\r\n            if (parseInt(value) >= 1) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = 1\r\n            }\r\n        } else if (this.propertyData.validation == \"0plus\") {\r\n            if (parseInt(value) >= 0) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = 0\r\n            }\r\n        } else if (this.propertyData.validation == \"=1plus\") {\r\n            if (parseInt(value) >= -1) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = -1\r\n            }\r\n        } else if (this.propertyData.validation == \"0minus\") {\r\n            if (parseInt(value) <= 0) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = 0\r\n            }\r\n        }\r\n    }\r\n\r\n    get_IsObject(property) {\r\n        return (typeof property == 'object');\r\n    }\r\n\r\n    add_NewItemObject() {\r\n        let index = null;\r\n        switch (this.propertyKey) {\r\n            case \"activities\":\r\n                index = this.get_Parent()[this.propertyKey].push(new ItemActivity())\r\n                this.get_Parent()[this.propertyKey][index - 1].source = this.get_Parent()[\"id\"];\r\n                break;\r\n            case \"gainActivities\":\r\n                index = this.get_Parent()[this.propertyKey].push(new ActivityGain())\r\n                this.get_Parent()[this.propertyKey][index - 1].source = this.get_Parent()[\"id\"];\r\n                break;\r\n            case \"gainItems\":\r\n                this.get_Parent()[this.propertyKey].push(new ItemGain())\r\n                break;\r\n            case \"castSpells\":\r\n                this.get_Parent()[this.propertyKey].push(new SpellCast())\r\n                break;\r\n            case \"hints\":\r\n                this.get_Parent()[this.propertyKey].push(new Hint())\r\n                break;\r\n            case \"effects\":\r\n                this.get_Parent()[this.propertyKey].push(new EffectGain())\r\n                break;\r\n            case \"onceEffects\":\r\n                this.get_Parent()[this.propertyKey].push(new EffectGain())\r\n                break;\r\n            case \"propertyRunes\":\r\n                this.get_Parent()[this.propertyKey].push(\"\" as string)\r\n                break;\r\n            case \"storedSpells\":\r\n                this.get_Parent()[this.propertyKey].push(new SpellChoice())\r\n                this.get_Parent()[this.propertyKey][index - 1].source = this.get_Parent()[\"id\"];\r\n                break;\r\n            case \"traits\":\r\n                this.get_Parent()[this.propertyKey].push(\"\" as string)\r\n                break;\r\n            case \"gainConditions\":\r\n                this.get_Parent()[this.propertyKey].push(new ConditionGain())\r\n                break;\r\n            case \"castSpells\":\r\n                this.get_Parent()[this.propertyKey].push(\"\" as string)\r\n                break;\r\n            case \"gainInventory\":\r\n                this.get_Parent()[this.propertyKey].push(new InventoryGain())\r\n                break;\r\n        }\r\n    }\r\n\r\n    remove_NewItemObject(index: number) {\r\n        this.get_Parent()[this.propertyKey].splice(index, 1);\r\n    }\r\n\r\n    get_NewItemSubProperties(object: object) {\r\n        return Object.keys(object).map((key) =>\r\n            this.itemsService.get_ItemProperties().filter(property => property.parent == this.propertyData.key && property.key == key)[0])\r\n            .filter(property => property != undefined)\r\n            .sort((a, b) => {\r\n                if (a.priority > b.priority) {\r\n                    return 1;\r\n                }\r\n                if (a.priority < b.priority) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort((a, b) => {\r\n                if (a.group > b.group) {\r\n                    return 1;\r\n                }\r\n                if (a.group < b.group) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_Examples() {\r\n        let examples: (string | number)[] = [\"\"];\r\n\r\n        function extract_Example(element, key: string, isObject: Function, parent: string = \"\") {\r\n            if (parent) {\r\n                if (element[parent]) {\r\n                    element[parent].forEach(parent => {\r\n                        if (parent[key]) {\r\n                            if (!isObject(parent[key])) {\r\n                                examples.push(parent[key]);\r\n                            } else {\r\n                                examples.push(...parent[key]);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            } else if (element[key]) {\r\n                if (!isObject(element[key])) {\r\n                    examples.push(element[key]);\r\n                } else {\r\n                    examples.push(...element[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        switch (this.propertyData.examples) {\r\n            case \"prof\":\r\n                switch (this.get_Parent()[\"type\"]) {\r\n                    case \"weapons\":\r\n                        examples = this.characterService.get_Skills(this.get_Character(), \"\", \"Weapon Proficiency\").map(item => item.name)\r\n                        examples.push(\"Advanced Weapons\");\r\n                        break;\r\n                    case \"armors\":\r\n                        examples = this.characterService.get_Skills(this.get_Character(), \"\", \"Armor Proficiency\").map(item => item.name);\r\n                        examples.push(\"Light Barding\");\r\n                        examples.push(\"Heavy Barding\");\r\n                        break;\r\n                }\r\n                break;\r\n            case \"group\":\r\n                switch (this.get_Parent()[\"type\"]) {\r\n                    case \"weapons\":\r\n                        examples.push(...this.get_Items().weapons.map(item => item.group))\r\n                        break;\r\n                    case \"armors\":\r\n                        examples.push(...this.get_Items().armors.map(item => item.group))\r\n                        break;\r\n                }\r\n                break;\r\n            case \"weaponBase\":\r\n                examples.push(...this.get_Items().weapons.map(item => item.weaponBase))\r\n                break;\r\n            case \"traits\":\r\n                examples = this.traitsService.get_Traits().map(trait => trait.name)\r\n                break;\r\n            case \"isdoublingrings\":\r\n                examples = [\"\", \"Doubling Rings\", \"Doubling Rings (Greater)\"];\r\n                break;\r\n            case \"iswayfinder\":\r\n                examples = [0, 1, 2];\r\n                break;\r\n            case \"activity\":\r\n                examples.push(...this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables()))\r\n                    .filter(item => item[this.propertyData.key] && item[this.propertyData.key].length).map((item: Consumable) => {\r\n                        return item[this.propertyData.key];\r\n                    }));\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    examples.push(...item.activities.filter(activity => activity[this.propertyData.key].length)\r\n                        .map((activity: Activity) => activity[this.propertyData.key]\r\n                        ))\r\n                });\r\n                examples.push(...this.activitiesService.get_Activities()\r\n                    .filter(activity => activity[this.propertyData.key].length).map((activity: Activity) =>\r\n                        activity[this.propertyData.key]\r\n                    ));\r\n                break;\r\n            case \"spellname\":\r\n                examples.push(...this.spellsService.get_Spells().map(spell => spell.name));\r\n                break;\r\n            case \"spelllevel\":\r\n                examples = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n                break;\r\n            case \"storedspelllevel\":\r\n                examples = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n                break;\r\n            case \"spelltraditions\":\r\n                examples = [\"\", \"Arcane\", \"Divine\", \"Occult\", \"Primal\"];\r\n                break;\r\n            case \"spelltargets\":\r\n                examples = [\"\", \"Enemies\", \"Others\", \"Caster\"];\r\n                break;\r\n            case \"onceEffects affected\":\r\n                examples.push(...[\"Focus\", \"HP\", \"Temporary HP\"])\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.affected))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.affected))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.affected))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.affected))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.affected))\r\n                });\r\n                break;\r\n            case \"onceEffects value\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.value))\r\n                });\r\n                break;\r\n            case \"effects affected\":\r\n                examples.push(...this.characterService.get_Skills(this.get_Character()).map((skill: Skill) => skill.name));\r\n                examples.push(...this.characterService.get_Abilities().map((ability: Ability) => { return ability.name }));\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.affected))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.affected))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.affected))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.affected))\r\n                    });\r\n                });\r\n                break;\r\n            case \"effects value\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.value))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.value))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.value))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"effects setvalue\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.setValue))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.setValue))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"inputRequired\":\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    examples.push(...item.activities.filter(activity => activity.inputRequired.length)\r\n                        .map((activity: Activity) => activity.inputRequired\r\n                        ))\r\n                });\r\n                examples.push(...this.activitiesService.get_Activities()\r\n                    .filter(activity => activity.inputRequired.length).map((activity: Activity) => {\r\n                        return activity.inputRequired;\r\n                    }));\r\n                examples.push(...this.characterService.get_Conditions()\r\n                    .filter(condition => condition.inputRequired.length).map((condition: Condition) => {\r\n                        return condition.inputRequired;\r\n                    }));\r\n                break;\r\n            case \"gainactivity name\":\r\n                examples.push(...this.activitiesService.get_Activities().map((activity: Activity) => {\r\n                    return activity.name;\r\n                }));\r\n                break;\r\n            case \"showon\":\r\n                examples.push(...this.characterService.get_Skills(this.get_Character()).map((skill: Skill) => skill.name));\r\n                examples.push(...this.characterService.get_Abilities().map((ability: Ability) => ability.name));\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.hints.length).forEach(feat => {\r\n                    examples.push(...feat.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                })\r\n                this.characterService.get_Conditions().filter(condition => condition.hints.length).forEach(condition => {\r\n                    examples.push(...condition.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                })\r\n                this.activitiesService.get_Activities().filter(activity => activity.hints.length).forEach(activity => {\r\n                    examples.push(...activity.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                })\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.hints.length).forEach(activity => {\r\n                        examples.push(...activity.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                    })\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.hints.length).forEach((item: Equipment) => {\r\n                    examples.push(...item.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                });\r\n                break;\r\n            case \"hints desc\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.hints.length).forEach(feat => {\r\n                    examples.push(...feat.hints.filter(hint => hint.desc.length).map(hint => hint.desc));\r\n                })\r\n                this.activitiesService.get_Activities().filter(activity => activity.hints.length).forEach(activity => {\r\n                    examples.push(...activity.hints.filter(hint => hint.desc.length).map(hint => hint.desc));\r\n                })\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.hints.length).forEach(activity => {\r\n                        examples.push(...activity.hints.filter(hint => hint.desc.length).map(hint => hint.desc));\r\n                    })\r\n                });\r\n                break;\r\n            case \"effects type\":\r\n                examples = [\"\", \"item\", \"circumstance\", \"status\", \"proficiency\"];\r\n                break;\r\n            case \"gaincondition name\":\r\n                examples.push(...this.characterService.get_Conditions().map((condition: Condition) => condition.name));\r\n                break;\r\n            case \"gainitems name\":\r\n                examples = this.itemsService.get_Items()[this.get_Parent()[\"type\"]].map((item: Item) => item.name);\r\n                break;\r\n            case \"gainitems on\":\r\n                examples = [\"\", \"equip\", \"grant\", \"use\"];\r\n                break;\r\n            case \"dicesize\":\r\n                examples = [1, 2, 3, 4, 6, 8, 10, 12];\r\n                break;\r\n            default:\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).forEach((item: Equipment) => {\r\n                    extract_Example(item, this.propertyData.key, this.get_IsObject, this.propertyData.parent);\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).forEach((item: Consumable) => {\r\n                    extract_Example(item, this.propertyData.key, this.get_IsObject, this.propertyData.parent);\r\n                });\r\n                break;\r\n\r\n        }\r\n\r\n        let uniqueExamples = Array.from(new Set(examples))\r\n        return uniqueExamples.sort((a, b) => {\r\n            if (a > b) {\r\n                return 1;\r\n            }\r\n            if (a < b) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_ItemSets() {\r\n        return this.itemsService.get_Items().names;\r\n    }\r\n\r\n    set_ItemType() {\r\n        this.get_Parent()[\"name\"] = this.itemsService.get_Items()[this.get_Parent()[\"type\"]][0][\"name\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","<header class=\"sectionHeader\" *ngIf=\"propertyData.priority == 0 && propertyData.group\">\r\n    {{propertyData.group.split(\"-\")[1]}}</header>\r\n<div class=\"list-item\">\r\n    <ng-container *ngIf=\"!noTitle\">\r\n        <div class=\"newrow left-aligned\">\r\n            <strong [ngbPopover]=\"propertyData.desc\">{{propertyData.name}}</strong>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"get_IsObject(get_Parent()[propertyKey]) && get_Parent()[propertyKey]!=null\">\r\n        <button (click)=\"add_NewItemObject()\">Add</button>\r\n        <div class=\"list-item\" *ngFor=\"let object of get_Parent()[propertyKey]; let i = index; trackBy:trackByIndex;\">\r\n            <span>{{i+1}}</span>\r\n            <span>\r\n                <button (click)=\"remove_NewItemObject(i)\">Remove</button>\r\n            </span>\r\n            <ng-container *ngIf=\"get_IsObject(object)\">\r\n                <ng-container *ngFor=\"let subProperty of get_NewItemSubProperties(object); trackBy:trackByIndex;\">\r\n                    <app-newItemProperty [propertyData]=subProperty [propertyKey]=subProperty.key\r\n                        [parents]=parents.concat(propertyKey,i) [newItem]=newItem></app-newItemProperty>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!get_IsObject(object)\">\r\n                <app-newItemProperty class=\"newrow\" [propertyData]=propertyData [propertyKey]=i\r\n                    [parents]=parents.concat(propertyKey) [noTitle]=true [newItem]=newItem></app-newItemProperty>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!get_IsObject(get_Parent()[propertyKey]) || get_Parent()[propertyKey]==null\">\r\n        <div class=\"newrow\">\r\n            <input id=\"{{propertyKey}}\" class=\"newrow\" type=\"text\" [(ngModel)]=\"get_Parent()[propertyKey]\" (blur)=\"validate()\"\r\n                *ngIf=\"!propertyData.type && !propertyData.locked\">\r\n            <textarea class=\"newrow\" rows=3 [(ngModel)]=\"get_Parent()[propertyKey]\"\r\n                *ngIf=\"propertyData.type=='textarea'\"></textarea>\r\n            <input type=\"checkbox\" [(ngModel)]=\"get_Parent()[propertyKey]\" *ngIf=\"propertyData.type=='checkbox'\">\r\n            <input type=\"number\" [(ngModel)]=\"get_Parent()[propertyKey]\" (blur)=\"validate()\"\r\n                (keypress)=\"numbersOnly($event)\" *ngIf=\"propertyData.type=='number'\">\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"validationError.length\">\r\n            <span class=\"problem\">{{validationError}}</span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"validationResult.length\">\r\n            <span>Current result: {{validationResult}}</span>\r\n        </div>\r\n        <div class=\"list-item\" style=\"margin: initial 0\" *ngIf=\"propertyData.type!='textarea' && propertyData.type!='checkbox' &&\r\n        !(propertyData.parent == 'gainItems' && propertyData.key == 'type')\">\r\n            <select class=\"newrow\" [(ngModel)]=\"get_Parent()[propertyKey]\" [disabled]=\"!get_Examples().length\"\r\n                (ngModelChange)=\"validate()\">\r\n                <option *ngFor=\"let example of get_Examples(); trackBy:trackByIndex;\" [ngValue]=\"example\">\r\n                    {{example}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"list-item\" style=\"margin: initial 0\"\r\n            *ngIf=\"propertyData.parent == 'gainItems' && propertyData.key == 'type'\">\r\n            <select class=\"newrow\" [(ngModel)]=\"get_Parent()[propertyKey]\" (ngModelChange)=\"set_ItemType()\">\r\n                <option *ngFor=\"let itemset of get_ItemSets(); trackBy:trackByIndex;\" [ngValue]=\"itemset.key\">\r\n                    {{itemset.name}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { Item } from 'src/app/Item';\r\nimport { Oil } from 'src/app/Oil';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Weapon } from 'src/app/Weapon';\r\n\r\n@Component({\r\n    selector: 'app-itemOils',\r\n    templateUrl: './itemOils.component.html',\r\n    styleUrls: ['./itemOils.component.css']\r\n})\r\nexport class ItemOilsComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Item;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    newOil: { oil: Oil, inv: ItemCollection } = { oil: new Oil(), inv: null };\r\n\r\n    public newPropertyRuneName: string[] = [\"\", \"\", \"\"];\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Duration(turns: number) {\r\n        return this.timeService.get_Duration(turns)\r\n    }\r\n\r\n    get_Oils() {\r\n        let item = this.item;\r\n        let allOils: { oil: Oil, inv: ItemCollection }[] = [{ oil: new Oil(), inv: null }];\r\n        allOils[0].oil.name = \"\";\r\n        if (this.itemStore) {\r\n            allOils.push(...this.get_CleanItems().oils.filter(oil => oil.targets.length).map(oil => ({ oil: oil, inv: null })));\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                allOils.push(...inv.oils.filter(oil => oil.targets.length && oil.amount).map(oil => ({ oil: oil, inv: inv })));\r\n            });\r\n        }\r\n        return allOils.filter(\r\n            (oil: { oil: Oil, inv: ItemCollection }, index) =>\r\n                index == 0 ||\r\n                (\r\n                    oil.oil.targets.length && (\r\n                        oil.oil.targets.includes(item.type) ||\r\n                        oil.oil.targets.includes(\"items\")\r\n                    ) && (\r\n                        oil.oil.weightLimit ?\r\n                            (\r\n                                !(parseInt(item.bulk)) ||\r\n                                (\r\n                                    item.bulk && parseInt(item.bulk) <= oil.oil.weightLimit\r\n                                )\r\n                            )\r\n                            : true\r\n                    ) && (\r\n                        oil.oil.rangereq ?\r\n                            (\r\n                                item[oil.oil.rangereq]\r\n                            )\r\n                            : true\r\n                    ) && (\r\n                        oil.oil.damagereq ?\r\n                            (\r\n                                (item as Weapon).dmgType &&\r\n                                (\r\n                                    oil.oil.damagereq.split(\"\")\r\n                                        .filter(req => item[\"dmgType\"].includes(req)).length ||\r\n                                    (item as Weapon).dmgType == \"modular\"\r\n                                )\r\n                            )\r\n                            : true\r\n                    )\r\n                )\r\n        );\r\n    }\r\n\r\n    add_Oil() {\r\n        if (this.newOil.oil.name) {\r\n            let item = this.item;\r\n            let newLength = item.oilsApplied.push(Object.assign(new Oil(), JSON.parse(JSON.stringify(this.newOil.oil))));\r\n            item.oilsApplied[newLength - 1] = this.characterService.reassign(item.oilsApplied[newLength - 1]);\r\n            if (this.newOil.inv) {\r\n                this.characterService.drop_InventoryItem(this.get_Character(), this.newOil.inv, this.newOil.oil, false, false, false, 1);\r\n            }\r\n            //Add RuneLore if the oil's Rune Effect includes one\r\n            if (item.oilsApplied[newLength - 1].runeEffect && item.oilsApplied[newLength - 1].runeEffect.loreChoices.length) {\r\n                this.characterService.add_RuneLore(item.oilsApplied[newLength - 1].runeEffect);\r\n            }\r\n            this.newOil = { oil: new Oil(), inv: null };\r\n            this.newOil.oil.name = \"\";\r\n            this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n            this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    remove_Oil(index: number) {\r\n        //Remove RuneLore if applicable.\r\n        if (this.item.oilsApplied[index].runeEffect && this.item.oilsApplied[index].runeEffect.loreChoices.length) {\r\n            this.characterService.remove_RuneLore(this.item.oilsApplied[index].runeEffect);\r\n        }\r\n        this.item.oilsApplied.splice(index, 1);\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","<!--Adding Oils-->\r\n<div class=\"list-item\" *ngIf=\"get_Oils().length > 1 || item.oilsApplied.length\">\r\n    <div class=\"newrow\">\r\n        <strong>Apply oil</strong>\r\n        <select [(ngModel)]=\"newOil\" (ngModelChange)=\"add_Oil()\">\r\n            <option *ngFor=\"let oil of get_Oils(); trackBy:trackByIndex;\" [ngValue]=\"oil\">\r\n                {{oil.oil.amount != 1 ? oil.oil.amount + \" \" : \"\"}}{{oil.oil.get_Name()}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.oilsApplied.length\">\r\n        <strong>Applied oils</strong>\r\n        <div class=\"newrow\" *ngFor=\"let oil of item.oilsApplied; let index = index; trackBy:trackByIndex;\">\r\n            <span>\r\n                {{oil.get_Name()}} ({{get_Duration(oil.duration)}})\r\n            </span>\r\n            <button class=\"lower\" (click)=\"remove_Oil(index)\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>","import { FeatChoice } from './FeatChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { ItemGain } from './ItemGain';\r\n\r\nexport class Heritage {\r\n    public readonly _className: string = this.constructor.name;\r\n    public gainActivities: string[] = [];\r\n    public ancestries: string[] = [];\r\n    public desc: string = \"\";\r\n    public featChoices: FeatChoice[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public name: string = \"\";\r\n    public senses: string[] = [];\r\n    public skillChoices: SkillChoice[] = [];\r\n    //Some feats may add additional heritages. We use the source here so we can identify and remove them.\r\n    public source: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public spellChoices: SpellChoice[] = [];\r\n    public subType: string = \"\";\r\n    public subTypes: Heritage[] = [];\r\n    public traits: string[] = [];\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D4',\r\n  templateUrl: './D4.svg',\r\n  styleUrls: ['./diceIcons_D4.component.css']\r\n})\r\nexport class DiceIcons_D4Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D4\"\r\n        d=\"M 62.00,56.00\r\n           C 62.00,56.00 2.00,56.00 2.00,56.00\r\n             2.00,56.00 32.00,7.00 32.00,7.00\r\n             32.00,7.00 62.00,56.00 62.00,56.00 Z\r\n           M 62.00,56.00\r\n           C 62.00,56.00 32.00,40.00 32.00,40.00\r\n             32.00,40.00 2.00,56.00 2.00,56.00M 32.00,7.00\r\n           C 32.00,7.00 32.00,40.00 32.00,40.00\" />\r\n   </g>\r\n</svg>\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { EffectsService } from './effects.service';\r\nimport { DefenseService } from './defense.service';\r\nimport { CharacterService } from './character.service';\r\nimport { Effect } from './Effect';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\nimport { Creature } from './Creature';\r\nimport { Shield } from './Shield';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { ConditionGain } from './ConditionGain';\r\n\r\nexport class AC {\r\n    public name: string = \"AC\"\r\n    set_Cover(creature: Creature, cover: number, shield: Shield = null, characterService: CharacterService, conditionsService: ConditionsService) {\r\n        let conditions: ConditionGain[] = conditionsService.get_AppliedConditions(creature, characterService, creature.conditions, true)\r\n            .filter(gain => [\"Lesser Cover\", \"Standard Cover\", \"Greater Cover\"].includes(gain.name) && gain.source == \"Defense\");\r\n        let lesserCover = conditions.find(gain => gain.name == \"Lesser Cover\");\r\n        let standardCover = conditions.find(gain => gain.name == \"Standard Cover\");\r\n        let greaterCover = conditions.find(gain => gain.name == \"Greater Cover\");\r\n        let coverName: string = \"\";\r\n        switch (cover) {\r\n            case 0:\r\n                if (shield) {\r\n                    shield.takingCover = false;\r\n                }\r\n                break;\r\n            case 1:\r\n                if (!lesserCover) {\r\n                    coverName = \"Lesser Cover\";\r\n                }\r\n                break;\r\n            case 2:\r\n                if (!standardCover) {\r\n                    coverName = \"Standard Cover\";\r\n                }\r\n                break;\r\n            case 4:\r\n                if (shield) {\r\n                    shield.takingCover = true;\r\n                }\r\n                if (!greaterCover) {\r\n                    coverName = \"Greater Cover\";\r\n                }\r\n                break;\r\n        }\r\n        if (lesserCover && cover != 1) {\r\n            characterService.remove_Condition(creature, lesserCover, false);\r\n        }\r\n        if (standardCover && cover != 2) {\r\n            characterService.remove_Condition(creature, standardCover, false);\r\n        }\r\n        if (greaterCover && cover != 4) {\r\n            characterService.remove_Condition(creature, greaterCover, false);\r\n        }\r\n        if (coverName) {\r\n            let newCondition: ConditionGain = Object.assign(new ConditionGain(), { name: coverName, source: \"Defense\", duration: -1, locked: true })\r\n            characterService.add_Condition(creature, newCondition, false);\r\n        }\r\n        characterService.process_ToChange();\r\n    }\r\n    calculate(creature: Creature, characterService: CharacterService, defenseService: DefenseService, effectsService: EffectsService) {\r\n        let character = characterService.get_Character();\r\n        let absolutes: Effect[] = this.absolutes(creature, effectsService);\r\n        let relatives: Effect[] = this.relatives(creature, character, effectsService);\r\n\r\n        let result = {\r\n            absolutes: absolutes,\r\n            relatives: relatives,\r\n            bonuses: this.bonuses(creature, character, effectsService),\r\n            penalties: this.penalties(creature, character, effectsService),\r\n            value: this.value(creature, characterService, defenseService, effectsService, absolutes, relatives)\r\n        }\r\n        return result;\r\n    }\r\n    get_NamesList() {\r\n        return [\r\n            \"AC\",\r\n            \"All Checks and DCs\",\r\n            \"Dexterity-based Checks and DCs\"\r\n        ]\r\n    }\r\n    absolutes(creature: Creature, effectsService: EffectsService) {\r\n        return effectsService.get_AbsolutesOnThese(creature, this.get_NamesList());\r\n    }\r\n    relatives(creature: Creature, character: Character, effectsService: EffectsService) {\r\n        //Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (creature.type == \"Familiar\") {\r\n            let effects = effectsService.get_RelativesOnThese(character, this.get_NamesList()).filter(effect => effect.type != \"circumstance\" && effect.type != \"status\")\r\n            effects.push(...effectsService.get_RelativesOnThese(creature, this.get_NamesList()).filter(effect => effect.type == \"circumstance\" || effect.type == \"status\"))\r\n        }\r\n        return effectsService.get_RelativesOnThese(creature, this.get_NamesList());\r\n    }\r\n    bonuses(creature: Creature, character: Character, effectsService: EffectsService) {\r\n        //We need to copy show_BonusesOnThese and adapt it because Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (creature.type == \"Familiar\") {\r\n            let characterBonuses = effectsService.get_Effects(character.type).bonuses.some(effect =>\r\n                effect.creature == character.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                effect.type != \"circumstance\" &&\r\n                effect.type != \"status\" &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            let familiarBonuses = effectsService.get_Effects(creature.type).bonuses.some(effect =>\r\n                effect.creature == creature.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                (effect.type == \"circumstance\" || effect.type == \"status\") &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            return characterBonuses || familiarBonuses;\r\n        } else {\r\n            return effectsService.show_BonusesOnThese(creature, this.get_NamesList());\r\n        }\r\n    }\r\n    penalties(creature: Creature, character: Character, effectsService: EffectsService) {\r\n        //We need to copy show_PenaltiesOnThese and adapt it because Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (creature.type == \"Familiar\") {\r\n            let characterPenalties = effectsService.get_Effects(character.type).penalties.some(effect =>\r\n                effect.creature == character.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                effect.type != \"circumstance\" &&\r\n                effect.type != \"status\" &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            let familiarPenalties = effectsService.get_Effects(creature.type).penalties.some(effect =>\r\n                effect.creature == creature.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                (effect.type == \"circumstance\" || effect.type == \"status\") &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            return characterPenalties || familiarPenalties;\r\n        } else {\r\n            return effectsService.show_PenaltiesOnThese(creature, this.get_NamesList());\r\n        }\r\n    }\r\n    value(creature: Creature, characterService: CharacterService, defenseService: DefenseService, effectsService: EffectsService, absolutes: Effect[] = undefined, relatives: Effect[] = undefined) {\r\n        if (characterService.still_loading()) { return { result: 0, explain: \"\" }; }\r\n        //Get the bonus from the worn armor. This includes the basic 10\r\n        let armorBonus: number = 10;\r\n        let explain: string = \"DC Basis: 10\";\r\n        let armorCreature: AnimalCompanion | Character;\r\n        let character: Character = characterService.get_Character();\r\n        //Familiars get the Character's AC\r\n        if (creature.type == \"Familiar\") {\r\n            armorCreature = character;\r\n        } else {\r\n            armorCreature = creature as AnimalCompanion | Character;\r\n        }\r\n        //Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (relatives == undefined) {\r\n            relatives = this.relatives(creature, character, effectsService);\r\n        } else {\r\n            //Reassign the effects to unchain them from the calling function.\r\n            relatives = relatives.map(relative => Object.assign(new Effect(), JSON.parse(JSON.stringify(relative))));\r\n        }\r\n        let armorSet = false;\r\n        //Absolutes completely replace the baseValue. They are sorted so that the highest value counts last.\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(armorCreature, effectsService)\r\n        } else {\r\n            //Reassign the effects to unchain them from the calling function.\r\n            absolutes = absolutes.map(absolute => Object.assign(new Effect(), JSON.parse(JSON.stringify(absolute))));\r\n        }\r\n        absolutes.forEach(effect => {\r\n            armorSet = true;\r\n            armorBonus = parseInt(effect.setValue)\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        let armors = defenseService.get_EquippedArmor(armorCreature);\r\n        if (!armorSet && armors.length > 0) {\r\n            let armor = armors[0];\r\n            let charLevel = characterService.get_Character().level;\r\n            let dex = characterService.get_Abilities(\"Dexterity\")[0].mod(armorCreature, characterService, effectsService).result;\r\n            //Get the profiency with either this armor or its category\r\n            //Familiars have the same AC as the Character before circumstance or status effects.\r\n            let skillLevel = armor.profLevel(armorCreature, characterService);\r\n            let charLevelBonus = 0;\r\n            if (skillLevel) {\r\n                explain += \"\\nProficiency: \" + skillLevel;\r\n                //Add character level if the character is trained or better with either the armor category or the armor itself\r\n                charLevelBonus = charLevel;\r\n                explain += \"\\nCharacter Level: \" + charLevelBonus;\r\n            }\r\n            //Add the dexterity modifier up to the armor's dex cap, unless there is no cap\r\n            let dexcap = armor.get_DexCap();\r\n            effectsService.get_AbsolutesOnThis(creature, \"Dexterity Modifier Cap\").forEach(effect => {\r\n                dexcap = parseInt(effect.setValue);\r\n                explain += \"\\n\" + effect.source + \": Dexterity modifier cap \" + dexcap;\r\n            })\r\n            effectsService.get_RelativesOnThis(creature, \"Dexterity Modifier Cap\").forEach(effect => {\r\n                dexcap += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": Dexterity modifier cap \" + parseInt(effect.value);\r\n            })\r\n            let dexBonus = (dexcap != -1) ? Math.max(Math.min(dex, dexcap), 0) : dex;\r\n            if (dexBonus) {\r\n                if (dexcap != -1 && dexcap < dex) {\r\n                    explain += \"\\nDexterity Modifier (capped): \" + dexBonus;\r\n                } else {\r\n                    explain += \"\\nDexterity Modifier: \" + dexBonus;\r\n                }\r\n            }\r\n            //Explain the Armor Bonus\r\n            let armorItemBonus = armor.get_ACBonus();\r\n            let shoddy = armor.$shoddy;\r\n            if (armorItemBonus || shoddy) {\r\n                explain += \"\\nArmor Bonus: \" + (armorItemBonus + (shoddy ? 2 : 0));\r\n            }\r\n            //As long as Potency is calculated like this, it is cumulative with item effects on AC.\r\n            let potency = armor.get_PotencyRune();\r\n            if (potency) {\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, potency.toString(), \"\", false, \"Potency\", false, true, true, 0))\r\n            }\r\n            if (armor.battleforged) {\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, \"+1\", \"\", false, \"Battleforged\", false, true, true, 0))\r\n            }\r\n            //Shoddy items have a -2 item penalty to attacks, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n            if (shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && armor.crafted) {\r\n                explain += \"\\nShoddy (canceled by Junk Tinker): -0\";\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, \"0\", \"\", false, \" (canceled by Junk Tinker)\", true, true, true, 0))\r\n            } else if (shoddy) {\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, \"-2\", \"\", false, \"Shoddy\", true, true, true, 0))\r\n            }\r\n            //Add up all modifiers and return the AC gained from this armor\r\n            armorBonus += skillLevel + charLevelBonus + armorItemBonus + dexBonus;\r\n        }\r\n        //Sum up the effects\r\n        let effectsSum = 0;\r\n        characterService.effectsService.get_TypeFilteredEffects(relatives, false)\r\n            .forEach(effect => {\r\n                effectsSum += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            });\r\n        //Add up the armor bonus and all active effects and return the sum\r\n        let result: number = armorBonus + effectsSum;\r\n        return { result: result, explain: explain };\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { CharacterService } from '../character.service';\r\n\r\n@Component({\r\n    selector: 'app-character-sheet',\r\n    templateUrl: './character-sheet.component.html',\r\n    styleUrls: ['./character-sheet.component.css'],\r\n    animations: [\r\n        trigger('slideInOut', [\r\n            state('in', style({\r\n                transform: 'translate3d(0,0,0)'\r\n            })),\r\n            state('out', style({\r\n                transform: 'translate3d(-100%, 0, 0)'\r\n            })),\r\n            transition('in => out', animate('400ms ease-in-out')),\r\n            transition('out => in', animate('400ms ease-in-out'))\r\n        ]),\r\n        trigger('slideInOutRight', [\r\n            state('in', style({\r\n                transform: 'translate3d(0,0,0)'\r\n            })),\r\n            state('out', style({\r\n                transform: 'translate3d(+100%, 0, 0)'\r\n            })),\r\n            transition('in => out', animate('400ms ease-in-out')),\r\n            transition('out => in', animate('400ms ease-in-out'))\r\n        ]),\r\n        trigger('slideInOutVert', [\r\n            state('in', style({\r\n                transform: 'translate3d(0,0,0)'\r\n            })),\r\n            state('out', style({\r\n                transform: 'translate3d(0, -100%, 0)'\r\n            })),\r\n            transition('in => out', animate('400ms ease-in-out')),\r\n            transition('out => in', animate('400ms ease-in-out'))\r\n        ]),\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CharacterSheetComponent implements OnInit {\r\n\r\n    public showMode: string = \"\";\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        private changeDetector: ChangeDetectorRef\r\n    ) { }\r\n\r\n    toggle_Mode(type: string) {\r\n        if (this.showMode == type) {\r\n            this.showMode = \"\";\r\n        } else {\r\n            this.showMode = type;\r\n        }\r\n    }\r\n\r\n    get_ShowMode() {\r\n        return this.showMode;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    get_Darkmode() {\r\n        return this.characterService.get_Darkmode();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.characterService.get_ItemsMenuState();\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.characterService.get_CraftingMenuState();\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterService.get_CharacterMenuState();\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.characterService.get_CompanionMenuState();\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.characterService.get_FamiliarMenuState();\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.characterService.get_SpellsMenuState();\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.characterService.get_SpellLibraryMenuState();\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.characterService.get_ConditionsMenuState();\r\n    }\r\n\r\n    get_DiceMenuState() {\r\n        return this.characterService.get_DiceMenuState();\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_CharacterMinimized() {\r\n        return this.characterService.get_Character().settings.characterMinimized;\r\n    }\r\n\r\n    get_CompanionMinimized() {\r\n        return this.characterService.get_Character().settings.companionMinimized;\r\n    }\r\n\r\n    get_FamiliarMinimized() {\r\n        return this.characterService.get_Character().settings.familiarMinimized;\r\n    }\r\n\r\n    get_SpellsMinimized() {\r\n        return this.characterService.get_Character().settings.spellsMinimized;\r\n    }\r\n\r\n    get_SpellLibraryMinimized() {\r\n        return this.characterService.get_Character().settings.spelllibraryMinimized;\r\n    }\r\n    \r\n    get_GeneralMinimized() {\r\n        return this.characterService.get_Character().settings.generalMinimized;\r\n    }\r\n\r\n    get_EffectsMinimized() {\r\n        return this.characterService.get_Character().settings.effectsMinimized;\r\n    }\r\n\r\n    get_AbilitiesMinimized() {\r\n        return this.characterService.get_Character().settings.abilitiesMinimized;\r\n    }\r\n\r\n    get_HealthMinimized() {\r\n        return this.characterService.get_Character().settings.healthMinimized;\r\n    }\r\n\r\n    get_DefenseMinimized() {\r\n        return this.characterService.get_Character().settings.defenseMinimized;\r\n    }\r\n\r\n    get_AttacksMinimized() {\r\n        return this.characterService.get_Character().settings.attacksMinimized;\r\n    }\r\n\r\n    get_SkillsMinimized() {\r\n        return this.characterService.get_Character().settings.skillsMinimized;\r\n    }\r\n\r\n    get_InventoryMinimized() {\r\n        return this.characterService.get_Character().settings.inventoryMinimized;\r\n    }\r\n\r\n    get_ActivitiesMinimized() {\r\n        return this.characterService.get_Character().settings.activitiesMinimized;\r\n    }\r\n\r\n    get_SpellbookMinimized() {\r\n        return this.characterService.get_Character().settings.spellbookMinimized;\r\n    }\r\n\r\n    get_TimeMinimized() {\r\n        return this.characterService.get_Character().settings.timeMinimized;\r\n    }\r\n\r\n    get_ClassOrder(fightingStyle: string) {\r\n        //Returns whether the fightingStyle (attacks or spells) should be first or second for this class (0 or 1).\r\n        //This checks whether you have a primary spellcasting for your class from level 1, and if so, spells should be first.\r\n        if (this.characterService.get_Character().get_DefaultSpellcasting()?.charLevelAvailable == 1) {\r\n            switch (fightingStyle) {\r\n                case \"attacks\":\r\n                    return 1;\r\n                case \"spells\":\r\n                    return 0;\r\n            }\r\n        } else {\r\n            switch (fightingStyle) {\r\n                case \"attacks\":\r\n                    return 0;\r\n                case \"spells\":\r\n                    return 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.characterService.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"character-sheet\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"character-sheet\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div id=\"charactersheet\" class=\"charactersheet\">\r\n    <div class=\"charactersheet-app charactersheet-row\" id=\"tabs\">\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()==''}\" (click)=\"toggle_Mode('')\">Show All</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Encounter'}\"\r\n            (click)=\"toggle_Mode('Encounter')\">Encounter</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Exploration'}\"\r\n            (click)=\"toggle_Mode('Exploration')\">Exploration</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Downtime'}\"\r\n            (click)=\"toggle_Mode('Downtime')\">Downtime</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Inventory'}\"\r\n            (click)=\"toggle_Mode('Inventory')\">Inventory</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='ConditionsEffects'}\"\r\n            (click)=\"toggle_Mode('ConditionsEffects')\">Conditions & Effects</button>\r\n    </div>\r\n    <ng-container *ngIf=\"!still_loading() && !['Inventory','ConditionsEffects'].includes(get_ShowMode())\">\r\n        <app-time class=\"charactersheet-app charactersheet-row\" [sheetSide]=\"'center'\"\r\n            [showTurn]=\"(['','Encounter'].includes(get_ShowMode()))\" [showTime]=\"(get_ShowMode() != 'Encounter')\"\r\n            [ngClass]=\"{'minimized':(get_TimeMinimized())}\"></app-time>\r\n        <app-effects id=\"Character-effects\" class=\"charactersheet-app charactersheet-row\" [sheetSide]=\"'center'\">\r\n        </app-effects>\r\n        <div class=\"charactersheet-column-container\">\r\n            <div class=\"charactersheet-column\">\r\n                <app-general id=\"Character-general\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_GeneralMinimized())}\" *ngIf=\"(get_ShowMode() != 'Encounter')\">\r\n                </app-general>\r\n                <app-defense id=\"Character-defense\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_DefenseMinimized())}\" *ngIf=\"(get_ShowMode() == 'Encounter')\">\r\n                </app-defense>\r\n                <app-health id=\"Character-health\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [showMinimizeButton]=\"(get_ShowMode() != 'Downtime')\"\r\n                    [ngClass]=\"{'minimized':(get_HealthMinimized() || (get_ShowMode() == 'Downtime'))}\"></app-health>\r\n                <app-general id=\"Character-general\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_GeneralMinimized())}\" *ngIf=\"(get_ShowMode() == 'Encounter')\">\r\n                </app-general>\r\n                <app-abilities id=\"Character-abilities\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_AbilitiesMinimized())}\"></app-abilities>\r\n                <app-skills id=\"Character-skills\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_SkillsMinimized())}\"\r\n                    *ngIf=\"['', 'Encounter'].includes(get_ShowMode())\"></app-skills>\r\n                <app-activities id=\"Character-activities\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_ActivitiesMinimized())}\"\r\n                    *ngIf=\"['', 'Encounter'].includes(get_ShowMode())\">\r\n                </app-activities>\r\n                <app-spellbook id=\"spellbook\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_SpellbookMinimized())}\" *ngIf=\"(get_ShowMode() == 'Downtime')\">\r\n                </app-spellbook>\r\n            </div>\r\n            <div class=\"charactersheet-column\">\r\n                <app-defense id=\"Character-defense\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_DefenseMinimized())}\" *ngIf=\"(get_ShowMode() == '')\"></app-defense>\r\n                <app-skills id=\"Character-skills\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_SkillsMinimized())}\"\r\n                    *ngIf=\"['Exploration','Downtime'].includes(get_ShowMode())\"></app-skills>\r\n                <ng-container *ngFor=\"let index of [0,1]; trackBy:trackByIndex;\">\r\n                    <app-attacks id=\"Character-attacks\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                        [ngClass]=\"{'minimized':(get_AttacksMinimized())}\"\r\n                        *ngIf=\"['','Encounter'].includes(get_ShowMode()) && get_ClassOrder('attacks') == index\">\r\n                    </app-attacks>\r\n                    <app-spellbook id=\"spellbook\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                        [ngClass]=\"{'minimized':(get_SpellbookMinimized())}\"\r\n                        *ngIf=\"['','Encounter'].includes(get_ShowMode()) && get_ClassOrder('spells') == index\">\r\n                    </app-spellbook>\r\n                </ng-container>\r\n                <app-activities id=\"Character-activities\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_ActivitiesMinimized())}\"\r\n                    *ngIf=\"!['', 'Encounter'].includes(get_ShowMode())\">\r\n                </app-activities>\r\n                <app-spellbook id=\"spellbook\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_SpellbookMinimized())}\" *ngIf=\"(get_ShowMode() == 'Exploration')\">\r\n                </app-spellbook>\r\n                <app-inventory id=\"Character-inventory\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_InventoryMinimized())}\" *ngIf=\"(get_ShowMode() == '')\"></app-inventory>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"(get_ShowMode() == 'Inventory')\">\r\n        <app-effects id=\"Character-effects\" class=\"charactersheet-app\" [sheetSide]=\"'center'\">\r\n        </app-effects>\r\n        <div class=\"charactersheet-column charactersheet-row\">\r\n            <app-inventory id=\"Character-inventory\" class=\"charactersheet-app\" [sheetSide]=\"'center'\"\r\n                [ngClass]=\"{'minimized':(get_InventoryMinimized())}\"></app-inventory>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"(get_ShowMode() == 'ConditionsEffects')\">\r\n        <app-time class=\"charactersheet-app charactersheet-row\" [sheetSide]=\"'center'\"\r\n            [ngClass]=\"{'minimized':(get_TimeMinimized())}\"></app-time>\r\n        <div class=\"charactersheet-column charactersheet-row\">\r\n            <app-effects id=\"Character-effects\" class=\"charactersheet-app\" [fullDisplay]=\"true\" [sheetSide]=\"'center'\">\r\n            </app-effects>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n<app-items [@slideInOut]=\"get_ItemsMenuState()\" *ngIf=\"!still_loading()\">\r\n</app-items>\r\n<app-crafting [@slideInOut]=\"get_CraftingMenuState()\" *ngIf=\"!still_loading()\">\r\n</app-crafting>\r\n<app-spells [ngClass]=\"{'minimized':(get_SpellsMinimized())}\"\r\n    [@slideInOut]=\"get_SpellsMenuState()\" *ngIf=\"!still_loading()\"></app-spells>\r\n<app-spellLibrary [@slideInOut]=\"get_SpellLibraryMenuState()\"\r\n    *ngIf=\"!still_loading()\"></app-spellLibrary>\r\n<app-conditions [@slideInOut]=\"get_ConditionsMenuState()\"\r\n    *ngIf=\"!still_loading()\"></app-conditions>\r\n<app-character [ngClass]=\"{'minimized':(get_CharacterMinimized())}\"\r\n    [@slideInOut]=\"get_CharacterMenuState()\" *ngIf=\"!still_loading()\"></app-character>\r\n<app-animal-companion [ngClass]=\"{'minimized':(get_CompanionMinimized())}\"\r\n    [@slideInOut]=\"get_CompanionMenuState()\" *ngIf=\"!still_loading() && get_CompanionAvailable()\">\r\n</app-animal-companion>\r\n<app-familiar [ngClass]=\"{'minimized':(get_FamiliarMinimized())}\"\r\n    [@slideInOut]=\"get_FamiliarMenuState()\" *ngIf=\"!still_loading() && get_FamiliarAvailable()\"></app-familiar>\r\n<app-dice [@slideInOutVert]=\"get_DiceMenuState()\"></app-dice>","import { CharacterService } from './character.service';\r\nimport { Skill } from './Skill';\r\nimport { Ability } from './Ability';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { FormulaChoice } from './FormulaChoice';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { Character } from './Character';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Deity } from './Deity';\r\nimport { Speed } from './Speed';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { ItemGain } from './ItemGain';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { ProficiencyChange } from './ProficiencyChange';\r\nimport { HeritageGain } from './HeritageGain';\r\nimport { Hint } from './Hint';\r\nimport { BloodMagic } from './BloodMagic';\r\nimport { Creature } from './Creature';\r\nimport { ProficiencyCopy } from './ProficiencyCopy';\r\nimport { LanguageGain } from './LanguageGain';\r\nimport { SignatureSpellGain } from './SignatureSpellGain';\r\n\r\nexport class Feat {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityreq: any[] = [];\r\n    public access: string = \"\";\r\n    //If weaponfeatbase is true, the feat will be copied for every weapon that matches the description in the subtype:\r\n    // Advanced => Advanced Weapons\r\n    // Ancestry => Weapons with a trait that corresponds to an ancestry\r\n    // Uncommon => Weapons with the Uncommon trait\r\n    //These can be combined. Any more filters need to be hardcoded in characterService.create_WeaponFeats().\r\n    public weaponfeatbase: boolean = false;\r\n    public anathema: string[] = [];\r\n    public archetype: string = \"\";\r\n    public changeProficiency: ProficiencyChange[] = [];\r\n    public copyProficiency: ProficiencyCopy[] = [];\r\n    public bloodMagic: BloodMagic[] = [];\r\n    //Having this feat counts as fulfilling the prerequisite of having the feat named in countAsFeat. This is useful for class feats that allow you to take another of the class type choices.\r\n    public countAsFeat: string = \"\";\r\n    public data: {} = {};\r\n    public desc: string = \"\";\r\n    public effects: any[] = [];\r\n    public featreq: string[] = [];\r\n    public heritagereq: string = \"\";\r\n    //You can add requirements to the ignore list. These get evaluated and must result in \"levelreq\", \"abilityreq\", \"featreq\", \"skillreq\", \"heritagereq\" or \"dedicationlimit\" to do anything.\r\n    public ignoreRequirements: string[] = [];\r\n    public gainAbilityChoice: AbilityChoice[] = [];\r\n    public gainActivities: string[] = [];\r\n    public gainAnimalCompanion: number = 0;\r\n    public gainSpecialization: SpecializationGain[] = [];\r\n    public gainFamiliar: boolean = false;\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainFeatChoice: FeatChoice[] = [];\r\n    public gainFormulaChoice: FormulaChoice[] = [];\r\n    public gainAncestry: string[] = [];\r\n    public gainHeritage: HeritageGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public gainLanguages: LanguageGain[] = [];\r\n    public gainLoreChoice: LoreChoice[] = [];\r\n    public gainSkillChoice: SkillChoice[] = [];\r\n    public gainSpellBookSlots: { spellBookSlots: number[], className: string }[] = [];\r\n    public gainSpellListSpells: string[] = [];\r\n    public gainSpellCasting: SpellCasting[] = [];\r\n    public gainSpellChoice: SpellChoice[] = [];\r\n    public hide: boolean = false;\r\n    public hints: Hint[] = [];\r\n    public readonly internalNote: string = \"\"\r\n    public levelreq: number = 0;\r\n    public limited: number = 0;\r\n    public lorebase: string = \"\";\r\n    public name: string = \"\";\r\n    public onceEffects: any[] = [];\r\n    public senses: string[] = [];\r\n    public shortdesc: string = \"\";\r\n    public skillreq: any[] = [];\r\n    public specialdesc: string = \"\";\r\n    public specialreq: string = \"\";\r\n    public specialreqdesc: string = \"\";\r\n    public subType: string = \"\";\r\n    public subTypes: boolean = false;\r\n    public superType: string = \"\";\r\n    public tenets: string[] = [];\r\n    public traits: string[] = [];\r\n    public unlimited: boolean = false;\r\n    public usageNote: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public allowSignatureSpells: SignatureSpellGain[] = [];\r\n    public PFSnote: string = \"\";\r\n    //For feats with the same name (from different source files for example), higher overridePriority wins. If two have the same priority, the first in the list wins.\r\n    public overridePriority: number = 0;\r\n    prof(skillLevel: number) {\r\n        switch (skillLevel) {\r\n            case 2:\r\n                return \"Trained in \"\r\n            case 4:\r\n                return \"Expert in \"\r\n            case 6:\r\n                return \"Master in \"\r\n            case 8:\r\n                return \"Legendary in \"\r\n        }\r\n    }\r\n    meetsLevelReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a levelreq, check if the level beats that.\r\n        //Returns [requirement met, requirement description]\r\n        let result: { met: boolean, desc: string };\r\n        if (this.levelreq) {\r\n            if (charLevel >= this.levelreq) {\r\n                result = { met: true, desc: \"Level \" + this.levelreq };\r\n            } else {\r\n                result = { met: false, desc: \"Level \" + this.levelreq };\r\n            }\r\n        } else {\r\n            result = { met: true, desc: \"\" };\r\n        }\r\n        return result;\r\n    }\r\n    meetsAbilityReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has an abilityreq, split it into the ability and the requirement (they come in objects {ability, value}), then check if that ability's baseValue() meets the requirement.\r\n        //Ability requirements are checked without temporary bonuses or penalties\r\n        //Returns an array of [requirement met, requirement description]\r\n        let character = characterService.get_Character();\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        if (this.abilityreq.length) {\r\n            this.abilityreq.forEach(requirement => {\r\n                let requiredAbility: Ability[] = characterService.get_Abilities(requirement.ability);\r\n                let expected: number = requirement.value;\r\n                if (requiredAbility.length > 0) {\r\n                    requiredAbility.forEach(ability => {\r\n                        if (ability.baseValue(character, characterService, charLevel).result >= expected) {\r\n                            result.push({ met: true, desc: ability.name + \" \" + expected });\r\n                        } else {\r\n                            result.push({ met: false, desc: ability.name + \" \" + expected });\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsSkillReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a skillreq, first split it into all different requirements,\r\n        //Then check if each one of these requirements {skill, value} are met by the skill's level\r\n        //When evaluating the result, these should be treated as OR requirements - you never need two skillreqs for a feat.\r\n        //Returns an array of [requirement met, requirement description]\r\n        let character = characterService.get_Character();\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        let skillreq = JSON.parse(JSON.stringify(this.skillreq));\r\n        //The Versatile Performance feat allows to use Performance instead of Deception, Diplomacy or Intimidation to meet skill requirements for feats.\r\n        //If you have the feat and any of these skills are required, add Performance to the requirements with the lowest required value.\r\n        if (character.get_FeatsTaken(1, charLevel, \"Versatile Performance\").length) {\r\n            let matchingreqs = skillreq.filter(requirement => [\"Deception\", \"Diplomacy\", \"Intimidation\"].includes(requirement.skill));\r\n            if (matchingreqs.length) {\r\n                let lowest = Math.min(matchingreqs.map(requirement => requirement.value));\r\n                skillreq.push({ skill: \"Performance\", value: lowest });\r\n            }\r\n        }\r\n        if (skillreq.length) {\r\n            skillreq.forEach(requirement => {\r\n                let requiredSkillName: string = requirement.skill;\r\n                let requiredSkill: Skill[] = characterService.get_Skills(character, requiredSkillName);\r\n                let expected: number = requirement.value;\r\n                if (requiredSkill.length > 0) {\r\n                    if (requiredSkill\r\n                        .find(skill =>\r\n                            skill.level(character, characterService, charLevel, true) >= expected\r\n                        )\r\n                    ) {\r\n                        result.push({ met: true, desc: this.prof(expected) + requirement.skill });\r\n                    } else {\r\n                        result.push({ met: false, desc: this.prof(expected) + requirement.skill });\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsFeatReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a featreq, check if you meet that (or a feat that has this supertype).\r\n        //Returns [requirement met, requirement description]\r\n        //Requirements like \"Aggressive Block or Brutish Shove\" are split in get_FeatsAndFeatures().\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        if (this.featreq.length) {\r\n            this.featreq.forEach(featreq => {\r\n                //Allow to check for the Familiar's feats\r\n                let requiredFeat: Feat[]\r\n                let testcreature: Character | Familiar;\r\n                let testfeat = featreq;\r\n\r\n                if (featreq.includes(\"Familiar:\")) {\r\n                    testcreature = characterService.get_Familiar();\r\n                    testfeat = featreq.split(\"Familiar:\")[1].trim();\r\n                    requiredFeat = characterService.familiarsService.get_FamiliarAbilities(testfeat);\r\n                } else {\r\n                    testcreature = characterService.get_Character();\r\n                    requiredFeat = characterService.get_FeatsAndFeatures(testfeat, \"\", true, true);\r\n                }\r\n                if (requiredFeat.length) {\r\n                    if (requiredFeat.find(feat => feat.have(testcreature, characterService, charLevel))) {\r\n                        result.push({ met: true, desc: featreq });\r\n                    } else {\r\n                        result.push({ met: false, desc: featreq });\r\n                    }\r\n                } else {\r\n                    result.push({ met: false, desc: featreq });\r\n                }\r\n            })\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsHeritageReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a heritagereq, check if your heritage matches that.\r\n        //Requirements like \"irongut goblin heritage or razortooth goblin heritage\" are split into each heritage and succeed if either matches your heritage.\r\n        //Returns [requirement met, requirement description]\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        if (this.heritagereq) {\r\n            if (\r\n                this.heritagereq.split(\" or \").find(heritage =>\r\n                    characterService.get_Character().class?.heritage?.name.toLowerCase() == heritage.toLowerCase() ||\r\n                    characterService.get_Character().class?.additionalHeritages.find(extraHeritage => extraHeritage.name.toLowerCase() == heritage.toLowerCase())\r\n                )\r\n            ) {\r\n                result.push({ met: true, desc: this.heritagereq });\r\n            } else {\r\n                result.push({ met: false, desc: this.heritagereq });\r\n            }\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsSpecialReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a specialreq, it comes as a string that contains a condition. Evaluate the condition to find out if the requirement is met.\r\n        //When writing the condition, take care that it only uses variables known in this method,\r\n        //and that it must remain true even after you take the feat (or the feat will be automatically removed.)\r\n        //As an example, if the requirement is:\r\n        //  (Skill_Level('Athletics') < 2)\r\n        //also include:\r\n        //  (Skill_Level('Athletics') < 4 && this.have(character, characterService, charLevel))\r\n        //\r\n        //Here we prepare variables and functions to use in specialreq evaluations.\r\n        let character: Character = characterService.get_Character();\r\n        //charLevel is usually the level on which you take the feat. If none is given, the current character level is used for calculations.\r\n        //The variable is recast here so it can be used in eval().\r\n        charLevel = charLevel;\r\n        let familiar: Familiar = characterService.get_Familiar();\r\n        let deity: Deity = character.class.deity ? characterService.get_Deities(character.class.deity)[0] : null;\r\n        function Skill_Level(creature: string, name: string) {\r\n            if (creature != \"Familiar\") {\r\n                return characterService.get_Skills(characterService.get_Creature(creature), name)[0]?.level(characterService.get_Creature(creature) as Character | AnimalCompanion, characterService, charLevel) || 0;\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Speed(creature: string, name: string) {\r\n            let speeds: Speed[] = characterService.get_Speeds(characterService.get_Creature(creature)).filter(speed => speed.name == name);\r\n            if (speeds.length) {\r\n                return speeds[0].value(characterService.get_Creature(creature), characterService, characterService.effectsService)[0];\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Has_Feat(creature: string, name: string) {\r\n            if (creature == \"Familiar\") {\r\n                return characterService.familiarsService.get_FamiliarAbilities(name).find(feat => feat.have(familiar, characterService, charLevel, false));\r\n            } else if (creature == \"Character\") {\r\n                return characterService.get_FeatsAndFeatures(name, \"\", true, true).find(feat => feat.have(character, characterService, charLevel, false));\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Has_Sense(creature: string, name: string) {\r\n            return (characterService.get_Senses(characterService.get_Creature(creature), charLevel).includes(name));\r\n        }\r\n        let result: { met: boolean, desc: string };\r\n        if (this.specialreq) {\r\n            try {\r\n                if (eval(this.specialreq)) {\r\n                    result = { met: true, desc: this.specialreqdesc };\r\n                } else {\r\n                    result = { met: false, desc: this.specialreqdesc };\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Failed evaluating feat requirement (\" + this.specialreq + \"): \" + error)\r\n                result = { met: false, desc: this.specialreqdesc };\r\n            }\r\n        } else {\r\n            result = { met: true, desc: \"\" };\r\n        }\r\n        return result;\r\n    }\r\n    canChoose(characterService: CharacterService, choiceLevel: number = characterService.get_Character().level, charLevel: number = characterService.get_Character().level, skipLevel: boolean = false, ignoreRequirementsList: string[] = []) {\r\n        //This function evaluates ALL the possible requirements for taking a feat\r\n        //Returns true only if all the requirements are true. If the feat doesn't have a requirement, it is always true.\r\n        //CharLevel is the level the character is at when the feat is taken (so the level extracted from choice.id).\r\n        //ChoiceLevel is choice.level and may differ, for example when you take a 1st-level general feat at 8th level via General Training. It is only used for the level requirement.\r\n        if (isNaN(charLevel)) {\r\n            charLevel == choiceLevel;\r\n        }\r\n        if (characterService.still_loading()) { return false }\r\n        //Don't check the level if skipLevel is set. This is used for subFeats, where the superFeat's levelreq is enough.\r\n        let levelreq: boolean = ignoreRequirementsList.includes(\"levelreq\") || skipLevel || this.meetsLevelReq(characterService, choiceLevel).met;\r\n        //Check the ability reqs. True if ALL are true.\r\n        let abilityreqs = this.meetsAbilityReq(characterService, charLevel)\r\n        let abilityreq: boolean = ignoreRequirementsList.includes(\"abilityreq\") || abilityreqs.filter(req => req.met == false).length == 0;\r\n        //Check the skill reqs. True if ANY is true.\r\n        let skillreqs = this.meetsSkillReq(characterService, charLevel)\r\n        let skillreq: boolean = ignoreRequirementsList.includes(\"skillreq\") || skillreqs.filter(req => req.met == true).length > 0;\r\n        //Check the feat reqs. True if ALL are true.\r\n        let featreqs = this.meetsFeatReq(characterService, charLevel);\r\n        let featreq: boolean = ignoreRequirementsList.includes(\"featreq\") || featreqs.filter(req => req.met == false).length == 0;\r\n        //Check the heritage reqs. True if ALL are true. (There is only one.)\r\n        let heritagereqs = this.meetsHeritageReq(characterService, charLevel);\r\n        let heritagereq: boolean = ignoreRequirementsList.includes(\"heritagereq\") || heritagereqs.filter(req => req.met == false).length == 0;\r\n        //Check the special req. True if returns true.\r\n        let specialreq: boolean = ignoreRequirementsList.includes(\"specialreq\") || this.meetsSpecialReq(characterService, charLevel).met;\r\n        //Return true if all are true\r\n        return levelreq && abilityreq && skillreq && featreq && specialreq && heritagereq;\r\n    }\r\n    have(creature: Creature, characterService: CharacterService, charLevel: number = characterService.get_Character().level, excludeTemporary: boolean = false, includeCountAs: boolean = false, minLevel: number = 1) {\r\n        if (characterService.still_loading()) { return 0 }\r\n        if (creature.type == \"Character\") {\r\n            return (creature as Character).get_FeatsTaken(minLevel, charLevel, this.name, \"\", \"\", undefined, excludeTemporary, includeCountAs)?.length || 0;\r\n        } else if (creature.type == \"Familiar\") {\r\n            return (creature as Familiar).abilities.feats.filter(gain => gain.name.toLowerCase() == this.name.toLowerCase())?.length || 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}","<div class=\"window-button-container\">\r\n    <button class=\"minimizebutton lower\"\r\n        [ngbTooltip]=\"get_Minimized() ? 'Click to show all choices and information.' : 'Click to hide finished choices and show compact information.'\"\r\n        [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n        <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n        <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n    </button>\r\n    <button class=\"tilemodebutton\" [ngClass]=\"{'fancy-button':get_TileMode()}\" (click)=\"toggle_TileMode()\"\r\n        [ngbTooltip]=\"get_TileMode() ? 'Click to enable list layout' : 'Click to enable tiled layout'\">\r\n        <!--Content is css only-->\r\n        <div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n        </div>\r\n    </button>\r\n</div>\r\n<div id=\"spells-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleSpellMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"charactersheet-column-container\">\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n                <ng-container *ngIf=\"!still_loading() && get_Character().class && get_SpellsMenuState()=='in'\">\r\n                    <div class=\"itembox-inner\">\r\n                        <div class=\"list-item\">\r\n                            <span>\r\n                                <input id=\"allowHeightened\" type=\"checkbox\" [(ngModel)]=\"allowHeightened\">\r\n                                <label for=\"allowHeightened\">&nbsp;Allow heightened spells</label>\r\n                            </span>\r\n                        </div>\r\n                        <ng-container\r\n                            *ngFor=\"let casting of get_SpellCastings(); let index = index; trackBy:trackByIndex;\">\r\n                            <header class=\"sectionHeader\">{{(casting.className + \" \" + casting.tradition +\r\n                                ((casting.castingType ==\r\n                                \"Focus\") ? (\" \" + casting.source) : \" Spells\")).trim()}}\r\n                                <span class=\"lower\" *ngIf=\"['Prepared', 'Spontaneous'].includes(casting.castingType)\">\r\n                                    <span class=\"lower\">\r\n                                        {{casting.castingType}}\r\n                                    </span>\r\n                                </span>\r\n                            </header>\r\n                            <app-tags [creature]=\"'Character'\"\r\n                                [objectName]=\"casting.className + ' ' + casting.castingType + ' Spells'\"\r\n                                [showTraits]=true [showFeats]=true [showItems]=true [showActivities]=true\r\n                                [showConditions]=true [showEffects]=true>\r\n                            </app-tags>\r\n                            <div class=\"list-item\" *ngIf=\"need_Spellbook(casting)\">\r\n                                <span>\r\n                                    <input id=\"allowBorrow\" type=\"checkbox\" [(ngModel)]=\"allowBorrow\">\r\n                                    <label for=\"allowBorrow\">Borrow\r\n                                        spells</label>\r\n                                </span>\r\n                                <span [ngbPopover]=\"'Allow selecting spells not in your spellbook'\">\r\n                                    <button class=\"lower inactive-button\">Details</button>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"list-item\" *ngIf=\"apply_SpellSubstitution(casting)\">\r\n                                <div class=\"newrow\">\r\n                                    <span>\r\n                                        <input id=\"allowSpellSubstitution\" type=\"checkbox\" [(ngModel)]=\"prepared\">\r\n                                        <label for=\"allowSpellSubstitution\">Spell\r\n                                            Substitution</label>\r\n                                    </span>\r\n                                    <span [ngbPopover]=\"'Selected spells are immediately prepared'\">\r\n                                        <button class=\"lower inactive-button\">Details</button>\r\n                                    </span>\r\n                                </div>\r\n                                <app-tags [creature]=\"'Character'\" [objectName]=\"'Spell Substitution'\" [showTraits]=true\r\n                                    [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true\r\n                                    [showEffects]=true></app-tags>\r\n                            </div>\r\n                            <ng-container\r\n                                *ngFor=\"let level of [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; trackBy:trackByIndex;\">\r\n                                <ng-container *ngIf=\"level <= get_MaxSpellLevel()\">\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level == -1 && casting.castingType == 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        Focus Spells</header>\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level == 0 && casting.castingType == 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        Focus Cantrips</header>\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level == 0 && casting.castingType != 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        Cantrips</header>\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level > 0 && casting.castingType != 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        {{\"Level \"+level}}</header>\r\n                                    <!--Fixed information-->\r\n                                    <div class=\"fullsize-only list-item\"\r\n                                        *ngIf=\"get_SpellsTaken(1, get_Character().level, level, '', casting, '', '', true).length\">\r\n                                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                                            (click)=\"toggle_Choice(index+'showFixedChanges'+level)\">\r\n                                            Show fixed changes\r\n                                        </button>\r\n                                        <div class=\"list-item sublist fancy-list\"\r\n                                            *ngIf=\"get_ShowChoice()==index+'showFixedChanges'+level\">\r\n                                            <!--Fixed Spells gained-->\r\n                                            <div class=\"list-item\"\r\n                                                *ngFor=\"let spellTaken of get_SpellsTaken(1, get_Character().level, level, '', casting, '', '', true); trackBy:trackByIndex;\">\r\n                                                {{spellTaken.gain.name}} {{spellTaken.gain.source ?\r\n                                                \"(\"+spellTaken.gain.source+\")\" :\r\n                                                \"\"}}\r\n                                                <ng-container\r\n                                                    *ngFor=\"let spellID of [spellTaken.choice.id+spellTaken.gain.name+'desc']\">\r\n                                                    <button class=\"right-bound\" (click)=\"toggle_Spell(spellID)\"\r\n                                                        [ngClass]=\"{'fancy-button':get_ShowSpell()==spellID}\">\r\n                                                        {{get_ShowSpell()==spellID ? \"Hide\" : \"Show\"}} Description\r\n                                                    </button>\r\n                                                    <div class=\"newrow left-aligned\" *ngIf=\"get_ShowSpell()==spellID\">\r\n                                                        <app-spell [spell]=\"get_Spells(spellTaken.gain.name)[0]\"\r\n                                                            [spellLevel]=\"level\">\r\n                                                        </app-spell>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!--Spell choices-->\r\n                                    <ng-container\r\n                                        *ngFor=\"let choices of [get_SpellChoices(casting, level)]; trackBy:trackByIndex;\">\r\n                                        <div [ngClass]=\"{'icon-list':get_TileMode()}\" *ngIf=\"choices.length\"\r\n                                            style=\"min-height: auto\">\r\n                                            <ng-container *ngFor=\"let choice of choices; trackBy:trackByIndex;\">\r\n                                                <app-spellchoice (showChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                    (showSpellMessage)=\"receive_SpellMessage($event)\"\r\n                                                    [spellCasting]=\"casting\" [choice]=\"choice\"\r\n                                                    [allowHeightened]=\"allowHeightened\" [allowBorrow]=\"allowBorrow\"\r\n                                                    [showChoice]=\"showChoice\" [showSpell]=\"showSpell\" [level]=\"level\"\r\n                                                    [prepared]=\"prepared\" [spellbook]=\"true\" [showContent]=\"false\"\r\n                                                    [tileMode]=\"get_TileMode()\"></app-spellchoice>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div id=\"choiceArea-top\"></div>\r\n                <!--Spell Choice content-->\r\n                <ng-container *ngFor=\"let choiceContent of get_ActiveChoiceContent(); trackBy:trackByID;\">\r\n                    <app-spellchoice (showChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                        (showSpellMessage)=\"receive_SpellMessage($event)\" [spellCasting]=\"choiceContent.casting\"\r\n                        [choice]=\"choiceContent.choice\" [allowHeightened]=\"allowHeightened\" [allowBorrow]=\"allowBorrow\"\r\n                        [showChoice]=\"choiceContent.name\" [showSpell]=\"showSpell\" [level]=\"choiceContent.levelNumber\"\r\n                        [prepared]=\"prepared\" [spellbook]=\"true\" [showTitle]=\"false\">\r\n                    </app-spellchoice>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { SpellChoice } from '../SpellChoice';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spells',\r\n    templateUrl: './spells.component.html',\r\n    styleUrls: ['./spells.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellsComponent implements OnInit {\r\n\r\n    public showSpell: string = \"\";\r\n    public showChoice: string = \"\";\r\n    public allowHeightened: boolean = false;\r\n    public allowBorrow: boolean = false;\r\n    public prepared: boolean = false;\r\n    private showContent: SpellChoice = null;\r\n    private showSpellCasting: SpellCasting = null;\r\n    private showContentLevelNumber: number = 0;\r\n    \r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.spellsMinimized = !this.characterService.get_Character().settings.spellsMinimized;\r\n    }\r\n\r\n    toggle_TileMode() {\r\n        this.get_Character().settings.spellsTileMode = !this.get_Character().settings.spellsTileMode;\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.spellsMinimized;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.characterService.get_Character().settings.spellsTileMode;\r\n    }\r\n\r\n    toggleSpellMenu() {\r\n        this.characterService.toggle_Menu(\"spells\");\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.characterService.get_SpellsMenuState();\r\n    }\r\n\r\n    toggle_Spell(name: string) {\r\n        if (this.showSpell == name) {\r\n            this.showSpell = \"\";\r\n        } else {\r\n            this.showSpell = name;\r\n        }\r\n    }\r\n\r\n    toggle_Choice(name: string, levelNumber: number = 0, content: SpellChoice = null, casting: SpellCasting = null) {\r\n        //Set the currently shown list name, level number and content so that the correct choice with the correct data can be shown in the choice area.\r\n        if (this.showChoice == name &&\r\n            (!levelNumber || this.showContentLevelNumber == levelNumber) &&\r\n            (!content || JSON.stringify(this.showContent) == JSON.stringify(content))) {\r\n            this.showChoice = \"\";\r\n            this.showContentLevelNumber = 0;\r\n            this.showContent = null;\r\n            this.showSpellCasting = null;\r\n        } else {\r\n            this.showChoice = name;\r\n            this.showContentLevelNumber = levelNumber;\r\n            this.showContent = content;\r\n            this.showSpellCasting = casting;\r\n            this.reset_ChoiceArea();\r\n        }\r\n    }\r\n\r\n    reset_ChoiceArea() {\r\n        document.getElementById(\"choiceArea-top\").scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SpellChoice, casting: SpellCasting }) {\r\n        this.toggle_Choice(message.name, message.levelNumber, message.choice, message.casting);\r\n    }\r\n\r\n    receive_SpellMessage(name: string) {\r\n        this.toggle_Spell(name);\r\n    }\r\n\r\n    get_ShowSpell() {\r\n        return this.showSpell;\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    get_ActiveChoiceContent() {\r\n        //Get the currently shown spell choice with levelNumber and spellcasting.\r\n        //Also get the currently shown list name for compatibility.\r\n        if (this.showContent) {\r\n            return [{ name: this.get_ShowChoice(), levelNumber: this.showContentLevelNumber, choice: this.showContent, casting: this.showSpellCasting }];\r\n        }\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByID(index: number, obj: any): any {\r\n        //Track spell choices by id, so that when the selected choice changes, the choice area content is updated.\r\n        // The choice area content is only ever one choice, so the index would always be 0.\r\n        return obj.choice.id;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    need_Spellbook(casting: SpellCasting) {\r\n        return casting.castingType == \"Prepared\" && casting.className == \"Wizard\";\r\n    }\r\n\r\n    apply_SpellSubstitution(casting: SpellCasting) {\r\n        return casting.castingType == \"Prepared\" &&\r\n            casting.className == \"Wizard\" &&\r\n            this.get_Character().get_FeatsTaken(1, this.get_Character().level, \"Spell Substitution\").length > 0;\r\n    }\r\n\r\n    apply_ReprepareSpell(casting: SpellCasting) {\r\n        return casting.castingType == \"Prepared\" &&\r\n            casting.className == \"Wizard\" &&\r\n            this.get_Character().get_FeatsTaken(1, this.get_Character().level, \"Reprepare Spell\").length > 0;\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    get_MaxSpellLevel() {\r\n        return this.get_Character().get_SpellLevel();\r\n    }\r\n\r\n    get_SpellCastings() {\r\n        let character = this.get_Character();\r\n        return character.class.spellCasting.filter(casting => casting.charLevelAvailable && casting.charLevelAvailable <= character.level)\r\n            .sort(function (a, b) {\r\n                if (a.tradition > b.tradition) {\r\n                    return 1;\r\n                }\r\n                if (a.tradition < b.tradition) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.className > b.className) {\r\n                    return 1;\r\n                }\r\n                if (a.className < b.className) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.castingType > b.castingType || (b.castingType == \"Innate\" ? a.castingType != \"Innate\" : false)) {\r\n                    return 1;\r\n                }\r\n                if (a.castingType < b.castingType || (a.castingType == \"Innate\" ? b.castingType != \"Innate\" : false)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    get_DynamicLevel(casting: SpellCasting, choice: SpellChoice) {\r\n        return this.spellsService.get_DynamicSpellLevel(casting, choice, this.characterService);\r\n    }\r\n\r\n    get_SpellChoices(casting: SpellCasting, levelNumber: number) {\r\n        //Get all spellchoices that have this spell level and are available at this character level.\r\n        return casting.spellChoices.filter(choice => choice.charLevelAvailable <= this.get_Character().level && !choice.showOnSheet &&\r\n            ((choice.level == levelNumber && !choice.dynamicLevel) || (choice.dynamicLevel && this.get_DynamicLevel(casting, choice) == levelNumber))\r\n        )\r\n    }\r\n\r\n    get_SpellsTaken(minLevelNumber: number, maxLevelNumber: number, spellLevel: number, spellName: string, casting: SpellCasting, source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        let cantripAllowed: boolean = (spellLevel == 0);\r\n        return this.get_Character().get_SpellsTaken(this.characterService, minLevelNumber, maxLevelNumber, spellLevel, spellName, casting, \"\", \"\", \"\", source, sourceId, locked, false, cantripAllowed);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spells\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"spells\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","export class LanguageGain {\r\n    public name: string = \"\";\r\n    public source: string = \"\";\r\n    public locked: boolean = false;\r\n    public level: number = -1;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { Weapon } from '../Weapon';\r\nimport { TraitsService } from '../traits.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { WeaponRune } from '../WeaponRune';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Ammunition } from '../Ammunition';\r\nimport { ItemCollection } from '../ItemCollection';\r\nimport { Talisman } from '../Talisman';\r\nimport { AlchemicalBomb } from '../AlchemicalBomb';\r\nimport { Consumable } from '../Consumable';\r\nimport { Snare } from '../Snare';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { AlchemicalPoison } from '../AlchemicalPoison';\r\nimport { OtherConsumableBomb } from '../OtherConsumableBomb';\r\nimport { Equipment } from '../Equipment';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-attacks',\r\n    templateUrl: './attacks.component.html',\r\n    styleUrls: ['./attacks.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AttacksComponent implements OnInit {\r\n\r\n    @Input()\r\n    public creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    public onlyAttacks: string[] = [];\r\n    public forbiddenAttacks: string[] = [];\r\n    public showRestricted: boolean = false;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private traitsService: TraitsService,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        public conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 100;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 100;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.attacksMinimized = !this.characterService.get_Character().settings.attacksMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.attacksMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    get_Creature(type: string = this.creature) {\r\n        return this.characterService.get_Creature(type) as Character | AnimalCompanion;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Item(id: string) {\r\n        if (this.showItem == id) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_CritSpecialization(weapon: Weapon, range: string) {\r\n        return weapon.get_CritSpecialization(this.get_Creature(), this.characterService, range);\r\n    }\r\n\r\n    get_AttackRestrictions() {\r\n        this.onlyAttacks = [];\r\n        this.forbiddenAttacks = [];\r\n        this.characterService.get_AppliedConditions(this.get_Creature()).filter(gain => gain.apply).forEach(gain => {\r\n            let condition = this.characterService.get_Conditions(gain.name)[0];\r\n            this.onlyAttacks.push(\r\n                ...condition?.attackRestrictions\r\n                    .filter(restriction => !restriction.excluding && (!restriction.conditionChoiceFilter || restriction.conditionChoiceFilter == gain.choice))\r\n                    .map(restriction => restriction.name)\r\n            )\r\n            this.forbiddenAttacks.push(\r\n                ...condition?.attackRestrictions\r\n                    .filter(restriction => restriction.excluding && (!restriction.conditionChoiceFilter || restriction.conditionChoiceFilter == gain.choice))\r\n                    .map(restriction => restriction.name)\r\n            )\r\n        });\r\n    }\r\n\r\n    get_IsAllowed(weapon: Weapon) {\r\n        return !(this.onlyAttacks.length && !this.onlyAttacks.includes(weapon.name)) && !this.forbiddenAttacks.includes(weapon.name);\r\n    }\r\n\r\n    get_EquippedWeapons() {\r\n        this.get_AttackRestrictions();\r\n        return this.get_Creature().inventories[0].weapons.filter(weapon => weapon.equipped && weapon.equippable && !weapon.broken)\r\n            .concat(...this.get_Creature().inventories.map(inv => inv.alchemicalbombs))\r\n            .concat(...this.get_Creature().inventories.map(inv => inv.otherconsumablesbombs))\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1\r\n                }\r\n                return 0;\r\n            })\r\n            .sort(function (a, b) {\r\n                if (a.type < b.type) {\r\n                    return 1\r\n                }\r\n                if (a.type > b.type) {\r\n                    return -1\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    get_TalismanTitle(talisman: Talisman) {\r\n        return (talisman.trigger ? \"Trigger: \" + talisman.trigger + \"\\n\\n\" : \"\") + talisman.desc;\r\n    }\r\n\r\n    get_PoisonTitle(poison: AlchemicalPoison) {\r\n        return poison.desc;\r\n    }\r\n\r\n    get_TwoHandedAllowed(weapon: Weapon) {\r\n        return (this.traitsService.have_Trait(this.characterService, weapon, \"Two-Hand\"));\r\n    }\r\n\r\n    on_EquipmentChange(item: Equipment) {\r\n        this.characterService.set_EquipmentViewChanges(this.get_Creature(), item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TalismanUse(weapon: Weapon, talisman: Talisman, index: number) {\r\n        this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), talisman);\r\n        weapon.talismans.splice(index, 1)\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_PoisonUse(weapon: Weapon, poison: AlchemicalPoison) {\r\n        this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), poison);\r\n        weapon.poisonsApplied.length = 0;\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AmmoTypes() {\r\n        let types: string[] = [];\r\n        this.get_EquippedWeapons().forEach(weapon => {\r\n            if (weapon.ammunition && !types.includes(weapon.ammunition)) {\r\n                types.push(weapon.ammunition);\r\n            }\r\n        });\r\n        return types;\r\n    }\r\n\r\n    get_Ammo(type: string) {\r\n        //Return all ammo from all inventories that has this type in its group\r\n        //We need the inventory for using up items and the name just for sorting\r\n        let ammoList: { item: Ammunition, name: string, inventory: ItemCollection }[] = [];\r\n        this.get_Creature().inventories.forEach(inv => {\r\n            inv.ammunition.filter(ammo => ammo.ammunition == type || ammo.ammunition == \"Any\").forEach(ammo => {\r\n                ammoList.push({ item: ammo, name: ammo.get_Name(), inventory: inv })\r\n            })\r\n        });\r\n        return ammoList.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });;\r\n    }\r\n\r\n    get_Snares() {\r\n        let snares: { item: Snare, name: string, inventory: ItemCollection }[] = [];\r\n        this.get_Creature().inventories.forEach(inv => {\r\n            inv.snares.forEach(snare => {\r\n                snares.push({ item: snare, name: snare.get_Name(), inventory: inv })\r\n            })\r\n        });\r\n        return snares.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });;\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.characterService.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    on_ConsumableUse(item: Ammunition | AlchemicalBomb | OtherConsumableBomb, inv: ItemCollection) {\r\n        if (item.storedSpells.length) {\r\n            let spellName = item.storedSpells[0]?.spells[0]?.name || \"\";\r\n            let spellChoice = item.storedSpells[0];\r\n            if (spellChoice && spellName) {\r\n                let spell = this.get_Spells(item.storedSpells[0]?.spells[0]?.name)[0];\r\n                if (spell) {\r\n                    let tempGain: SpellGain = new SpellGain();\r\n                    let target: string = \"\";\r\n                    if (spell.target == 'self') {\r\n                        target = \"Character\";\r\n                    }\r\n                    this.characterService.spellsService.process_Spell(this.get_Creature('Character'), target, this.characterService, this.characterService.itemsService, this.characterService.conditionsService, null, tempGain, spell, spellChoice.level, true, true, false);\r\n                }\r\n                spellChoice.spells.shift();\r\n            }\r\n        }\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), item as Consumable);\r\n        if (item.can_Stack()) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n            this.characterService.process_ToChange();\r\n        } else {\r\n            this.characterService.drop_InventoryItem(this.get_Creature(), inv, item, true);\r\n        }\r\n\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        return this.characterService.get_Skills(this.get_Creature(), name, type);\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_HintRunes(weapon: Weapon, range: string) {\r\n        //Return all runes and rune-emulating oil effects that have a hint to show\r\n        let runes: WeaponRune[] = [];\r\n        let runeSource = weapon.get_RuneSource(this.get_Creature(), range);\r\n        runes.push(...runeSource[1].propertyRunes.filter((rune: WeaponRune) => rune.hints.length) as WeaponRune[]);\r\n        runes.push(...weapon.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.hints.length).map(oil => oil.runeEffect));\r\n        if (runeSource[1].bladeAlly) {\r\n            runes.push(...runeSource[1].bladeAllyRunes.filter((rune: WeaponRune) => rune.hints.length) as WeaponRune[]);\r\n        }\r\n        return runes;\r\n    }\r\n\r\n    get_Runes(weapon: Weapon, range: string) {\r\n        //Return all runes and rune-emulating oil effects\r\n        let runes: WeaponRune[] = [];\r\n        let runeSource = weapon.get_RuneSource(this.get_Creature(), range);\r\n        runes.push(...weapon.get_RuneSource(this.get_Creature(), range)[1].propertyRunes as WeaponRune[]);\r\n        runes.push(...weapon.oilsApplied.filter(oil => oil.runeEffect).map(oil => oil.runeEffect));\r\n        if (runeSource[1].bladeAlly) {\r\n            runes.push(...runeSource[1].bladeAllyRunes as WeaponRune[]);\r\n        }\r\n        return runes;\r\n    }\r\n\r\n    get_HandwrapsOfMightyBlows(weapon: Weapon) {\r\n        if (weapon.traits.includes(\"Unarmed\")) {\r\n            let handwraps = this.get_Creature().inventories[0].wornitems.find(wornItem => wornItem.isHandwrapsOfMightyBlows && wornItem.invested);\r\n            if (handwraps) {\r\n                return [handwraps];\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_GrievousData(weapon: Weapon, rune: WeaponRune) {\r\n        let data = rune.data.filter(data => data.name == weapon.group);\r\n        if (data.length) {\r\n            return data[0].value;\r\n        }\r\n    }\r\n\r\n    get_SpecialShowon(weapon: Weapon, range: string) {\r\n        //Under certain circumstances, some Feats apply to Weapons independently of their name.\r\n        //Return names that get_FeatsShowingOn should run on\r\n        let specialNames: string[] = []\r\n        if (weapon.traits.includes(\"Monk\") && this.characterService.get_Feats(\"Monastic Weaponry\")[0].have(this.get_Creature(), this.characterService)) {\r\n            specialNames.push(\"Unarmed Attacks\");\r\n        }\r\n        let creature = this.get_Creature();\r\n        specialNames.push(weapon.get_Proficiency(creature, this.characterService, creature.level));\r\n        specialNames.push(...weapon.get_Traits(this.characterService, creature));\r\n        specialNames.push(range)\r\n        specialNames.push(weapon.weaponBase)\r\n        return specialNames;\r\n    }\r\n\r\n    get_Attacks(weapon: Weapon) {\r\n        return []\r\n            .concat((weapon.melee ? [weapon.attack(this.get_Creature(), this.characterService, this.effectsService, 'melee')] : []))\r\n            .concat(((weapon.ranged || weapon.traits.find(trait => trait.includes(\"Thrown\"))) ? [weapon.attack(this.get_Creature(), this.characterService, this.effectsService, 'ranged')] : []));\r\n    }\r\n\r\n    get_Damage(weapon: Weapon, range: string) {\r\n        return weapon.damage(this.get_Creature(), this.characterService, this.effectsService, range);\r\n    }\r\n\r\n    get_FlurryAllowed() {\r\n        let creature = this.get_Creature();\r\n        let character = this.characterService.get_Character();\r\n        if (creature.type == \"Character\" || (creature.type == \"Companion\" && character.get_FeatsTaken(1, creature.level, \"Animal Companion (Ranger)\").length)) {\r\n            return character.get_FeatsTaken(1, creature.level, \"Flurry\").length + character.get_FeatsTaken(1, creature.level, \"Manifold Edge\").length;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_MultipleAttackPenalty() {\r\n        let creature = this.get_Creature();\r\n        let conditions: string[] = this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n        .filter(gain => [\"Multiple Attack Penalty: Second Attack\", \"Multiple Attack Penalty: Third Attack\", \"Multiple Attack Penalty: Second Attack (Flurry)\", \"Multiple Attack Penalty: Third Attack (Flurry)\"].includes(gain.name) && gain.source == \"Attacks\")\r\n            .map(gain => gain.name);\r\n        if (conditions.includes(\"Multiple Attack Penalty: Third Attack (Flurry)\")) {\r\n            return \"3f\";\r\n        }\r\n        if (conditions.includes(\"Multiple Attack Penalty: Third Attack\")) {\r\n            return \"3\";\r\n        }\r\n        if (conditions.includes(\"Multiple Attack Penalty: Second Attack (Flurry)\")) {\r\n            return \"2f\";\r\n        }\r\n        if (conditions.includes(\"Multiple Attack Penalty: Second Attack\")) {\r\n            return \"2\";\r\n        }\r\n        return \"1\";\r\n    }\r\n\r\n    set_MultipleAttackPenalty(map: \"1\" | \"2\" | \"3\" | \"2f\" | \"3f\") {\r\n        let creature = this.get_Creature();\r\n        let conditions: ConditionGain[] = this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n            .filter(gain => [\"Multiple Attack Penalty: Second Attack\", \"Multiple Attack Penalty: Third Attack\", \"Multiple Attack Penalty: Second Attack (Flurry)\", \"Multiple Attack Penalty: Third Attack (Flurry)\"].includes(gain.name) && gain.source == \"Attacks\");\r\n        let map2 = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Second Attack\");\r\n        let map3 = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Third Attack\");\r\n        let map2f = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Second Attack (Flurry)\");\r\n        let map3f = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Third Attack (Flurry)\");\r\n        let mapName: string = \"\";\r\n        switch (map) {\r\n            case \"2\":\r\n                if (!map2) {\r\n                    mapName = \"Multiple Attack Penalty: Second Attack\";\r\n                }\r\n                break;\r\n            case \"3\":\r\n                if (!map3) {\r\n                    mapName = \"Multiple Attack Penalty: Third Attack\";\r\n                }\r\n                break;\r\n            case \"2f\":\r\n                if (!map2f) {\r\n                    mapName = \"Multiple Attack Penalty: Second Attack (Flurry)\";\r\n                }\r\n                break;\r\n            case \"3f\":\r\n                if (!map3f) {\r\n                    mapName = \"Multiple Attack Penalty: Third Attack (Flurry)\";\r\n                }\r\n                break;\r\n        }\r\n        if (map2 && map != \"2\") {\r\n            this.characterService.remove_Condition(creature, map2, false);\r\n        }\r\n        if (map3 && map != \"3\") {\r\n            this.characterService.remove_Condition(creature, map3, false);\r\n        }\r\n        if (map2f && map != \"2f\") {\r\n            this.characterService.remove_Condition(creature, map2f, false);\r\n        }\r\n        if (map3f && map != \"3f\") {\r\n            this.characterService.remove_Condition(creature, map3f, false);\r\n        }\r\n        if (mapName) {\r\n            let newCondition: ConditionGain = Object.assign(new ConditionGain(), { name: mapName, source: \"Attacks\", duration: 5, locked: true })\r\n            this.characterService.add_Condition(creature, newCondition, false);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"attacks\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"attacks\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-attacks-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Attacks</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Attacks'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <div class=\"list-item\">\r\n            <button class=\"newrow sublist-toggle center-aligned\" (click)=\"toggle_List('QuickStatus')\">\r\n                Quick Status\r\n            </button>\r\n            <div class=\"list-item sublist\" *ngIf=\"get_ShowList()=='QuickStatus'\">\r\n                <div class=\"list-item newrow\">\r\n                    <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '2'\"\r\n                        (click)=\"set_MultipleAttackPenalty('2')\">Multiple Attack Penalty: Second Attack</button>\r\n                    <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '2'\"\r\n                        (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                        Multiple Attack Penalty</button>\r\n                </div>\r\n                <div class=\"list-item newrow\">\r\n                    <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '3'\"\r\n                        (click)=\"set_MultipleAttackPenalty('3')\">Multiple Attack Penalty: Third Attack</button>\r\n                    <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '3'\"\r\n                        (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                        Multiple Attack Penalty</button>\r\n                </div>\r\n                <ng-container *ngIf=\"get_FlurryAllowed()\">\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '2f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('2f')\">Multiple Attack Penalty: Second Attack\r\n                            (Flurry)</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '2f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                            Multiple Attack Penalty</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '3f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('3f')\">Multiple Attack Penalty: Third Attack\r\n                            (Flurry)</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '3f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                            Multiple Attack Penalty</button>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngFor=\"let weapon of get_EquippedWeapons(); let weaponIndex = index; trackBy:trackByIndex;\">\r\n            <div class=\"fullsize-only list-item\"\r\n                *ngIf=\"(onlyAttacks.length || forbiddenAttacks.length) && weaponIndex == 0\">\r\n                <label for=\"showRestricted\">Show restricted attacks</label>\r\n                <input id=\"showRestricted\" type=\"checkbox\" [(ngModel)]=\"showRestricted\">\r\n            </div>\r\n            <div class=\"list-item\"\r\n                [ngClass]=\"{'problem fullsize-only':!get_IsAllowed(weapon), 'invisible':!get_IsAllowed(weapon) && !showRestricted}\"\r\n                *ngFor=\"let attack of get_Attacks(weapon); trackBy:trackByIndex;\">\r\n                <div class=\"newrow\">\r\n                    <span style=\"flex-basis:auto\">\r\n                        <strong *ngIf=\"!['alchemicalbombs', 'otherconsumablesbombs'].includes(weapon.type)\">\r\n                            <span [ngbTooltip]=\"'Melee'\" *ngIf=\"attack[0] == 'melee'\"><i class='ra ra-sword'></i></span>\r\n                            <span [ngbTooltip]=\"'Ranged ' + weapon.ranged + ' feet'\"\r\n                                *ngIf=\"attack[0] == 'ranged'\"><i class='ra ra-target-arrows'></i></span> {{weapon.get_Name()}}\r\n                        </strong>\r\n                        <strong *ngFor=\"let handwraps of get_HandwrapsOfMightyBlows(weapon); trackBy:trackByIndex;\">\r\n                            ({{handwraps.get_Name()}})\r\n                        </strong>\r\n                        <button style=\"flex-basis:auto\" [disabled]=\"!weapon.amount\"\r\n                            (click)=\"on_ConsumableUse(weapon, null)\"\r\n                            *ngIf=\"['alchemicalbombs', 'otherconsumablesbombs'].includes(weapon.type)\">\r\n                            <span [ngbTooltip]=\"'Melee'\" *ngIf=\"attack[0] == 'melee'\"><i class='ra ra-sword'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Ranged ' + weapon.ranged + ' feet'\"\r\n                                *ngIf=\"attack[0] == 'ranged'\"><i class='ra ra-target-arrows'></i>&nbsp;</span>\r\n                            <span>{{(weapon.amount != undefined && weapon.amount != 1) ?\r\n                                weapon.amount+\" \" : \"\"}}{{weapon.get_Name()}}<app-actionIcons\r\n                                    [actionString]=\"weapon.actions\">\r\n                                </app-actionIcons>{{weapon.activationType ? weapon.activationType : \"\"}}\r\n                            </span>\r\n                        </button>\r\n                    </span>\r\n                    <span style=\"flex-basis:auto\">\r\n                        Attack\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"attack[2]\"\r\n                                [ngClass]=\"{'penalty':attack[4].length, 'bonus':attack[5].length, 'absolute':attack[6].length}\">\r\n                                {{attack[1]}}\r\n                            </div>\r\n                        </span>\r\n                        <ng-container *ngFor=\"let damage of [get_Damage(weapon, attack[0])]; trackBy:trackByIndex;\">\r\n                            <span *ngIf=\"!damage[0].includes('0d0')\">&nbsp;Damage&nbsp;</span>\r\n                            <ng-container *ngFor=\"let line of damage[0].split('\\n'); let index = index; trackBy:trackByIndex;\">\r\n                                <div class=\"value\" [ngbPopover]=\"damage[1]\"\r\n                                    [ngClass]=\"{'penalty':!index && damage[3].length, 'bonus':!index && damage[2].length, 'absolute':!index && damage[4].length}\"\r\n                                    *ngIf=\"!line.includes('0d0')\">{{line}}\r\n                                </div>\r\n                                <br>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </span>\r\n                </div>\r\n                <ng-container\r\n                    *ngFor=\"let traits of [weapon.get_Traits(characterService, get_Creature())]; trackBy:trackByIndex;\">\r\n                    <div class=\"fullsize-only newrow left-aligned tags\" *ngIf=\"traits.length\">\r\n                        <cite class=\"trait\" *ngFor=\"let trait of traits; trackBy:trackByIndex;\"\r\n                            [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"list-item newrow\" *ngIf=\"get_TwoHandedAllowed(weapon)\">\r\n                    <span>\r\n                        <input id=\"{{weapon.id}}twohanded\" type=\"checkbox\" [(ngModel)]=\"weapon.twohanded\"\r\n                            (ngModelChange)=on_EquipmentChange(weapon)>\r\n                        <label for=\"{{weapon.id}}twohanded\">Wield two-handed</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"fullsize-only newrow left-aligned\"\r\n                    *ngFor=\"let runes of [get_HintRunes(weapon, attack[0])]; trackBy:trackByIndex;\"\r\n                    style=\"margin-top:initial\">\r\n                    <ng-container *ngFor=\"let rune of runes; trackBy:trackByIndex;\">\r\n                        <cite class=\"rune\" *ngFor=\"let hint of rune.hints; trackBy:trackByIndex;\"\r\n                            [ngbPopover]=\"hint.desc\">{{rune.name}}</cite>\r\n                    </ng-container>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=weapon.name [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true\r\n                    [specialNames]=\"get_SpecialShowon(weapon, attack[0])\" [specialEffects]=attack[3]></app-tags>\r\n                <div class=\"fullsize-only lower newrow left-aligned\"\r\n                    *ngFor=\"let poison of weapon.poisonsApplied; let index = index; trackBy:trackByIndex;\">\r\n                    <button [ngbTooltip]=\"get_PoisonTitle(poison)\" (click)=\"on_PoisonUse(weapon, poison)\">\r\n                        <span>Spend/Remove {{poison.name}}</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"fullsize-only lower newrow left-aligned\"\r\n                    *ngFor=\"let talisman of weapon.talismans; let index = index; trackBy:trackByIndex;\">\r\n                    <button [ngbTooltip]=\"get_TalismanTitle(talisman)\"\r\n                        (click)=\"on_TalismanUse(weapon, talisman, index)\">\r\n                        <span>Activate {{talisman.name}}<app-actionIcons [actionString]=\"talisman.actions\">\r\n                            </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"fullsize-only list-item newrow\" *ngIf=\"weapon.hitEffect\">\r\n                    <button class=\"newrow sublist-toggle fancy-button\"\r\n                        (click)=\"toggle_Item(weapon.id+attack[0]+'hiteffects')\">\r\n                        Hit effect\r\n                    </button>\r\n                    <div class=\"list-item sublist fancy-list\" *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'hiteffects'\">\r\n                        <div class=\"list-item lower newrow left-aligned\">\r\n                            {{weapon.hitEffect}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fullsize-only list-item newrow\" *ngIf=\"weapon.criticalHint\">\r\n                    <button class=\"newrow sublist-toggle fancy-button\"\r\n                        (click)=\"toggle_Item(weapon.id+attack[0]+'criticalHint')\">\r\n                        Critical hit effect\r\n                    </button>\r\n                    <div class=\"list-item sublist fancy-list\"\r\n                        *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'criticalHint'\">\r\n                        <div class=\"list-item lower newrow left-aligned\">\r\n                            {{weapon.criticalHint}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngFor=\"let specs of [get_CritSpecialization(weapon, attack[0])]; trackBy:trackByIndex;\">\r\n                    <div class=\"fullsize-only list-item newrow\" *ngIf=\"specs.length\">\r\n                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                            (click)=\"toggle_Item(weapon.id+attack[0]+'criteffects')\">\r\n                            Critical specialization effects\r\n                        </button>\r\n                        <div class=\"list-item sublist fancy-list\"\r\n                            *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'criteffects'\">\r\n                            <div class=\"list-item lower newrow left-aligned\"\r\n                                *ngFor=\"let spec of get_CritSpecialization(weapon, attack[0]); trackBy:trackByIndex;\">\r\n                                {{spec.desc}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let rune of get_Runes(weapon, attack[0]); trackBy:trackByIndex;\"\r\n                    style=\"margin-top:initial\">\r\n                    <div class=\"fullsize-only list-item newrow\" *ngIf=\"rune.criticalHint\">\r\n                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                            (click)=\"toggle_Item(weapon.id+attack[0]+'criticalHint')\">\r\n                            {{rune.name}} critical hit effect\r\n                        </button>\r\n                        <div class=\"list-item sublist fancy-list left-aligned\"\r\n                            *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'criticalHint'\">\r\n                            <div class=\"list-item lower newrow left-aligned\">\r\n                                <span>\r\n                                    {{rune.criticalHint}}\r\n                                    <span *ngIf=\"rune.name=='Grievous'\">{{get_GrievousData(weapon, rune)}}</span>\r\n                                </span>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.critsuccess\">\r\n                                    <strong>Critical Success</strong>&nbsp;{{rune.critsuccess}}\r\n                                </div>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.success\">\r\n                                    <strong>Success</strong>&nbsp;{{rune.success}}\r\n                                </div>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.failure\">\r\n                                    <strong>Failure</strong>&nbsp;{{rune.failure}}\r\n                                </div>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.critfailure\">\r\n                                    <strong>Critical Failure</strong>&nbsp;{{rune.critfailure}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let ammoType of get_AmmoTypes(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader box-header\" *ngIf=\"index == 0\">Ammunition</header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Ammunition'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n            <ng-container *ngFor=\"let ammo of get_Ammo(ammoType); let ammoIndex = index; trackBy:trackByIndex;\">\r\n                <header class=\"subsectionHeader fullsize-only\" *ngIf=\"ammoIndex == 0\">{{ammoType}}</header>\r\n                <div class=\"list-item\">\r\n                    <strong>{{(ammo.item.amount != undefined && ammo.item.amount != 1) ? ammo.item.amount+\" \" : \"\"}}\r\n                        {{ammo.item.get_Name()}}</strong>\r\n                    <div\r\n                        [ngbTooltip]=\"ammo.item.storedSpells.length ? 'Cast spell on any target. To choose a specific target (if applicable), use the item in the inventory instead.' : ''\">\r\n                        <button [disabled]=\"!ammo.item.amount\" (click)=\"on_ConsumableUse(ammo.item, ammo.inventory)\">\r\n                            <span>Use<app-actionIcons [actionString]=\"ammo.item.actions\">\r\n                                </app-actionIcons>{{(ammo.item.activationType) ? ammo.item.activationType : \"\"}}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"get_Snares().length\">\r\n            <header class=\"sectionHeader box-header\">Deployed Snares</header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Snares'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true></app-tags>\r\n            <div class=\"list-item\" *ngFor=\"let snare of get_Snares(); let snareIndex = index; trackBy:trackByIndex;\">\r\n                <button class=\"newrow sublist-toggle\" (click)=\"toggle_Item(snare.item.id+snareIndex)\">\r\n                    {{snare.item.get_Name()}}\r\n                </button>\r\n                <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==snare.item.id+snareIndex\">\r\n                    <button class=\"newrow center-aligned\" [disabled]=\"!snare.item.amount\"\r\n                        (click)=\"on_ConsumableUse(snare.item, snare.inventory)\">\r\n                        <span>Trigger/Remove</span>\r\n                    </button>\r\n                    <app-item [item]=snare.item [itemStore]=true></app-item>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <header class=\"sectionHeader fullsize-only box-header\" *ngIf=\"!still_loading()\">Weapon Proficiencies</header>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Weapon Proficiencies'\" [showTraits]=true [showFeats]=true\r\n            [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Weapon Proficiency'); trackBy:trackByIndex;\">\r\n            <app-skill class=\"fullsize-only\" [creature]=\"creature\" [skill]=skill [showValue]=false></app-skill>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Specific Weapon Proficiency'); trackBy:trackByIndex;\">\r\n            <app-skill class=\"fullsize-only\" [creature]=\"creature\" [skill]=skill [showValue]=false></app-skill>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { ItemGain } from './ItemGain';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Hint } from './Hint';\r\n\r\nexport class AnimalCompanionAncestry {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public activities: ActivityGain[] = [];\r\n    public desc: string = \"\";\r\n    public gainItems: ItemGain[] = [];\r\n    public hitPoints: number = 0;\r\n    public name: string = \"\";\r\n    public senses: string[] = [];\r\n    public hints: Hint[] = [];\r\n    public size: number = 0;\r\n    public skillChoices: SkillChoice[] = [];\r\n    public specialdesc: string = \"\";\r\n    public speeds: {name:string, value:number}[] = [];\r\n    public supportBenefit: string = \"\";\r\n    public traits: string[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { WeaponRune } from 'src/app/WeaponRune';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { LoreChoice } from 'src/app/LoreChoice';\r\nimport { Rune } from 'src/app/Rune';\r\nimport { ArmorRune } from 'src/app/ArmorRune';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { WornItem } from 'src/app/WornItem';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { ConditionsService } from 'src/app/conditions.service';\r\n\r\n@Component({\r\n    selector: 'app-itemBladeAlly',\r\n    templateUrl: './itemBladeAlly.component.html',\r\n    styleUrls: ['./itemBladeAlly.component.scss']\r\n  })\r\n  export class ItemBladeAllyComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Equipment;\r\n    \r\n    public newPropertyRune: { rune: Rune, disabled?: boolean };\r\n    \r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private activitiesService: ActivitiesService,\r\n        private spellsService: SpellsService,\r\n        private conditionsService: ConditionsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_RuneCooldown(rune: Rune) {\r\n        //If any activity on this rune has a cooldown, return the lowest of these in a human readable format.\r\n        if (rune.activities && rune.activities.length && rune.activities.some(activity => activity.activeCooldown)) {\r\n            let lowestCooldown = Math.min(...rune.activities.filter(activity => activity.activeCooldown).map(activity => activity.activeCooldown));\r\n            return \" (Cooldown \" + this.timeService.get_Duration(lowestCooldown) + \")\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    get_InitialPropertyRunes() {\r\n        let weapon = this.item;\r\n        //Start with one empty rune to select nothing.\r\n        let allRunes: { rune: Rune, disabled?: boolean }[] = [{ rune: new WeaponRune() }];\r\n        allRunes[0].rune.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (weapon.bladeAllyRunes[0]) {\r\n            allRunes.push(this.newPropertyRune as { rune: WeaponRune });\r\n        }\r\n        return allRunes;\r\n    }\r\n\r\n    get_WeaponPropertyRunes() {\r\n        let weapon: Weapon | WornItem;\r\n        if (this.item.type == \"wornitems\") {\r\n            weapon = this.item as WornItem\r\n        } else {\r\n            weapon = this.item as Weapon\r\n        }\r\n        //In the case of Handwraps of Mighty Blows, we need to compare the rune's requirements with the Fist weapon, but its potency rune requirements with the Handwraps.\r\n        //For this purpose, we use two different \"weapon\"s.\r\n        let weapon2 = this.item;\r\n        if ((weapon as WornItem).isHandwrapsOfMightyBlows) {\r\n            weapon2 = this.get_CleanItems().weapons.filter(weapon => weapon.name == \"Fist\")[0];\r\n        }\r\n        let allRunes: { rune: Rune, disabled?: boolean }[] = [];\r\n        //Add all runes either from the item store or from the inventories.\r\n        if (this.get_Character().alignment.includes(\"Good\")) {\r\n            this.get_CleanItems().weaponrunes.filter(rune => [\"Disrupting\", \"Ghost Touch\", \"Returning\", \"Shifting\"].includes(rune.name)).forEach(rune => {\r\n                allRunes.push({ rune: rune });\r\n            });\r\n        } else if (this.get_Character().alignment.includes(\"Evil\")) {\r\n            this.get_CleanItems().weaponrunes.filter(rune => [\"Fearsome\", \"Returning\", \"Shifting\"].includes(rune.name)).forEach(rune => {\r\n                allRunes.push({ rune: rune });\r\n            });\r\n        }\r\n        //Set all runes to disabled that have the same name as any that is already equipped.\r\n        allRunes.forEach((rune: { rune: WeaponRune, disabled?: boolean }) => {\r\n            if (weapon.bladeAllyRunes\r\n                .map(propertyRune => propertyRune.name)\r\n                .includes(rune.rune.name)) {\r\n                rune.disabled = true;\r\n            }\r\n        });\r\n        //Filter all runes whose requirements are not met.\r\n        allRunes.forEach((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }, $index) => {\r\n                if (\r\n                    (\r\n                        //Show runes that require a trait if that trait is present on the weapon.\r\n                        rune.rune.traitreq ?\r\n                            weapon2.traits\r\n                                .filter(trait => trait.includes(rune.rune.traitreq)).length\r\n                            : true\r\n                    ) && (\r\n                        //Show runes that require a range if the weapon has a value for that range.\r\n                        rune.rune.rangereq ?\r\n                            weapon2[rune.rune.rangereq] > 0\r\n                            : true\r\n                    ) && (\r\n                        //Show runes that require a damage type if the weapon's dmgType contains either of the letters in the requirement.\r\n                        rune.rune.damagereq ?\r\n                            (\r\n                                (weapon2 as Weapon).dmgType &&\r\n                                (\r\n                                    rune.rune.damagereq.split(\"\")\r\n                                        .filter(req => (weapon2 as Weapon).dmgType.includes(req)).length ||\r\n                                    (weapon2 as Weapon).dmgType == \"modular\"\r\n                                )\r\n                            )\r\n                            : true\r\n                    )\r\n                ) {\r\n                    rune.disabled = false;\r\n                } else {\r\n                    rune.disabled = true;\r\n                }\r\n            })\r\n        return allRunes.sort(function (a, b) {\r\n            if (a.rune.name > b.rune.name) {\r\n                return 1;\r\n            }\r\n            if (a.rune.name < b.rune.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.rune.level - b.rune.level);\r\n    }\r\n\r\n    add_BladeAllyRune() {\r\n        let weapon = this.item;\r\n        let rune = this.newPropertyRune.rune;\r\n        if (!weapon.bladeAllyRunes[0] || rune !== weapon.bladeAllyRunes[0]) {\r\n            //If there is a rune in this slot, remove it from the item.\r\n            if (weapon.bladeAllyRunes[0]) {\r\n                this.remove_BladeAllyRune()\r\n                weapon.bladeAllyRunes.splice(0);\r\n            }\r\n            //Then add the new rune to the item.\r\n            if (rune.name != \"\") {\r\n                //Add a copy of the rune to the item\r\n                weapon.bladeAllyRunes[0] = Object.assign(new WeaponRune, JSON.parse(JSON.stringify(rune)));\r\n                weapon.bladeAllyRunes[0] = this.characterService.reassign(weapon.bladeAllyRunes[0]);\r\n                weapon.bladeAllyRunes[0].amount = 1;\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        if (rune.activities?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n        this.set_PropertyRuneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_BladeAllyRune() {\r\n        let weapon: Equipment = this.item;\r\n        let oldRune: Rune = weapon.bladeAllyRunes[0];\r\n        if (oldRune.activities?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n        //Deactivate any active toggled activities of the removed rune.\r\n        oldRune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n            this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n        })\r\n    }\r\n\r\n    set_PropertyRuneNames() {\r\n        this.newPropertyRune =\r\n            (this.item.bladeAllyRunes[0] ? { rune: this.item.bladeAllyRunes[0] } : { rune: new Rune() });\r\n        if (this.newPropertyRune.rune.name == \"New Item\") {\r\n            this.newPropertyRune.rune.name = \"\";\r\n        };\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_PropertyRuneNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Blade Ally Status-->\r\n<div class=\"list-item newrow\">\r\n\r\n    <div class=\"newrow\">\r\n        <strong>Rune Effect</strong>\r\n        <select [(ngModel)]=\"newPropertyRune\" (ngModelChange)=\"add_BladeAllyRune()\">\r\n            <ng-container\r\n                *ngFor=\"let rune of get_InitialPropertyRunes(); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                <option [ngValue]=\"rune\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.propertyRunes[0]>\r\n                    <!--Blank option to deselect-->\r\n                </option>\r\n                <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current rune\">\r\n                    <option [ngValue]=\"rune\">\r\n                        {{rune.rune.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </ng-container>\r\n            <optgroup label=\"Available runes\" *ngIf=\"get_WeaponPropertyRunes().length\">\r\n                <option *ngFor=\"let rune of get_WeaponPropertyRunes(); trackBy:trackByIndex;\" [ngValue]=\"rune\"\r\n                    [disabled]=\"rune.disabled\">\r\n                    {{rune.rune.amount > 1 ? rune.rune.amount+\" \" : \"\"}}{{rune.rune.name}}\r\n                </option>\r\n            </optgroup>\r\n        </select>\r\n    </div>\r\n</div>","import { EffectsService } from './effects.service';\r\nimport { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Effect } from './Effect';\r\n\r\nexport class Ability {\r\n    constructor(\r\n        public name: string = \"\",\r\n    ) { }\r\n    calculate(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level) {\r\n        let result = {\r\n            absolutes: (this.absolutes(creature, effectsService, this.name).length != 0) as boolean,\r\n            baseValue: this.baseValue(creature, characterService, charLevel) as { result: number, explain: string },\r\n            bonuses: this.bonuses(creature, effectsService, this.name) as boolean,\r\n            penalties: this.penalties(creature, effectsService, this.name) as boolean,\r\n            value: this.value(creature, characterService, effectsService, charLevel) as { result: number, explain: string },\r\n            mod: this.mod(creature, characterService, effectsService, charLevel) as { result: number, explain: string },\r\n            modabsolutes: (this.absolutes(creature, effectsService, this.name + \" Modifier\").length != 0) as boolean,\r\n            modbonuses: this.bonuses(creature, effectsService, this.name + \" Modifier\") as boolean,\r\n            modpenalties: this.penalties(creature, effectsService, this.name + \" Modifier\") as boolean\r\n        }\r\n        return result;\r\n    }\r\n    absolutes(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_AbsolutesOnThis(creature, name);\r\n    }\r\n    relatives(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_RelativesOnThis(creature, name);\r\n    }\r\n    bonuses(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_BonusesOnThis(creature, name)\r\n    }\r\n    penalties(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_PenaltiesOnThis(creature, name)\r\n    }\r\n    baseValue(creature: Character | AnimalCompanion, characterService, charLevel: number = characterService.get_Character().level) {\r\n        if (characterService.still_loading()) { return { result: 10, explain: \"Base value: 10\" }; }\r\n        //Get baseValues from the character if they exist, otherwise 10\r\n        let baseValue = 10;\r\n        if (creature.type == \"Character\" && (creature as Character).baseValues.length) {\r\n            (creature as Character).baseValues.filter(ownValue => ownValue.name == this.name).forEach(ownValue => {\r\n                baseValue = ownValue.baseValue;\r\n            })\r\n        }\r\n        baseValue = (baseValue) ? baseValue : 10;\r\n        let explain = \"Base value: \" + baseValue;\r\n        //Get any boosts from the character and sum them up\r\n        //Boosts are +2 until 18, then +1 for Character\r\n        //Boosts are always +2 for Companion\r\n        //Flaws are always -2\r\n        //Infos are not processed.\r\n        let boosts = creature.get_AbilityBoosts(0, charLevel, this.name);\r\n        if (boosts) {\r\n            boosts.forEach(boost => {\r\n                if (boost.type == \"Boost\") {\r\n                    let weight = (baseValue < 18 || creature.type == \"Companion\") ? 2 : 1;\r\n                    baseValue += weight;\r\n                    explain += \"\\n\" + boost.source + \": +\" + weight;\r\n                } else if (boost.type == \"Flaw\") {\r\n                    baseValue -= 2;\r\n                    explain += \"\\n\" + boost.source + \": -2\";\r\n                }\r\n            })\r\n        }\r\n        return { result: baseValue, explain: explain };\r\n    }\r\n    value(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level) {\r\n        //Calculates the ability with all active effects\r\n        let baseValue = this.baseValue(creature, characterService, charLevel);\r\n        let result: number = baseValue.result;\r\n        let explain: string = baseValue.explain;\r\n        //Add all active bonuses and penalties to the base value\r\n        this.absolutes(creature, effectsService, this.name).forEach(effect => {\r\n            result = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, this.name).forEach(effect => {\r\n            if (parseInt(effect.value) != 0) {\r\n                result += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            }\r\n        });\r\n        return { result: result, explain: explain };\r\n    }\r\n    mod(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level) {\r\n        let value = this.value(creature, characterService, effectsService, charLevel);\r\n        let result: number = value.result;\r\n        //Calculates the ability modifier from the effective ability in the usual d20 fashion - 0-1 => -5; 2-3 => -4; ... 10-11 => 0; 12-13 => 1 etc.\r\n        let modifier = Math.floor((result - 10) / 2);\r\n        let explain = this.name + \" Modifier: \" + modifier;\r\n        //Add active bonuses and penalties to the ability modifier\r\n        this.absolutes(creature, effectsService, this.name + \" Modifier\").forEach(effect => {\r\n            modifier = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, this.name + \" Modifier\").forEach(effect => {\r\n            if (parseInt(effect.value) >= 0) {\r\n                modifier += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            }\r\n        });\r\n        return { result: modifier, explain: explain };\r\n    }\r\n}","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { SpellChoice } from 'src/app/SpellChoice';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Spell } from 'src/app/Spell';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { SpellCasting } from 'src/app/SpellCasting';\r\nimport { EffectsService } from 'src/app/effects.service';\r\nimport { SpellGain } from 'src/app/SpellGain';\r\nimport { SpellLearned } from 'src/app/SpellLearned';\r\nimport { SignatureSpellGain } from 'src/app/SignatureSpellGain';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spellchoice',\r\n    templateUrl: './spellchoice.component.html',\r\n    styleUrls: ['./spellchoice.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellchoiceComponent implements OnInit {\r\n\r\n    @Input()\r\n    spellCasting: SpellCasting = undefined;\r\n    @Input()\r\n    choice: SpellChoice\r\n    @Input()\r\n    allowHeightened: boolean = false;\r\n    @Input()\r\n    allowBorrow: boolean = false;\r\n    @Input()\r\n    showChoice: string = \"\";\r\n    @Input()\r\n    showSpell: string = \"\";\r\n    @Output()\r\n    showChoiceMessage = new EventEmitter<{ name: string, levelNumber: number, choice: SpellChoice, casting: SpellCasting }>();\r\n    @Output()\r\n    showSpellMessage = new EventEmitter<string>();\r\n    @Input()\r\n    level: number;\r\n    @Input()\r\n    itemSpell: boolean = false;\r\n    //Is the spell prepared after you choose it?\r\n    @Input()\r\n    prepared: boolean = false;\r\n    @Input()\r\n    showTitle: boolean = true;\r\n    @Input()\r\n    showContent: boolean = true;\r\n    @Input()\r\n    tileMode: boolean = false;\r\n    //Are we choosing character spells from the spellbook/repertoire? If not, some functions will be disabled.\r\n    @Input()\r\n    spellbook: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private spellsService: SpellsService,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_Spell(name: string) {\r\n        if (this.showSpell == name) {\r\n            this.showSpell = \"\";\r\n        } else {\r\n            this.showSpell = name;\r\n        }\r\n        this.showSpellMessage.emit(this.showSpell)\r\n    }\r\n\r\n    toggle_Choice(name: string) {\r\n        if (this.showChoice == name) {\r\n            this.showChoice = \"\";\r\n        } else {\r\n            this.showChoice = name;\r\n        }\r\n        this.showChoiceMessage.emit({ name: name, levelNumber: this.level, choice: this.choice, casting: this.spellCasting })\r\n    }\r\n\r\n    get_ShowSpell() {\r\n        return this.showSpell;\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackBySpellID(index: number, obj: any): any {\r\n        return obj.id;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.tileMode;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Level(number: number) {\r\n        return this.get_Character().class.levels[number];\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    capitalize(text: string) {\r\n        return text.charAt(0).toUpperCase() + text.slice(1);\r\n    }\r\n\r\n    get_ButtonTitle(available: number) {\r\n        let title: string = \"\";\r\n        if (this.itemSpell || this.choice.showOnSheet) {\r\n            title += \" Level \" + this.choice.level;\r\n        }\r\n        if (this.choice.frequency) {\r\n            title += \" \" + this.capitalize(this.choice.frequency);\r\n        }\r\n        if (this.choice.tradition) {\r\n            title += \" \" + this.choice.tradition;\r\n        }\r\n        if (this.is_AdaptedCantripSpell()) {\r\n            title += \" non-\" + this.spellCasting.tradition;\r\n        }\r\n        if (this.is_AdaptiveAdeptSpell()) {\r\n            title += \" non-\" + this.spellCasting.tradition;\r\n        }\r\n        if (this.choice.traitFilter.length) {\r\n            title += \" \" + this.choice.traitFilter.join(\" \");\r\n        }\r\n        if (this.choice.spellCombinationAllowed) {\r\n            title += \" Combination\";\r\n        }\r\n        if (this.choice.className) {\r\n            title += \" \" + this.choice.className;\r\n        }\r\n        if (this.choice.spellBookOnly) {\r\n            title += \" Spellbook\";\r\n        }\r\n        title += \" Spell\"\r\n        if (available != 1) {\r\n            title += \"s\";\r\n        }\r\n        if (!this.itemSpell) {\r\n            title += \" (\" + this.choice.source + \")\";\r\n        }\r\n        if (available != 1) {\r\n            title += \": \" + this.choice.spells.length + \"/\" + available;\r\n        } else {\r\n            if (this.choice.spells.length) {\r\n                title += \": \" + this.choice.spells[0].name;\r\n                if (this.choice.spells[0].combinationSpellName) {\r\n                    title += \" & \" + this.choice.spells[0].combinationSpellName;\r\n                }\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_SignatureSpellsAllowed() {\r\n        if (\r\n            this.spellCasting &&\r\n            this.choice.level > 0 &&\r\n            this.spellCasting?.castingType == \"Spontaneous\" &&\r\n            this.choice.source.includes(this.spellCasting.className + \" Spellcasting\") &&\r\n            !this.choice.showOnSheet\r\n        ) {\r\n            let signatureSpellGains: SignatureSpellGain[] = [];\r\n            this.characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.allowSignatureSpells.length && feat.have(this.get_Character(), this.characterService)).forEach(feat => {\r\n                    signatureSpellGains.push(...feat.allowSignatureSpells.filter(gain => gain.className == this.spellCasting.className))\r\n                })\r\n            if (signatureSpellGains.some(gain => gain.available == -1)) {\r\n                return -1;\r\n            } else {\r\n                return signatureSpellGains.map(gain => gain.available).reduce((a, b) => a + b, 0);\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_SignatureSpellsChosen(level: number = 0) {\r\n        //This function is used to check if a signature spell has been assigned for this spell level and returns the allowed amount (-1 for unlimited).\r\n        if (level == 0) {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.spells.some(gain => gain.signatureSpell)).length;\r\n        } else {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.level == level && choice.spells.some(gain => gain.signatureSpell)).length;\r\n        }\r\n    }\r\n\r\n    has_SignatureSpell(signatureSpellsAllowed: number) {\r\n        return signatureSpellsAllowed && this.choice.spells.some(gain => gain.signatureSpell);\r\n    }\r\n\r\n    get_CannotChooseSignatureSpell(signatureSpellsAllowed: number, taken: SpellGain) {\r\n        if (taken?.signatureSpell) {\r\n            return \"\";\r\n        } else {\r\n            if (this.get_SignatureSpellsChosen(this.choice.level)) {\r\n                return \"A signature spell has already been chosen for this level.\";\r\n            }\r\n            if ((signatureSpellsAllowed > -1 && this.get_SignatureSpellsChosen(0) >= signatureSpellsAllowed)) {\r\n                return \"The maximum amount of signature spells (\" + signatureSpellsAllowed + \") has already been chosen.\";\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    on_SignatureSpell() {\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length;\r\n    }\r\n\r\n    is_TradedIn() {\r\n        //For all spell choices that you gain from trading in another one, identify them by their source here.\r\n        // (Spell Blending, Adapted Cantrip, Infinite Possibilities, Spell Mastery, Spell Combination)\r\n        return [\r\n            \"Spell Blending\",\r\n            \"Feat: Adapted Cantrip\",\r\n            \"Feat: Adaptive Adept: Cantrip\",\r\n            \"Feat: Adaptive Adept: 1st-Level Spell\",\r\n            \"Feat: Infinite Possibilities\",\r\n            \"Feat: Spell Mastery\"\r\n        ].includes(this.choice.source) ||\r\n            this.choice.spellCombination;\r\n    }\r\n\r\n    get_SpellBlendingAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is not a cantrip or focus spell and is above level 2\r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of prepared wizard spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in (Spell Blending, Infinite Possibilities, Spell Mastery, Spell Combination)\r\n        // - You have the Spell Blending feat\r\n        return (this.choice.level > 0 && !this.choice.dynamicLevel && this.spellCasting.className == \"Wizard\" && this.spellCasting.castingType == \"Prepared\" &&\r\n            !this.is_TradedIn() &&\r\n            this.have_Feat(\"Spell Blending\"));\r\n    }\r\n\r\n    get_SpellBlendingUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in.\r\n        return (this.choice.spellBlending.reduce((sum, current) => sum + current, 0));\r\n    }\r\n\r\n    on_SpellBlending(tradeLevel: number, value: number) {\r\n        this.choice.spellBlending[tradeLevel] += value;\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_SpellBlendingUnlocked(level: number) {\r\n        //This function is used both to unlock the Spell Blending bonus spell slot (choice.source == \"Spell Blending\")\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_SpellBlendingAllowed()).\r\n        if (this.get_SpellBlendingAllowed() || this.choice.source == \"Spell Blending\") {\r\n            let highestSpellLevel = this.get_HighestSpellLevel();\r\n            //Check if there are enough spell choices that have been traded in in this spellcasting to unlock this level.\r\n            if (level == 0) {\r\n                return this.spellCasting.spellChoices.filter(choice => choice.level > 0 && choice.spellBlending[0] > 0).length * 2;\r\n            } else if (level > 0 && level <= highestSpellLevel) {\r\n                if (\r\n                    (\r\n                        this.spellCasting.spellChoices\r\n                            .filter(choice => choice.level == level - 1 && choice.spellBlending[1] > 0)\r\n                            .map(choice => choice.spellBlending[1])\r\n                            .reduce((sum, current) => sum + current, 0) >= 2\r\n                    ) ||\r\n                    (\r\n                        this.spellCasting.spellChoices\r\n                            .filter(choice => choice.level == level - 2 && choice.spellBlending[2] > 0)\r\n                            .map(choice => choice.spellBlending[2])\r\n                            .reduce((sum, current) => sum + current, 0) >= 2\r\n                    )\r\n                ) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else if (level > highestSpellLevel) {\r\n                //If the targeted spell level is not available, return -1 so there is a result, but it does not grant any spells.\r\n                return -1;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_InfinitePossibilitiesAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is not a cantrip or focus spell and is above level 2\r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of prepared wizard spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in\r\n        // - You have the Infinite Possibilities feat\r\n        return (this.choice.level > 2 && !this.choice.dynamicLevel && this.spellCasting.className == \"Wizard\" && this.spellCasting.castingType == \"Prepared\" &&\r\n            !this.is_TradedIn() &&\r\n            this.have_Feat(\"Infinite Possibilities\"));\r\n    }\r\n\r\n    get_InfinitePossibilitiesUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in (so either 0 or 1).\r\n        return (this.choice.infinitePossibilities ? 1 : 0);\r\n    }\r\n\r\n    on_InfinitePossibilities() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_InfinitePossibilitiesUnlocked(level: number = 0) {\r\n        //This function is used both to unlock the Infinite Possibilities bonus spell slot (is_InfinitePossibilitiesSpell())\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_InfinitePossibilitiesAllowed()).\r\n        if (this.get_InfinitePossibilitiesAllowed() || this.is_InfinitePossibilitiesSpell()) {\r\n            //Check if any spell slots have been traded in for IP (level == 0) or if the one on this level has been unlocked.\r\n            if (level == 0) {\r\n                return this.spellCasting.spellChoices.find(choice => choice.infinitePossibilities) ? 1 : 0;\r\n            } else {\r\n                return this.spellCasting.spellChoices.find(choice => choice.level == level + 2 && choice.infinitePossibilities) ? 1 : 0;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    is_InfinitePossibilitiesSpell() {\r\n        return this.choice.source == \"Feat: Infinite Possibilities\";\r\n    }\r\n\r\n    get_AdaptedCantripAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is a cantrip\r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of your default spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in\r\n        // - You have the Adapted Cantrip feat\r\n        return (this.choice.level == 0 && !this.choice.dynamicLevel && this.spellCasting === this.get_Character().get_DefaultSpellcasting() &&\r\n            !this.is_TradedIn() &&\r\n            this.have_Feat(\"Adapted Cantrip\"));\r\n    }\r\n\r\n    get_AdaptedCantripUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in (so either 0 or 1).\r\n        return (this.choice.adaptedCantrip ? 1 : 0);\r\n    }\r\n\r\n    on_AdaptedCantrip() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AdaptedCantripUnlocked() {\r\n        //This function is used both to unlock the Adapted Cantrip bonus spell slot (is_AdaptedCantripSpell())\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_AdaptedCantripAllowed()).\r\n        if (this.get_AdaptedCantripAllowed() || this.is_AdaptedCantripSpell()) {\r\n            //Check if any spell slots have been traded in for AC.\r\n            return this.spellCasting.spellChoices.find(choice => choice.adaptedCantrip) ? 1 : 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    is_AdaptedCantripSpell() {\r\n        return this.choice.source == \"Feat: Adapted Cantrip\";\r\n    }\r\n\r\n    get_AdaptiveAdeptAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is a cantrip and you have the Adaptive Adept: Cantrip feat \r\n        //   OR this choice is 1st level and you have the Adaptive Adept: 1st-Level Spell feat \r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of your default spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in\r\n        return (!this.choice.dynamicLevel && this.spellCasting === this.get_Character().get_DefaultSpellcasting() &&\r\n            !this.is_TradedIn() &&\r\n            (\r\n                (this.choice.level == 0 && this.have_Feat(\"Adaptive Adept: Cantrip\")) ||\r\n                (this.choice.level == 1 && this.have_Feat(\"Adaptive Adept: 1st-Level Spell\"))\r\n            )\r\n        );\r\n    }\r\n\r\n    get_AdaptiveAdeptUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in (so either 0 or 1).\r\n        return (this.choice.adaptiveAdept ? 1 : 0);\r\n    }\r\n\r\n    on_AdaptiveAdept() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AdaptiveAdeptUnlocked() {\r\n        //This function is used both to unlock the Adaptive Adept bonus spell slot (is_AdaptiveAdeptSpell())\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_AdaptiveAdeptAllowed()).\r\n        if (this.get_AdaptiveAdeptAllowed() || this.is_AdaptiveAdeptSpell()) {\r\n            //Check if any spell slots have been traded in for AC.\r\n            return this.spellCasting.spellChoices.find(choice => choice.adaptiveAdept) ? 1 : 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    is_AdaptiveAdeptSpell() {\r\n        return this.choice.source.includes(\"Feat: Adaptive Adept\");\r\n    }\r\n\r\n    is_EsotericPolymathSpell(choice: SpellChoice) {\r\n        return choice.source == \"Feat: Esoteric Polymath\";\r\n    }\r\n\r\n    get_EsotericPolymathAllowed(casting: SpellCasting, tradition: string) {\r\n        if (casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && this.have_Feat(\"Esoteric Polymath\")) {\r\n            if ([\"\", \"Occult\"].includes(tradition)) {\r\n                return true;\r\n            } else if (this.have_Feat(\"Impossible Polymath\")) {\r\n                let character = this.get_Character();\r\n                let skill: string = \"\";\r\n                switch (tradition) {\r\n                    case \"Arcane\":\r\n                        skill = \"Arcana\";\r\n                        break;\r\n                    case \"Divine\":\r\n                        skill = \"Religion\";\r\n                        break;\r\n                    case \"Primal\":\r\n                        skill = \"Nature\";\r\n                        break;\r\n                }\r\n                return this.characterService.get_Skills(character, skill)[0].level(character, this.characterService, character.level) >= 2\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    is_ArcaneEvolutionSpell() {\r\n        return this.choice.source == \"Feat: Arcane Evolution\";\r\n    }\r\n\r\n    is_OccultEvolutionSpell() {\r\n        return this.choice.source == \"Feat: Occult Evolution\";\r\n    }\r\n\r\n    get_CrossbloodedEvolutionAllowed() {\r\n        if (\r\n            this.choice.level > 0 &&\r\n            this.spellCasting?.className == \"Sorcerer\" &&\r\n            this.spellCasting.castingType == \"Spontaneous\" &&\r\n            this.have_Feat(\"Crossblooded Evolution\") &&\r\n            this.choice.source.includes(\"Sorcerer Spellcasting\") &&\r\n            !this.choice.showOnSheet\r\n        ) {\r\n            if (this.have_Feat(\"Greater Crossblooded Evolution\")) {\r\n                return 3;\r\n            } else {\r\n                return 1;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_CrossbloodedEvolutionUnlocked(level: number = 0) {\r\n        //This function is used to check how many crossblooded evolution spells have been assigned for this spell level or all levels.\r\n        if (level == 0) {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.crossbloodedEvolution).length;\r\n        } else {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.level == level && choice.crossbloodedEvolution).length;\r\n        }\r\n    }\r\n\r\n    on_CrossbloodedEvolution() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_ChangeSpellLevel(amount: number) {\r\n        this.choice.level += amount;\r\n    }\r\n\r\n    on_SpellCombination() {\r\n        this.choice.spells.length = 0;\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_HighestSpellLevel() {\r\n        if (this.spellCasting) {\r\n            //Get the available spell level of this casting. This is the higest spell level of the spell choices that are available at your character level.\r\n            return Math.max(...this.spellCasting.spellChoices.filter(spellChoice => spellChoice.charLevelAvailable <= this.get_Character().level).map(spellChoice => spellChoice.dynamicLevel ? this.get_DynamicLevel(spellChoice) : spellChoice.level), 0);\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    get_DynamicLevel(choice: SpellChoice = this.choice) {\r\n        return this.spellsService.get_DynamicSpellLevel(this.spellCasting, choice, this.characterService);\r\n    }\r\n\r\n    get_CHA() {\r\n        return this.characterService.get_Abilities(\"Charisma\")[0].mod(this.get_Character(), this.characterService, this.effectsService).result;\r\n    }\r\n\r\n    get_Available() {\r\n        let choice = this.choice;\r\n        let available: number = 0;\r\n        if (choice.source == \"Divine Font\") {\r\n            available = Math.max(choice.available + this.get_CHA(), 0);\r\n        } else if (choice.source == \"Spell Blending\") {\r\n            available = Math.max(choice.available + this.get_SpellBlendingUnlocked(choice.level), 0);\r\n        } else if (this.is_InfinitePossibilitiesSpell()) {\r\n            available = Math.max(choice.available + this.get_InfinitePossibilitiesUnlocked(choice.level), 0);\r\n        } else if (this.is_AdaptedCantripSpell()) {\r\n            available = Math.max(choice.available + this.get_AdaptedCantripUnlocked(), 0);\r\n        } else if (this.is_AdaptiveAdeptSpell()) {\r\n            available = Math.max(choice.available + this.get_AdaptiveAdeptUnlocked(), 0);\r\n        } else if (\r\n            [\"Feat: Basic Wizard Spellcasting\", \"Feat: Expert Wizard Spellcasting\", \"Feat: Master Wizard Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Arcane Breadth\") - this.get_SpellBlendingUsed() - this.get_InfinitePossibilitiesUsed(), 0);\r\n        } else if (\r\n            [\"Feat: Basic Bard Spellcasting\", \"Feat: Expert Bard Spellcasting\", \"Feat: Master Bard Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Occult Breadth\"), 0);\r\n        } else if (\r\n            [\"Feat: Basic Druid Spellcasting\", \"Feat: Expert Druid Spellcasting\", \"Feat: Master Druid Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Primal Breadth\"), 0);\r\n        } else if (\r\n            [\"Feat: Basic Sorcerer Spellcasting\", \"Feat: Expert Sorcerer Spellcasting\", \"Feat: Master Sorcerer Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Bloodline Breadth\"), 0);\r\n        } else {\r\n            available = Math.max(this.choice.available - this.get_SpellBlendingUsed() - this.get_InfinitePossibilitiesUsed() - this.get_AdaptedCantripUsed() - this.get_AdaptiveAdeptUsed(), 0);\r\n        }\r\n        //If this choice has more spells than it should have (unless they are locked), remove the excess.\r\n        if (choice.spells.length > available) {\r\n            choice.spells.filter(gain => !gain.locked).forEach((gain, index) => {\r\n                if (index >= available) {\r\n                    this.on_SpellTaken(gain.name, false, false);\r\n                }\r\n            })\r\n        }\r\n        return available;\r\n    }\r\n\r\n    get_AvailableSpells() {\r\n        let choice = this.choice;\r\n        //Get spell level from the choice level or from the dynamic choice level, if set.\r\n        let spellLevel = choice.level;\r\n        if (choice.dynamicLevel) {\r\n            spellLevel = this.get_DynamicLevel();\r\n        }\r\n        let character = this.get_Character()\r\n\r\n        let allSpells: Spell[];\r\n        //Get spells from your spellbook for prepared wizard spells or if the choice requires it, otherwise get all spells.\r\n        if ((this.spellCasting?.castingType == \"Prepared\" && this.spellCasting?.className == \"Wizard\" && !this.allowBorrow) || this.choice.spellBookOnly) {\r\n            allSpells = this.spellsService.get_Spells().filter(spell =>\r\n                character.class.spellBook.find((learned: SpellLearned) => learned.name == spell.name)\r\n            );\r\n        } else {\r\n            allSpells = this.spellsService.get_Spells();\r\n        }\r\n        //Filter the list by the filter given in the choice.\r\n        if (choice.filter.length) {\r\n            allSpells = allSpells.filter(spell => choice.filter.map(filter => filter.toLowerCase()).includes(spell.name.toLowerCase()))\r\n        }\r\n        //Set up another Array to save the end result to, filtered from allSpells.\r\n        let spells: Spell[] = [];\r\n        //If this is a character spellcasting choice (and not a scroll or other item), filter the spells by the spellcasting's tradition.\r\n        //  The choice's tradition is preferred over the spellcasting's tradition, if set. If neither is set, get all spells.\r\n        if (this.spellCasting) {\r\n            let traditionFilter = choice.tradition || this.spellCasting.tradition || \"\";\r\n            //Keep either only Focus spells (and skip the tradition filter) or exclude Focus spells as needed.\r\n            if (this.spellCasting.castingType == \"Focus\") {\r\n                spells.push(...allSpells.filter(spell => spell.traits.includes(character.class.name) && spell.traditions.includes(\"Focus\")));\r\n            } else {\r\n                if (choice.source == \"Divine Font\") {\r\n                    //Divine Font only allows spells listed in your deity's divine font attribute.\r\n                    let deity = character.class.deity ? this.characterService.get_Deities(character.class.deity)[0] : null;\r\n                    spells.push(...allSpells.filter(spell =>\r\n                        deity?.divineFont.includes(spell.name)\r\n                    ));\r\n                } else if (choice.source == \"Feat: Esoteric Polymath\") {\r\n                    //With Impossible Polymath, you can choose spells of any tradition in the Esoteric Polymath choice so long as you are trained in the associated skill.\r\n                    spells.push(...allSpells.filter(spell => spell.traditions.find(tradition => this.get_EsotericPolymathAllowed(this.spellCasting, tradition)) && !spell.traditions.includes(\"Focus\")));\r\n                } else if (choice.source == \"Feat: Adapted Cantrip\") {\r\n                    //With Adapted Cantrip, you can choose spells of any tradition except your own.\r\n                    spells.push(...allSpells.filter(spell => !spell.traditions.includes(this.spellCasting.tradition) && !spell.traditions.includes(\"Focus\")));\r\n                } else if (choice.source.includes(\"Feat: Adaptive Adept\")) {\r\n                    //With Adaptive Adept, you can choose spells of the same tradition(s) as with Adapted Cantrip, but not your own.\r\n                    let adaptedcantrip = this.spellCasting.spellChoices.find(choice => choice.source == \"Feat: Adapted Cantrip\").spells[0];\r\n                    if (adaptedcantrip) {\r\n                        let originalSpell = this.spellsService.get_Spells(adaptedcantrip.name)[0];\r\n                        if (originalSpell) {\r\n                            spells.push(...allSpells.filter(spell => !spell.traditions.includes(this.spellCasting.tradition) && spell.traditions.some(tradition => originalSpell.traditions.includes(tradition)) && !spell.traditions.includes(\"Focus\")));\r\n                        }\r\n                    }\r\n                } else if (choice.crossbloodedEvolution && !(traditionFilter && choice.spells.some(takenSpell => !this.spellsService.get_Spells(takenSpell.name)[0]?.traditions.includes(traditionFilter)))) {\r\n                    //With Crossblooded Evolution, you can choose spells of any tradition, unless you already have one of a different tradition than your own.\r\n                    spells.push(...allSpells.filter(spell => !spell.traditions.includes(\"Focus\")));\r\n                } else if (traditionFilter) {\r\n                    //If the tradition filter comes from the spellcasting, also include all spells that are on the spell list regardless of their tradition.\r\n                    if (!choice.tradition && this.spellCasting.tradition) {\r\n                        spells.push(...allSpells.filter(spell =>\r\n                            (\r\n                                spell.traditions.includes(traditionFilter) ||\r\n                                this.get_Character().get_SpellListSpell(spell.name).length\r\n                            ) &&\r\n                            !spell.traditions.includes(\"Focus\")\r\n                        ));\r\n                    } else {\r\n                        spells.push(...allSpells.filter(spell =>\r\n                            spell.traditions.includes(traditionFilter) &&\r\n                            !spell.traditions.includes(\"Focus\")\r\n                        ));\r\n                    }\r\n                } else {\r\n                    spells.push(...allSpells.filter(spell => !spell.traditions.includes(\"Focus\")));\r\n                }\r\n            }\r\n        } else {\r\n            //If this is an item spell choice, only the choice's tradition is relevant. If it's not set, keep all spells except Focus spells.\r\n            let traditionFilter = choice.tradition || \"\";\r\n            if (traditionFilter) {\r\n                spells.push(...allSpells.filter(spell => spell.traditions.includes(traditionFilter) && !spell.traditions.includes(\"Focus\")));\r\n            } else {\r\n                spells.push(...allSpells.filter(spell => !spell.traditions.includes(\"Focus\")));\r\n            }\r\n        }\r\n        //If a certain target is required, filter out the spells that don't match it.\r\n        switch (choice.target) {\r\n            case \"Others\":\r\n                spells = spells.filter(spell => spell.target != \"self\");\r\n                break;\r\n            case \"Allies\":\r\n                spells = spells.filter(spell => spell.target == \"ally\");\r\n                break;\r\n            case \"Caster\":\r\n                spells = spells.filter(spell => spell.target == \"self\");\r\n                break;\r\n            case \"Enemies\":\r\n                spells = spells.filter(spell => spell.target == \"\")\r\n        }\r\n        //If a trait filter is set, keep only spells that match it, with extra handling for \"Common\".\r\n        if (choice.traitFilter.length) {\r\n            //There is no actual Common trait. If a spell choice is limited to common spells,\r\n            //  exclude all uncommon and rare spells, then process the rest of the trait filter.\r\n            if (choice.traitFilter.includes(\"Common\")) {\r\n                let traitFilter = choice.traitFilter.filter(trait => trait != \"Common\");\r\n                spells = spells.filter(spell =>\r\n                    !spell.traits.includes(\"Uncommon\") &&\r\n                    !spell.traits.includes(\"Rare\") &&\r\n                    (\r\n                        traitFilter.length ?\r\n                            spell.traits.find(trait => traitFilter.includes(trait))\r\n                            : true\r\n                    )\r\n                );\r\n            } else {\r\n                spells = spells.filter(spell => spell.traits.find(trait => choice.traitFilter.includes(trait)));\r\n            }\r\n        }\r\n        //If only spells are allowed that target a single creature or object, these are filtered here.\r\n        if (choice.singleTarget) {\r\n            spells = spells.filter(spell => spell.singleTarget);\r\n        }\r\n        //If any spells in the choice have become invalid (i.e. they aren't on the list), remove them, unless they are locked. You need to reload the spells area if this happens.\r\n        let spellNumber = choice.spells.length;\r\n        choice.spells = this.choice.spells.filter(spell => spell.locked || spells.some(availableSpell => availableSpell.name == spell.name))\r\n        if (choice.spells.length < spellNumber) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            this.characterService.process_ToChange();\r\n        }\r\n        //If any locked spells remain that aren't in the list, add them to the list.\r\n        spells.push(...allSpells.filter(spell => choice.spells.some(existingSpell => existingSpell.locked && existingSpell.name == spell.name) && !spells.some(addedSpell => addedSpell.name == spell.name)));\r\n        //If any spells are left after this, we apply secondary, mechanical filters.\r\n        if (spells.length) {\r\n            //Get only Cantrips if the spell level is 0, but keep those already taken.\r\n            if (spellLevel == 0) {\r\n                spells = spells.filter(spell => spell.traits.includes(\"Cantrip\") || this.get_SpellTakenByThis(spell.name));\r\n            } else {\r\n                spells = spells.filter(spell => !spell.traits.includes(\"Cantrip\") || this.get_SpellTakenByThis(spell.name));\r\n            }\r\n            //Spell combination spell choices have special requirements, but they are also transformed from existing spell choices, so we don't want to change their properties.\r\n            //The requirements that would usually be handled as choice properties are handled on the fly here.\r\n            //The requirements are as follows:\r\n            // - Spell Level is up to 2 lower than the spell slot\r\n            // - The spell must be able to target a single creature other than the caster. This is ensured by the \"singletarget\" property in the spell.\r\n            // - The second spell must have the same method of determining its success as the first - Attack trait, the same saving throw or neither.\r\n            if (choice.spellCombination) {\r\n                spells = spells.filter(spell =>\r\n                    (spell.levelreq <= spellLevel - 2) &&\r\n                    (!this.allowHeightened ? spell.levelreq == spellLevel - 2 : true) &&\r\n                    spell.singleTarget\r\n                )\r\n                if (choice.spells.length) {\r\n                    if (choice.spells[0].name && choice.spells[0].combinationSpellName) {\r\n                        let availableSpells: Spell[] = spells.filter(spell =>\r\n                            this.get_SpellTakenByThis(spell.name)\r\n                        );\r\n                        return availableSpells.sort(function (a, b) {\r\n                            if (choice.spells[0].name == a.name) {\r\n                                return -1;\r\n                            }\r\n                            if (choice.spells[0].name == b.name) {\r\n                                return 1;\r\n                            }\r\n                            return 0\r\n                        });\r\n                    }\r\n                    let existingSpell = this.get_Spells(choice.spells[0].name)[0];\r\n                    spells = spells.filter(spell =>\r\n                        (existingSpell.traits.includes(\"Attack\") == spell.traits.includes(\"Attack\")) &&\r\n                        (existingSpell.savingThrow.includes(\"Fortitude\") == spell.savingThrow.includes(\"Fortitude\")) &&\r\n                        (existingSpell.savingThrow.includes(\"Reflex\") == spell.savingThrow.includes(\"Reflex\")) &&\r\n                        (existingSpell.savingThrow.includes(\"Will\") == spell.savingThrow.includes(\"Will\"))\r\n                    )\r\n                }\r\n                let availableSpells: Spell[] = spells.filter(spell =>\r\n                    this.cannotTake(spell).length == 0 || this.get_SpellTakenByThis(spell.name)\r\n                )\r\n                return availableSpells\r\n                    .sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0\r\n                    });\r\n            }\r\n            //Don't show spells of a different level unless heightened spells are allowed. Never show spells of a different level if this is a level 0 choice.\r\n            if (!this.allowHeightened && (spellLevel > 0)) {\r\n                spells = spells.filter(spell => spell.levelreq == spellLevel || this.get_SpellTakenByThis(spell.name));\r\n            } else if (spellLevel > 0) {\r\n                //Still don't show higher level non-cantrip spells even if heightened spells are allowed.\r\n                spells = spells.filter(spell => spell.levelreq <= spellLevel || this.get_SpellTakenByThis(spell.name));\r\n            }\r\n            //Finally, if there are fewer spells selected than available, show all spells that individually match the requirements or that are already selected.\r\n            // If the available spells are exhausted, only show the selected ones unless showOtherOptions is true.\r\n            if (choice.spells.length < this.get_Available()) {\r\n                return spells\r\n                    .sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0\r\n                    });\r\n            } else {\r\n                let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n                let availableSpells: Spell[] = spells.filter(spell =>\r\n                    this.get_SpellTakenByThis(spell.name) || showOtherOptions\r\n                )\r\n                return availableSpells\r\n                    .sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    cleanup_ChoiceSpells(spellList: Spell[], choice: SpellChoice) {\r\n        choice.spells.forEach(gain => {\r\n            if (!spellList?.map(spell => spell.name)?.includes(gain.name)) {\r\n                if (!gain.locked) {\r\n                    this.get_Character().take_Spell(this.characterService, gain.name, false, choice, gain.locked);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    cannotTakeSome() {\r\n        let anytrue = 0;\r\n        this.choice.spells.forEach(gain => {\r\n            if (this.cannotTake(this.get_Spells(gain.name)[0]).length) {\r\n                if (!gain.locked) {\r\n                    this.get_Character().take_Spell(this.characterService, gain.name, false, this.choice, gain.locked);\r\n                } else {\r\n                    anytrue += 1;\r\n                }\r\n            }\r\n        });\r\n        this.characterService.process_ToChange();\r\n        return anytrue;\r\n    }\r\n\r\n    cannotTake(spell: Spell) {\r\n        let choice = this.choice;\r\n        let takenByThis = this.get_SpellTakenByThis(spell.name);\r\n        if (takenByThis && choice.spells.find(spellGain => spellGain.name == spell.name && spellGain.locked)) {\r\n            return [];\r\n        }\r\n        let spellLevel = choice.level;\r\n        if (choice.dynamicLevel) {\r\n            spellLevel = this.get_DynamicLevel(choice);\r\n        }\r\n        let reasons: {reason: string, explain: string}[] = [];\r\n        //Are the basic requirements (so far just level) not met?\r\n        if (!spell.canChoose(this.characterService, spellLevel)) {\r\n            reasons.push({reason: \"Requirements unmet\", \"explain\": \"The requirements are not met.\"});\r\n        }\r\n        //Has it already been taken at this level by this class, and was that not by this SpellChoice? (Only for spontaneous spellcasters.)\r\n        if (this.get_SpellTakenThisLevel(spell, spellLevel) && !takenByThis) {\r\n            reasons.push({reason: \"Already taken\", explain: \"You already have this spell on this level with this class.\"});\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    get_SpellTakenByThis(spellName: string, choice: SpellChoice = this.choice) {\r\n        //Returns the amount of times that this spell has been taken in this choice, exluding locked spells. Needs to be a number for prepared spells.\r\n        return choice.spells.filter(takenSpell => !takenSpell.locked && takenSpell.name == spellName || takenSpell.combinationSpellName == spellName).length;\r\n    }\r\n\r\n    get_SpellTakenThisLevel(spell: Spell, spellLevel: number = 0) {\r\n        //Returns whether this spell has been taken in this spellcasting at this level at all (only for spontaneous spellcasters.)\r\n        //Returns false for spontaneous spell choices that draw from your spellbook (i.e. Esoteric Polymath and Arcane Evolution) and for spell choices with a cooldown.\r\n        let choice = this.choice;\r\n        if (!spellLevel) {\r\n            spellLevel = choice.level;\r\n            if (choice.dynamicLevel) {\r\n                spellLevel = this.get_DynamicLevel(choice);\r\n            }\r\n        }\r\n        return (\r\n            !choice.spellBookOnly &&\r\n            !choice.cooldown &&\r\n            this.spellCasting?.castingType == \"Spontaneous\" &&\r\n            !this.itemSpell &&\r\n            spell.have(this.characterService, this.spellCasting, spellLevel, choice.className, false)\r\n        );\r\n    }\r\n\r\n    get_TakenSpell(spellName: string) {\r\n        //Returns the first SpellGain of this spell in this choice.\r\n        return this.choice.spells.find(takenSpell => takenSpell.name == spellName || takenSpell.combinationSpellName == spellName);\r\n    }\r\n\r\n    get_LockedSpellTakenByThis(spellName: string) {\r\n        //Returns the amount of times that this spell is included in this choice as a locked spell. Needs to be a number for prepared spells.\r\n        return this.choice.spells.filter(takenSpell => takenSpell.locked && takenSpell.name == spellName).length;\r\n    }\r\n\r\n    on_SpellTaken(spellName: string, taken: boolean, locked: boolean) {\r\n        let choice = this.choice;\r\n        //Close the menu if all slots are filled, unless it's a spell combination choice.\r\n        if (taken && this.get_Character().settings.autoCloseChoices && !choice.spellCombination && (choice.spells.length == this.get_Available() - 1)) { this.toggle_Choice(\"\") }\r\n        let prepared: boolean = this.prepared;\r\n        let character = this.get_Character();\r\n        character.take_Spell(this.characterService, spellName, taken, choice, locked, prepared);\r\n        //For the Esoteric Polymath feat and the Arcane Evolution feat, if you choose a spell that is in your repertoire (i.e. if other spell choices have this spell in it),\r\n        // the choice is turned into a signature spell choice. If you drop the spell, turn signature spell off.\r\n        if ([\"Feat: Esoteric Polymath\", \"Feat: Arcane Evolution\"].includes(choice.source)) {\r\n            if (taken) {\r\n                if (this.spellCasting.spellChoices.find(otherChoice => otherChoice !== choice && this.get_SpellTakenByThis(spellName, otherChoice))) {\r\n                    choice.spells.forEach(gain => gain.signatureSpell = true);\r\n                }\r\n            } else {\r\n                choice.spells.forEach(gain => gain.signatureSpell = false);\r\n            }\r\n        }\r\n        //The Interweave Dispel feat is dependent on having Dispel in your repertoire, so we update that here.\r\n        if (spellName == \"Dispel Magic\" && !taken) {\r\n            if (this.have_Feat(\"Interweave Dispel\")) {\r\n                this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"spells\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_SpellCombinationTaken(spellName: string, taken: boolean) {\r\n        if (taken && this.get_Character().settings.autoCloseChoices) {\r\n            this.toggle_Choice(\"\")\r\n            this.choice.spells[0].combinationSpellName = spellName;\r\n        } else {\r\n            this.choice.spells[0].combinationSpellName = \"\";\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spellchoices\", \"all\", \"Character\"].includes(target)) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature == \"Character\" && [\"spellchoices\", \"all\"].includes(view.target)) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.level) {\r\n            this.level = this.choice.level;\r\n        }\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let listID of [choice.source+choice.id]; trackBy:trackByIndex\">\r\n    <ng-container *ngFor=\"let availableSpells of [get_AvailableSpells()]; trackBy:trackByIndex;\">\r\n        <!--Remove spells that are not among the available spells anymore-->\r\n        <ng-container *ngIf=\"cleanup_ChoiceSpells(availableSpells, choice)\"></ng-container>\r\n        <ng-container *ngFor=\"let available of [get_Available()]; trackBy:trackByIndex;\">\r\n            <ng-container *ngFor=\"let buttonTitle of [get_ButtonTitle(available)]; trackBy:trackByIndex;\">\r\n                <ng-container\r\n                    *ngFor=\"let signatureSpellsAllowed of [get_SignatureSpellsAllowed()]; trackBy:trackByIndex;\">\r\n                    <div *ngIf=\"available || get_SpellBlendingUsed() || get_InfinitePossibilitiesUsed() || get_AdaptedCantripUsed() || get_AdaptiveAdeptUsed()\"\r\n                        [ngClass]=\"{'list-item': showTitle && !get_TileMode(), 'problem':(choice.spells.length > available || cannotTakeSome()), 'fullsize-only':(available == choice.spells.length)}\">\r\n                        <ng-template #ButtonTitleTemplate>\r\n                            <span [ngbTooltip]=\"'Combination spell'\" *ngIf=\"choice.spellCombinationAllowed\"><i\r\n                                    class='ra ra-frostfire'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Infinite Possibilities spell'\"\r\n                                *ngIf=\"is_InfinitePossibilitiesSpell()\"><i class='ra ra-kaleidoscope'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Signature spell'\" *ngIf=\"has_SignatureSpell(signatureSpellsAllowed)\"><i\r\n                                    class='bi-stars'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Crossblooded Evolution spell'\" *ngIf=\"choice.crossbloodedEvolution\"><i\r\n                                    class='ra ra-zigzag-leaf'></i>&nbsp;</span>\r\n                            {{buttonTitle}}\r\n                        </ng-template>\r\n                        <!--Choice button shows in title mode-->\r\n                        <!--List mode button-->\r\n                        <button class=\"newrow left-aligned sublist-toggle\"\r\n                            *ngIf=\"showTitle && (!get_TileMode() || showContent)\"\r\n                            [ngClass]=\"{'fancy-button choicecleared':(available == choice.spells.length), 'activechoice': get_ShowChoice()==listID && (choice.showOnSheet && !itemSpell)}\"\r\n                            (click)=\"toggle_Choice(listID)\">\r\n                            <ng-container *ngTemplateOutlet=\"ButtonTitleTemplate\"></ng-container>\r\n                        </button>\r\n                        <!--Tile mode button-->\r\n                        <button (click)=\"toggle_Choice(listID)\" *ngIf=\"showTitle && !showContent && get_TileMode()\"\r\n                            [ngClass]=\"{'fancy-button choicecleared':(available == choice.spells.length), 'activechoice':get_ShowChoice()==listID}\">\r\n                            <app-gridIcon [ngbTooltip]=\"ButtonTitleTemplate\" [superTitle]=\"available.toString()\"\r\n                                [title]=\"(available == 1 && choice.spells.length) ? choice.spells[0].name : ((available > 1 && choice.spells.length > 0) ? choice.spells.length.toString() : '')\"\r\n                                [ngClass]=\"{'fancy-button':(available == choice.spells.length)}\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <!--Choice title shows above content in content only mode-->\r\n                        <div class=\"newrow list-item padding-8 center-aligned\" *ngIf=\"!showTitle\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                <ng-container *ngTemplateOutlet=\"ButtonTitleTemplate\"></ng-container>\r\n                            </header>\r\n                        </div>\r\n                        <!--Choice content shows in content mode-->\r\n                        <div id=\"{{!showTitle ? 'choiceArea' : ''}}\"\r\n                            [ngClass]=\"{'list-item sublist': showTitle, 'fancy-list':showTitle && (available == choice.spells.length), 'charactersheet-app':!showTitle}\"\r\n                            *ngIf=\"showContent && get_ShowChoice()==listID\">\r\n                            <div class=\"list-item lower\">\r\n                                <!-- Heightened -->\r\n                                <div class=\"list-item gridicon-fullsizebox\" *ngIf=\"spellbook && choice.level != 0\">\r\n                                    <input class=\"character-choice\" id=\"{{choice.id}}allowHeightened\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"allowHeightened\">\r\n                                    <label for=\"{{choice.id}}allowHeightened\">\r\n                                        <strong>\r\n                                            Allow heightened spells\r\n                                        </strong>\r\n                                    </label>\r\n                                </div>\r\n                                <!-- End Heightened -->\r\n                                <!-- Adapted Cantrip -->\r\n                                <ng-container *ngIf=\"get_AdaptedCantripAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Adapted Cantrip</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_AdaptedCantripUnlocked() && !choice.adaptedCantrip\">\r\n                                            An Adapted Cantrip spell slot has already been unlocked.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_AdaptedCantripUnlocked() || choice.adaptedCantrip\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}adaptedCantrip\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.adaptedCantrip\"\r\n                                                (ngModelChange)=\"on_AdaptedCantrip()\"\r\n                                                [disabled]=\"(available <= choice.spells.length) && !choice.adaptedCantrip\">\r\n                                            <label for=\"{{choice.id}}adaptedCantrip\">\r\n                                                <strong>\r\n                                                    Trade one spell slot in for an Adapted Cantrip spell of another\r\n                                                    tradition than your own.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Adapted Cantrip -->\r\n                                <!-- Adaptive Adept -->\r\n                                <ng-container *ngIf=\"get_AdaptiveAdeptAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Adaptive Adept</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_AdaptiveAdeptUnlocked() && !choice.adaptiveAdept\">\r\n                                            An Adaptive Adept spell slot has already been unlocked.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_AdaptiveAdeptUnlocked() || choice.adaptiveAdept\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}adaptiveAdept\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.adaptiveAdept\"\r\n                                                (ngModelChange)=\"on_AdaptiveAdept()\"\r\n                                                [disabled]=\"(available <= choice.spells.length) && !choice.adaptiveAdept\">\r\n                                            <label for=\"{{choice.id}}adaptiveAdept\">\r\n                                                <strong>\r\n                                                    Trade one spell slot in for an Adaptive Adept spell slot of the same\r\n                                                    tradition as the Adapted Cantrip spell.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Adaptive Adept -->\r\n                                <!-- Spell Blending -->\r\n                                <ng-container *ngIf=\"spellbook && get_SpellBlendingAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Spell Blending</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_SpellBlendingUnlocked(0) && get_SpellBlendingUnlocked(choice.level + 1) && get_SpellBlendingUnlocked(choice.level + 2) && choice.spellBlending.toString() == '0,0,0'\">\r\n                                            No bonus spell slots can currently be unlocked by trading in this spell\r\n                                            slot.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_SpellBlendingUnlocked(0) || choice.spellBlending[0]\">\r\n                                            <span>\r\n                                                <button class=\"character-choice\" [disabled]=\"!choice.spellBlending[0]\"\r\n                                                    (click)=\"on_SpellBlending(0, -1)\">-</button>\r\n                                                <button class=\"character-choice\"\r\n                                                    [disabled]=\"get_SpellBlendingUnlocked(0) || available <= choice.spells.length\"\r\n                                                    (click)=\"on_SpellBlending(0, 1)\">+</button>\r\n                                            </span>\r\n                                            <strong>\r\n                                                {{choice.spellBlending[0]}} spell slot{{choice.spellBlending[0] ? \"\" :\r\n                                                \"s\"}} traded in for 2 cantrip slots\r\n                                            </strong>\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_SpellBlendingUnlocked(choice.level + 1) || choice.spellBlending[1]\">\r\n                                            <span>\r\n                                                <button class=\"character-choice\" [disabled]=\"!choice.spellBlending[1]\"\r\n                                                    (click)=\"on_SpellBlending(1, -1)\">-</button>\r\n                                                <button class=\"character-choice\"\r\n                                                    [disabled]=\"get_SpellBlendingUnlocked(choice.level + 1) || available <= choice.spells.length\"\r\n                                                    (click)=\"on_SpellBlending(1, 1)\">+</button>\r\n                                            </span>\r\n                                            <strong>\r\n                                                {{choice.spellBlending[1]}} spell slot{{choice.spellBlending[1] != 1 ?\r\n                                                \"s\" : \"\"}} traded in for level {{choice.level + 1}} spell slot (2 needed\r\n                                                for 1)\r\n                                            </strong>\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_SpellBlendingUnlocked(choice.level + 2) || choice.spellBlending[2]\">\r\n                                            <span>\r\n                                                <button class=\"character-choice\" [disabled]=\"!choice.spellBlending[2]\"\r\n                                                    (click)=\"on_SpellBlending(2, -1)\">-</button>\r\n                                                <button class=\"character-choice\"\r\n                                                    [disabled]=\"get_SpellBlendingUnlocked(choice.level + 2) || available <= choice.spells.length\"\r\n                                                    (click)=\"on_SpellBlending(2, 1)\">+</button>\r\n                                            </span>\r\n                                            <strong>\r\n                                                {{choice.spellBlending[2]}} spell slot{{choice.spellBlending[2] != 1 ?\r\n                                                \"s\" : \"\"}} traded in for level {{choice.level + 2}} spell slot (2 needed\r\n                                                for 1)\r\n                                            </strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Spell Blending -->\r\n                                <!-- Infinite Possibilities -->\r\n                                <ng-container *ngIf=\"spellbook && get_InfinitePossibilitiesAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong><i class='ra ra-kaleidoscope'></i>&nbsp;Infinite Possibilities</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_InfinitePossibilitiesUnlocked() && !choice.infinitePossibilities\">\r\n                                            An Infinite Possibilities spell slot has already been unlocked.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_InfinitePossibilitiesUnlocked() || choice.infinitePossibilities\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}infinitePossibilities\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.infinitePossibilities\"\r\n                                                (ngModelChange)=\"on_InfinitePossibilities()\"\r\n                                                [disabled]=\"(available <= choice.spells.length) && !choice.infinitePossibilities\">\r\n                                            <label for=\"{{choice.id}}infinitePossibilities\">\r\n                                                <strong>\r\n                                                    Trade one spell slot in for a level {{choice.level - 2}} Infinite\r\n                                                    Possibilities spell slot.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Infinite Possibilities -->\r\n                                <!-- Spell Combination -->\r\n                                <ng-container *ngIf=\"choice.spellCombinationAllowed\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong><i class='ra ra-frostfire'></i>&nbsp;Spell Combination</strong>\r\n                                        <div class=\"newrow gridicon-fullsizebox\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}spellCombination\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.spellCombination\"\r\n                                                (ngModelChange)=\"on_SpellCombination()\"\r\n                                                [disabled]=\"available <= choice.spells.length\">\r\n                                            <label for=\"{{choice.id}}spellCombination\">\r\n                                                <strong>\r\n                                                    Use this spell slot as a spell combination slot.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"choice.spellCombination\">\r\n                                            <p>\r\n                                                Both spells must be level {{choice.level - 2}} or lower, and both must\r\n                                                target only one creature or object or have the option to target only one\r\n                                                creature or object.\r\n                                            </p>\r\n                                            <p>\r\n                                                The second spell you choose for this spell slot must have the same means\r\n                                                of determining whether it has an effect as the first spell - both spells\r\n                                                must require a ranged spell attack roll, require the same type of saving\r\n                                                throw, or automatically affect the target.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Spell Combination -->\r\n                                <!-- Esoteric Polymath -->\r\n                                <ng-container *ngIf=\"is_EsotericPolymathSpell(choice)\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Esoteric Polymath</strong>\r\n                                        <span class=\"newrow left-aligned\">\r\n                                            <strong>Spell Level&nbsp;</strong>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(-1)\"\r\n                                                [disabled]=\"choice.level <= 1\">-</button>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(1)\"\r\n                                                [disabled]=\"choice.level >= get_HighestSpellLevel()\">+</button>\r\n                                        </span>\r\n                                        <p>\r\n                                            During your daily preparations, choose any one spell from your book of\r\n                                            occult spells. If that spell is already in your spell repertoire, you can\r\n                                            treat it as an additional signature spell that day. If it isn't in your\r\n                                            repertoire, treat it as though it were until your next daily preparations.\r\n                                        </p>\r\n                                        <p>\r\n                                            You may add all spells from your repertoire to this book for free, and you\r\n                                            can use the Occultism skill to Learn Spells (page 238) and add them to your\r\n                                            spellbook by paying the appropriate cost, similar to a wizard.\r\n                                        </p>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Esoteric Polymath -->\r\n                                <!-- Arcane Evolution -->\r\n                                <ng-container *ngIf=\"is_ArcaneEvolutionSpell()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Arcane Evolution</strong>\r\n                                        <span class=\"newrow left-aligned\">\r\n                                            <strong>Spell Level&nbsp;</strong>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(-1)\"\r\n                                                [disabled]=\"choice.level <= 1\">-</button>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(1)\"\r\n                                                [disabled]=\"choice.level >= get_HighestSpellLevel()\">+</button>\r\n                                        </span>\r\n                                        <p>\r\n                                            During your daily preparations, choose any one spell from your book of\r\n                                            arcane spells. If that spell is already in your spell repertoire, you can\r\n                                            treat it as an additional signature spell that day. If it isn't in your\r\n                                            repertoire, add it to your spell repertoire until the next time you prepare.\r\n                                        </p>\r\n                                        <p>\r\n                                            You may add all spells from your repertoire to this book for free, and you\r\n                                            can use the Arcana skill to Learn Spells (page 238) and add them to your\r\n                                            spellbook by paying the appropriate cost, similar to a wizard.\r\n                                        </p>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Arcane Evolution -->\r\n                                <!-- Occult Evolution -->\r\n                                <ng-container *ngIf=\"is_OccultEvolutionSpell()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Occult Evolution</strong>\r\n                                        <span class=\"newrow left-aligned\">\r\n                                            <strong>Spell Level&nbsp;</strong>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(-1)\"\r\n                                                [disabled]=\"choice.level <= 1\">-</button>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(1)\"\r\n                                                [disabled]=\"choice.level >= get_HighestSpellLevel()\">+</button>\r\n                                        </span>\r\n                                        <p>\r\n                                            Once per day, you can spend 1 minute to choose one mental occult spell you\r\n                                            don't know and add it to your spell repertoire. You lose this temporary\r\n                                            spell the next time you make your daily preparations (though you can use\r\n                                            this ability to add it again later).\r\n                                        </p>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Occult Evolution -->\r\n                                <!-- Crossblooded Evolution -->\r\n                                <ng-container\r\n                                    *ngFor=\"let crossbloodedEvolutionAllowed of [get_CrossbloodedEvolutionAllowed()]; trackBy: trackByIndex\">\r\n                                    <ng-container *ngIf=\"crossbloodedEvolutionAllowed\">\r\n                                        <div class=\"list-item\">\r\n                                            <strong><i class='ra ra-zigzag-leaf'></i>&nbsp;Crossblooded\r\n                                                Evolution</strong>\r\n                                            <div class=\"newrow\"\r\n                                                *ngIf=\"get_CrossbloodedEvolutionUnlocked(choice.level) && !choice.crossbloodedEvolution\">\r\n                                                A Crossblooded Evolution spell has already been assigned for this level.\r\n                                            </div>\r\n                                            <div class=\"newrow\"\r\n                                                *ngIf=\"crossbloodedEvolutionAllowed > 1 && get_CrossbloodedEvolutionUnlocked() >= crossbloodedEvolutionAllowed && !choice.crossbloodedEvolution\">\r\n                                                The total maximum of {{crossbloodedEvolutionAllowed}} Crossblooded\r\n                                                Evolution spells has already been assigned.\r\n                                            </div>\r\n                                            <div class=\"newrow\"\r\n                                                *ngIf=\"crossbloodedEvolutionAllowed == 1 && get_CrossbloodedEvolutionUnlocked() >= crossbloodedEvolutionAllowed && !choice.crossbloodedEvolution\">\r\n                                                The Crossblooded Evolution spell has already been assigned.\r\n                                            </div>\r\n                                            <div class=\"newrow gridicon-fullsizebox\"\r\n                                                *ngIf=\"choice.crossbloodedEvolution || (!get_CrossbloodedEvolutionUnlocked(choice.level) && get_CrossbloodedEvolutionUnlocked() < crossbloodedEvolutionAllowed)\">\r\n                                                <input class=\"character-choice\" id=\"{{choice.id}}crossbloodedEvolution\"\r\n                                                    type=\"checkbox\" [(ngModel)]=\"choice.crossbloodedEvolution\"\r\n                                                    (ngModelChange)=\"on_CrossbloodedEvolution()\">\r\n                                                <label for=\"{{choice.id}}crossbloodedEvolution\">\r\n                                                    <strong>\r\n                                                        Allow a spell from another tradition in this choice.\r\n                                                    </strong>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                                <!-- End Crossblooded Evolution -->\r\n                                <div class=\"list-item\" *ngIf=\"!available && !choice.spells.length\">\r\n                                    <span>There are no spell slots available in this choice.</span>\r\n                                </div>\r\n                                <div class=\"list-item\" *ngIf=\"available && !availableSpells?.length\">\r\n                                    <span>\r\n                                        No available spell matches the requirements of this spell choice, or no spells\r\n                                        are available.\r\n                                    </span>\r\n                                    <span *ngIf=\"!allowHeightened\">\r\n                                        More spells may be found if you allow heightened spells.\r\n                                    </span>\r\n                                </div>\r\n                                <ng-container *ngFor=\"let spell of availableSpells; trackBy:trackBySpellID;\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let taken of [get_SpellTakenByThis(spell.name)]; trackBy:trackByIndex\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let checked of [taken || get_SpellTakenThisLevel(spell)]; trackBy:trackByIndex\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let cannotTake of [cannotTake(spell)]; trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let spontaneousDisabled of [(cannotTake.length || available <= choice.spells.length) && !taken]; trackBy:trackByIndex\">\r\n                                                    <ng-template #SpellChoiceDetailTemplate>\r\n                                                        <div class=\"newrow\">\r\n                                                            <header class=\"spellHeader\">{{spell.name}} <app-actionIcons\r\n                                                                    [actionString]=\"spell.actions\"></app-actionIcons>\r\n                                                            </header>\r\n                                                            <!--Spontaneous: Choose/Remove button-->\r\n                                                            <div class=\"button newrow no-animation\"\r\n                                                                *ngIf=\"spellCasting?.castingType!='Prepared'\"\r\n                                                                [ngClass]=\"{'fancy-button':taken, 'disabled':spontaneousDisabled}\">\r\n                                                                <label>\r\n                                                                    <input type=\"checkbox\"\r\n                                                                        (change)=\"on_SpellTaken(spell.name, $event.target.checked, false)\"\r\n                                                                        [checked]=\"checked\"\r\n                                                                        [disabled]=\"spontaneousDisabled || get_LockedSpellTakenByThis(spell.name) || (checked && !taken)\"\r\n                                                                        hidden>\r\n                                                                    {{taken ? \"Remove\" : \"Choose\"}}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <!--Prepared and no spell combination or first spell of spell combination: plus/minus buttons-->\r\n                                                            <div class=\"newrow left-aligned\"\r\n                                                                *ngIf=\"spellCasting?.castingType == 'Prepared' && (!choice.spellCombination || (choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)))\">\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellTaken(spell.name, false, false)\"\r\n                                                                    [disabled]=\"!taken\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellTaken(spell.name, true, false)\"\r\n                                                                    [disabled]=\"cannotTake.length || choice.spells.length >= available || (taken && choice.level == 0 && !choice.dynamicLevel)\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                                <strong>\r\n                                                                    {{taken}} prepared\r\n                                                                    <span\r\n                                                                        *ngIf=\"choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)\">&nbsp;as\r\n                                                                        first spell combination spell</span>\r\n                                                                </strong>\r\n                                                            </div>\r\n                                                            <!--Prepared and spell combination: plus/minus buttons-->\r\n                                                            <div class=\"newrow left-aligned\"\r\n                                                                *ngIf=\"spellCasting?.castingType == 'Prepared' && choice.spellCombination && choice.spells.length && choice.spells[0].name != spell.name && (!choice.spells[0].combinationSpellName || choice.spells[0].combinationSpellName == spell.name)\">\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellCombinationTaken(spell.name, false)\"\r\n                                                                    [disabled]=\"!taken\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellCombinationTaken(spell.name, true)\"\r\n                                                                    [disabled]=\"cannotTake.length || (choice.spells.length >= available && choice.spells[0]?.combinationSpellName)\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                                <strong>\r\n                                                                    {{taken}} prepared as second spell combination spell\r\n                                                                </strong>\r\n                                                            </div>\r\n                                                            <div class=\"newrow left-aligned\">\r\n                                                                <cite [ngbPopover]=\"reason.explain\" class=\"problem\"\r\n                                                                    *ngFor=\"let reason of cannotTake; trackBy:trackByIndex;\">\r\n                                                                    {{reason.reason}}\r\n                                                                </cite>\r\n                                                            </div>\r\n                                                            <app-spell [spell]=\"spell\" [spellLevel]=\"level\"></app-spell>\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                                        [ngClass]=\"{'selected':taken, 'unavailable':cannotTake.length}\">\r\n                                                        <!--Spontaneous: Checkbox-->\r\n                                                        <input class=\"character-choice\" id=\"{{choice.id+spell.name}}\"\r\n                                                            *ngIf=\"spellCasting?.castingType!='Prepared'\"\r\n                                                            type=\"checkbox\"\r\n                                                            (change)=\"on_SpellTaken(spell.name, $event.target.checked, false)\"\r\n                                                            [checked]=\"checked\"\r\n                                                            [disabled]=\"spontaneousDisabled || get_LockedSpellTakenByThis(spell.name) || (checked && !taken)\">\r\n                                                        <!--Prepared and no spell combination: plus/minus buttons-->\r\n                                                        <span\r\n                                                            *ngIf=\"spellCasting?.castingType == 'Prepared' && (!choice.spellCombination || (choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)))\">\r\n                                                            <span\r\n                                                                *ngIf=\"choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)\">1&nbsp;</span>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellTaken(spell.name, false, false)\"\r\n                                                                [disabled]=\"!taken\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellTaken(spell.name, true, false)\"\r\n                                                                [disabled]=\"cannotTake.length || choice.spells.length >= available || (taken && choice.level == 0 && !choice.dynamicLevel)\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                        </span>\r\n                                                        <!--Prepared and spell combination: plus/minus buttons-->\r\n                                                        <span\r\n                                                            *ngIf=\"spellCasting?.castingType == 'Prepared' && choice.spellCombination && choice.spells.length && choice.spells[0].name != spell.name && (!choice.spells[0].combinationSpellName || choice.spells[0].combinationSpellName == spell.name)\">\r\n                                                            <span\r\n                                                                *ngIf=\"choice.spellCombination && choice.spells.length && (!choice.spells[0].combinationSpellName || choice.spells[0].combinationSpellName == spell.name)\">2&nbsp;</span>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellCombinationTaken(spell.name, false)\"\r\n                                                                [disabled]=\"!taken\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellCombinationTaken(spell.name, true)\"\r\n                                                                [disabled]=\"cannotTake.length || (choice.spells.length >= available && choice.spells[0]?.combinationSpellName)\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                        </span>\r\n                                                        <div class=\"gridicon-fullsizebox\"\r\n                                                            #SpellChoiceDetailPopover=\"ngbPopover\"\r\n                                                            [ngbPopover]=\"SpellChoiceDetailTemplate\" triggers=\"click\">\r\n                                                            <app-gridIcon [title]=\"spell.name\"\r\n                                                                [detail]=\"spell.traits.includes('Rare') ? 'Rare' : (spell.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                            </app-gridIcon>\r\n                                                            <header class=\"sectionHeader\">\r\n                                                                <!-- Signature Spells -->\r\n                                                                <ng-container *ngIf=\"taken && signatureSpellsAllowed\">\r\n                                                                    <div class=\"list-item newrow lower\"\r\n                                                                        *ngFor=\"let takenSpell of [get_TakenSpell(spell.name)]\">\r\n                                                                        <span [ngbTooltip]=\"reason\"\r\n                                                                            *ngFor=\"let reason of [get_CannotChooseSignatureSpell(signatureSpellsAllowed, takenSpell)]; trackBy:trackByIndex;\">\r\n                                                                            <input\r\n                                                                                id=\"{{choice.id+spell.name}}signaturespell\"\r\n                                                                                type=\"checkbox\"\r\n                                                                                [(ngModel)]=\"takenSpell.signatureSpell\"\r\n                                                                                (ngModelChange)=\"on_SignatureSpell()\"\r\n                                                                                [disabled]=\"reason != ''\">\r\n                                                                            <label\r\n                                                                                for=\"{{choice.id+spell.name}}signaturespell\">\r\n                                                                                &nbsp;\r\n                                                                                <i class='bi-stars'></i>\r\n                                                                                &nbsp;Choose this spell as a Signature\r\n                                                                                Spell\r\n                                                                            </label>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </ng-container>\r\n                                                                <!-- End Signature Spells -->\r\n                                                                <span\r\n                                                                    [ngbTooltip]=\"(!SpellChoiceDetailPopover.isOpen()) ? spell.shortDesc : ''\"\r\n                                                                    triggers=\"hover\" openDelay=100>\r\n                                                                    {{(spellCasting?.castingType == 'Prepared' && taken)\r\n                                                                    ? \" \" + taken + \" \" : \"\"}}{{spell.name}}&nbsp;\r\n                                                                </span>\r\n                                                                <cite>Level {{spell.levelreq}}</cite>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"spell.traits.includes('Rare')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\">Rare</cite>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"spell.traits.includes('Uncommon')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\">Uncommon</cite>\r\n                                                            </header>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { ItemCollection } from './ItemCollection';\r\nimport { Health } from './Health';\r\nimport { Speed } from './Speed';\r\nimport { Bulk } from './Bulk';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Skill } from './Skill';\r\n\r\nexport class Creature {\r\n    public name: string = \"\";\r\n    public id = uuidv1();\r\n    public type: string = \"\";\r\n    public level: number = 1;\r\n    public customSkills: Skill[] = [];\r\n    public health: Health = new Health();\r\n    public conditions: ConditionGain[] = [];\r\n    public effects: EffectGain[] = [];\r\n    public inventories: ItemCollection[] = [new ItemCollection()];\r\n    public speeds: Speed[] = [new Speed(\"Speed\"), new Speed(\"Land Speed\")];\r\n    public bulk: Bulk = new Bulk();\r\n    public notes: string = \"\";\r\n}","import { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Item } from './Item';\r\nimport { Hint } from './Hint';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Trait {\r\n    public desc: string = \"\";\r\n    public dynamic: boolean = false;\r\n    public name: string = \"\";\r\n    public hints: Hint[] = [];\r\n    public specialModifier: string[] = [];\r\n    //Return all equipped items that have this trait, or alternatively only their names.\r\n    //Some trait instances have information after the trait name, so we allow traits that include this trait's name as long as this trait is dynamic.\r\n    haveOn(creature: Creature, namesOnly: boolean = false) { \r\n        let filteredItems: Item[] = []\r\n        creature.inventories.forEach(inventory => {\r\n            filteredItems.push(...inventory.allEquipment()\r\n                .filter(item =>\r\n                    item.equipped &&\r\n                    item.traits\r\n                        .find(trait =>\r\n                            this.name == trait ||\r\n                            (\r\n                                trait.includes(this.name) &&\r\n                                this.dynamic\r\n                            )\r\n                        )\r\n                    )\r\n                );\r\n        });\r\n        if (namesOnly) {\r\n            return filteredItems.map(item => item.name);\r\n        } else {\r\n            return filteredItems;\r\n        }\r\n    };\r\n}","\r\nexport class Material {\r\n    public readonly _className: string = this.constructor.name;\r\n    public bulkPrice: number = 0;\r\n    public bulkReduction: number = 0;\r\n    public craftRequirement: string = \"\";\r\n    //This is how high your crafting level needs to be to craft with this material.\r\n    public craftingRequirement: number = 4;\r\n    public desc: string = \"\";\r\n    public level: number = 0;\r\n    public name: string = \"\";\r\n    public price: number = 0;\r\n    public runeLimit: number = 0;\r\n    public traits: string[] = [];\r\n    public extraRune: number = 0;\r\n}","import { Equipment } from './Equipment';\r\n\r\nexport class AdventuringGear extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Adventuring Gear should be type \"adventuringgear\" to be found in the database\r\n    readonly type = \"adventuringgear\";\r\n    //Adventuring Gear can usually not be equipped or invested, but with exceptions.\r\n    equippable = false;\r\n    //How many hands need to be free to use this item?\r\n    public hands: string = \"\";\r\n    //Does this item count for the \"Armored Skirt\" functionality?\r\n    public isArmoredSkirt: boolean = false;\r\n    //Some Items get bought in stacks. Stack defines how many you buy at once,\r\n    //and how many make up one instance of the items Bulk.\r\n    public stack: number = 1;\r\n    //How is this item used/worn/applied? Example: held in 1 hand\r\n    public usage: string = \"\";\r\n}","import { EffectGain } from './EffectGain';\r\n\r\nexport class Hint {\r\n    //We want the active hints to be reset when loading characters. Everything listed in neversave gets deleted during saving.\r\n    public readonly neversave: string[] = [\r\n        \"active\",\r\n        \"active2\",\r\n        \"active3\",\r\n        \"active4\",\r\n        \"active5\"\r\n    ];\r\n    public desc: string = \"\";\r\n    public showon: string = \"\";\r\n    public effects: EffectGain[] = [];\r\n    public active: boolean = false;\r\n    public active2: boolean = false;\r\n    public active3: boolean = false;\r\n    public active4: boolean = false;\r\n    public active5: boolean = false;\r\n    //If extraActivations is 1 through 4, one or two more activation boxes are shown.\r\n    public extraActivations: number = 0;\r\n}\r\n","import { Effect } from './Effect';\r\nimport { Hint } from './Hint';\r\n\r\nexport class Specialization {\r\n    public desc: string = \"\";\r\n    public effects: Effect[] = [];\r\n    public hints: Hint[] = [];\r\n    public name: string = \"\";\r\n    public type: string = \"\";\r\n}\r\n","import { Activity } from './Activity';\r\nimport { SpellCast } from './SpellCast';\r\n\r\n//ItemActivity combines Activity and ActivityGain, so that an item can have its own contained activity.\r\nexport class ItemActivity extends Activity {\r\n    public readonly _className: string = this.constructor.name;\r\n    public active: boolean = false;\r\n    public activeCooldown: number = 0;\r\n    public chargesUsed: number = 0;\r\n    //If you use a charge of an activity, and it has a sharedChargesID, all activities on the same item with the same sharedChargesID will also use a charge.\r\n    public sharedChargesID: number = 0;\r\n    //If you activate an activity, and it has an exclusiveActivityID, all activities on the same item with the same sharedChargesID are automatically deactivated.\r\n    public exclusiveActivityID: number = 0;\r\n    //The duration is copied from the activity when activated.\r\n    public duration: number = 0;\r\n    public level: number = 0;\r\n    public source: string = \"\";\r\n    //Resonant item activities are only available when the item is slotted into a wayfinder.\r\n    public resonant: boolean = false;\r\n    public data: {name:string, value:any}[] = [];\r\n    //We copy the activities castSpells here whenever we activate it, so we can store the item ID.\r\n    public castSpells: SpellCast[] = [];\r\n    //If the activity causes a condition, in order to select a choice from the activity beforehand, the choice is saved here for each condition.\r\n    public effectChoices: string[] = [];\r\n    //If the activity casts a spell, in order to select a choice from the spell before casting it, the choice is saved here for each condition for each spell, recursively.\r\n    public spellEffectChoices: string[][] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { ItemsService } from '../items.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { Weapon } from '../Weapon';\r\nimport { Armor } from '../Armor';\r\nimport { Shield } from '../Shield';\r\nimport { WornItem } from '../WornItem';\r\nimport { HeldItem } from '../HeldItem';\r\nimport { AlchemicalElixir } from '../AlchemicalElixir';\r\nimport { OtherConsumable } from '../OtherConsumable';\r\nimport { AdventuringGear } from '../AdventuringGear';\r\nimport { Item } from '../Item';\r\nimport { Consumable } from '../Consumable';\r\nimport { Equipment } from '../Equipment';\r\nimport { Potion } from '../Potion';\r\nimport { Ammunition } from '../Ammunition';\r\nimport { Scroll } from '../Scroll';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { ItemCollection } from '../ItemCollection';\r\nimport { OtherConsumableBomb } from '../OtherConsumableBomb';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-items',\r\n    templateUrl: './items.component.html',\r\n    styleUrls: ['./items.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ItemsComponent implements OnInit {\r\n\r\n    private showList: string = \"\";\r\n    private showItem: number = 0;\r\n    public id: number = 0;\r\n    public hover: number = 0;\r\n    public wordFilter: string = \"\";\r\n    public sorting: \"level\" | \"name\" = \"level\";\r\n    public creature: string = \"Character\";\r\n    public newItemType: string = \"\";\r\n    public newItem: Equipment | Consumable = null;\r\n    public cashP: number = 0;\r\n    public cashG: number = 0;\r\n    public cashS: number = 0;\r\n    public cashC: number = 0;\r\n    public purpose: \"items\" | \"formulas\" | \"scrollsavant\" | \"createcustomitem\" = \"items\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private itemsService: ItemsService,\r\n        private characterService: CharacterService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(type: string) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    toggle_Item(id: number) {\r\n        if (this.showItem == id) {\r\n            this.showItem = 0;\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    toggle_Purpose(purpose: \"items\" | \"formulas\" | \"scrollsavant\" | \"createcustomitem\") {\r\n        this.purpose = purpose;\r\n    }\r\n\r\n    get_ShowPurpose() {\r\n        return this.purpose;\r\n    }\r\n\r\n    set_ItemsMenuTarget() {\r\n        this.characterService.set_ItemsMenuTarget(this.creature);\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.characterService.get_ItemsMenuState();\r\n    }\r\n\r\n    get_ItemsMenuTarget() {\r\n        this.creature = this.characterService.get_ItemsMenuTarget();\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList) {\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = \"All\";\r\n        }\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    toggleItemsMenu() {\r\n        this.characterService.toggle_Menu(\"items\");\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_SortByName(obj: Item[]) {\r\n        return obj.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    have_Funds(sum: number = 0) {\r\n        let character = this.characterService.get_Character();\r\n        if (!sum) {\r\n            sum = (this.cashP * 1000) + (this.cashG * 100) + (this.cashS * 10) + (this.cashC);\r\n        }\r\n        let funds = (character.cash[0] * 1000) + (character.cash[1] * 100) + (character.cash[2] * 10) + (character.cash[3]);\r\n        if (sum <= funds) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number = 0, changeafter: boolean = false) {\r\n        this.characterService.change_Cash(multiplier, sum, this.cashP, this.cashG, this.cashS, this.cashC);\r\n        if (changeafter) {\r\n            this.characterService.set_Changed(\"inventory\");\r\n        }\r\n    }\r\n\r\n    get_Items(newIDs: boolean = false) {\r\n        if (newIDs) {\r\n            this.id = 0;\r\n        }\r\n        if (this.get_ShowPurpose() == \"formulas\") {\r\n            return this.itemsService.get_CraftingItems();\r\n        } else {\r\n            return this.itemsService.get_Items();\r\n        }\r\n\r\n    }\r\n\r\n    get_CopyItems(type: string) {\r\n        return this.itemsService.get_CleanItems()[type].filter((item: Item) => !item.hide).sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_InventoryItems(type: string) {\r\n        let items = [];\r\n        this.characterService.get_Character().inventories.map(inventory => inventory[type]).forEach(itemSet => {\r\n            items.push(...itemSet);\r\n        })\r\n        return items.filter(item => !item.hide).sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_VisibleItems(items: Item[], creatureType: string = \"\") {\r\n        let casting: SpellCasting;\r\n        let character = this.get_Character();\r\n        if (this.purpose == \"scrollsavant\") {\r\n            casting = this.get_ScrollSavantCasting();\r\n        }\r\n        return items.filter((item: Item) =>\r\n            (\r\n                //Show companion items in the companion list and not in the character list.\r\n                (creatureType == \"Character\" && !item.traits.includes(\"Companion\")) ||\r\n                (creatureType == \"Companion\" && item.traits.includes(\"Companion\"))\r\n            ) &&\r\n            !item.hide &&\r\n            (\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        item.name.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.desc.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.traits.filter(trait => trait.toLowerCase().includes(this.wordFilter.toLowerCase())).length\r\n                    )\r\n                )\r\n            ) &&\r\n            (this.purpose == \"formulas\" ? item.craftable : true) &&\r\n            (\r\n                this.purpose == \"scrollsavant\" ?\r\n                    (\r\n                        creatureType == \"Character\" &&\r\n                        item.type == \"scrolls\" &&\r\n                        (item as Scroll).storedSpells[0]?.level <= character.get_SpellLevel(character.level) - 2 &&\r\n                        casting && !casting.scrollSavant.find(scroll => scroll.refId == item.id)\r\n                    )\r\n                    : true\r\n            )\r\n        ).sort((a, b) => {\r\n            if ((a.level / 100) + a.name > (b.level / 100) + b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if ((a.level / 100) + a.name < (b.level / 100) + b.name) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }).sort((a, b) => {\r\n            if (a[this.sorting] > b[this.sorting]) {\r\n                return 1;\r\n            }\r\n            if (a[this.sorting] < b[this.sorting]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    can_ApplyTalismans(item: Item) {\r\n        return ([\"armors\", \"shields\", \"weapons\"].includes(item.type));\r\n    }\r\n\r\n    can_ChangeMaterial(item: Item) {\r\n        return ([\"armors\", \"shields\", \"weapons\"].includes(item.type));\r\n    }\r\n\r\n    grant_Item(creature: string = \"Character\", item: Item, pay: boolean = false) {\r\n        if (pay && (item[\"get_Price\"] ? item[\"get_Price\"](this.itemsService) : item.price)) {\r\n            this.change_Cash(-1, item.price);\r\n        }\r\n        let amount = 1;\r\n        if (item[\"stack\"]) {\r\n            amount = item[\"stack\"];\r\n        }\r\n        if (creature == \"Character\") {\r\n            this.characterService.grant_InventoryItem(this.characterService.get_Character(), this.characterService.get_Character().inventories[0], item, false, true, true, amount);\r\n        } else if (creature == \"Companion\") {\r\n            this.characterService.grant_InventoryItem(this.characterService.get_Companion(), this.characterService.get_Companion().inventories[0], item, false, true, true, amount);\r\n        }\r\n\r\n    }\r\n\r\n    get_NewItemFilter() {\r\n        return [{ name: '', key: '' }].concat(this.get_Items().names.filter(name =>\r\n            ![\r\n                \"weaponrunes\",\r\n                \"alchemicalbombs\",\r\n                \"armorrunes\",\r\n                \"alchemicaltools\",\r\n                \"scrolls\",\r\n                \"alchemicalpoisons\",\r\n                \"oils\",\r\n                \"talismans\",\r\n                \"snares\",\r\n                \"wands\"\r\n            ].includes(name.key)));\r\n    }\r\n\r\n    initialize_NewItem() {\r\n        switch (this.newItemType) {\r\n            case \"weapons\":\r\n                this.newItem = new Weapon();\r\n                break;\r\n            case \"armors\":\r\n                this.newItem = new Armor();\r\n                break;\r\n            case \"shields\":\r\n                this.newItem = new Shield();\r\n                break;\r\n            case \"wornitems\":\r\n                this.newItem = new WornItem();\r\n                break;\r\n            case \"helditems\":\r\n                this.newItem = new HeldItem();\r\n                break;\r\n            case \"alchemicalelixirs\":\r\n                this.newItem = new AlchemicalElixir();\r\n                break;\r\n            case \"potions\":\r\n                this.newItem = new Potion();\r\n                break;\r\n            case \"otherconsumables\":\r\n                this.newItem = new OtherConsumable();\r\n                break;\r\n            case \"otherconsumablesbombs\":\r\n                this.newItem = new OtherConsumableBomb();\r\n                break;\r\n            case \"adventuringgear\":\r\n                this.newItem = new AdventuringGear();\r\n                break;\r\n            case \"ammunition\":\r\n                this.newItem = new Ammunition();\r\n                break;\r\n            default:\r\n                this.newItem = null;\r\n        }\r\n        if (this.newItem) {\r\n            this.newItem = this.itemsService.initialize_Item(this.newItem, true, false, false)\r\n        }\r\n    }\r\n\r\n    get_NewItemProperties() {\r\n        function get_PropertyData(key: string, itemsService: ItemsService) {\r\n            return itemsService.get_ItemProperties().filter(property => !property.parent && property.key == key)[0];\r\n        }\r\n        return Object.keys(this.newItem).map((key) => get_PropertyData(key, this.itemsService)).filter(property => property != undefined).sort((a, b) => {\r\n            if (a.priority > b.priority) {\r\n                return 1;\r\n            }\r\n            if (a.priority < b.priority) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => {\r\n            if (a.group > b.group) {\r\n                return 1;\r\n            }\r\n            if (a.group < b.group) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    copy_Item(item: Equipment | Consumable) {\r\n        this.newItem = this.itemsService.initialize_Item(JSON.parse(JSON.stringify(item)))\r\n    }\r\n\r\n    grant_CustomItem(creature: string = \"Character\") {\r\n        if (this.newItem != null) {\r\n            this.newItem.id = \"\";\r\n            this.grant_Item(creature, this.newItem);\r\n        }\r\n    }\r\n\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.get_Character().get_FormulasLearned(id, source);\r\n    }\r\n\r\n    learn_Formula(item: Item, source: string) {\r\n        this.get_Character().learn_Formula(item, source);\r\n    }\r\n\r\n    unlearn_Formula(item: Item) {\r\n        this.get_Character().unlearn_Formula(item);\r\n    }\r\n\r\n    get_LearnedFormulaSource(source: string) {\r\n        switch (source) {\r\n            case \"alchemicalcrafting\":\r\n                return \"(learned via Alchemical Crafting)\";\r\n            case \"magicalcrafting\":\r\n                return \"(learned via Magical Crafting)\";\r\n            case \"snarecrafting\":\r\n                return \"(learned via Snare Crafting)\";\r\n            case \"snarespecialist\":\r\n                return \"(learned via Snare Specialist)\";\r\n            case \"other\":\r\n                return \"(bought, copied, invented or reverse engineered)\";\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length;\r\n    }\r\n\r\n    get_LearningAvailable() {\r\n        let result: string = \"\";\r\n        if (this.have_Feat(\"Alchemical Crafting\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'alchemicalcrafting').length;\r\n            let available = 4;\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common 1st-level alchemical items via Alchemical Crafting\";\r\n        }\r\n        if (this.have_Feat(\"Magical Crafting\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'magicalcrafting').length;\r\n            let available = 4;\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common magic items of 2nd level or lower via Magical Crafting\";\r\n        }\r\n        if (this.have_Feat(\"Snare Crafting\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarecrafting').length;\r\n            let available = 4;\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common snares via Snare Crafting\";\r\n        }\r\n        if (this.have_Feat(\"Snare Specialist\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarespecialist').length;\r\n            let available = 0;\r\n            let character = this.get_Character();\r\n            let crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n            if (crafting >= 4) {\r\n                available += 3;\r\n            }\r\n            if (crafting >= 6) {\r\n                available += 3;\r\n            }\r\n            if (crafting >= 8) {\r\n                available += 3;\r\n            }\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common or uncommon snares via Snare Specialist\";\r\n        }\r\n        if (result) {\r\n            result = \"You can currently learn the following number of formulas through feats:\\n\" + result;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    can_Learn(item: Item, source: string) {\r\n        if (source == \"alchemicalcrafting\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'alchemicalcrafting').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Alchemical Crafting\")) {\r\n                available += 4;\r\n            }\r\n            return item.level == 1 && available > learned && !item.traits.includes(\"Uncommon\") && !item.traits.includes(\"Rare\");\r\n        }\r\n        if (source == \"magicalcrafting\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'magicalcrafting').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Magical Crafting\")) {\r\n                available += 4;\r\n            }\r\n            return item.level <= 2 && available > learned && !item.traits.includes(\"Uncommon\") && !item.traits.includes(\"Rare\");\r\n        }\r\n        if (source == \"snarecrafting\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarecrafting').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Snare Crafting\")) {\r\n                available += 4;\r\n            }\r\n            return available > learned && !item.traits.includes(\"Uncommon\") && !item.traits.includes(\"Rare\");\r\n        }\r\n        if (source == \"snarespecialist\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarespecialist').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Snare Specialist\")) {\r\n                let character = this.get_Character();\r\n                let crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n                if (crafting >= 4) {\r\n                    available += 3;\r\n                }\r\n                if (crafting >= 6) {\r\n                    available += 3;\r\n                }\r\n                if (crafting >= 8) {\r\n                    available += 3;\r\n                }\r\n            }\r\n            return available > learned && !item.traits.includes(\"Rare\");\r\n        }\r\n    }\r\n\r\n    get_ScrollSavantCasting() {\r\n        return this.get_Character().class.spellCasting\r\n            .find(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\" && casting.tradition == \"Arcane\");\r\n    }\r\n\r\n    get_ScrollSavantDCLevel() {\r\n        let character = this.get_Character();\r\n        return Math.max(...this.characterService.get_Skills(character)\r\n            .filter(skill => skill.name.includes(\"Arcane Spell DC\"))\r\n            .map(skill => skill.level(character, this.characterService, character.level)), 0)\r\n    }\r\n\r\n    get_ScrollSavantAvailable() {\r\n        let casting = this.get_ScrollSavantCasting();\r\n        if (casting) {\r\n            let result: string = \"\";\r\n            if (this.have_Feat(\"Scroll Savant\")) {\r\n                let available = this.get_ScrollSavantDCLevel() / 2;\r\n                //Remove all prepared scrolls that are of a higher level than allowed.\r\n                casting.scrollSavant\r\n                    .filter(scroll => scroll.storedSpells[0].level > this.get_Character().get_SpellLevel(this.get_Character().level))\r\n                    .forEach(scroll => {\r\n                        scroll.amount = 0;\r\n                    });\r\n                casting.scrollSavant = casting.scrollSavant.filter(scroll => scroll.amount);\r\n                while (casting.scrollSavant.length > available) {\r\n                    casting.scrollSavant.pop();\r\n                }\r\n                let prepared: number = casting.scrollSavant.length;\r\n                if (available) {\r\n                    result = \"You can currently prepare \" + (available - prepared) + \" of \" + available + \" temporary scrolls of different spell levels up to level \" + (this.get_Character().get_SpellLevel(this.get_Character().level) - 2) + \".\";\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    prepare_Scroll(scroll: Item) {\r\n        let casting = this.get_ScrollSavantCasting();\r\n        let tempInv = new ItemCollection();\r\n        let newScroll = this.characterService.grant_InventoryItem(this.characterService.get_Character(), tempInv, scroll, false, false, false, 1) as Scroll;\r\n        newScroll.expiration = -2;\r\n        newScroll.price = 0;\r\n        newScroll.storedSpells.forEach(spell => {\r\n            spell.spellBookOnly = true;\r\n            spell.spells.length = 0;\r\n        });\r\n        casting.scrollSavant.push(Object.assign(new Scroll(), newScroll));\r\n    }\r\n\r\n    unprepare_Scroll(scroll: Item, casting: SpellCasting) {\r\n        casting.scrollSavant = casting.scrollSavant.filter(oldScroll => oldScroll !== scroll);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.itemsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"items\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"items\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n}","<div id=\"items\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleItemsMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"get_ItemsMenuState()=='in'\">\r\n        <div class=\"list-item\">\r\n            <strong>Find (in Name, Description or Traits)</strong>\r\n            <span>\r\n                <input id=\"itemsWordFilter\" type=text [(ngModel)]=\"wordFilter\" (ngModelChange)=check_Filter() />\r\n                <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>Sort by</strong>\r\n            <select [(ngModel)]=\"sorting\">\r\n                <option *ngFor=\"let sort of ['Name','Level']\" [ngValue]=\"sort.toLowerCase()\">\r\n                    {{sort}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"list-item\" *ngIf=\"get_ItemsMenuTarget()\">\r\n            <strong>Give items to</strong>\r\n            <select [(ngModel)]=\"creature\" (ngModelChange)=\"set_ItemsMenuTarget()\">\r\n                <option *ngFor=\"let target of ['Character','Companion']; trackBy:trackByIndex;\" [ngValue]=\"target\">\r\n                    {{target}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"itembox-inner\">\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <div class=\"value\">{{get_Character().cash[0]}}</div>\r\n                    <strong>Gold</strong>\r\n                    <div class=\"value\">{{get_Character().cash[1]}}</div>\r\n                    <strong>Silver</strong>\r\n                    <div class=\"value\">{{get_Character().cash[2]}}</div>\r\n                    <strong>Copper</strong>\r\n                    <div class=\"value center-aligned\">{{get_Character().cash[3]}}</div>\r\n                </div>\r\n            </div>\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashP\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Gold</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashG\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Silver</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashS\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Copper</strong>\r\n                    <input class=\"number4 center-aligned\" type=\"number\" [(ngModel)]=\"cashC\"\r\n                        (keypress)=\"numbersOnly($event)\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span>\r\n                        <button (click)=\"change_Cash(1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\">Gain</button>\r\n                    </span>\r\n                    <span>\r\n                        <button (click)=\"change_Cash(-1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\"\r\n                            [disabled]=\"!have_Funds()\">Spend</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"list-item\">\r\n                <button (click)=\"toggle_Purpose('items')\" [ngClass]=\"{'fancy-button':get_ShowPurpose()=='items'}\">Get\r\n                    Items</button>\r\n                <button (click)=\"toggle_Purpose('scrollsavant')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='scrollsavant'}\"\r\n                    *ngIf=\"have_Feat('Scroll Savant')\">Scroll Savant</button>\r\n                <button (click)=\"toggle_Purpose('createcustomitem')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='createcustomitem'}\">Create Custom Item</button>\r\n                <button (click)=\"toggle_Purpose('formulas')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='formulas'}\">Learn Formulas</button>\r\n            </div>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'ItemStore'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true>\r\n            </app-tags>\r\n            <ng-container *ngFor=\"let items of [get_Items(true)]; trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let creatureType of ['Character','Companion']\">\r\n                    <header class=\"sectionHeader\" *ngIf=\"get_ShowPurpose()=='items'\">Get {{creatureType == \"Companion\" ?\r\n                        \"Animal Companion \" : \"\"}}Items\r\n                    </header>\r\n                    <header class=\"sectionHeader\"\r\n                        *ngIf=\"get_ShowPurpose()=='scrollsavant' && creatureType == 'Character'\">Prepare Scrolls\r\n                    </header>\r\n                    <header class=\"sectionHeader\" *ngIf=\"get_ShowPurpose()=='formulas'\">Learn {{creatureType ==\r\n                        \"Companion\" ? \"Animal Companion \" : \"\"}}Formulas\r\n                    </header>\r\n                    <!--Formulas available through feats-->\r\n                    <ng-container *ngIf=\"get_ShowPurpose()=='formulas' && creatureType == 'Character'\">\r\n                        <ng-container *ngFor=\"let descblock of [get_LearningAvailable()]; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                        <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n                                    </ul>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <!--End available formulas-->\r\n                    <!--Scroll Savant-->\r\n                    <ng-container *ngIf=\"get_ShowPurpose()=='scrollsavant' && creatureType == 'Character'\">\r\n                        <ng-container *ngFor=\"let casting of [get_ScrollSavantCasting()]; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let descblock of [get_ScrollSavantAvailable()]; trackBy:trackByIndex;\">\r\n                                <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                    <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                        <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                            <button class=\"list-item fancy-button\">\r\n                                <header class=\"sectionHeader\">Prepared Scrolls</header>\r\n                            </button>\r\n                            <div class=\"list-item\" *ngIf=\"!casting.scrollSavant.length\">\r\n                                No scrolls prepared.\r\n                            </div>\r\n                            <div class=\"list-item\" *ngIf=\"casting.scrollSavant.length\">\r\n                                <ng-container\r\n                                    *ngFor=\"let scroll of get_SortByName(casting.scrollSavant); trackBy:trackByIndex;\">\r\n                                    0.3=........... <div class=\"list-item\"\r\n                                        *ngFor=\"let inventoryID of ['scrollsavant'+scroll.id]; trackBy:trackByIndex;\">\r\n                                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                                            (click)=\"toggle_Item(inventoryID)\">\r\n                                            <span>{{(scroll.get_Name) ? scroll.get_Name() : scroll.name}}</span>\r\n                                            <span>{{(scroll.level) ? \"Level \"+scroll.level :\r\n                                                \"&nbsp;\"}}</span>\r\n                                        </button>\r\n                                        <div class=\"list-item sublist lower fancy-list\"\r\n                                            *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"unprepare_Scroll(scroll, casting)\">\r\n                                                Deselect from daily creation\r\n                                            </button>\r\n                                            <app-item [item]=scroll [itemStore]=true></app-item>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <!--End Scroll Savant-->\r\n                    <ng-container *ngIf=\"get_ShowPurpose()!='createcustomitem'\">\r\n                        <ng-container *ngFor=\"let itemSet of items.names; let index = index; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let listID of [creatureType+(index*1000+1000)]; trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let visibleItems of [get_VisibleItems(items[itemSet.key], creatureType)]; trackBy:trackByIndex;\">\r\n                                    <button class=\"list-item\"\r\n                                        [ngStyle]=\"{'display':!visibleItems.length ? 'none' : 'flex' }\"\r\n                                        (click)=\"toggle_List(listID)\">\r\n                                        <header class=\"sectionHeader\">{{get_ShowPurpose()=='scrollsavant' ? \"Available \"\r\n                                            : \"\"}}{{itemSet.name}}</header>\r\n                                    </button>\r\n                                    <div class=\"list-item\"\r\n                                        [ngStyle]=\"{'display':!visibleItems.length ? 'none' : 'flex' }\"\r\n                                        *ngIf=\"get_ShowList()==listID||get_ShowList()=='All'||get_ShowPurpose()=='scrollsavant'\">\r\n                                        <ng-container *ngFor=\"let item of visibleItems; trackBy:trackByIndex;\">\r\n                                            <div class=\"list-item\"\r\n                                                *ngFor=\"let inventoryID of [listID+item.id]; trackBy:trackByIndex;\">\r\n                                                <button class=\"newrow sublist-toggle\"\r\n                                                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='formulas' && get_FormulasLearned(item.id).length}\"\r\n                                                    (click)=\"toggle_Item(inventoryID)\">\r\n                                                    <span>{{(item.get_Name) ? item.get_Name() : item.name}}</span>\r\n                                                    <span *ngIf=\"item.type == 'armors'\">{{([\"Light Barding\",\r\n                                                        \"Heavy Barding\"] .includes(item.prof)) ? item.prof :\r\n                                                        item.prof.split(\" \")[0]}} {{item.group}} {{(item.type==\"armors\"\r\n                                                        && (![\"Unarmored Defense\",\"Light Barding\",\r\n                                                        \"Heavy Barding\"].includes(item.prof))) ? \"Armor\" : \"\"}}</span>\r\n                                                    <span *ngIf=\"item.type == 'weapons'\">{{(item.prof ==\r\n                                                        'Unarmed Attacks') ? item.prof : item.prof.substr(0,\r\n                                                        item.prof.length - 8)}} {{item.group}}</span>\r\n                                                    <span>{{(item.level) ? \"Level \"+item.level :\r\n                                                        \"&nbsp;\"}}</span>\r\n                                                </button>\r\n                                                <div class=\"list-item sublist lower\"\r\n                                                    [ngClass]=\"{'fancy-list':get_ShowPurpose()=='formulas' && get_FormulasLearned(item.id).length}\"\r\n                                                    *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                                    <ng-container *ngIf=\"get_ShowPurpose()=='items'\">\r\n                                                        <div class=\"list-item\" *ngIf=\"itemSet.name == 'Snares'\">\r\n                                                            Snares cannot be bought or sold. They must be crafted and\r\n                                                            are immediately deployed upon creation.\r\n                                                        </div>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"grant_Item(creature, item)\">\r\n                                                            Gift {{item.stack && item.stack > 1 ? item.stack+\" \" :\r\n                                                            \"\"}}to {{creature}}\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"grant_Item(creature, item, true)\"\r\n                                                            [disabled]=\"!have_Funds(get_Price(item)) || !get_Price(item)\"\r\n                                                            *ngIf=\"itemSet.name != 'Snares'\">\r\n                                                            Buy {{item.stack && item.stack > 1 ? item.stack+\" \" :\r\n                                                            \"\"}}for {{creature}}\r\n                                                        </button>\r\n                                                        <app-itemMaterial [item]=item [craftingStation]=\"false\"\r\n                                                            *ngIf=\"can_ChangeMaterial(item)\"></app-itemMaterial>\r\n                                                        <app-itemRunes [item]=item [itemStore]=true></app-itemRunes>\r\n                                                        <app-itemTalismans [item]=item [itemStore]=true\r\n                                                            *ngIf=\"can_ApplyTalismans(item)\"></app-itemTalismans>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"get_ShowPurpose()=='scrollsavant'\">\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"prepare_Scroll(item)\"\r\n                                                            [disabled]=\"get_ScrollSavantCasting().scrollSavant.length >= get_ScrollSavantDCLevel() / 2\">\r\n                                                            Select scroll for daily creation\r\n                                                        </button>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"get_ShowPurpose()=='formulas'\">\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'alchemicalcrafting')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'alchemicalcrafting')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Alchemical Crafting') && item.traits.includes('Alchemical')\">\r\n                                                            Learn formula via Alchemical Crafting\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'magicalcrafting')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'magicalcrafting')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Magical Crafting') && item.traits.includes('Magical')\">\r\n                                                            Learn formula via Magical Crafting\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'snarecrafting')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'snarecrafting')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Snare Crafting') && item.traits.includes('Snare')\">\r\n                                                            Learn formula via Snare Crafting\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'snarespecialist')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'snarespecialist')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Snare Specialist') && item.traits.includes('Snare')\">\r\n                                                            Learn formula via Snare Specialist\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'other')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length\"\r\n                                                            [ngbTooltip]=\"'You must manually expend the necessary cost to learn the formula this way.'\">\r\n                                                            Learn formula (buy, copy, invent or reverse engineer)\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"unlearn_Formula(item)\"\r\n                                                            *ngFor=\"let learned of get_FormulasLearned(item.id); trackBy:trackByIndex;\">\r\n                                                            Unlearn formula {{get_LearnedFormulaSource(learned.source)}}\r\n                                                        </button>\r\n                                                    </ng-container>\r\n                                                    <app-item [item]=item [itemStore]=true></app-item>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"get_ShowPurpose()=='createcustomitem'\">\r\n                    <header class=\"sectionHeader\">Create custom item</header>\r\n                    <ng-container *ngFor=\"let listID of [get_ID()*1000]; trackBy:trackByIndex;\">\r\n                        <div class=\"list-item\">\r\n                            <span><strong>Type</strong></span>\r\n                            <span><select [(ngModel)]=\"newItemType\" (ngModelChange)=\"initialize_NewItem()\">\r\n                                    <option *ngFor=\"let name of get_NewItemFilter(); trackBy:trackByIndex;\"\r\n                                        [ngValue]=\"name.key\">\r\n                                        {{name.name}}\r\n                                    </option>\r\n                                </select></span>\r\n                        </div>\r\n                        <ng-container *ngIf=\"newItem\">\r\n                            <div class=\"list-item\" *ngFor=\"let inventoryID of [listID+get_ID()]; trackBy:trackByIndex;\">\r\n                                <button class=\"newrow sublist-toggle center-aligned\" (click)=\"toggle_Item(inventoryID)\">\r\n                                    Copy existing item\r\n                                </button>\r\n                                <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                    <header class=\"subsectionHeader\">New Items</header>\r\n                                    <div class=\"list-item\"\r\n                                        *ngFor=\"let item of get_CopyItems(newItemType); trackBy:trackByIndex;\">\r\n                                        {{(item.get_Name) ? item.get_Name() : item.name}}\r\n                                        <button class=\"newrow center-aligned\" (click)=\"copy_Item(item);toggle_Item(0)\">\r\n                                            Copy\r\n                                        </button>\r\n                                    </div>\r\n                                    <header class=\"subsectionHeader\">Inventory Items</header>\r\n                                    <div class=\"list-item\"\r\n                                        *ngFor=\"let item of get_InventoryItems(newItemType); trackBy:trackByIndex;\">\r\n                                        {{(item.get_Name) ? item.get_Name() : item.name}}\r\n                                        <button class=\"newrow center-aligned\" (click)=\"copy_Item(item);toggle_Item(0)\">\r\n                                            Copy\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let property of get_NewItemProperties(); trackBy:trackByIndex;\">\r\n                                <ng-container *ngIf=\"!(property.key == 'equippable' && !newItem['allowEquippable'])\">\r\n                                    <app-newItemProperty [propertyData]=property [propertyKey]=property.key\r\n                                        [newItem]=newItem></app-newItemProperty>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <div class=\"list-item newrow\" *ngIf=\"newItem['moddable'] && can_ChangeMaterial(newItem)\">\r\n                                <strong>Material</strong>\r\n                                <app-itemMaterial class=\"newrow\" [item]=\"newItem\" [craftingStation]=\"false\"\r\n                                    [customItemStore]=\"true\"></app-itemMaterial>\r\n                            </div>\r\n                            <div class=\"list-item newrow\" *ngIf=\"newItem['moddable']\">\r\n                                <strong>Runes</strong>\r\n                                <app-itemRunes class=\"newrow\" [item]=\"newItem\" [itemStore]=\"true\"\r\n                                    [customItemStore]=\"true\">\r\n                                </app-itemRunes>\r\n                            </div>\r\n                            <div class=\"list-item newrow\">\r\n                                <button class=\"newrow center-aligned\" (click)=\"grant_CustomItem(creature)\">\r\n                                    Get this item\r\n                                </button>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { ItemGain } from './ItemGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nexport class SpellGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Set if sustained spell is activated\r\n    public active: boolean = false;\r\n    public activeCooldown: number = 0;\r\n    //Copied from SpellChoice. How often the spell can be used, human readable for display.\r\n    public frequency: string = \"\";\r\n    public prepared: boolean = false;\r\n    //Copied from SpellChoice. Turns * 10 to wait before casting again.\r\n    public cooldown: number = 0;\r\n    //In order to select a choice from the spell before casting it, the choice is saved here for each condition.\r\n    public choices: string[] = [];\r\n    //Set to spell's duration when activated, and automatically deactivate if it runs out by ticking time\r\n    public duration: number = 0;\r\n    //Any items granted by this spell are stored here with their id so they can be removed when the spell ends.\r\n    public gainItems: ItemGain[] = [];\r\n    public locked: boolean = false;\r\n    public name: string = \"\";\r\n    public combinationSpellName: string = \"\";\r\n    //Signature Spells are automatically available as heightened spells on every lower and higher level (down to its minimum)\r\n    public signatureSpell: boolean = false;\r\n    public source: string = \"\";\r\n    //Copied from SpellChoice. For looking up details in the Choice - ideally always include the choice in the function so we don't have to look it up.\r\n    public sourceId: string = \"\";\r\n    //For sustained spells, the target (\"Character\", \"Companion\", \"Familiar\") is saved here so any conditions can be removed when the spell ends.\r\n    public target: string = \"\";\r\n    //Condition gains save this id so they can end the spell when the condition ends.\r\n    public id = uuidv1();\r\n}","export class ProficiencyCopy {\r\n    //Which skill gets to copy proficiency levels? Can include weapon traits, e.g. \"Goblin\" for goblin weapon proficiency.\r\n    public name: string = \"\";\r\n    //What type of skill increase gets copied? E.g. \"Weapon Proficiency\", \"Skill\"...\r\n    public type: string = \"\";\r\n    //If featuresOnly is true, skill increases with source \"Feat: *\" are not copied.\r\n    public featuresOnly: boolean = false;\r\n    //Minimum skill level needed to apply (usually Trained).\r\n    public minLevel: number = 2;\r\n}","<ng-container *ngFor=\"let hint of get_Hints(object.hints, objectName); trackBy:trackByIndex;\">\r\n    <ng-template #HintContent>\r\n        {{hint.desc ? hint.desc : object.desc}}\r\n        <div class=\"list-item\" *ngIf=\"get_HintsShowMore() && get_ObjectType()\">\r\n            <header class=\"spellHeader\">{{object.name}}</header>\r\n            <app-feat *ngIf=\"get_ObjectType()=='Feat'\" [feat]=\"object\"></app-feat>\r\n            <app-condition *ngIf=\"get_ObjectType()=='Condition'\" [condition]=\"object\"></app-condition>\r\n            <app-activity *ngIf=\"get_ObjectType()=='Activity'\" [allowActivate]=\"false\" [activity]=\"object\">\r\n            </app-activity>\r\n            <app-item *ngIf=\"get_ObjectType()=='Item'\" [allowActivate]=\"false\" [item]=\"object\"></app-item>\r\n            <div class=\"newrow left-aligned\" *ngIf=\"get_ObjectType()=='DescOnly'\">\r\n                <p>\r\n                    {{object.desc}}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <cite triggers=\"hover\">\r\n        <span #popover1=\"ngbPopover\" [ngbPopover]=\"HintContent\" triggers=\"click\">\r\n            <span [ngbPopover]=\"!popover1.isOpen() && (hint.desc ? hint.desc : object.desc)\">\r\n                {{description}}\r\n            </span>\r\n        </span>\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length\" [ngbTooltip]=\"'Activate any effects of this hint.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active2\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 0\"\r\n            [ngbTooltip]=\"'Activate the second level of this hint\\'s effects.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active3\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 1\"\r\n            [ngbTooltip]=\"'Activate the third level of this hint\\'s effects.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active4\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 2\"\r\n            [ngbTooltip]=\"'Activate the fourth level of this hint\\'s effects.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active5\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 3\"\r\n            [ngbTooltip]=\"'Activate the fifth level of this hint\\'s effects.'\">\r\n    </cite>\r\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Hint } from 'src/app/Hint';\r\n\r\n@Component({\r\n    selector: 'app-hint',\r\n    templateUrl: './hint.component.html',\r\n    styleUrls: ['./hint.component.scss']\r\n})\r\nexport class HintComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    object: any = null;\r\n    @Input()\r\n    objectName: string = \"\";\r\n    @Input()\r\n    description: string = \"\";\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        tooltipConfig.container = \"body\";\r\n        tooltipConfig.triggers = \"hover\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_HintsShowMore() {\r\n        return this.characterService.get_Character().settings.hintsShowMoreInformation;\r\n    }\r\n\r\n    get_Hints(hints: Hint[], name: string) {\r\n        return hints\r\n            .filter(hint =>\r\n                hint.showon.split(\",\")\r\n                    .some(showon =>\r\n                        showon.trim().toLowerCase() == name.toLowerCase() ||\r\n                        showon.trim().toLowerCase() == (this.creature + \":\" + name).toLowerCase() ||\r\n                        (\r\n                            name.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n            )\r\n    }\r\n\r\n    on_ActivateEffect() {\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_ObjectType() {\r\n        switch (this.object?.constructor.name) {\r\n            case \"Feat\":\r\n                return \"Feat\";\r\n            case \"Activity\":\r\n                return \"Activity\";\r\n            case \"ItemActivity\":\r\n                return \"Activity\";\r\n            case \"Condition\":\r\n                return \"Condition\";\r\n            case \"AnimalCompanionSpecialization\":\r\n                return \"DescOnly\";\r\n            case \"Specialization\":\r\n                return \"DescOnly\";\r\n        }\r\n        if (this.object.constructor.__proto__.__proto__.name == \"Item\" || this.object.constructor.__proto__.name == \"Item\") {\r\n            return \"Item\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { SkillIncrease } from './SkillIncrease';\r\nimport { SkillChoice } from './SkillChoice';\r\n\r\nexport class LoreChoice extends SkillChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    public id: string = \"\";\r\n    public increases: SkillIncrease[] = [];\r\n    public initialIncreases: number = 1;\r\n    public loreDesc: string = \"\";\r\n    public loreName: string = \"\";\r\n    public maxRank: number = 0;\r\n    public source: string = \"\";\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Speed {\r\n    public readonly _className = this.constructor.name;\r\n    constructor (\r\n        public name: string = \"\"\r\n    ) {};\r\n    public source: string = \"\";\r\n    relatives(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.get_RelativesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.get_RelativesOnThis(creature, name);\r\n        }\r\n    }\r\n    absolutes(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.get_AbsolutesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.get_AbsolutesOnThis(creature, name);\r\n        }\r\n    }\r\n    bonuses(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.show_BonusesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.show_BonusesOnThis(creature, name);\r\n        }\r\n    }\r\n    penalties(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.show_PenaltiesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.show_PenaltiesOnThis(creature, name);\r\n        }\r\n    }\r\n    baseValue(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n    //Gets the basic speed and adds all effects\r\n        if (characterService.still_loading()) { return 0; }\r\n        let sum = 0;\r\n        let explain: string = \"\";\r\n        //Penalties cannot lower a speed below 5. We need to track if one ever reaches 5, then never let it get lower again.\r\n        let above5 = false;\r\n        //Get the base land speed from the ancestry\r\n        if (creature.type == \"Familiar\") {\r\n            if (this.name == creature.speeds[1].name) {\r\n                sum = 25;\r\n                explain = \"\\nBase speed: \"+sum;\r\n            }\r\n        } else {\r\n            if ((creature as AnimalCompanion|Character).class.ancestry.name) {\r\n                (creature as AnimalCompanion|Character).class.ancestry.speeds.filter(speed => speed.name == this.name).forEach(speed => {\r\n                    sum = speed.value;\r\n                    explain = \"\\n\"+(creature as AnimalCompanion|Character).class.ancestry.name+\" base speed: \"+sum;\r\n                });\r\n            }\r\n        }\r\n        //Absolutes completely replace the baseValue. They are sorted so that the highest value counts last.\r\n        let absolutes = this.absolutes(creature, effectsService, this.name).filter(effect => effect.setValue);\r\n        absolutes.forEach(effect => {\r\n            sum = parseInt(effect.setValue)\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        let isNull: boolean = (sum == 0)\r\n        this.relatives(creature, effectsService, this.name).forEach(effect => {\r\n            sum += parseInt(effect.value);\r\n            explain += \"\\n\"+effect.source+\": \"+effect.value;\r\n        });\r\n        if (!isNull && sum < 5 && this.name != \"Speed\") {\r\n            sum = 5;\r\n            explain += \"\\nEffects cannot lower a speed below 5.\"\r\n        }\r\n        explain = explain.trim();\r\n        return [sum, explain];\r\n    }\r\n    value(creature: Creature, characterService: CharacterService, effectsService: EffectsService): [number, string] {\r\n        //If there is a general speed penalty (or bonus), it applies to all speeds. We apply it to the base speed here so we can still\r\n        // copy the base speed for effects (e.g. \"You gain a climb speed equal to your land speed\") and not apply the general penalty twice.\r\n        let baseValue = this.baseValue(creature, characterService, effectsService)\r\n        let sum = baseValue[0];\r\n        let explain: string = baseValue[1];\r\n        let isNull: boolean = (sum == 0)\r\n        if (this.name != \"Speed\") {\r\n            this.relatives(creature, effectsService, \"Speed\").forEach(effect => {\r\n                sum += parseInt(effect.value);\r\n                explain += \"\\n\"+effect.source+\": \"+effect.value;\r\n            });\r\n        }\r\n        if (!isNull && sum < 5 && this.name != \"Speed\") {\r\n            sum = 5;\r\n            explain += \"\\nEffects cannot lower a speed below 5.\"\r\n        }\r\n        explain = explain.trim();\r\n        return [sum, explain];\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n    title = 'P.E.C.S.';\r\n}","<app-top-bar></app-top-bar>\r\n\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { ItemGain } from './ItemGain';\r\nimport { SpellCast } from './SpellCast';\r\n\r\nexport class ActivityGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public active: boolean = false;\r\n    public activeCooldown: number = 0;\r\n    public chargesUsed: number = 0;\r\n    //If you use a charge of an activity on an item, and it has a sharedChargesID, all activities on the same item with the same sharedChargesID will also use a charge.\r\n    public sharedChargesID: number = 0;\r\n    //If you activate an activity, and it has an exclusiveActivityID, all activities on the same item with the same sharedChargesID are automatically deactivated.\r\n    public exclusiveActivityID: number = 0;\r\n    //The duration is copied from the activity when activated.\r\n    public duration: number = 0;\r\n    //The character level where this activity becomes available\r\n    public level: number = 0;\r\n    public name: string = \"\";\r\n    public source: string = \"\";\r\n    //Some activities come with notes to make, like a custom trigger for Trickster's Ace. These can be filled out on the activities app, with name as the title and value as the note.\r\n    public data: { name: string, value: string }[] = [];\r\n    //We copy the activities ItemGains here whenever we activate it, so we can store the item ID.\r\n    public gainItems: ItemGain[] = [];\r\n    //We copy the activities castSpells here whenever we activate it, so we can store its duration.\r\n    public castSpells: SpellCast[] = [];\r\n    //If the activity causes a condition, in order to select a choice from the activity beforehand, the choice is saved here for each condition.\r\n    public effectChoices: string[] = [];\r\n    //If the activity casts a spell, in order to select a choice from the spell before casting it, the choice is saved here for each condition for each spell, recursively.\r\n    public spellEffectChoices: string[][] = [];\r\n}","import { CharacterService } from './character.service';\r\nimport { Creature } from './Creature';\r\nimport { Equipment } from './Equipment';\r\n\r\nexport class Shield extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Shields should be type \"shields\" to be found in the database\r\n    readonly type = \"shields\";\r\n    //Shields are usually moddable as shield, which means they get material but no runes\r\n    moddable = \"shield\" as \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\";\r\n    //The shield's AC bonus received when raising it\r\n    public acbonus: number = 0;\r\n    //Is the shield currently raised in order to deflect damage?\r\n    public raised: boolean = false;\r\n    //The penalty to all speeds while equipping this shield\r\n    public speedpenalty: number = 0;\r\n    //Are you currently taking cover behind the shield?\r\n    public takingCover: boolean = false;\r\n    public brokenThreshold: number = 0;\r\n    //The additional AC bonus received when taking cover behind the shield\r\n    public coverbonus: number = 0;\r\n    public damage: number = 0;\r\n    public hardness: number = 0;\r\n    public hitpoints: number = 0;\r\n    //What kind of shield is this based on?\r\n    public shieldBase: string = \"\";\r\n    public $shieldAlly: boolean = false;\r\n    //Shoddy shields take a -2 penalty to AC.\r\n    public $shoddy: number = 0;\r\n    get_Shoddy(creature: Creature, characterService: CharacterService) {\r\n        //Shoddy items have a -2 penalty to AC, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n        if (this.shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && this.crafted) {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        } else if (this.shoddy) {\r\n            this.$shoddy = -2;\r\n            return -2;\r\n        } else {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        }\r\n    }\r\n    get_ShieldAlly(creature: Creature, characterService: CharacterService) {\r\n        this.$shieldAlly = characterService.get_Feats(\"Divine Ally: Shield Ally\")[0]?.have(creature, characterService) && true;\r\n        return this.$shieldAlly;\r\n    }\r\n    get_Hardness() {\r\n        return this.hardness + (this.$shieldAlly ? 2 : 0);\r\n    }\r\n    get_MaxHP() {\r\n        return this.hitpoints + (this.$shieldAlly ? (Math.floor(this.hitpoints / 2)) : 0);\r\n    }\r\n    get_BrokenThreshold() {\r\n        return this.brokenThreshold + (this.$shieldAlly ? (Math.floor(this.brokenThreshold / 2)) : 0);\r\n    }\r\n    get_ACBonus() {\r\n        return this.acbonus + this.$shoddy;\r\n    }\r\n    get_HitPoints() {\r\n        this.damage = Math.max(Math.min(this.get_MaxHP(), this.damage), 0);\r\n        let hitpoints: number = this.get_MaxHP() - this.damage;\r\n        if (hitpoints < this.get_BrokenThreshold()) {\r\n            this.broken = true;\r\n        }\r\n        return hitpoints;\r\n    }\r\n}","import { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { FeatChoice } from './FeatChoice';\r\n\r\nexport class Background {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public feat: string = \"\";\r\n    public featChoices: FeatChoice[] = [];\r\n    public loreChoices: LoreChoice[] = [];\r\n    public loreName: string = \"\";\r\n    public name: string = \"\";\r\n    public skill: string = \"\";\r\n    public skillChoices: SkillChoice[] = [];\r\n    public specialLore: string = \"\";\r\n    public subType: string = \"\";\r\n    public subTypes: boolean = false;\r\n    public superType: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public region: string = \"\";\r\n    public adventurePath: string = \"\";\r\n    public prerequisites: string = \"\";\r\n    public inputRequired: string = \"\";\r\n    public traits: string[] = [];\r\n}","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { EffectsService } from '../effects.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { TimeService } from '../time.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { Effect } from '../Effect';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Condition } from '../Condition';\r\n\r\n@Component({\r\n    selector: 'app-effects',\r\n    templateUrl: './effects.component.html',\r\n    styleUrls: ['./effects.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EffectsComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public fullDisplay: boolean = false;\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    public showApplied: boolean = true;\r\n    public showNotApplied: boolean = false;\r\n    public showHidden: boolean = false;\r\n    public showItem: string = \"\";\r\n    public Math = Math;\r\n    public parseInt = parseInt;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        private characterService: CharacterService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.effectsMinimized = !this.characterService.get_Character().settings.effectsMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.effectsMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_Darkmode() {\r\n        return this.characterService.get_Darkmode();\r\n    }\r\n\r\n    receive_ItemMessage(name: string) {\r\n        this.toggle_Item(name);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByConditionGainID(index: number, obj: ConditionGain): string {\r\n        return obj.id;\r\n    }\r\n\r\n    trackByUniqueEffect(index: number, obj: Effect): string {\r\n        return obj.target + obj.setValue + obj.value + (obj.toggle ? \"true\" : \"false\") + (obj.penalty ? \"true\" : \"false\") + index.toString();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    toggle_Applied() {\r\n        this.showApplied = !this.showApplied;\r\n    }\r\n\r\n    toggle_NotApplied() {\r\n        this.showNotApplied = !this.showNotApplied;\r\n    }\r\n\r\n    toggle_Hidden() {\r\n        this.showHidden = !this.showHidden;\r\n    }\r\n\r\n    get_ToggledCount() {\r\n        return ((this.showApplied && 1) + (this.showNotApplied && 1) + (this.showHidden && 1));\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Effects() {\r\n        return this.effectsService.get_Effects(this.creature);\r\n    }\r\n\r\n    get_Conditions(name: string = \"\") {\r\n        return this.characterService.get_Conditions(name);\r\n    }\r\n\r\n    get_AppliedEffects() {\r\n        return this.get_Effects().all.filter(effect => effect.creature == this.get_Creature().id && effect.apply && effect.show).sort(function (a, b) {\r\n            if (a.value > b.value) {\r\n                return 1;\r\n            }\r\n            if (a.value < b.value) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (a.setValue > b.setValue) {\r\n                return 1;\r\n            }\r\n            if (a.setValue < b.setValue) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (a.target > b.target) {\r\n                return 1;\r\n            }\r\n            if (a.target < b.target) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_NotAppliedEffects() {\r\n        return this.get_Effects().all.filter(effect => effect.creature == this.get_Creature().id && !effect.apply);\r\n    }\r\n\r\n    get_HiddenEffects() {\r\n        return this.get_Effects().all.filter(effect => effect.creature == this.get_Creature().id && effect.apply && !effect.show);\r\n    }\r\n\r\n    get_AppliedConditions(apply: boolean) {\r\n        return this.characterService.get_AppliedConditions(this.get_Creature()).filter(condition => condition.apply == apply).sort(function (a, b) {\r\n            if (a.name + a.value + a.choice > b.name + b.value + b.choice) {\r\n                return 1;\r\n            }\r\n            if (a.name + a.value + a.choice < b.name + b.value + b.choice) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_Duration(duration: number) {\r\n        return this.timeService.get_Duration(duration);\r\n    }\r\n\r\n    get_IsInformationalCondition(conditionGain: ConditionGain, condition: Condition) {\r\n        //Return whether the condition is purely informational, i.e. has no effects and is not currently causing any conditions.\r\n        return !condition.effects?.length && !condition.hints.some(hint => hint.effects?.length) && !this.characterService.get_AppliedConditions(this.get_Creature(), \"\", \"\", true).some(existingCondition => existingCondition.parentID == conditionGain.id);\r\n    }\r\n\r\n    calculate_InventoryEffects() {\r\n        let speedRune: boolean = false;\r\n        let enfeebledRune: boolean = false;\r\n        if (this.creature != \"Familiar\") {\r\n            this.get_Creature().inventories.forEach(inventory => {\r\n                inventory.allEquipment().forEach(item => {\r\n                    item.propertyRunes.forEach(rune => {\r\n                        if (rune.name == \"Speed\" && (item.equipped || (item.can_Invest() && item.invested))) {\r\n                            speedRune = true;\r\n                        }\r\n                        if (rune[\"alignmentPenalty\"]) {\r\n                            if (this.characterService.get_Character().alignment.includes(rune[\"alignmentPenalty\"])) {\r\n                                enfeebledRune = true;\r\n                            }\r\n                        }\r\n                    });\r\n                    item.oilsApplied.forEach(oil => {\r\n                        if (oil.runeEffect && oil.runeEffect.name == \"Speed\" && (item.equipped || (item.can_Invest() && item.invested))) {\r\n                            speedRune = true;\r\n                        }\r\n                        if (oil.runeEffect && oil.runeEffect.alignmentPenalty) {\r\n                            if (this.characterService.get_Character().alignment.includes(oil.runeEffect.alignmentPenalty)) {\r\n                                enfeebledRune = true;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            })\r\n            if (this.get_Creature().inventories[0].weapons.find(weapon => weapon.large && weapon.equipped) && (this.characterService.get_AppliedConditions(this.get_Creature(), \"Clumsy\", \"Large Weapon\").length == 0)) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Clumsy\", value: 1, source: \"Large Weapon\", apply: true }), true)\r\n            } else if (!this.get_Creature().inventories[0].weapons.find(weapon => weapon.large && weapon.equipped) && (this.characterService.get_AppliedConditions(this.get_Creature(), \"Clumsy\", \"Large Weapon\").length > 0)) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Clumsy\", value: 1, source: \"Large Weapon\", apply: true }), true)\r\n            }\r\n            if (speedRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Quickened\", \"Speed Rune\").length == 0) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Quickened\", value: 0, source: \"Speed Rune\", apply: true }), true)\r\n            } else if (!speedRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Quickened\", \"Speed Rune\").length > 0) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Quickened\", value: 0, source: \"Speed Rune\", apply: true }), true)\r\n            }\r\n            if (enfeebledRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Enfeebled\", \"Alignment Rune\").length == 0) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Enfeebled\", value: 2, source: \"Alignment Rune\", apply: true }), true)\r\n            } else if (!enfeebledRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Enfeebled\", \"Alignment Rune\").length > 0) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Enfeebled\", value: 2, source: \"Alignment Rune\", apply: true }), true)\r\n            }\r\n        }\r\n    }\r\n\r\n    calculate_Bulk() {\r\n        if (this.creature != \"Familiar\") {\r\n            let bulk = this.get_Creature().bulk;\r\n            let calculatedBulk = bulk.calculate((this.get_Creature() as Character|AnimalCompanion), this.characterService, this.effectsService);\r\n            if (calculatedBulk.current.value > calculatedBulk.encumbered.value && this.characterService.get_AppliedConditions(this.get_Creature(), \"Encumbered\", \"Bulk\").length == 0) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Encumbered\", value: 0, source: \"Bulk\", apply: true }), true)\r\n            }\r\n            if (calculatedBulk.current.value <= calculatedBulk.encumbered.value && this.characterService.get_AppliedConditions(this.get_Creature(), \"Encumbered\", \"Bulk\").length > 0) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Encumbered\", value: 0, source: \"Bulk\", apply: true }), true)\r\n            }\r\n        }\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.characterService.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"effects\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                        this.calculate_InventoryEffects();\r\n                        this.calculate_Bulk();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"effects\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                        this.calculate_InventoryEffects();\r\n                        this.calculate_Bulk();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<div id=\"{{creature}}-effects-height\" class=\"attributeBox\" [ngClass]=\"{'snug':!fullDisplay}\">\r\n    <ng-template #conditionTemplate let-conditionGain=\"conditionGain\">\r\n        <div style=\"display:flex\"\r\n            [ngClass]=\"{'attention':(conditionGain.duration == 1) || (conditionGain.nextStage == -1)}\"\r\n            *ngFor=\"let condition of [get_Conditions(conditionGain.name)[0]]; trackBy:trackByIndex;\">\r\n            <ng-template #conditionContent>\r\n                <app-condition class=\"newrow\" (showChoiceMessage)=\"receive_ItemMessage($event)\" [creature]=\"creature\"\r\n                    [conditionGain]=\"conditionGain\" [condition]=\"condition\" [showItem]=\"get_ShowItem()\"\r\n                    [fullDisplay]=\"fullDisplay\"></app-condition>\r\n            </ng-template>\r\n            <app-gridIcon class=\"condition\" [ngClass]=\"{'penalty':!condition.buff, 'bonus':condition.buff}\"\r\n                placement=\"right bottom top\" [condition]=\"conditionGain\" [originalCondition]=\"condition\"\r\n                [ngbPopover]=\"conditionContent\"\r\n                [superTitle]=\"get_IsInformationalCondition(conditionGain, condition) ? 'icon-bi-info-circle' : ''\"\r\n                ngbTooltip=\"{{conditionGain.name}}\" container=\"body\" *ngIf=\"!fullDisplay\">\r\n            </app-gridIcon>\r\n            <div class=\"list-item gridicon-fullsizebox\" *ngIf=\"fullDisplay\">\r\n                <app-gridIcon class=\"condition\" [condition]=\"conditionGain\" [originalCondition]=\"condition\"\r\n                    [superTitle]=\"get_IsInformationalCondition(conditionGain, condition) ? 'icon-bi-info-circle' : ''\"\r\n                    [ngClass]=\"{'penalty':!condition.buff, 'bonus':condition.buff}\">\r\n                </app-gridIcon>\r\n                <ng-container *ngTemplateOutlet=\"conditionContent\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #effectTemplate let-effect=\"effect\">\r\n        <ng-template #effectContent>\r\n            <div class=\"newrow\">\r\n                <span>\r\n                    <strong\r\n                        [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\">{{effect.target}}\r\n                        {{parseInt(effect.value) ? effect.value : ''}}{{effect.setValue ? \"= \"+effect.setValue : ''}}\r\n                    </strong>\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"effect.type != 'untyped' && !effect.toggle && !effect.setValue\">\r\n                <span>\r\n                    <strong>Type</strong> {{effect.type + \" \" + (effect.penalty ? 'penalty' : 'bonus')}}</span>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"effect.duration\">\r\n                <span>\r\n                    <strong>Duration</strong> {{effect.duration ? get_Duration(effect.duration) : ''}}\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow\">\r\n                <span><strong>Source&nbsp;</strong>{{effect.source.includes('conditional, ') ? effect.source.substr(13)\r\n                    : effect.source}}</span>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"effect.source.includes('conditional, ')\">\r\n                <span><strong>Conditional&nbsp;</strong>This effect only applies for certain actions or under specific\r\n                    circumstances.</span>\r\n            </div>\r\n        </ng-template>\r\n        <app-gridIcon class=\"effect\" [effect]=\"effect\" placement=\"left bottom top\"\r\n            [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\"\r\n            [ngbPopover]=\"effectContent\" ngbTooltip=\"{{effect.target}}\r\n        {{parseInt(effect.value) ? effect.value : ''}}{{effect.setValue ? '= '+effect.setValue :\r\n        ''}}\" container=\"body\" *ngIf=\"!fullDisplay\"></app-gridIcon>\r\n        <div class=\"list-item gridicon-fullsizebox\" *ngIf=\"fullDisplay\">\r\n            <app-gridIcon class=\"effect\" [effect]=\"effect\"\r\n                [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\">\r\n            </app-gridIcon>\r\n            <div class=\"gridicon-sidebar\">\r\n                <ng-container *ngTemplateOutlet=\"effectContent\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <app-tags [creature]=\"creature\" [objectName]=\"'Effects'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n        [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n    <div [ngClass]=\"{'charactersheet-column-container padding-8':!fullDisplay}\">\r\n        <div>\r\n            <header class=\"subsectionHeader\" *ngIf=\"fullDisplay\">\r\n                Active Conditions\r\n            </header>\r\n            <div [ngClass]=\"{'icon-list left-aligned dashed-border':!fullDisplay}\">\r\n                <div class=\"icon-list-title\" style=\"right: 0\" *ngIf=\"!fullDisplay\">\r\n                    <header class=\"sectionHeader box-header\">Conditions</header>\r\n                </div>\r\n                <ng-container\r\n                    *ngFor=\"let conditionGain of get_AppliedConditions(true); trackBy:trackByConditionGainID;\">\r\n                    <ng-container *ngTemplateOutlet=\"conditionTemplate;context:{conditionGain:conditionGain}\">\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <header class=\"subsectionHeader\" *ngIf=\"fullDisplay\">\r\n                Active Effects\r\n            </header>\r\n            <div [ngClass]=\"{'icon-list right-aligned dashed-border':!fullDisplay}\">\r\n                <div class=\"icon-list-title\" style=\"left: 0\" *ngIf=\"!fullDisplay\">\r\n                    <header class=\"sectionHeader box-header\">Effects</header>\r\n                </div>\r\n                <ng-container *ngFor=\"let effect of get_AppliedEffects(); trackBy:trackByUniqueEffect;\">\r\n                    <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngIf=\"fullDisplay\">\r\n        <div>\r\n            <header class=\"subsectionHeader\">\r\n                Inactive Conditions\r\n            </header>\r\n            <div class=\"notapplied\">\r\n                <ng-container\r\n                    *ngFor=\"let conditionGain of get_AppliedConditions(false); trackBy:trackByConditionGainID;\">\r\n                    <ng-container *ngTemplateOutlet=\"conditionTemplate;context:{conditionGain:conditionGain}\">\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <header class=\"subsectionHeader\">\r\n                Inactive Effects\r\n            </header>\r\n            <div class=\"notapplied\">\r\n                <ng-container *ngFor=\"let effect of get_NotAppliedEffects(); trackBy:trackByUniqueEffect;\">\r\n                    <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <header class=\"subsectionHeader\">\r\n            Hidden Effects\r\n        </header>\r\n        <div>\r\n            <ng-container *ngFor=\"let effect of get_HiddenEffects(); trackBy:trackByUniqueEffect;\">\r\n                <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Rune } from './Rune';\r\nimport { EffectGain } from './EffectGain';\r\n\r\nexport class ArmorRune extends Rune {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Armor Runes should be type \"armorrunes\" to be found in the database\r\n    readonly type = \"armorrunes\";\r\n    public resilient: number = 0;\r\n    //Can only be applied to an armor with this proficiency\r\n    public profreq: string[] = [];\r\n    //Can only be applied to a nonmetallic armor\r\n    public nonmetallic: boolean = false;\r\n    public effects: EffectGain[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { ClassesService } from '../classes.service';\r\nimport { Class } from '../Class';\r\nimport { Level } from '../Level';\r\nimport { AbilitiesService } from '../abilities.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { FeatsService } from '../feats.service';\r\nimport { Feat } from '../Feat';\r\nimport { HistoryService } from '../history.service';\r\nimport { Ancestry } from '../Ancestry';\r\nimport { Heritage } from '../Heritage';\r\nimport { ItemsService } from '../items.service';\r\nimport { Background } from '../Background';\r\nimport { LoreChoice } from '../LoreChoice';\r\nimport { Ability } from '../Ability';\r\nimport { AbilityChoice } from '../AbilityChoice';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { Deity } from '../Deity';\r\nimport { DeitiesService } from '../deities.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { AnimalCompanionAncestry } from '../AnimalCompanionAncestry';\r\nimport { ItemGain } from '../ItemGain';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { AnimalCompanionsService } from '../animalcompanions.service';\r\nimport { AnimalCompanionClass } from '../AnimalCompanionClass';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { AnimalCompanionSpecialization } from '../AnimalCompanionSpecialization';\r\nimport { Familiar } from '../Familiar';\r\nimport { SavegameService } from '../savegame.service';\r\nimport { Savegame } from '../Savegame';\r\nimport { TraitsService } from '../traits.service';\r\nimport { FamiliarsService } from '../familiars.service';\r\nimport { Item } from '../Item';\r\nimport { FeatChoice } from '../FeatChoice';\r\nimport { Spell } from '../Spell';\r\nimport { Character } from '../Character';\r\nimport { NgbActiveModal, NgbModal, NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SkillChoice } from '../SkillChoice';\r\nimport { Activity } from '../Activity';\r\n\r\n@Component({\r\n    selector: 'app-character',\r\n    templateUrl: './character.component.html',\r\n    styleUrls: ['./character.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CharacterComponent implements OnInit {\r\n\r\n    public newClass: Class = new Class();\r\n    private showLevel: number = 0;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n    private showContent: any | FeatChoice | SkillChoice | AbilityChoice = null;\r\n    private showContentLevelNumber: number = 0;\r\n    private showFixedChangesLevelNumber: number = 0;\r\n    public adventureBackgrounds: Boolean = true;\r\n    public regionalBackgrounds: Boolean = true;\r\n    public blankCharacter: Character = new Character();\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public classesService: ClassesService,\r\n        public abilitiesService: AbilitiesService,\r\n        public effectsService: EffectsService,\r\n        public featsService: FeatsService,\r\n        public historyService: HistoryService,\r\n        private itemsService: ItemsService,\r\n        private activitiesService: ActivitiesService,\r\n        private deitiesService: DeitiesService,\r\n        private spellsService: SpellsService,\r\n        private animalCompanionsService: AnimalCompanionsService,\r\n        private conditionsService: ConditionsService,\r\n        private savegameService: SavegameService,\r\n        private traitsService: TraitsService,\r\n        private familiarsService: FamiliarsService,\r\n        private modalService: NgbModal,\r\n        public modal: NgbActiveModal,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.characterMinimized = !this.characterService.get_Character().settings.characterMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.characterMinimized;\r\n    }\r\n\r\n    toggleCharacterMenu() {\r\n        this.characterService.toggle_Menu(\"character\");\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterService.get_CharacterMenuState();\r\n    }\r\n\r\n    toggle_Level(levelNumber: number) {\r\n        if (this.showLevel == levelNumber) {\r\n            this.showLevel = 0;\r\n        } else {\r\n            this.showLevel = levelNumber;\r\n        }\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string, levelNumber: number = 0, content: any = null) {\r\n        //Set the currently shown list name, level number and content so that the correct choice with the correct data can be shown in the choice area.\r\n        if (this.showList == name &&\r\n            (!levelNumber || this.showContentLevelNumber == levelNumber) &&\r\n            (!content || JSON.stringify(this.showContent) == JSON.stringify(content))) {\r\n            this.showList = \"\";\r\n            this.showContentLevelNumber = 0;\r\n            this.showContent = null;\r\n        } else {\r\n            this.showList = name;\r\n            this.showContentLevelNumber = levelNumber;\r\n            this.showContent = content;\r\n            this.reset_ChoiceArea();\r\n        }\r\n    }\r\n\r\n    reset_ChoiceArea() {\r\n        document.getElementById(\"choiceArea-top\").scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SkillChoice }) {\r\n        this.toggle_List(message.name, message.levelNumber, message.choice);\r\n    }\r\n\r\n    receive_FeatMessage(name: string) {\r\n        this.toggle_Item(name);\r\n    }\r\n\r\n    get_ShowLevel() {\r\n        return this.showLevel;\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    get_ActiveChoiceContent(choiceType: string = \"\") {\r\n        //For choices that have a class of their own (AbilityChoice, SkillChoice, FeatChoice), get the currently shown content with levelNumber if it is of that same class.\r\n        //Also get the currently shown list name for compatibility.\r\n        if (this.showContent?.constructor.name == choiceType) {\r\n            return [{ name: this.get_ShowList(), levelNumber: this.get_ShowContentLevelNumber(), choice: this.get_ShowContent() }];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    get_ActiveSpecialChoiceShown(choiceType: string = \"\") {\r\n        if (this.get_ShowList() == choiceType) {\r\n            //For choices that don't have a class and can only show up once per level, get the currently shown list name with levelNumber if the list name matches the choice type.\r\n            //Also get a \"choice\" object with a unique ID (the list name and the level number) for compatibility with TrackByID(), unless there is a current content with an id property.\r\n            return [{ name: choiceType, levelNumber: this.get_ShowContentLevelNumber(), choice: this.get_ShowContent()?.id ? this.get_ShowContent() : { id: choiceType + this.get_ShowContentLevelNumber().toString() } }]\r\n        }\r\n    }\r\n\r\n    get_ShowContent() {\r\n        return this.showContent;\r\n    }\r\n\r\n    get_ShowContentLevelNumber() {\r\n        return this.showContentLevelNumber;\r\n    }\r\n\r\n    toggle_FixedChangesLevelNumber(levelNumber: number) {\r\n        if (this.showFixedChangesLevelNumber == levelNumber) {\r\n            this.showFixedChangesLevelNumber = 0;\r\n        } else {\r\n            this.showFixedChangesLevelNumber = levelNumber;\r\n        }\r\n    }\r\n\r\n    get_ShowFixedChangesLevelNumber() {\r\n        return this.showFixedChangesLevelNumber;\r\n    }\r\n\r\n    set_Accent() {\r\n        this.characterService.set_Accent();\r\n    }\r\n\r\n    set_Darkmode() {\r\n        this.characterService.set_Darkmode();\r\n    }\r\n\r\n    toggle_TileMode() {\r\n        this.get_Character().settings.characterTileMode = !this.get_Character().settings.characterTileMode;\r\n        this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"skillchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.get_Character().settings.characterTileMode;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByID(index: number, obj: any): any {\r\n        //Track ability, skiil or feat choices choices by id, so that when the selected choice changes, the choice area content is updated.\r\n        // The choice area content is only ever one choice, so the index would always be 0.\r\n        return obj.choice.id;\r\n    }\r\n\r\n    on_NewCharacter() {\r\n        this.characterService.reset_Character();\r\n    }\r\n\r\n    get_Savegames() {\r\n        return this.savegameService.get_Savegames().sort(function (a, b) {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (a.partyName > b.partyName) {\r\n                return 1;\r\n            }\r\n            if (a.partyName < b.partyName) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (b.partyName == \"No Party\" && a.partyName != \"No Party\") {\r\n                return 1;\r\n            }\r\n            if (a.partyName == \"No Party\" && b.partyName != \"No Party\") {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_SavegameTitle(savegame: Savegame) {\r\n        let title = \"\";\r\n        if (savegame.heritage) {\r\n            title += \" | \" + savegame.heritage;\r\n            if (savegame.ancestry) {\r\n                if (!savegame.heritage.includes(savegame.ancestry)) {\r\n                    title += \" \" + savegame.ancestry;\r\n                }\r\n            }\r\n        } else {\r\n            if (savegame.ancestry) {\r\n                title += \" | \" + savegame.ancestry;\r\n            }\r\n        }\r\n        if (savegame.class) {\r\n            title += \" | \";\r\n            if (savegame.classChoice) {\r\n                title += savegame.classChoice + \" \";\r\n            }\r\n            title += savegame.class;\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_Parties() {\r\n        return Array.from(new Set(this.get_Savegames().map(savegame => savegame.partyName)));\r\n    }\r\n\r\n    load_CharacterFromDB(savegame: Savegame) {\r\n        this.toggleCharacterMenu();\r\n        this.characterService.reset_Character(savegame.id);\r\n    }\r\n\r\n    delete_CharacterFromDB(savegame: Savegame) {\r\n        this.characterService.delete_Character(savegame);\r\n    }\r\n\r\n    save_CharacterToDB() {\r\n        this.characterService.save_Character();\r\n    }\r\n\r\n    open_DeleteModal(content, savegame: Savegame) {\r\n        this.modalService.open(content, { centered: true, ariaLabelledBy: 'modal-title' }).result.then((result) => {\r\n            if (result == \"Ok click\") {\r\n                this.delete_CharacterFromDB(savegame);\r\n            }\r\n        }, (reason) => {\r\n            //Do nothing if cancelled.\r\n        });\r\n    }\r\n\r\n    get_IsBlankCharacter() {\r\n        let character = this.get_Character();\r\n        return (\r\n            !character.class?.name &&\r\n            !character.name &&\r\n            !character.partyName &&\r\n            !character.experiencePoints &&\r\n            !character.alignment &&\r\n            !character.baseValues.length &&\r\n            character.inventories.length == 1 &&\r\n            character.inventories[0].allItems().length <= 2\r\n        )\r\n    }\r\n\r\n    get_Alignments() {\r\n        //Champions and Clerics need to pick an alignment matching their deity\r\n        let deity: Deity = this.get_Character().class?.deity ? this.get_AvailableDeities(this.get_Character().class.deity)[0] : null;\r\n        let alignments = [\r\n            \"\",\r\n            \"Lawful Good\",\r\n            \"Neutral Good\",\r\n            \"Chaotic Good\",\r\n            \"Lawful Neutral\",\r\n            \"Neutral\",\r\n            \"Chaotic Neutral\",\r\n            \"Lawful Evil\",\r\n            \"Neutral Evil\",\r\n            \"Chaotic Evil\"\r\n        ]\r\n        if (deity && [\"Champion\", \"Cleric\"].includes(this.get_Character().class.name)) {\r\n            return alignments.filter(alignment =>\r\n                !deity.followerAlignments ||\r\n                deity.followerAlignments.includes(alignment) ||\r\n                alignment == \"\"\r\n            )\r\n        } else {\r\n            return alignments;\r\n        }\r\n\r\n    }\r\n\r\n    get_Level(number: number) {\r\n        return this.get_Character().class.levels[number];\r\n    }\r\n\r\n    on_BaseValueChange() {\r\n        let baseValues = this.get_Character().baseValues;\r\n        if (baseValues.length) {\r\n            baseValues.length = 0;\r\n        } else {\r\n            this.get_Abilities().forEach(ability => {\r\n                baseValues.push({ name: ability.name, baseValue: 10 })\r\n            });\r\n            //Remove all Level 1 ability boosts that are now illegal\r\n            if (this.get_Character().class.name) {\r\n                this.get_Character().class.levels[1].abilityChoices.filter(choice => choice.available).forEach(choice => {\r\n                    choice.boosts.length = Math.min(choice.available - choice.baseValuesLost, choice.boosts.length);\r\n                });\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_AbilityChange(name: string) {\r\n        this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualskills\", name);\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        if (name == \"Strength\") {\r\n            this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        if (name == \"Dexterity\") {\r\n            this.characterService.set_ToChange(\"Character\", \"defense\");\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        if (name == \"Constitution\") {\r\n            this.characterService.set_ToChange(\"Character\", \"health\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_Changed(target: string = \"\") {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    on_LanguageChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_NameChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"top-bar\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_AlignmentChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    on_LevelUp() {\r\n        let character = this.get_Character();\r\n        let oldLevel = character.level;\r\n        character.level += 1;\r\n        character.experiencePoints -= 1000;\r\n        this.on_LevelChange(oldLevel);\r\n    }\r\n\r\n    on_LevelChange(oldLevel: number) {\r\n        let character = this.get_Character();\r\n        let newLevel = character.level;\r\n        //If we went up levels, repeat any onceEffects of Feats that apply inbetween, such as recovering Focus Points for a larger Focus Pool\r\n        if (newLevel > oldLevel) {\r\n            this.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length && feat.have(character, this.characterService, newLevel, true, false, oldLevel))\r\n                .forEach(feat => {\r\n                    feat.onceEffects.forEach(effect => {\r\n                        this.characterService.process_OnceEffect(character, effect);\r\n                    })\r\n                })\r\n        }\r\n\r\n        //Find all the differences between the levels and refresh components accordingly.\r\n        let lowerLevel = Math.min(oldLevel, newLevel);\r\n        let higherLevel = Math.max(oldLevel, newLevel);\r\n\r\n        character.class.levels.filter(level => level.number >= lowerLevel && level.number <= higherLevel).forEach(level => {\r\n            level.featChoices.forEach(choice => {\r\n                if (choice.showOnSheet) {\r\n                    this.characterService.set_ToChange(\"Character\", \"activities\");\r\n                }\r\n            })\r\n        })\r\n        character.class.levels.forEach(level => {\r\n            level.featChoices.forEach(choice => {\r\n                if (choice.dynamicLevel) {\r\n                    this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n                }\r\n            })\r\n        })\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"character-sheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        this.characterService.set_ToChange(\"Character\", \"top-bar\");\r\n        this.characterService.set_ToChange(\"Character\", \"health\");\r\n        this.characterService.set_ToChange(\"Character\", \"defense\");\r\n        this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualspells\", \"all\");\r\n        this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        this.characterService.set_ToChange(\"Character\", \"spells\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        if (character.get_AbilityBoosts(lowerLevel, higherLevel).length) {\r\n            this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n        }\r\n        if (character.get_SkillIncreases(this.characterService, lowerLevel, higherLevel)) {\r\n            this.characterService.set_ToChange(\"Character\", \"skillchoices\");\r\n            this.characterService.set_ToChange(\"Character\", \"skills\");\r\n        }\r\n        this.get_FeatsAndFeatures().filter(feat => feat.hints.length && feat.have(character, this.characterService, higherLevel, true, false, lowerLevel))\r\n            .forEach(feat => {\r\n                feat.hints.forEach(hint => {\r\n                    this.characterService.set_TagsToChange(\"Character\", hint.showon);\r\n                })\r\n                if (feat.gainAbilityChoice.length) {\r\n                    this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n                }\r\n                if (feat.gainSpellCasting.length || feat.gainSpellChoice.length) {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                } else if (feat.gainSpellChoice.length) {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                }\r\n                if (feat.superType == \"Adopted Ancestry\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"general\");\r\n                } else if (feat.name == \"Different Worlds\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"general\");\r\n                }\r\n            });\r\n        //Reload spellbook if spells were learned between the levels\r\n        if (character.get_SpellsLearned().some(learned => learned.level >= lowerLevel && learned.level <= higherLevel)) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            //if spells were taken between the levels\r\n        } else if (character.get_SpellsTaken(this.characterService, lowerLevel, higherLevel).length) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            //if any spells have a dynamic level dependent on the character level\r\n        } else if (character.get_SpellsTaken(this.characterService, 0, 20).some(taken => taken.choice.dynamicLevel.toLowerCase().includes(\"level\"))) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            //or if you have the cantrip connection or spell battery familiar ability.\r\n        } else if (this.characterService.get_FamiliarAvailable()) {\r\n            this.characterService.set_ToChange(\"Familiar\", \"all\");\r\n            this.get_Familiar().abilities.feats.map(gain => this.familiarsService.get_FamiliarAbilities(gain.name)[0]).filter(feat => feat).forEach(feat => {\r\n                if (feat.name == \"Cantrip Connection\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                }\r\n                if (feat.name == \"Spell Battery\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                }\r\n            })\r\n        }\r\n        if (this.characterService.get_CompanionAvailable()) {\r\n            this.get_Companion().set_Level(this.characterService);\r\n        }\r\n        if (this.characterService.get_FamiliarAvailable(newLevel)) {\r\n            this.characterService.set_ToChange(\"Familiar\", \"featchoices\");\r\n        }\r\n\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_LanguagesAvailable(levelNumber: number = 0) {\r\n        let character = this.get_Character()\r\n        if (character.class.ancestry.name) {\r\n            if (levelNumber) {\r\n                //If level is given, check if any new languages have been added on this level. If not, don't get any languages at this point.\r\n                let newLanguages: number = 0;\r\n                newLanguages += this.get_FeatsAndFeatures().filter(feat => feat.effects.some(effect => effect.affected == \"Max Languages\") && feat.have(character, this.characterService, levelNumber, false, false, levelNumber)).length\r\n                newLanguages += character.get_AbilityBoosts(levelNumber, levelNumber, \"Intelligence\").length;\r\n                if (!newLanguages) {\r\n                    return false;\r\n                }\r\n            }\r\n            return character.class.languages.length ? true : false;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get_CurrentLanguages(levelNumber: number) {\r\n        //Return the amount of languages are available up to the current level\r\n        return this.get_Character().class.languages.filter(language => language.level <= levelNumber || !language.level).length;\r\n    }\r\n\r\n    get_BlankLanguages(levelNumber: number) {\r\n        //Return the amount of languages that haven't been filled out\r\n        return this.get_Character().class.languages.filter(language => !language.name && language.level <= levelNumber).length;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_MaxAvailable(choice: AbilityChoice) {\r\n        return choice.maxAvailable(this.get_Character());\r\n    }\r\n\r\n    get_AbilityChoiceTitle(choice: AbilityChoice) {\r\n        let maxAvailable = this.get_MaxAvailable(choice);\r\n        let title = \"Ability \" + (choice.infoOnly ? \"Choice (no Boost)\" : \"Boost\");\r\n        if (maxAvailable > 1) {\r\n            title += \"s\";\r\n        }\r\n        title += \" (\" + choice.source + \")\";\r\n        if (maxAvailable > 1) {\r\n            title += \": \" + choice.boosts.length + \"/\" + maxAvailable;\r\n        } else {\r\n            if (choice.boosts.length) {\r\n                title += \": \" + choice.boosts[0].name;\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_AbilityTakenByThis(ability: Ability, choice: AbilityChoice, levelNumber: number) {\r\n        return this.get_AbilityBoosts(levelNumber, levelNumber, ability.name, (choice.infoOnly ? 'Info' : 'Boost'), choice.source).length\r\n    }\r\n\r\n    get_Abilities(name: string = \"\") {\r\n        return this.characterService.get_Abilities(name)\r\n    }\r\n\r\n    get_AvailableAbilities(choice: AbilityChoice, levelNumber: number) {\r\n        let abilities = this.get_Abilities('');\r\n        if (choice.filter.length) {\r\n            //If there is a filter, we need to find out if any of the filtered Abilities can actually be boosted.\r\n            let cannotBoost = 0;\r\n            choice.filter.forEach(filter => {\r\n                if (this.cannotBoost(this.get_Abilities(filter)[0], levelNumber, choice).length) {\r\n                    cannotBoost += 1;\r\n                }\r\n            });\r\n            //If any can be boosted, filter the list by the filter (and show the already selected abilities so you can unselect them if you like).\r\n            //If none can be boosted, the list just does not get filtered.\r\n            if (cannotBoost < choice.filter.length) {\r\n                abilities = abilities.filter(ability => choice.filter.includes(ability.name) || this.abilityBoostedByThis(ability, choice))\r\n            }\r\n        }\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        if (abilities.length) {\r\n            return abilities.filter(ability => (\r\n                showOtherOptions ||\r\n                this.abilityBoostedByThis(ability, choice) ||\r\n                (choice.boosts.length < choice.available - ((this.get_Character().baseValues.length > 0) ? choice.baseValuesLost : 0))\r\n            ));\r\n        }\r\n    }\r\n\r\n    someAbilitiesIllegal(choice: AbilityChoice, levelNumber: number) {\r\n        let anytrue = 0;\r\n        choice.boosts.forEach(boost => {\r\n            if (this.abilityIllegal(levelNumber, this.get_Abilities(boost.name)[0])) {\r\n                if (!boost.locked) {\r\n                    this.get_Character().boost_Ability(this.characterService, boost.name, false, choice, boost.locked);\r\n                    this.characterService.process_ToChange();\r\n                } else {\r\n                    anytrue += 1;\r\n                }\r\n            }\r\n        });\r\n        return anytrue;\r\n    }\r\n\r\n    abilityIllegal(levelNumber: number, ability: Ability) {\r\n        let illegal = false;\r\n        if (levelNumber == 1 && ability.baseValue(this.get_Character(), this.characterService, levelNumber).result > 18) {\r\n            illegal = true;\r\n        }\r\n        return illegal;\r\n    }\r\n\r\n    cannotBoost(ability: Ability, levelNumber: number, choice: AbilityChoice) {\r\n        //Returns a string of reasons why the ability cannot be boosted, or \"\". Test the length of the return if you need a boolean.\r\n        //Info only choices that don't grant a boost (like for the key ability for archetypes) don't need to be checked.\r\n        if (choice.infoOnly) { return [] };\r\n        let reasons: string[] = [];\r\n        let sameBoostsThisLevel = this.get_AbilityBoosts(levelNumber, levelNumber, ability.name, \"Boost\", choice.source);\r\n        if (sameBoostsThisLevel.length > 0 && sameBoostsThisLevel[0].source == choice.source) {\r\n            //The ability may have been boosted by the same source, but as a fixed rule (e.g. fixed ancestry boosts vs. free ancestry boosts).\r\n            //This does not apply to flaws - you can boost a flawed ability.\r\n            if (sameBoostsThisLevel[0].locked) {\r\n                let locked = \"Fixed boost by \" + sameBoostsThisLevel[0].source + \".\";\r\n                reasons.push(locked);\r\n            } else\r\n                //If an ability has been raised by a source of the same name, but not the same id, it cannot be raised again.\r\n                //This is the case with backgrounds: You get a choice of two abilities, and then a free one.\r\n                if (sameBoostsThisLevel[0].sourceId != choice.id) {\r\n                    let exclusive = \"Boosted by \" + sameBoostsThisLevel[0].source + \".\";\r\n                    reasons.push(exclusive);\r\n                }\r\n        }\r\n        //On level 1, boosts are not allowed to raise the ability above 18.\r\n        //This is only relevant if you haven't boosted the ability on this level yet.\r\n        //If you have, we don't want to hear that it couldn't be boosted again right away.\r\n        let cannotBoostHigher = \"\";\r\n        if (levelNumber == 1 && ability.baseValue(this.get_Character(), this.characterService, levelNumber).result > 16 && sameBoostsThisLevel.length == 0) {\r\n            cannotBoostHigher = \"Cannot boost above 18 on level 1.\";\r\n            reasons.push(cannotBoostHigher);\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    abilityBoostedByThis(ability: Ability, choice: AbilityChoice) {\r\n        return choice.boosts.filter(boost => [\"Boost\", \"Info\"].includes(boost.type) && boost.name == ability.name).length\r\n    }\r\n\r\n    get_AbilityBoosts(minLevelNumber: number, maxLevelNumber: number, abilityName: string = \"\", type: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        return this.get_Character().get_AbilityBoosts(minLevelNumber, maxLevelNumber, abilityName, type, source, sourceId, locked);\r\n    }\r\n\r\n    on_AbilityBoost(abilityName: string, boost: boolean, choice: AbilityChoice, locked: boolean) {\r\n        if (boost && this.get_Character().settings.autoCloseChoices && choice.boosts.length == choice.available - ((this.get_Character().baseValues.length > 0) ? choice.baseValuesLost : 0) - 1) { this.toggle_List(\"\"); }\r\n        this.get_Character().boost_Ability(this.characterService, abilityName, boost, choice, locked);\r\n        this.characterService.set_AbilityToChange(\"Character\", abilityName);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_SkillIncreases(minLevelNumber: number, maxLevelNumber: number, skillName: string, source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        return this.get_Character().get_SkillIncreases(this.characterService, minLevelNumber, maxLevelNumber, skillName, source, sourceId, locked);\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        return this.characterService.get_Skills(this.get_Character(), name, type, locked)\r\n    }\r\n\r\n    size(size: number) {\r\n        switch (size) {\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\";\r\n            case 1:\r\n                return \"Large\";\r\n        }\r\n    }\r\n\r\n    get_INT(levelNumber: number) {\r\n        if (!levelNumber) {\r\n            return 0;\r\n        }\r\n        //We have to calculate the modifier instead of getting .mod() because we don't want any effects in the character building interface.\r\n        let intelligence: number = this.get_Abilities(\"Intelligence\")[0].baseValue(this.get_Character(), this.characterService, levelNumber).result;\r\n        let INT: number = Math.floor((intelligence - 10) / 2);\r\n        return INT;\r\n    }\r\n\r\n    get_SkillINTBonus(choice: SkillChoice, levelNumber: number) {\r\n        //Allow INT more skills if INT has been raised since the last level.\r\n        if (choice.source == \"Intelligence\") {\r\n            return this.get_INT(levelNumber) - this.get_INT(levelNumber - 1);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_SkillChoices(level: Level) {\r\n        return level.skillChoices.filter(choice => !choice.showOnSheet && (choice.available + this.get_SkillINTBonus(choice, level.number) > 0))\r\n    }\r\n\r\n    get_FeatChoices(level: Level, specialChoices: boolean = undefined) {\r\n        let ancestry = this.get_Character().class.ancestry?.name || \"\";\r\n        return level.featChoices.filter(choice =>\r\n            choice.available &&\r\n            (ancestry || choice.type != \"Ancestry\") &&\r\n            !choice.showOnSheet &&\r\n            !choice.showOnCurrentLevel &&\r\n            (specialChoices == undefined || choice.specialChoice == specialChoices)\r\n        ).concat(this.get_FeatChoicesShownOnCurrentLevel(level, specialChoices));\r\n    }\r\n\r\n    get_FeatChoicesShownOnCurrentLevel(level: Level, specialChoices: boolean = undefined) {\r\n        let ancestry = this.get_Character().class.ancestry?.name || \"\";\r\n        if (this.get_Character().level == level.number) {\r\n            let choices: FeatChoice[] = []\r\n            this.get_Character().class.levels.forEach(level => {\r\n                choices.push(...level.featChoices\r\n                    .filter(choice =>\r\n                        (ancestry || choice.type != \"Ancestry\") &&\r\n                        !choice.showOnSheet &&\r\n                        choice.showOnCurrentLevel &&\r\n                        (specialChoices == undefined || choice.specialChoice == specialChoices)\r\n                    )\r\n                );\r\n            })\r\n            return choices;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    on_LoreChange(boost: boolean, choice: LoreChoice) {\r\n        if (boost) {\r\n            if (this.get_Character().settings.autoCloseChoices && (choice.increases.length == choice.available - 1)) { this.toggle_List(\"\"); }\r\n            this.get_Character().add_Lore(this.characterService, choice);\r\n        } else {\r\n            this.get_Character().remove_Lore(this.characterService, choice);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_LoreNameChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Feats(name: string = \"\", type: string = \"\") {\r\n        return this.featsService.get_Feats(this.get_Character().customFeats, name, type);\r\n    }\r\n\r\n    get_FeatsAndFeatures(name: string = \"\", type: string = \"\") {\r\n        return this.featsService.get_All(this.get_Character().customFeats, name, type);\r\n    }\r\n\r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\") {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellLevel(levelNumber: number) {\r\n        return Math.ceil(levelNumber / 2);\r\n    }\r\n\r\n    get_DifferentWorldsFeat(levelNumber: number) {\r\n        if (this.get_Character().get_FeatsTaken(levelNumber, levelNumber, \"Different Worlds\").length) {\r\n            return this.get_Character().customFeats.filter(feat => feat.name == \"Different Worlds\");\r\n        }\r\n    }\r\n\r\n    get_BlessedBloodFeat(levelNumber: number) {\r\n        return this.get_Character().get_FeatsTaken(levelNumber, levelNumber, \"Blessed Blood\").length\r\n    }\r\n\r\n    get_BlessedBloodDeitySpells() {\r\n        let deity = this.characterService.get_Deities(this.get_Character().class.deity)[0];\r\n        if (deity) {\r\n            return deity.clericSpells.map(spell => this.get_Spells(spell.name)[0]).filter(spell => spell && (this.get_Character().settings.showOtherOptions ? true : this.get_BlessedBloodHaveSpell(spell)));\r\n        }\r\n    }\r\n\r\n    get_BlessedBloodSpells() {\r\n        return this.get_Character().get_SpellListSpell(\"\", \"Feat: Blessed Blood\").length\r\n    }\r\n\r\n    get_BlessedBloodHaveSpell(spell: Spell) {\r\n        return this.get_Character().get_SpellListSpell(spell.name, \"Feat: Blessed Blood\").length\r\n    }\r\n\r\n    on_BlessedBloodSpellTaken(spell: Spell, levelNumber: number, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.get_Character().add_SpellListSpell(spell.name, \"Feat: Blessed Blood\", levelNumber);\r\n        } else {\r\n            this.get_Character().remove_SpellListSpell(spell.name, \"Feat: Blessed Blood\", levelNumber);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"spells\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AdditionalHeritagesAvailable(levelNumber: number) {\r\n        return [].concat(...this.get_FeatsAndFeatures()\r\n            .filter(\r\n                feat => feat.gainHeritage.length &&\r\n                    this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length\r\n            ).map(feat => feat.gainHeritage))\r\n    }\r\n\r\n    get_AdditionalHeritageIndex(source: string) {\r\n        let oldHeritage = this.get_Character().class.additionalHeritages.find(heritage => heritage.source == source);\r\n        if (oldHeritage) {\r\n            return [this.get_Character().class.additionalHeritages.indexOf(oldHeritage)];\r\n        } else {\r\n            return [this.get_Character().class.additionalHeritages.length]\r\n        }\r\n    }\r\n\r\n    on_AdditionalHeritageChange(heritage: Heritage, taken: boolean, index: number, source: string) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Heritage(heritage, index, source);\r\n        } else {\r\n            this.characterService.change_Heritage(new Heritage(), index, source);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_DifferentWorldsBackgroundChange(levelNumber: number, feat: Feat, background: Background, taken: boolean) {\r\n        let character = this.get_Character();\r\n        let level = character.class.levels[levelNumber];\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            feat.data[\"background\"] = background.name;\r\n            background.loreChoices.forEach(choice => {\r\n                let newChoice: LoreChoice = character.add_LoreChoice(level, choice);\r\n                newChoice.source = \"Different Worlds\";\r\n                if (newChoice.loreName) {\r\n                    if (this.characterService.get_Skills(this.get_Character(), 'Lore: ' + newChoice.loreName).length) {\r\n                        let increases = character.get_SkillIncreases(this.characterService, 1, 20, 'Lore: ' + newChoice.loreName).filter(increase =>\r\n                            increase.sourceId.includes(\"-Lore-\")\r\n                        );\r\n                        if (increases.length) {\r\n                            let oldChoice = character.get_LoreChoice(increases[0].sourceId);\r\n                            if (oldChoice.available == 1) {\r\n                                character.remove_Lore(this.characterService, oldChoice);\r\n                            }\r\n                        }\r\n                    }\r\n                    character.add_Lore(this.characterService, newChoice);\r\n                }\r\n            })\r\n        } else {\r\n            feat.data[\"background\"] = \"\";\r\n            let oldChoices: LoreChoice[] = level.loreChoices.filter(choice => choice.source == \"Different Worlds\");\r\n            //Remove the lore granted by Different Worlds.\r\n            if (oldChoices.length) {\r\n                let oldChoice = oldChoices[0];\r\n                if (oldChoice.increases.length) {\r\n                    character.remove_Lore(this.characterService, oldChoice);\r\n                }\r\n                level.loreChoices = level.loreChoices.filter(choice => choice.source != \"Different Worlds\");\r\n            }\r\n        }\r\n    }\r\n\r\n    get_FuseStanceFeat(levelNumber: number) {\r\n        if (this.get_Character().get_FeatsTaken(levelNumber, levelNumber, \"Fuse Stance\").length) {\r\n            return this.get_Character().customFeats.filter(feat => feat.name == \"Fuse Stance\");\r\n        }\r\n    }\r\n\r\n    get_StancesToFuse(levelNumber: number, fuseStanceFeat: Feat) {\r\n        //Return all stances that you own.\r\n        //Since Fuse Stance can't use two stances that only allow one type of attack each, we check if one of the previously selected stances does that,\r\n        // and if so, make a note for each available stance with a restriction that it isn't available.\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        let unique: string[] = [];\r\n        let stances: { activity: Activity, restricted: boolean, reason: string }[] = [];\r\n        let restrictedConditions = this.get_Conditions().filter(condition => condition.attackRestrictions.length).map(condition => condition.name);\r\n        let activities = this.activitiesService.get_Activities().filter(activity => activity.traits.includes(\"Stance\"));\r\n        let existingStances: Activity[] = [];\r\n        (fuseStanceFeat.data[\"stances\"] as string[]).forEach(stance => {\r\n            existingStances.push(activities.find(example => example.name == stance));\r\n        })\r\n        let restrictedStances = existingStances.some(example => example.gainConditions.some(gain => restrictedConditions.includes(gain.name)));\r\n        this.characterService.get_OwnedActivities(this.get_Character(), levelNumber)\r\n            .map(activity => activities.find(example => example.name == activity.name))\r\n            .filter(activity => activity && activity.name != \"Fused Stance\")\r\n            .forEach(activity => {\r\n                if (!unique.includes(activity.name) && (showOtherOptions || fuseStanceFeat.data[\"stances\"].length < 2 || fuseStanceFeat.data[\"stances\"].includes(activity.name))) {\r\n                    let restricted = activity.gainConditions.some(gain => restrictedConditions.includes(gain.name));\r\n                    if (restricted && restrictedStances && !fuseStanceFeat.data[\"stances\"].includes(activity.name)) {\r\n                        unique.push(activity.name);\r\n                        stances.push({ activity: activity, restricted: restricted, reason: \"Incompatible restrictions.\" });\r\n                    } else {\r\n                        unique.push(activity.name);\r\n                        stances.push({ activity: activity, restricted: restricted, reason: \"\" });\r\n                    }\r\n                }\r\n            });\r\n        return stances;\r\n    }\r\n\r\n    on_FuseStanceNameChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_FuseStanceStanceChange(feat: Feat, stance: string, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices && feat.data[\"stances\"].length == 1 && feat.data[\"name\"]) { this.toggle_List(\"\"); }\r\n            feat.data[\"stances\"].push(stance);\r\n        } else {\r\n            feat.data[\"stances\"] = feat.data[\"stances\"].filter((existingStance: string) => existingStance != stance);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_FeatsTaken(minLevelNumber: number, maxLevelNumber: number, featName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, filter: string = \"\") {\r\n        let character = this.get_Character();\r\n        return this.get_Character().get_FeatsTaken(minLevelNumber, maxLevelNumber, featName, source, sourceId, locked)\r\n            .filter(taken => filter == \"feature\" ? taken.source == character.class.name : (filter == \"feat\" ? taken.source != character.class.name : true));\r\n    }\r\n\r\n    get_Classes(name: string = \"\") {\r\n        return this.characterService.get_Classes(name);\r\n    }\r\n\r\n    get_AvailableClasses() {\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Classes()\r\n            .filter($class => showOtherOptions || !this.get_Character().class?.name || $class.name == this.get_Character().class.name)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    onClassChange($class: Class, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Class($class);\r\n        } else {\r\n            this.characterService.change_Class(new Class());\r\n        }\r\n    }\r\n\r\n    get_Ancestries(name: string = \"\") {\r\n        return this.historyService.get_Ancestries(name);\r\n    }\r\n\r\n    get_AvailableAncestries() {\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Ancestries()\r\n            .filter(ancestry => showOtherOptions || !this.get_Character().class.ancestry?.name || ancestry.name == this.get_Character().class.ancestry.name)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    onAncestryChange(ancestry: Ancestry, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Ancestry(ancestry, this.itemsService);\r\n        } else {\r\n            this.characterService.change_Ancestry(new Ancestry(), this.itemsService);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AvailableDeities(name: string = \"\") {\r\n        let currentDeity = this.get_Character().class?.deity || \"\";\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        //Champions and Clerics need to choose a deity matching their alignment.\r\n        if (![\"Champion\", \"Cleric\"].includes(this.get_Character().class.name)) {\r\n            return this.deitiesService.get_Deities(name).filter(deity => showOtherOptions || !currentDeity || deity.name == currentDeity)\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                });\r\n        } else {\r\n            return this.deitiesService.get_Deities(name).filter((deity: Deity) => (showOtherOptions || !currentDeity || deity.name == currentDeity) && (!this.get_Character().alignment || deity.followerAlignments.includes(this.get_Character().alignment)))\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                });\r\n        }\r\n    }\r\n\r\n    on_DeityChange(deity: Deity, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Deity(deity);\r\n        } else {\r\n            this.characterService.change_Deity(new Deity());\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Conditions(name: string = \"\") {\r\n        return this.conditionsService.get_Conditions(name);\r\n    }\r\n\r\n    get_Heritages(name: string = \"\", ancestryName: string = \"\") {\r\n        return this.historyService.get_Heritages(name, ancestryName);\r\n    }\r\n\r\n    get_SubHeritageNames(heritage: Heritage) {\r\n        return heritage.subTypes.map(subheritage => subheritage.name);\r\n    }\r\n\r\n    get_AvailableHeritages(name: string = \"\", ancestryName: string = \"\", index: number = -1) {\r\n        let heritage = this.get_Character().class.heritage;\r\n        if (index != -1) {\r\n            heritage = this.get_Character().class.additionalHeritages[index];\r\n        }\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Heritages(name, ancestryName)\r\n            .filter(availableHeritage =>\r\n            (\r\n                showOtherOptions ||\r\n                !heritage?.name ||\r\n                availableHeritage.name == heritage.name ||\r\n                availableHeritage.subTypes?.some(subType => subType.name == heritage.name))\r\n            )\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_HaveHeritage(name: string = \"\") {\r\n        return this.get_Character().class.heritage.name == name || this.get_Character().class.additionalHeritages.some(heritage => heritage.name == name);\r\n    }\r\n\r\n    onHeritageChange(heritage: Heritage, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Heritage(heritage);\r\n        } else {\r\n            this.characterService.change_Heritage(new Heritage());\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Backgrounds(name: string = \"\") {\r\n        return this.historyService.get_Backgrounds(name).filter(background =>\r\n            !background.subType &&\r\n            (!this.adventureBackgrounds ? !background.adventurePath : true) &&\r\n            (!this.regionalBackgrounds ? !background.region : true)\r\n        );\r\n    }\r\n\r\n    get_AvailableBackgrounds() {\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Backgrounds().filter(background =>\r\n            showOtherOptions ||\r\n            !this.get_Character().class.background?.name ||\r\n            background.name == this.get_Character().class.background.name ||\r\n            background.name == this.get_Character().class.background.superType\r\n        )\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_SubBackgrounds(superType: string = \"\") {\r\n        return this.historyService.get_Backgrounds().filter(background => background.superType == superType);\r\n    }\r\n\r\n    get_SubBackgroundNames(superType: string) {\r\n        return this.get_SubBackgrounds(superType).map(subbackground => subbackground.name);\r\n    }\r\n\r\n    onBackgroundChange(background: Background, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Background(background);\r\n        } else {\r\n            this.characterService.change_Background(new Background());\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_CompanionAvailable(levelNumber: number) {\r\n        //Return the number of feats taken this level that granted you an animal companion\r\n        return this.get_FeatsAndFeatures().filter(feat => (feat.gainAnimalCompanion == 1) && this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length).length;\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Character().class.animalCompanion;\r\n    }\r\n\r\n    on_NewCompanion() {\r\n        if (this.characterService.get_Character().class.animalCompanion) {\r\n            let character = this.characterService.get_Character();\r\n            character.class.animalCompanion = new AnimalCompanion();\r\n            character.class.animalCompanion.class = new AnimalCompanionClass();\r\n            this.characterService.initialize_AnimalCompanion();\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    get_AvailableCompanionTypes() {\r\n        let existingCompanionName: string = this.get_Companion().class.ancestry.name;\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.animalCompanionsService.get_CompanionTypes()\r\n            .filter(type => showOtherOptions || !existingCompanionName || type.name == existingCompanionName)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    on_CompanionTypeChange(type: AnimalCompanionAncestry, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.get_Companion().class.on_ChangeAncestry(this.characterService);\r\n            this.animalCompanionsService.change_Type(this.get_Companion(), type);\r\n            this.get_Companion().class.on_NewAncestry(this.characterService, this.itemsService);\r\n        } else {\r\n            this.get_Companion().class.on_ChangeAncestry(this.characterService);\r\n            this.animalCompanionsService.change_Type(this.get_Companion(), new AnimalCompanionAncestry());\r\n        }\r\n        this.characterService.set_ToChange(\"Companion\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_SpecializationChange(spec: AnimalCompanionSpecialization, taken: boolean, levelNumber: number) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices && this.get_Companion().class.specializations.filter(spec => spec.level == levelNumber).length == this.get_CompanionSpecializationsAvailable(levelNumber) - 1) {\r\n                this.toggle_List(\"\");\r\n            }\r\n            this.animalCompanionsService.add_Specialization(this.get_Companion(), spec, levelNumber);\r\n        } else {\r\n            this.animalCompanionsService.remove_Specialization(this.get_Companion(), spec);\r\n        }\r\n        this.characterService.set_ToChange(\"Companion\", \"abilities\");\r\n        this.characterService.set_ToChange(\"Companion\", \"skills\");\r\n        this.characterService.set_ToChange(\"Companion\", \"attacks\");\r\n        this.characterService.set_ToChange(\"Companion\", \"defense\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_CompanionSpecializationsAvailable(levelNumber: number) {\r\n        //Return the number of feats taken this level that granted you an animal companion specialization (i.e. gainAnimalCompanion == 6)\r\n        return this.characterService.get_FeatsAndFeatures().filter(feat => (feat.gainAnimalCompanion == 6) && this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length).length;\r\n    }\r\n\r\n    get_AvailableCompanionSpecializations(levelNumber: number) {\r\n        let existingCompanionSpecs: AnimalCompanionSpecialization[] = this.get_Companion().class.specializations;\r\n        let available = this.get_CompanionSpecializationsAvailable(levelNumber);\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        //Get all specializations that were either taken on this level (so they can be deselected) or that were not yet taken if the choice is not exhausted.\r\n        return this.animalCompanionsService.get_CompanionSpecializations().filter(type =>\r\n            showOtherOptions ||\r\n            existingCompanionSpecs.find(spec => spec.name == type.name && spec.level == levelNumber) ||\r\n            (existingCompanionSpecs.filter(spec => spec.level == levelNumber).length < available) &&\r\n            !existingCompanionSpecs.find(spec => spec.name == type.name)\r\n        )\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_TakenCompanionSpecializations(levelNumber: number) {\r\n        return this.get_Companion().class.specializations.filter(spec => spec.level == levelNumber).map(spec => spec.name);\r\n    }\r\n\r\n    have_CompanionSpecialization(name: string) {\r\n        return this.get_Companion().class.specializations.some(spec => spec.name == name);\r\n    }\r\n\r\n    get_FamiliarAvailable(levelNumber: number) {\r\n        //Return the number of feats taken this level that granted you a familiar\r\n        return this.characterService.get_FeatsAndFeatures().filter(feat => feat.gainFamiliar && this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length).length;\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Character().class.familiar;\r\n    }\r\n\r\n    on_NewFamiliar() {\r\n        if (this.get_Character().class.familiar) {\r\n            let character = this.characterService.get_Character();\r\n            //Preserve the origin class and set it again after resetting\r\n            let originClass = character.class.familiar.originClass;\r\n            this.characterService.cleanup_Familiar();\r\n            character.class.familiar = new Familiar();\r\n            character.class.familiar.originClass = originClass;\r\n            this.characterService.initialize_Familiar();\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    on_FamiliarSpeedChange(taken: boolean) {\r\n        if (taken) {\r\n            this.get_Familiar().speeds[1].name = \"Swim Speed\";\r\n        } else {\r\n            this.get_Familiar().speeds[1].name = \"Land Speed\";\r\n        }\r\n        this.characterService.set_ToChange(\"Familiar\", \"general\");\r\n        this.characterService.set_ToChange(\"Familiar\", \"familiarabilities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    is_FamiliarSwimmer() {\r\n        return this.get_Familiar().speeds[1].name == \"Swim Speed\"\r\n    }\r\n\r\n    get_ItemFromGain(gain: ItemGain) {\r\n        return this.characterService.get_CleanItems()[gain.type].filter((item: Item) => item.name.toLowerCase() == gain.name.toLowerCase());\r\n    }\r\n\r\n    get_AnimalCompanionAbilities(type: AnimalCompanionAncestry) {\r\n        let abilities: [{ name: string, modifier: string }] = [{ name: \"\", modifier: \"\" }];\r\n        this.characterService.get_Abilities().forEach(ability => {\r\n            let name = ability.name.substr(0, 3);\r\n            let modifier = 0;\r\n            let classboosts = this.get_Companion().class.levels[1].abilityChoices[0].boosts.filter(boost => boost.name == ability.name)\r\n            let ancestryboosts = type.abilityChoices[0].boosts.filter(boost => boost.name == ability.name);\r\n            modifier = ancestryboosts.concat(classboosts).filter(boost => boost.type == \"Boost\").length - ancestryboosts.concat(classboosts).filter(boost => boost.type == \"Flaw\").length;\r\n            abilities.push({ name: name, modifier: (modifier > 0 ? \"+\" : \"\") + modifier.toString() })\r\n        })\r\n        abilities.shift();\r\n        return abilities;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"character\", \"all\", \"charactersheet\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"charactersheet\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div class=\"window-button-container\">\r\n    <button class=\"minimizebutton lower\"\r\n        [ngbTooltip]=\"get_Minimized() ? 'Click to show all choices and information.' : 'Click to hide finished choices and show compact information.'\"\r\n        [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n        <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n        <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n    </button>\r\n    <button class=\"tilemodebutton\" [ngClass]=\"{'fancy-button':get_TileMode()}\" (click)=\"toggle_TileMode()\"\r\n        [ngbTooltip]=\"get_TileMode() ? 'Click to enable list layout' : 'Click to enable tiled layout'\">\r\n        <!--Content is css only-->\r\n        <div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n        </div>\r\n    </button>\r\n</div>\r\n<div id=\"character-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleCharacterMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"charactersheet-column-container\">\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n                <!--Management list mode-->\r\n                <ng-container *ngIf=\"!get_TileMode()\">\r\n                    <div class=\"list-item\">\r\n                        <button class=\"newrow\" (click)=\"on_NewCharacter()\">\r\n                            New Character\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"list-item\">\r\n                        <button class=\"newrow\" (click)=\"toggle_List('load')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='load'}\">\r\n                            Load Character\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"list-item\" [ngbTooltip]=\"!get_Savegames() ? 'Database connection failed.' : ''\">\r\n                        <button class=\"newrow\" (click)=\"save_CharacterToDB()\" *ngIf=\"!still_loading()\"\r\n                            [disabled]=\"!get_Savegames() || get_IsBlankCharacter()\">\r\n                            Save Character\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"list-item\">\r\n                        <button class=\"newrow\" (click)=\"toggle_List('settings')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='settings'}\">\r\n                            Settings\r\n                        </button>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Management tile mode-->\r\n                <div class=\"newrow list-item\" *ngIf=\"get_TileMode()\">\r\n                    <div class=\"icon-list\">\r\n                        <button (click)=\"on_NewCharacter()\">\r\n                            <app-gridIcon [ngbTooltip]=\"'New Character'\" [title]=\"'N E W'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <button class=\"sublist-toggle\" (click)=\"toggle_List('load')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='load'}\">\r\n                            <app-gridIcon [ngbTooltip]=\"'Load Character'\" [title]=\"'L O A D'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <button (click)=\"save_CharacterToDB()\" *ngIf=\"!still_loading()\"\r\n                            [disabled]=\"!get_Savegames() || get_IsBlankCharacter()\">\r\n                            <app-gridIcon\r\n                                [ngbTooltip]=\"!get_Savegames() ? 'Database connection failed.' : (get_IsBlankCharacter() ? 'No changes to character yet.' : 'Save Character')\"\r\n                                [title]=\"'S A V E'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <button (click)=\"toggle_List('settings')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='settings'}\">\r\n                            <app-gridIcon [ngbTooltip]=\"'Settings'\" [title]=\"'C O N F'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"!still_loading() && get_CharacterMenuState() == 'in'\">\r\n                    <div class=\"list-item\">\r\n                        <strong>Experience Points</strong>\r\n                        <span>\r\n                            <button (click)=\"on_LevelUp()\"\r\n                                *ngIf=\"get_Character().experiencePoints >= 1000 && get_Character().level < 20\">Level\r\n                                Up</button>\r\n                            <input type=\"number\" class=\"number4\" id=\"experiencePoints\"\r\n                                [(ngModel)]=\"get_Character().experiencePoints\" (keypress)=\"numbersOnly($event)\"\r\n                                maxLength=\"4\"\r\n                                [ngbTooltip]=\"(get_Character().experiencePoints >= 1000 && get_Character().level < 20) ? 'You are ready to level up!' : ''\"\r\n                                [ngClass]=\"{'bonus':(get_Character().experiencePoints >= 1000 && get_Character().level < 20)}\">\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"list-item\" *ngFor=\"let oldLevel of [get_Character().level]; trackBy:trackByIndex;\">\r\n                        <strong>\r\n                            Level\r\n                        </strong>\r\n                        <span>\r\n                            <select [(ngModel)]=\"get_Character().level\" (ngModelChange)=\"on_LevelChange(oldLevel)\">\r\n                                <option\r\n                                    *ngFor=\"let level of [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]; trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"level\">\r\n                                    {{level}}\r\n                                </option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <header class=\"subsectionHeader\">Show Level</header>\r\n                    <!--Level selection-->\r\n                    <div class=\"list-item\">\r\n                        <div id=\"levelBox\" class=\"fullwidth levelBoxTop\">\r\n                            <button class=\"center-aligned\" (click)=\"toggle_Level(0)\"\r\n                                [ngClass]=\"{'fancy-button':get_ShowLevel()==0}\">Everything</button>\r\n                            <button class=\"center-aligned\" (click)=\"toggle_Level(-1)\"\r\n                                [ngClass]=\"{'fancy-button':get_ShowLevel()==-1}\">History</button>\r\n                        </div>\r\n                        <div id=\"levelBox\" class=\"fullwidth\">\r\n                            <button class=\"center-aligned\"\r\n                                *ngFor=\"let levelNumber of [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]; trackBy:trackByIndex;\"\r\n                                (click)=\"toggle_Level(levelNumber)\" [disabled]=\"!get_Character().class.name\"\r\n                                [ngClass]=\"{'fancy-button':get_ShowLevel()==levelNumber}\">{{levelNumber}}</button>\r\n                        </div>\r\n                    </div>\r\n                    <app-tags [creature]=\"'Character'\" [objectName]=\"'Character'\" [showTraits]=true [showFeats]=true\r\n                        [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n                    <div [ngClass]=\"{'invisible':get_ShowLevel() > 0}\">\r\n                        <header class=\"sectionHeader\">History</header>\r\n                        <div class=\"list-item\">\r\n                            <strong>Name</strong>\r\n                            <span>\r\n                                <input type=\"text\" id=\"charactername\" [(ngModel)]=\"get_Character().name\"\r\n                                    (blur)=\"on_NameChange()\" maxLength=\"100\">\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <div class=\"newrow\">\r\n                                <strong>Party name</strong>\r\n                                <span>\r\n                                    <input type=\"text\" id=\"partyname\" [(ngModel)]=\"get_Character().partyName\"\r\n                                        maxLength=\"100\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"newrow\">\r\n                                <span></span>\r\n                                <span>\r\n                                    <select [(ngModel)]=\"get_Character().partyName\">\r\n                                        <option *ngFor=\"let partyName of get_Parties(); trackBy:trackByIndex;\"\r\n                                            [ngValue]=\"partyName\">\r\n                                            {{partyName}}\r\n                                        </option>\r\n                                    </select>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>\r\n                                Alignment\r\n                            </strong>\r\n                            <span>\r\n                                <select [(ngModel)]=\"get_Character().alignment\" (ngModelChange)=\"on_AlignmentChange()\">\r\n                                    <option *ngFor=\"let alignment of get_Alignments(); trackBy:trackByIndex;\"\r\n                                        [ngValue]=\"alignment\">\r\n                                        {{alignment}}\r\n                                    </option>\r\n                                </select>\r\n                            </span>\r\n                        </div>\r\n                        <!--Available Ancestry Feats-->\r\n                        <div class=\"list-item fullsize-only\" *ngIf=\"get_Character().class.ancestry.name\">\r\n                            <strong>Available Ancestry Feats</strong>\r\n                            <div class=\"newrow left-aligned\" *ngIf=\"get_Character().class.ancestry?.ancestries.length\">\r\n                                <cite class=\"trait\"\r\n                                    *ngFor=\"let ancestry of get_Character().class.ancestry.ancestries; trackBy:trackByIndex;\">{{ancestry}}&nbsp;</cite>\r\n                            </div>\r\n                        </div>\r\n                        <!--History list mode-->\r\n                        <ng-container *ngIf=\"!get_TileMode()\">\r\n                            <!--BaseValues-->\r\n                            <div class=\"list-item\">\r\n                                <button class=\"newrow fancy-button\"\r\n                                    [ngClass]=\"{'choicecleared':get_Character().baseValues.length, 'activechoice':get_ShowList()=='alternativeBaseValues'}\"\r\n                                    (click)=\"toggle_List('alternativeBaseValues')\">\r\n                                    Alternative Ability Values: {{(get_Character().baseValues.length) ? \"Used\" : \"Not\r\n                                    Used\"}}\r\n                                </button>\r\n                            </div>\r\n                            <!--Class-->\r\n                            <div class=\"list-item\" [ngClass]=\"{'fullsize-only':get_Character().class.name}\">\r\n                                <button class=\"newrow\"\r\n                                    [ngClass]=\"{'fancy-button choicecleared':get_Character().class.name, 'activechoice':get_ShowList()=='class'}\"\r\n                                    (click)=\"toggle_List('class')\">\r\n                                    Class{{(get_Character().class.name) ? \": \"+ get_Character().class.name : \"\"}}\r\n                                </button>\r\n                            </div>\r\n                            <!--Ancestry-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <div class=\"list-item list-header\"\r\n                                    [ngClass]=\"{'fullsize-only':get_Character().class.ancestry.name}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':get_Character().class.ancestry.name, 'activechoice':get_ShowList()=='ancestry'}\"\r\n                                        (click)=\"toggle_List('ancestry')\">\r\n                                        Ancestry{{(get_Character().class.ancestry.name) ? \": \"+\r\n                                        get_Character().class.ancestry.name : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Heritage-->\r\n                            <ng-container *ngIf=\"get_Character().class.ancestry.name\">\r\n                                <div class=\"list-item\"\r\n                                    [ngClass]=\"{'fullsize-only':get_Character().class.heritage.name}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':get_Character().class.heritage.name, 'activechoice':get_ShowList()=='heritage'}\"\r\n                                        (click)=\"toggle_List('heritage')\">\r\n                                        Heritage{{(get_Character().class.heritage.name) ? \": \"+\r\n                                        get_Character().class.heritage.name : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Languages-->\r\n                            <ng-container\r\n                                *ngFor=\"let currentLanguages of [get_CurrentLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let blankLanguages of [get_BlankLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                    <div class=\"list-item\" [ngClass]=\"{'fullsize-only':!blankLanguages}\"\r\n                                        *ngIf=\"get_LanguagesAvailable()\">\r\n                                        <button class=\"newrow\"\r\n                                            [ngClass]=\"{'fancy-button choicecleared':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==get_Character().level}\"\r\n                                            (click)=\"toggle_List('languages', get_Character().level)\">\r\n                                            Languages\r\n                                        </button>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <!--Background-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <div class=\"list-item\"\r\n                                    [ngClass]=\"{'fullsize-only':(get_Character().class.background.name)}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':((get_Character().class.background.name)), 'activechoice':get_ShowList()=='background'}\"\r\n                                        (click)=\"toggle_List('background')\">\r\n                                        Background{{(get_Character().class.background.name) ? \": \"+\r\n                                        get_Character().class.background.name : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Deity-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <div class=\"list-item\" [ngClass]=\"{'fullsize-only':get_Character().class.deity}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':get_Character().class.deity, 'activechoice':get_ShowList()=='deity'}\"\r\n                                        (click)=\"toggle_List('deity')\">\r\n                                        Deity{{get_Character().class.deity ? \": \"+get_Character().class.deity : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                        <!--History tile mode-->\r\n                        <div class=\"list-item icon-list\" *ngIf=\"get_TileMode()\">\r\n                            <!--BaseValues-->\r\n                            <button class=\"fancy-button\"\r\n                                [ngClass]=\"{'choicecleared':get_Character().baseValues.length, 'activechoice':get_ShowList()=='alternativeBaseValues'}\"\r\n                                (click)=\"toggle_List('alternativeBaseValues')\">\r\n                                <app-gridIcon class=\"fancy-button\"\r\n                                    [ngbTooltip]=\"'Alternative Ability Values: ' + (get_Character().baseValues.length ? 'Used' : 'Not Used')\"\r\n                                    [title]=\"'A B I'\">\r\n                                </app-gridIcon>\r\n                            </button>\r\n                            <!--Class-->\r\n                            <button\r\n                                [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.name, 'activechoice':get_ShowList()=='class'}\"\r\n                                (click)=\"toggle_List('class')\">\r\n                                <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.name}\"\r\n                                    [ngbTooltip]=\"'Class' + (get_Character().class.name ? ': ' + get_Character().class.name : '')\"\r\n                                    [title]=\"get_Character().class.name ? get_Character().class.name : 'C L A S'\">\r\n                                </app-gridIcon>\r\n                            </button>\r\n                            <!--Ancestry-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.ancestry.name, 'activechoice':get_ShowList()=='ancestry'}\"\r\n                                    (click)=\"toggle_List('ancestry')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.ancestry.name}\"\r\n                                        [ngbTooltip]=\"'Ancestry' + (get_Character().class.ancestry.name ? ': ' + get_Character().class.ancestry.name : '')\"\r\n                                        [title]=\"get_Character().class.ancestry.name ? get_Character().class.ancestry.name : 'A N C E'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                            <!--Heritage-->\r\n                            <ng-container *ngIf=\"get_Character().class.ancestry.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.heritage.name, 'activechoice':get_ShowList()=='heritage'}\"\r\n                                    (click)=\"toggle_List('heritage')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.heritage.name}\"\r\n                                        [ngbTooltip]=\"'Heritage' + (get_Character().class.heritage.name ? ': ' + get_Character().class.heritage.name : '')\"\r\n                                        [title]=\"get_Character().class.heritage.name ? get_Character().class.heritage.name : 'H E R I'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                            <!--Languages-->\r\n                            <ng-container\r\n                                *ngFor=\"let currentLanguages of [get_CurrentLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let blankLanguages of [get_BlankLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                    <button\r\n                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==get_Character().level}\"\r\n                                        (click)=\"toggle_List('languages', get_Character().level)\"\r\n                                        *ngIf=\"get_LanguagesAvailable()\">\r\n                                        <app-gridIcon\r\n                                            [ngClass]=\"{'fancy-button':!blankLanguages}\"\r\n                                            [ngbTooltip]=\"'Languages'\" [title]=\"'L A N G'\"\r\n                                            [superTitle]=\"currentLanguages.toString()\">\r\n                                        </app-gridIcon>\r\n                                    </button>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <!--Background-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':((get_Character().class.background.name)), 'activechoice':get_ShowList()=='background'}\"\r\n                                    (click)=\"toggle_List('background')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.background.name}\"\r\n                                        [ngbTooltip]=\"'Background' + (get_Character().class.background.name ? ': ' + get_Character().class.background.name : '')\"\r\n                                        [title]=\"get_Character().class.background.name ? get_Character().class.background.name : 'B A C K'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                            <!--Deity-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.deity, 'activechoice':get_ShowList()=='deity'}\"\r\n                                    (click)=\"toggle_List('deity')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.deity}\"\r\n                                        [ngbTooltip]=\"'Deity' + (get_Character().class.deity ? ': ' + get_Character().class.deity : '')\"\r\n                                        [title]=\"get_Character().class.deity ? get_Character().class.deity : 'D E I T'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                    <!--Levels-->\r\n                    <ng-container *ngIf=\"get_Character().class\">\r\n                        <ng-container *ngFor=\"let level of get_Character().class.levels; trackBy:trackByIndex;\">\r\n                            <div\r\n                                [ngClass]=\"{'invisible':!(level.number > 0 && [0,level.number].includes(get_ShowLevel()))}\">\r\n                                <header class=\"sectionHeader levelHeader\" *ngIf=\"level.number > 0\">Level\r\n                                    {{level.number}}</header>\r\n                                <div [ngClass]=\"{'character-choice-grid':get_TileMode()}\">\r\n                                    <div [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let fixedAbilityBoosts of [get_AbilityBoosts(level.number, level.number, '', '', '', '', true)]; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let fixedSkillIncreases of [get_SkillIncreases(level.number, level.number, '', '', '', true)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let fixedFeats of [get_FeatsTaken(level.number, level.number, '', '', '', true, 'feat')]; trackBy:trackByIndex;\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let fixedFeatures of [get_FeatsTaken(level.number, level.number, '', '', '', true, 'feature')]; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngIf=\"fixedAbilityBoosts.length + fixedSkillIncreases.length + fixedFeatures.length + fixedFeats.length > 0\">\r\n                                                            <!--Fixed information list mode-->\r\n                                                            <div class=\"fullsize-only list-item\"\r\n                                                                *ngIf=\"!get_TileMode()\">\r\n                                                                <button class=\"newrow sublist-toggle fancy-button\"\r\n                                                                    (click)=\"toggle_List('fixedchanges', level.number, {abilityBoosts:fixedAbilityBoosts, skillIncreases:fixedSkillIncreases, features:fixedFeatures, feats:fixedFeats})\"\r\n                                                                    [ngClass]=\"{'activechoice':get_ShowList()=='fixedchanges' && get_ShowContentLevelNumber()==level.number}\">\r\n                                                                    Show fixed changes\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            <!--Fixed information tile mode-->\r\n                                                            <div class=\"fullsize-only\" *ngIf=\"get_TileMode()\">\r\n                                                                <button\r\n                                                                    [ngClass]=\"{'fancy-button activechoice':get_ShowFixedChangesLevelNumber()==level.number}\"\r\n                                                                    (click)=\"toggle_FixedChangesLevelNumber(level.number)\">\r\n                                                                    <app-gridIcon\r\n                                                                        [ngClass]=\"{'fancy-button':get_ShowFixedChangesLevelNumber()==level.number}\"\r\n                                                                        [ngbTooltip]=\"(get_ShowFixedChangesLevelNumber()==level.number ? 'Hide' : 'Show') + ' fixed changes'\"\r\n                                                                        [title]=\"'F I X'\">\r\n                                                                    </app-gridIcon>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Ability boosts-->\r\n                                    <div id=\"abilityboosts\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed ability boosts-->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let boost of get_AbilityBoosts(level.number, level.number, '', '', '', '', true); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedAbilityBoostContent>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>{{boost.type == 'Flaw' ? 'Flaw' :\r\n                                                            'Boost'}}&nbsp;</strong>\r\n                                                        {{boost.name}}\r\n                                                    </div>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong> {{boost.source}}\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedAbilityPopover=\"ngbPopover\"\r\n                                                    [ngbPopover]=\"FixedAbilityBoostContent\" triggers=\"click\">\r\n                                                    <app-gridIcon class=\"abilityboost\"\r\n                                                        [ngbTooltip]=\"!FixedAbilityPopover.isOpen() && ((boost.type == 'Flaw' ? 'Flaw: ' : 'Boost: ') + boost.name)\"\r\n                                                        [title]=\"boost.name\" [superTitle]=\"'icon-bi-lock-fill'\"\r\n                                                        [detail]=\"(boost.type == 'Flaw' ? 'Flaw' : 'Boost')\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of level.abilityChoices; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let maxAvailable of [get_MaxAvailable(choice)]; trackBy:trackByIndex;\">\r\n                                                <!--List mode ability boost buttons-->\r\n                                                <div class=\"list-item\" *ngIf=\"maxAvailable && !get_TileMode()\"\r\n                                                    [ngClass]=\"{'problem':(choice.boosts.length > maxAvailable || someAbilitiesIllegal(choice, level.number)), 'fullsize-only':choice.boosts.length == maxAvailable}\">\r\n                                                    <button class=\"newrow sublist-toggle abilityboost\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':choice.boosts.length == maxAvailable, 'activechoice':get_ShowList()==choice.id}\"\r\n                                                        (click)=\"toggle_List(choice.id, level.number, choice)\">\r\n                                                        {{get_AbilityChoiceTitle(choice)}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <!--Tile mode ability boost buttons-->\r\n                                                <button class=\"abilityboost\" *ngIf=\"maxAvailable && get_TileMode()\"\r\n                                                    (click)=\"toggle_List(choice.id, level.number, choice)\"\r\n                                                    [ngClass]=\"{'problem':(choice.boosts.length > maxAvailable || someAbilitiesIllegal(choice, level.number)), 'fancy-button fullsize-only choicecleared':choice.boosts.length == maxAvailable, 'activechoice':get_ShowList()==choice.id}\">\r\n                                                    <app-gridIcon class=\"abilityboost\"\r\n                                                        [ngbTooltip]=\"get_AbilityChoiceTitle(choice)\"\r\n                                                        [superTitle]=\"maxAvailable.toString()\"\r\n                                                        [title]=\"(maxAvailable == 1 && choice.boosts.length) ? choice.boosts[0].name : ((maxAvailable > 1 && choice.boosts.length > 0) ? choice.boosts.length.toString() : '')\"\r\n                                                        [ngClass]=\"{'fancy-button':choice.boosts.length == maxAvailable}\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Skill Increases-->\r\n                                    <div id=\"skillincreases\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed skill increases -->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let skillIncrease of get_SkillIncreases(level.number, level.number, '', '', '', true); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedSkillIncreaseContent>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>{{skillIncrease.name}}</strong>\r\n                                                    </div>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong> {{skillIncrease.source}}\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedSkillPopover=\"ngbPopover\"\r\n                                                    [ngbPopover]=\"FixedSkillIncreaseContent\" triggers=\"click\">\r\n                                                    <app-gridIcon class=\"skillincrease\"\r\n                                                        [ngbTooltip]=\"!FixedSkillPopover.isOpen() && skillIncrease.name\"\r\n                                                        [title]=\"skillIncrease.name\" [superTitle]=\"'icon-bi-lock-fill'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Skill Choices handle tile mode internally-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of get_SkillChoices(level); let index = index; trackBy:trackByIndex;\">\r\n                                            <app-skillchoice (showSkillChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                [choice]=\"choice\" [showChoice]=\"get_ShowList()\"\r\n                                                [levelNumber]=\"level.number\" [showContent]=\"false\"\r\n                                                [excludeTemporary]=\"true\" [tileMode]=\"get_TileMode()\">\r\n                                            </app-skillchoice>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Feat choices-->\r\n                                    <div id=\"featchoices\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed feats-->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let feat of get_FeatsTaken(level.number, level.number, '', '', '', true, 'feat'); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedFeatContent>\r\n                                                    <header class=\"spellHeader\">{{feat.name}}</header>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong>\r\n                                                        {{feat.source}}\r\n                                                    </div>\r\n                                                    <app-feat [feat]=\"get_FeatsAndFeatures(feat.name)[0]\"\r\n                                                        [choice]=\"null\" [levelNumber]=\"level.number\">\r\n                                                    </app-feat>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedFeatPopover=\"ngbPopover\" [ngbPopover]=\"FixedFeatContent\"\r\n                                                    triggers=\"click\">\r\n                                                    <app-gridIcon class=\"featchoice\"\r\n                                                        [ngbTooltip]=\"!FixedFeatPopover.isOpen() && feat.name\"\r\n                                                        [title]=\"feat.name\" [superTitle]=\"'icon-bi-lock-fill'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Feat Choices handle tile mode internally-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of get_FeatChoices(level, false); let index = index; trackBy:trackByIndex;\">\r\n                                            <app-featchoice (showFeatChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"choice\"\r\n                                                [levelNumber]=\"level.number\" [showContent]=\"false\"\r\n                                                [showFeat]=\"get_ShowItem()\" [showChoice]=\"get_ShowList()\"\r\n                                                [unavailableFeats]=\"get_Character().settings.unavailableFeats\"\r\n                                                [lowerLevelFeats]=\"get_Character().settings.lowerLevelFeats\"\r\n                                                [higherLevelFeats]=\"get_Character().settings.higherLevelFeats\"\r\n                                                [archetypeFeats]=\"get_Character().settings.archetypeFeats\"\r\n                                                [tileMode]=\"get_TileMode()\">\r\n                                            </app-featchoice>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Special choices-->\r\n                                    <div id=\"specialchoices\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed features-->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let feature of get_FeatsTaken(level.number, level.number, '', '', '', true, 'feature'); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedFeatureContent>\r\n                                                    <header class=\"spellHeader\">{{feature.name}}</header>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong>\r\n                                                        {{feature.source}}\r\n                                                    </div>\r\n                                                    <app-feat [feat]=\"get_FeatsAndFeatures(feature.name)[0]\"\r\n                                                        [choice]=\"null\" [levelNumber]=\"level.number\">\r\n                                                    </app-feat>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedFeaturePopover=\"ngbPopover\" [ngbPopover]=\"FixedFeatureContent\"\r\n                                                    triggers=\"click\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngbTooltip]=\"!FixedFeaturePopover.isOpen() && feature.name\"\r\n                                                        [title]=\"feature.name\" [superTitle]=\"'icon-bi-lock-fill'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Languages - show if you have gained languages this level-->\r\n                                        <ng-container *ngIf=\"level.number > 0 && get_LanguagesAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let currentLanguages of [get_CurrentLanguages(level.number)]; trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let blankLanguages of [get_BlankLanguages(level.number)]; trackBy:trackByIndex\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':!blankLanguages}\">\r\n                                                        <button class=\"newrow specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                            (click)=\"toggle_List('languages', level.number)\">\r\n                                                            Languages: {{currentLanguages -\r\n                                                            blankLanguages}}/{{currentLanguages}}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('languages', level.number)\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':!blankLanguages}\"\r\n                                                            [ngbTooltip]=\"'Languages: ' + (currentLanguages - blankLanguages) + '/' + currentLanguages\"\r\n                                                            [title]=\"blankLanguages ? blankLanguages.toString() : currentLanguages.toString()\"\r\n                                                            [superTitle]=\"'icon-ra ra-speech-bubbles'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--\"Specialchoice\" feat choices (feats handle tile mode internally)-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of get_FeatChoices(level, true); let index = index; trackBy:trackByIndex;\">\r\n                                            <app-featchoice (showFeatChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"choice\"\r\n                                                [levelNumber]=\"level.number\" [showContent]=\"false\"\r\n                                                [showFeat]=\"get_ShowItem()\" [showChoice]=\"get_ShowList()\"\r\n                                                [unavailableFeats]=\"get_Character().settings.unavailableFeats\"\r\n                                                [lowerLevelFeats]=\"get_Character().settings.lowerLevelFeats\"\r\n                                                [higherLevelFeats]=\"get_Character().settings.higherLevelFeats\"\r\n                                                [archetypeFeats]=\"get_Character().settings.archetypeFeats\"\r\n                                                [tileMode]=\"get_TileMode()\">\r\n                                            </app-featchoice>\r\n                                        </ng-container>\r\n                                        <!--Animal Companion-->\r\n                                        <ng-container *ngIf=\"get_CompanionAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let companion of [get_Companion()]; trackBy:trackByIndex\">\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':(companion.name && companion.species && companion.class.ancestry.name)}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':(companion.name && companion.species && companion.class.ancestry.name), 'activechoice':get_ShowList()=='animalcompanion' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('animalcompanion', level.number)\">\r\n                                                        Animal Companion{{(companion.class.ancestry.name) ? \": \"+\r\n                                                        companion.class.ancestry.name : \"\"}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':(companion.name && companion.species && companion.class.ancestry.name), 'activechoice':get_ShowList()=='animalcompanion' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('animalcompanion', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':(companion.name && companion.species && companion.class.ancestry.name)}\"\r\n                                                        [ngbTooltip]=\"'Animal Companion' + ((companion.class.ancestry.name) ? ': ' + companion.class.ancestry.name : '')\"\r\n                                                        [title]=\"companion.class.ancestry.name || ''\"\r\n                                                        [superTitle]=\"'icon-ra ra-wolf-howl'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Animal Specializations-->\r\n                                        <ng-container *ngIf=\"get_CompanionSpecializationsAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let available of [get_CompanionSpecializationsAvailable(level.number)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let takenSpecializations of [get_TakenCompanionSpecializations(level.number)]; trackBy:trackByIndex\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':takenSpecializations.length == available}\">\r\n                                                        <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':(takenSpecializations.length == available), 'activechoice':get_ShowList()=='companionspecialization' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                            (click)=\"toggle_List('companionspecialization', level.number)\">\r\n                                                            Animal Companion Specialization{{available > 1 ? \": \"+\r\n                                                            takenSpecializations.length +\"/\"+ available :\r\n                                                            (takenSpecializations.length == 1) ? \": \"+\r\n                                                            takenSpecializations[0] : \"\"}}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':(takenSpecializations.length == available), 'activechoice':get_ShowList()=='companionspecialization' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('companionspecialization', level.number)\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':(takenSpecializations.length == available)}\"\r\n                                                            [ngbTooltip]=\"'Animal Companion Specialization' + (available > 1 ? ': ' + takenSpecializations.length + '/' + available : (takenSpecializations.length == 1 ? ': ' + takenSpecializations[0] : ''))\"\r\n                                                            [title]=\"(available > 1) ? takenSpecializations.length.toString() + '/' + available.toString() : (takenSpecializations.length ? takenSpecializations[0] : '')\"\r\n                                                            [superTitle]=\"'icon-ra ra-love-howl'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Familiar-->\r\n                                        <ng-container *ngIf=\"get_FamiliarAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let finished of [get_Familiar().name && get_Familiar().species]; trackBy:trackByIndex;\">\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='familiar' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('familiar', level.number)\">\r\n                                                        Familiar\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='familiar' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('familiar', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':finished}\" [ngbTooltip]=\"'Familiar'\"\r\n                                                        [superTitle]=\"'icon-ra ra-raven'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Different Worlds-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let differentWorldsFeat of get_DifferentWorldsFeat(level.number); trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let finished of [differentWorldsFeat.data.name && differentWorldsFeat.data.background]; trackBy:trackByIndex;\">\r\n                                                <!--Different Worlds-->\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='differentworlds' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('differentworlds', level.number)\">\r\n                                                        Different Worlds{{(differentWorldsFeat.data.background) ? \": \" +\r\n                                                        differentWorldsFeat.data.background : \"\"}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='differentworlds' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('differentworlds', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':finished}\"\r\n                                                        [ngbTooltip]=\"'Different Worlds' + (differentWorldsFeat.data.background ? ': ' + differentWorldsFeat.data.background : '')\"\r\n                                                        [title]=\"differentWorldsFeat.data.background\"\r\n                                                        [superTitle]=\"'icon-ra ra-arcane-mask'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Blessed Blood-->\r\n                                        <ng-container *ngIf=\"get_BlessedBloodFeat(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let blessedBloodSpells of [get_BlessedBloodSpells()]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let finished of [blessedBloodSpells >= 3]; trackBy:trackByIndex;\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                        <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='blessedblood' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                            (click)=\"toggle_List('blessedblood', level.number)\">\r\n                                                            Blessed Blood Deity Spells: {{blessedBloodSpells}}/3\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='blessedblood' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('blessedblood', level.number)\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':finished}\"\r\n                                                            [ngbTooltip]=\"'Blessed Blood Deity Spells: ' + blessedBloodSpells.toString() + '/3'\"\r\n                                                            [title]=\"finished ? '3' : blessedBloodSpells.toString() + '/3'\"\r\n                                                            [superTitle]=\"'icon-ra ra-burning-eye'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Additional Heritages-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let heritageGain of get_AdditionalHeritagesAvailable(level.number); trackBy:trackByIndex\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let heritageIndex of get_AdditionalHeritageIndex(heritageGain.source); trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let finished of [get_Character().class.additionalHeritages[heritageIndex].name]; trackBy:trackByIndex\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                        <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':get_Character().class.additionalHeritages[heritageIndex].name, 'activechoice':get_ShowList()=='additionalheritage' && get_ShowContentLevelNumber()==level.number && this.get_ShowContent()?.id==heritageGain.source}\"\r\n                                                            (click)=\"toggle_List('additionalheritages', level.number, {id: 'additionalheritage'+level.number+heritageGain.source, source: heritageGain.source})\">\r\n                                                            Heritage\r\n                                                            ({{heritageGain.source}}){{finished ? \": \"+\r\n                                                            get_Character().class.additionalHeritages[heritageIndex].name\r\n                                                            : \"\"}}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='additionalheritage' && get_ShowContentLevelNumber()==level.number && this.get_ShowContent()?.id==heritageGain.source}\"\r\n                                                        (click)=\"toggle_List('additionalheritages', level.number, {id: 'additionalheritage'+level.number+heritageGain.source, source: heritageGain.source})\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':finished}\"\r\n                                                            [ngbTooltip]=\"'Heritage (' + heritageGain.source + ')' + (finished ? ': ' + get_Character().class.additionalHeritages[heritageIndex].name : '')\"\r\n                                                            [title]=\"finished ? get_Character().class.additionalHeritages[heritageIndex].name : ''\"\r\n                                                            [superTitle]=\"'icon-ra ra-sprout-emblem'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Fuse Stance-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let feat of get_FuseStanceFeat(level.number); trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let finished of [feat.data.stances.length == 2 && feat.data.name]; trackBy:trackByIndex\">\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='fusestance' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('fusestance', level.number)\">\r\n                                                        Fuse Stance{{(finished) ? \": \"+\r\n                                                        feat.data.name + \" (\" + feat.data.stances.join(', ') + \")\" :\r\n                                                        \"\"}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='fusestance' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('fusestance', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':finished}\"\r\n                                                        [ngbTooltip]=\"'Fuse Stance' + (finished ? ': ' + feat.data.name + ' (' + feat.data.stances.join(', ') + ')' : '')\"\r\n                                                        [title]=\"finished ? feat.data.name : ''\"\r\n                                                        [superTitle]=\"'icon-ra ra-double-team'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Lore Training-->\r\n                                        <ng-container *ngFor=\"let choice of level.loreChoices; trackBy:trackByIndex;\">\r\n                                            <div class=\"list-item\" *ngIf=\"choice.available && !get_TileMode()\"\r\n                                                [ngClass]=\"{'problem':(choice.increases.length > choice.available), 'fullsize-only':choice.increases.length == choice.available}\">\r\n                                                <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared':choice.increases.length == choice.available, 'activechoice':get_ShowList()==choice.id}\"\r\n                                                    (click)=\"toggle_List(choice.id, level.number, choice)\">\r\n                                                    Lore Training\r\n                                                    ({{choice.source}}){{(choice.increases.length) ? \": \"+\r\n                                                    choice.increases[0].name : \"\"}}\r\n                                                </button>\r\n                                            </div>\r\n                                            <button class=\"specialchoice\" *ngIf=\"choice.available && get_TileMode()\"\r\n                                                [ngClass]=\"{'fancy-button choicecleared fullsize-only':choice.increases.length == choice.available, 'activechoice':get_ShowList()=='choice.id'}\"\r\n                                                (click)=\"toggle_List(choice.id, level.number, choice)\">\r\n                                                <app-gridIcon class=\"specialchoice\"\r\n                                                    [ngClass]=\"{'fancy-button':choice.increases.length == choice.available}\"\r\n                                                    [ngbTooltip]=\"'Lore Training (' + choice.source + ')' + ((choice.increases.length) ? ': ' + choice.loreName : '')\"\r\n                                                    [title]=\"choice.increases.length == choice.available ? choice.loreName : ''\"\r\n                                                    [superTitle]=\"'icon-ra ra-book'\">\r\n                                                </app-gridIcon>\r\n                                            </button>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div id=\"choiceArea-top\"></div>\r\n                <!--Choice content and templates-->\r\n                <!--Load character content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='load'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Load Character</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"list-item\" *ngIf=\"get_Savegames() && !get_Savegames().length\">\r\n                            No characters available in database.\r\n                        </div>\r\n                        <div class=\"list-item\" *ngIf=\"!get_Savegames()\">\r\n                            Database connection failed.\r\n                        </div>\r\n                        <ng-container\r\n                            *ngFor=\"let savegame of get_Savegames(); let index = index; trackBy:trackByIndex;\">\r\n                            <ng-template #SavegameDeleteModal let-modal>\r\n                                <div class=\"modal-header\">\r\n                                    <header class=\"sectionHeader modal-title\" id=\"modal-title\">Delete Character\r\n                                    </header>\r\n                                    <button type=\"button\" class=\"close\" aria-label=\"close\"\r\n                                        (click)=\"modal.dismiss('Cross click')\" ngbAutofocus>\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <p>Are you sure you want to delete <strong>{{savegame.name}}</strong>?</p>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        (click)=\"modal.dismiss('Cancel click')\">Cancel</button>\r\n                                    <button type=\"button\" class=\"btn btn-danger\"\r\n                                        (click)=\"modal.close('Ok click')\">Ok</button>\r\n                                </div>\r\n                            </ng-template>\r\n                            <header class=\"sectionHeader center-aligned\"\r\n                                *ngIf=\"index == 0 || get_Savegames()[index].partyName != get_Savegames()[index-1].partyName\">\r\n                                {{savegame.partyName}}</header>\r\n                            <div class=\"list-item newrow\">\r\n                                <span>\r\n                                    <strong>{{savegame.name}}</strong> Level {{savegame.level}}\r\n                                    <span>{{get_SavegameTitle(savegame)}}</span>\r\n                                </span>\r\n                                <span style=\"flex-basis: auto; flex-grow: 0;\">\r\n                                    <button (click)=\"load_CharacterFromDB(savegame)\">Load</button>\r\n                                    <button style=\"margin-left: .3em;\"\r\n                                        (click)=\"open_DeleteModal(SavegameDeleteModal, savegame)\">Delete</button>\r\n                                </span>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Settings-->\r\n                <ng-container *ngIf=\"get_ShowList()=='settings'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Settings</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"list-item\">\r\n                            <strong>Look</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input id=\"accent\" type=\"color\" class=\"character-choice\" id=\"coloraccent\"\r\n                                    style=\"padding:0 2px\" [(ngModel)]=\"get_Character().settings.accent\"\r\n                                    (ngModelChange)=\"set_Accent()\" maxLength=\"7\">\r\n                                <label for=\"accent\"><strong>Color Accent</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input id=\"darkmode\" class=\"character-choice\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.darkmode\" (ngModelChange)=\"set_Darkmode()\">\r\n                                <label for=\"darkmode\"><strong>Dark mode</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>Tags</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"hintsShowMoreInformation\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.hintsShowMoreInformation\">\r\n                                <label for=\"hintsShowMoreInformation\"><strong>Clicking a tag shows additional\r\n                                        information, if available</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>Choices</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"autoCloseChoices\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.autoCloseChoices\">\r\n                                <label for=\"autoCloseChoices\"><strong>Automatically close choices when they are\r\n                                        finished</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"showOtherOptions\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.showOtherOptions\">\r\n                                <label for=\"showOtherOptions\"><strong>Keep showing the other options in finished\r\n                                        choices</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>Feats</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"unavailableFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.unavailableFeats\">\r\n                                <label for=\"unavailableFeats\"><strong>Show unavailable feats</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"lowerLevelFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.lowerLevelFeats\">\r\n                                <label for=\"lowerLevelFeats\"><strong>Show lower level feats</strong></label>\r\n                            </div>\r\n                            <div class=\"fullwidth\" [ngbCollapse]=\"!get_Character().settings.unavailableFeats\">\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"higherLevelFeats\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"get_Character().settings.higherLevelFeats\">\r\n                                    <label for=\"higherLevelFeats\"><strong>Show higher level feats</strong></label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"archetypeFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.archetypeFeats\">\r\n                                <label for=\"archetypeFeats\"><strong>Show archetype feats</strong></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <!--History content-->\r\n                <!--Alternative Ability Values content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='alternativeBaseValues'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Alternative Ability Values:\r\n                            {{get_Character().baseValues.length ? 'Used' : 'Not used'}}</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"list-item\">\r\n                            <p>\r\n                                You can roll your own ability scores and enter them here. If you use these values, your\r\n                                character gets one fewer free ability boosts than normal from their ancestry and from\r\n                                their\r\n                                background. These ability boosts cannot raise a score above 18. If this would happen,\r\n                                you can put the ability boost into another ability score instead, as if it were a free\r\n                                ability boost. The character does not get any more free ability boosts on level 1.\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\">\r\n                            <input id=\"useAlternativeBaseValues\" class=\"character-choice\" type=\"checkbox\"\r\n                                (change)=\"on_BaseValueChange()\" [checked]=\"get_Character().baseValues.length\">\r\n                            <label for=\"useAlternativeBaseValues\">\r\n                                <strong>Enter your own Ability scores</strong>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\"\r\n                            *ngFor=\"let ability of get_Character().baseValues; trackBy:trackByIndex;\">\r\n                            <input type=\"number\" class=\"number2\" [(ngModel)]=\"ability.baseValue\"\r\n                                (blur)=\"on_AbilityChange(ability.name)\" maxlength=\"2\" (keypress)=\"numbersOnly($event)\">\r\n                            <strong>{{ability.name}}</strong>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Class choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='class'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Class{{(get_Character().class.name) ? \": \"+ get_Character().class.name : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container *ngFor=\"let class of get_AvailableClasses(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [class.name === get_Character().class.name]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.name && (class.name != get_Character().class.name)]; trackBy:trackByIndex\">\r\n                                    <ng-template #ClassChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{class.name}}</header>\r\n                                        <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"onClassChange(class, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" :\r\n                                                \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned tags\">\r\n                                            <cite class=\"trait\"\r\n                                                *ngFor=\"let trait of class.traits; trackBy:trackByIndex;\"\r\n                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\" openDelay=100>{{trait}}</cite>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"class.sourceBook\">\r\n                                            <strong>Source</strong><i>&nbsp;{{class.sourceBook}}</i>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\"\r\n                                            *ngFor=\"let desc of class.desc; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let text of desc.value.split('\\n\\n'); let textIndex = index; trackBy:trackByIndex;\">\r\n                                                <header class=\"featureHeader\" *ngIf=\"textIndex == 0\">{{desc.name}}\r\n                                                </header>\r\n                                                <p *ngIf=\"text.split('\\n').length == 1\">\r\n                                                    {{text}}\r\n                                                </p>\r\n                                                <ul *ngIf=\"text.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of text.split('\\n'); trackBy:trackByIndex;\">\r\n                                                        {{line}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input id=\"{{class.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"onClassChange(class, $event.target.checked)\" [checked]=\"checked\"\r\n                                            [disabled]=\"disabled\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"ClassChoiceDetailsTemplate\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"class.name\"></app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>\r\n                                                    {{class.name}}\r\n                                                </span>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Ancestry choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='ancestry'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Ancestry{{(get_Character().class.ancestry.name) ? \": \"+ get_Character().class.ancestry.name\r\n                            : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container *ngFor=\"let ancestry of get_AvailableAncestries(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [ancestry.name === get_Character().class.ancestry.name]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.ancestry.name && (ancestry.name != get_Character().class.ancestry.name)]; trackBy:trackByIndex\">\r\n                                    <ng-template #AncestryChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{ancestry.name}}</header>\r\n                                        <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"onAncestryChange(ancestry, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" : \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned tags\">\r\n                                            <cite class=\"trait\"\r\n                                                *ngFor=\"let trait of ancestry.traits; trackBy:trackByIndex;\"\r\n                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\" openDelay=100>{{trait}}</cite>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"ancestry.sourceBook\">\r\n                                            <strong>Source</strong><i>&nbsp;{{ancestry.sourceBook}}</i>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\"\r\n                                            *ngFor=\"let desc of ancestry.desc; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let text of desc.value.split('\\n\\n'); let textIndex = index; trackBy:trackByIndex;\">\r\n                                                <header class=\"featureHeader\" *ngIf=\"textIndex == 0\">\r\n                                                    {{desc.name}}\r\n                                                </header>\r\n                                                <p *ngIf=\"text.split('\\n').length == 1\">\r\n                                                    {{text}}\r\n                                                </p>\r\n                                                <ul *ngIf=\"text.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of text.split('\\n'); trackBy:trackByIndex;\">\r\n                                                        {{line}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input id=\"{{ancestry.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"onAncestryChange(ancestry, $event.target.checked)\"\r\n                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"AncestryChoiceDetailsTemplate\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"ancestry.name\"\r\n                                                [detail]=\"ancestry.traits.includes('Rare') ? 'Rare' : (ancestry.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{ancestry.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\" *ngIf=\"ancestry.traits.includes('Rare')\"\r\n                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\" openDelay=100>Rare</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"ancestry.traits.includes('Uncommon')\"\r\n                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                    openDelay=100>Uncommon</cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Heritage choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='heritage'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Heritage{{(get_Character().class.heritage.name) ? \": \"+ get_Character().class.heritage.name\r\n                            : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container\r\n                            *ngFor=\"let heritage of get_AvailableHeritages('', get_Character().class.ancestry.name); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let selected of [heritage.name == get_Character().class.heritage.name]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [selected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [!selected && (checked || get_Character().class.heritage.name)]; trackBy:trackByIndex\">\r\n                                        <ng-template #HeritageChoiceDetailsTemplate>\r\n                                            <header class=\"spellHeader\">{{heritage.name}}</header>\r\n                                            <div class=\"button newrow no-animation\"\r\n                                                *ngIf=\"!disabled && !heritage.subTypes.length\"\r\n                                                [ngClass]=\"{'fancy-button':selected, 'disabled':disabled}\">\r\n                                                <label>\r\n                                                    <input type=\"checkbox\"\r\n                                                        (change)=\"onHeritageChange(heritage, $event.target.checked)\"\r\n                                                        [checked]=\"selected\" [disabled]=\"disabled\" hidden>{{selected ?\r\n                                                    \"Remove\" : \"Choose\"}}\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned tags\">\r\n                                                <cite class=\"trait\"\r\n                                                    *ngFor=\"let trait of heritage.traits; trackBy:trackByIndex;\"\r\n                                                    [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                    openDelay=100>{{trait}}</cite>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned\" *ngIf=\"heritage.sourceBook\">\r\n                                                <strong>Source</strong><i>&nbsp;{{heritage.sourceBook}}</i>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let desc of heritage.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                        <li\r\n                                                            *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                            {{line}}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                            <ng-container\r\n                                                *ngFor=\"let activityName of heritage.gainActivities; trackBy:trackByIndex;\">\r\n                                                <div class=\"newrow left-aligned\"\r\n                                                    *ngFor=\"let activity of get_Activities(activityName); trackBy:trackByIndex;\">\r\n                                                    <header class=\"spellHeader left-aligned\">{{activity.name}}\r\n                                                        <app-actionIcons [actionString]=\"activity.actions\">\r\n                                                        </app-actionIcons>\r\n                                                        {{(activity.activationType) ? activity.activationType : \"\"}}\r\n                                                    </header>\r\n                                                    <app-activity class=\"newrow\" [activity]=activity\r\n                                                        [allowActivate]=false>\r\n                                                    </app-activity>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                            <!--Subheritages-->\r\n                                            <ng-container\r\n                                                *ngFor=\"let subheritage of heritage.subTypes; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let subheritageSelected of [subheritage.name === get_Character().class.heritage.name]; trackBy:trackByIndex;\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let subheritageChecked of [subheritageSelected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let subheritageDisabled of [!subheritageSelected && (subheritageChecked || get_Character().class.heritage.name)]; trackBy:trackByIndex;\">\r\n                                                            <div class=\"list-item\"\r\n                                                                [ngClass]=\"{'selected':subheritageSelected}\">\r\n                                                                <div class=\"gridicon-fullsizebox lower\">\r\n                                                                    <input id=\"{{subheritage.name}}\" type=\"checkbox\"\r\n                                                                        class=\"character-choice\"\r\n                                                                        (change)=\"onHeritageChange(subheritage, $event.target.checked)\"\r\n                                                                        [checked]=\"subheritageChecked\"\r\n                                                                        [disabled]=\"subheritageDisabled\">\r\n                                                                    <label for=\"{{subheritage.name}}\">\r\n                                                                        <strong>{{subheritage.subType}}</strong>\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                            <!--End Subheritages-->\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':selected}\">\r\n                                            <input *ngIf=\"!heritage.subTypes.length\" id=\"{{heritage.name}}\"\r\n                                                type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"onHeritageChange(heritage, $event.target.checked)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <button class=\"character-choice\" *ngIf=\"heritage.subTypes.length\"\r\n                                                (click)=\"HeritageChoiceDetailsPopover.toggle()\">+</button>\r\n                                            <div class=\"gridicon-fullsizebox\" #HeritageChoiceDetailsPopover=\"ngbPopover\"\r\n                                                [ngbPopover]=\"HeritageChoiceDetailsTemplate\" triggers=\"click\">\r\n                                                <app-gridIcon [title]=\"heritage.name\"\r\n                                                    [detail]=\"heritage.traits.includes('Rare') ? 'Rare' : (heritage.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>{{heritage.name}}&nbsp;</span>\r\n                                                    <cite class=\"trait\" *ngIf=\"heritage.traits.includes('Rare')\"\r\n                                                        [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                        openDelay=100>Rare</cite>\r\n                                                    <cite class=\"trait\" *ngIf=\"heritage.traits.includes('Uncommon')\"\r\n                                                        [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                        openDelay=100>Uncommon</cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Languages content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='languages'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Languages</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"newrow list-item left-aligned\">\r\n                            <strong *ngIf=\"get_Character().class.ancestry.recommendedLanguages.length\">\r\n                                Recommended Languages\r\n                            </strong>\r\n                            {{get_Character().class.ancestry.recommendedLanguages.join(', ')}}\r\n                        </div>\r\n                        <ng-container *ngFor=\"let language of get_Character().class.languages; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\"\r\n                                *ngIf=\"language.locked || language.level <= get_ShowContentLevelNumber()\">\r\n                                <ng-template #LanguageSource>\r\n                                    <div class=\"newrow\">\r\n                                        <span>\r\n                                            <strong>Source</strong>\r\n                                            {{language.source}}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"newrow\" *ngIf=\"language.level > 0\">\r\n                                        <span>\r\n                                            <strong>Level</strong>\r\n                                            {{language.level}}\r\n                                        </span>\r\n                                    </div>\r\n                                </ng-template>\r\n                                <div class=\"newrow\" [ngbPopover]=\"language.source ? LanguageSource : null\">\r\n                                    <input class=\"newrow\" type=\"text\" [(ngModel)]=\"language.name\"\r\n                                        (blur)=\"on_LanguageChange()\" [disabled]=\"language.locked\">\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Background choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='background'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Background{{(get_Character().class.background.name) ? \": \"+\r\n                            get_Character().class.background.name : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <!-- Filter -->\r\n                        <div class=\"list-item lower\">\r\n                            <strong>Filter</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"adventureBackgroundsFilter\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"adventureBackgrounds\">\r\n                                <label for=\"adventureBackgroundsFilter\"><strong>Show adventure\r\n                                        backgrounds</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"regionalBackgroundsFilter\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"regionalBackgrounds\">\r\n                                <label for=\"regionalBackgroundsFilter\"><strong>Show regional\r\n                                        backgrounds</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <!-- End Filter -->\r\n                        <ng-container *ngFor=\"let background of get_AvailableBackgrounds(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [background.name === get_Character().class.background.name || background.name === get_Character().class.background.superType]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.background.name && (background.name != get_Character().class.background.name)]; trackBy:trackByIndex\">\r\n                                    <ng-template #BackgroundChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{background.name}}</header>\r\n                                        <div class=\"button newrow no-animation\"\r\n                                            *ngIf=\"!disabled && !background.subTypes\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"onBackgroundChange(background, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" : \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned tags\">\r\n                                            <cite class=\"trait\"\r\n                                                *ngFor=\"let trait of background.traits; trackBy:trackByIndex;\"\r\n                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\" openDelay=100>{{trait}}</cite>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"background.sourceBook\">\r\n                                            <strong>Source</strong><i>&nbsp;{{background.sourceBook}}</i>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"background.prerequisites\">\r\n                                            <strong>Prerequisites</strong>&nbsp;{{background.prerequisites}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"background.region\">\r\n                                            <strong>Region</strong>&nbsp;{{background.region}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let desc of background.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                        {{line}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        <div class=\"list-item lower newrow problem\" *ngIf=\"background.inputRequired\">\r\n                                            <strong>Player input required:</strong>\r\n                                            <div class=\"newrow left-aligned\">\r\n                                                <p\r\n                                                    *ngFor=\"let inputRequired of background.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                                                    {{inputRequired}}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!--Subbackgrounds-->\r\n                                        <div class=\"list-item\"\r\n                                            [ngClass]=\"{'selected':subbackground.name === get_Character().class.background.name}\"\r\n                                            *ngFor=\"let subbackground of get_SubBackgrounds(background.name); trackBy:trackByIndex;\">\r\n                                            <div class=\"gridicon-fullsizebox lower\">\r\n                                                <input id=\"{{subbackground.name}}\" type=\"checkbox\"\r\n                                                    class=\"character-choice\"\r\n                                                    (change)=\"onBackgroundChange(subbackground, $event.target.checked)\"\r\n                                                    [checked]=\"subbackground.name === get_Character().class.background.name\"\r\n                                                    [disabled]=\"get_Character().class.background.name && (subbackground.name != get_Character().class.background.name)\">\r\n                                                <label for=\"{{subbackground.name}}\">\r\n                                                    <strong>{{subbackground.subType}}</strong>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!--End Subbackgrounds-->\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input *ngIf=\"!background.subTypes\" id=\"{{background.name}}\" type=\"checkbox\"\r\n                                            class=\"character-choice\"\r\n                                            (change)=\"onBackgroundChange(background, $event.target.checked)\"\r\n                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                        <button class=\"character-choice\" *ngIf=\"background.subTypes\"\r\n                                            (click)=\"BackgroundChoiceDetailsPopover.toggle()\">+</button>\r\n                                        <div class=\"gridicon-fullsizebox\" #BackgroundChoiceDetailsPopover=\"ngbPopover\"\r\n                                            [ngbPopover]=\"BackgroundChoiceDetailsTemplate\" triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"background.name\"\r\n                                                [detail]=\"background.traits.includes('Rare') ? 'Rare' : (background.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{background.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\" *ngIf=\"background.traits.includes('Rare')\"\r\n                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\" openDelay=100>Rare</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"background.traits.includes('Uncommon')\"\r\n                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                    openDelay=100>Uncommon</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"background.adventurePath\"\r\n                                                    [ngbPopover]=\"get_Traits('Adventure')[0]?.desc\"\r\n                                                    openDelay=100>Adventure</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"background.region\"\r\n                                                    [ngbPopover]=\"get_Traits('Regional')[0]?.desc\"\r\n                                                    openDelay=100>Regional</cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"get_ShowList()=='deity'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Deity{{get_Character().class.deity ? \": \"+get_Character().class.deity : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container *ngFor=\"let deity of get_AvailableDeities(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [deity.name === get_Character().class.deity]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.deity && (deity.name != get_Character().class.deity)]; trackBy:trackByIndex\">\r\n                                    <ng-template #DeityChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{deity.name}}</header>\r\n                                        <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"on_DeityChange(deity, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" : \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Follower\r\n                                                Alignments&nbsp;</strong>{{deity.followerAlignments.join(\", \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Divine Ability&nbsp;</strong>{{deity.divineAbility.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Divine Font&nbsp;</strong>{{deity.divineFont.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Divine Skill&nbsp;</strong>{{deity.divineSkill.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Favored Weapon&nbsp;</strong>{{deity.favoredWeapon.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Domains&nbsp;</strong>{{deity.domains.join(\", \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Cleric Spells</strong>\r\n                                        </div>\r\n                                        <div class=\"list-item lower left-aligned\"\r\n                                            *ngFor=\"let spell of deity.clericSpells; trackBy:trackByIndex;\">\r\n                                            <strong>Level {{spell.level}}&nbsp;</strong>\r\n                                            {{spell.name}}{{(spell.note ? \"(\"+spell.note+\")\" : \"\")}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input id=\"{{deity.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"on_DeityChange(deity, $event.target.checked)\" [checked]=\"checked\"\r\n                                            [disabled]=\"disabled\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"DeityChoiceDetailsTemplate\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"deity.name\" [detail]=\"deity.alignment\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{deity.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\">{{deity.alignment}}</cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Level content-->\r\n                <!--Fixed content template (list mode only)-->\r\n                <ng-container *ngIf=\"get_ShowList()=='fixedchanges'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Level {{this.get_ShowContentLevelNumber()}} fixed changes\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <!--Fixed Ability boosts-->\r\n                        <header class=\"sectionHeader center-aligned\"\r\n                            *ngIf=\"this.get_ShowContent()?.abilityBoosts?.length\">\r\n                            Ability Boosts\r\n                        </header>\r\n                        <ng-container *ngFor=\"let boost of this.get_ShowContent().abilityBoosts; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item abilityboost\">\r\n                                <div>\r\n                                    <span>\r\n                                        <strong>\r\n                                            {{(boost.type == 'Flaw') ? 'Flaw' : 'Boost'}}\r\n                                        </strong>\r\n                                        {{boost.name}}\r\n                                    </span>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{boost.source}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                        <!--Fixed Skill Increases-->\r\n                        <header class=\"sectionHeader center-aligned\"\r\n                            *ngIf=\"this.get_ShowContent()?.skillIncreases?.length\">\r\n                            Skill Increases\r\n                        </header>\r\n                        <ng-container\r\n                            *ngFor=\"let skillIncrease of this.get_ShowContent().skillIncreases; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item skillincrease\">\r\n                                <div>\r\n                                    <strong>\r\n                                        {{skillIncrease.name}}\r\n                                    </strong>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{skillIncrease.source}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                        <!--Fixed Feats-->\r\n                        <header class=\"sectionHeader center-aligned\" *ngIf=\"this.get_ShowContent()?.feats?.length\">\r\n                            Feats\r\n                        </header>\r\n                        <ng-container *ngFor=\"let feat of this.get_ShowContent().feats; trackBy:trackByIndex;\">\r\n                            <ng-template #FixedFeatDetail>\r\n                                <header class=\"spellHeader\">{{feat.name}}</header>\r\n                                <app-feat [feat]=\"get_FeatsAndFeatures(feat.name)[0]\" [choice]=\"null\"\r\n                                    [levelNumber]=\"this.get_ShowContentLevelNumber()\">\r\n                                </app-feat>\r\n                            </ng-template>\r\n                            <div class=\"list-item featchoice\">\r\n                                <div>\r\n                                    <strong>\r\n                                        {{feat.name}}\r\n                                    </strong>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{feat.source}}\r\n                                    </span>\r\n                                </div>\r\n                                <button class=\"lower inactive-button\" [ngbPopover]=\"FixedFeatDetail\"\r\n                                    triggers=\"click\">Details</button>\r\n                            </div>\r\n                        </ng-container>\r\n                        <!--Fixed Features-->\r\n                        <header class=\"sectionHeader center-aligned\" *ngIf=\"this.get_ShowContent()?.features?.length\">\r\n                            Features\r\n                        </header>\r\n                        <ng-container *ngFor=\"let feature of this.get_ShowContent().features; trackBy:trackByIndex;\">\r\n                            <ng-template #FixedFeatureDetail>\r\n                                <header class=\"spellHeader\">{{feature.name}}</header>\r\n                                <app-feat [feat]=\"get_FeatsAndFeatures(feature.name)[0]\" [choice]=\"null\"\r\n                                    [levelNumber]=\"this.get_ShowContentLevelNumber()\">\r\n                                </app-feat>\r\n                            </ng-template>\r\n                            <div class=\"list-item specialchoice\">\r\n                                <div>\r\n                                    <strong>\r\n                                        {{feature.name}}\r\n                                    </strong>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{feature.source}}\r\n                                    </span>\r\n                                </div>\r\n                                <button class=\"lower inactive-button\" [ngbPopover]=\"FixedFeatureDetail\"\r\n                                    triggers=\"click\">Details</button>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Ability Choice Content-->\r\n                <ng-container\r\n                    *ngFor=\"let abilityContent of get_ActiveChoiceContent('AbilityChoice'); trackBy:trackByID\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            {{get_AbilityChoiceTitle(abilityContent.choice)}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container\r\n                            *ngFor=\"let ability of get_AvailableAbilities(abilityContent.choice, abilityContent.levelNumber); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [get_AbilityTakenByThis(ability, abilityContent.choice, abilityContent.levelNumber)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [this.cannotBoost(ability, abilityContent.levelNumber, abilityContent.choice).length || (abilityContent.choice.boosts.length == get_MaxAvailable(abilityContent.choice) && !checked)]; trackBy:trackByIndex\">\r\n                                    <div class=\"newrow list-item\"\r\n                                        [ngClass]=\"{'selected':checked, 'problem':abilityIllegal(abilityContent.levelNumber, ability)}\">\r\n                                        <div class=\"gridicon-fullsizebox\">\r\n                                            <input id=\"{{ability.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"on_AbilityBoost(ability.name, $event.target.checked, abilityContent.choice, false)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\"\r\n                                                *ngFor=\"let baseValue of [ability.baseValue(get_Character(), characterService, abilityContent.levelNumber)]; trackBy:trackByIndex;\">\r\n                                                <app-gridIcon [title]=\"ability.name\" [ngbPopover]=\"baseValue.explain\"\r\n                                                    triggers=\"hover:click\" openDelay=1\r\n                                                    [superTitle]=\"baseValue.result.toString()\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>{{ability.name}}&nbsp;</span>\r\n                                                    <cite class=\"problem\"\r\n                                                        *ngFor=\"let reason of cannotBoost(ability, abilityContent.levelNumber, abilityContent.choice); trackBy:trackByIndex;\">\r\n                                                        {{reason}}\r\n                                                    </cite>\r\n                                                    <cite class=\"problem\"\r\n                                                        *ngIf=\"abilityIllegal(abilityContent.levelNumber, ability)\"\r\n                                                        [ngbPopover]=\"'Abilities cannot be raised above 18 on level 1.'\">\r\n                                                        Limit reached&nbsp;\r\n                                                    </cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Skill Choice Content-->\r\n                <ng-container *ngFor=\"let skillContent of get_ActiveChoiceContent('SkillChoice'); trackBy:trackByID;\">\r\n                    <app-skillchoice (showSkillChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                        [choice]=\"skillContent.choice\" [levelNumber]=\"skillContent.levelNumber\" [showTitle]=\"false\"\r\n                        [showChoice]=\"skillContent.name\" [excludeTemporary]=\"true\">\r\n                    </app-skillchoice>\r\n                </ng-container>\r\n                <!--Feat Choice Content-->\r\n                <ng-container *ngFor=\"let featContent of get_ActiveChoiceContent('FeatChoice'); trackBy:trackByID;\">\r\n                    <app-featchoice (showFeatChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                        (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"featContent.choice\"\r\n                        [levelNumber]=\"featContent.levelNumber\" [showTitle]=\"false\" [showFeat]=\"get_ShowItem()\"\r\n                        [showChoice]=\"featContent.name\" [unavailableFeats]=\"get_Character().settings.unavailableFeats\"\r\n                        [lowerLevelFeats]=\"get_Character().settings.lowerLevelFeats\"\r\n                        [higherLevelFeats]=\"get_Character().settings.higherLevelFeats\"\r\n                        [archetypeFeats]=\"get_Character().settings.archetypeFeats\">\r\n                    </app-featchoice>\r\n                </ng-container>\r\n                <!--Lore Training content-->\r\n                <ng-container *ngFor=\"let loreContent of get_ActiveChoiceContent('LoreChoice'); trackBy:trackByID\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Lore Training ({{loreContent.choice.source}}){{(loreContent.choice.increases.length) ? \": \"+\r\n                            loreContent.choice.loreName : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container\r\n                            *ngFor=\"let checked of [get_SkillIncreases(loreContent.levelNumber, loreContent.levelNumber, 'Lore: '+loreContent.choice.loreName, loreContent.choice.source, loreContent.choice.id).length]; trackBy:trackByIndex\">\r\n                            <ng-container\r\n                                *ngFor=\"let illegal of [get_Skills('Lore: '+loreContent.choice.loreName).length && !checked]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [!loreContent.choice.loreName || illegal]; trackBy:trackByIndex\">\r\n                                    <div class=\"newrow left-aligned list-item\">\r\n                                        <strong>Lore Type&nbsp;</strong>{{loreContent.choice.loreDesc}}\r\n                                    </div>\r\n                                    <div class=\"newrow list-item gridicon-fullsizebox\">\r\n                                        <div class=\"button no-animation\" style=\"max-width: fit-content;\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input id=\"{{loreContent.choice.id}}\" type=\"checkbox\"\r\n                                                    (change)=\"on_LoreChange($event.target.checked, loreContent.choice)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                {{checked ? \"Change\" : \"Save\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <header class=\"sectionHeader\">\r\n                                            <input id=\"LoreName\" type=\"text\" [(ngModel)]=\"loreContent.choice.loreName\"\r\n                                                [disabled]=\"checked\" (blur)=\"on_LoreNameChange\" maxLength=\"20\">\r\n                                            <cite class=\"problem\" *ngIf=\"illegal\">\r\n                                                Lore already trained\r\n                                            </cite>\r\n                                        </header>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Animal Companion Content-->\r\n                <ng-container\r\n                    *ngFor=\"let companionContent of get_ActiveSpecialChoiceShown('animalcompanion'); trackBy:trackByID\">\r\n                    <ng-container *ngFor=\"let companion of [get_Companion()]; trackBy: trackByIndex\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Animal Companion{{(companion.class.ancestry.name) ? \": \"+ companion.class.ancestry.name\r\n                                : \"\"}}\r\n                            </header>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <div class=\"newrow list-item\">\r\n                                <button class=\"newrow list-item\" (click)=\"on_NewCompanion()\">\r\n                                    <header class=\"sectionHeader\">Reset Animal Companion</header>\r\n                                </button>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Name&nbsp;\r\n                                        <input id=\"CompanionName\" type=\"text\" [(ngModel)]=\"companion.name\"\r\n                                            maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Animal&nbsp;\r\n                                        <input id=\"CompanionSpecies\" type=\"text\" [(ngModel)]=\"companion.species\"\r\n                                            maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"list-item transparent\">\r\n                                <header class=\"sectionHeader\">Type</header>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let type of get_AvailableCompanionTypes(); trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [type.name == companion.class.ancestry.name]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [companion.class.ancestry.name && (type.name != companion.class.ancestry.name)]; trackBy:trackByIndex\">\r\n                                        <ng-template #AnimalCompanionDetailsTemplate>\r\n                                            <header class=\"spellHeader\">{{type.name}}</header>\r\n                                            <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                                [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                                <label>\r\n                                                    <input type=\"checkbox\"\r\n                                                        (change)=\"on_CompanionTypeChange(type, $event.target.checked)\"\r\n                                                        [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                    {{checked ? \"Remove\" : \"Choose\"}}\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned\">\r\n                                                <div class=\"newrow left-aligned tags\">\r\n                                                    <cite class=\"trait\"\r\n                                                        *ngFor=\"let trait of type.traits; trackBy:trackByIndex;\"\r\n                                                        [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                        openDelay=100>{{trait}}</cite>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"type.sourceBook\">\r\n                                                    <strong>Source</strong><i>&nbsp;{{type.sourceBook}}</i>\r\n                                                </div>\r\n                                                <ng-container\r\n                                                    *ngFor=\"let desc of type.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                    <p *ngIf=\"desc.split('\\n').length == 1\">\r\n                                                        {{desc}}\r\n                                                    </p>\r\n                                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                        <li\r\n                                                            *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                            {{line}}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </ng-container>\r\n                                                <p>\r\n                                                    <strong>Size</strong> {{size(type.size)}}\r\n                                                </p>\r\n                                                <ng-container\r\n                                                    *ngFor=\"let gain of type.gainItems; trackBy:trackByIndex;\">\r\n                                                    <p\r\n                                                        *ngFor=\"let item of get_ItemFromGain(gain); trackBy:trackByIndex;\">\r\n                                                        <strong>Melee</strong>\r\n                                                        {{item.displayName}},\r\n                                                        <strong>Damage</strong>\r\n                                                        {{item.dicenum+\"d\"+item.dicesize}}\r\n                                                    </p>\r\n                                                </ng-container>\r\n                                                <p>\r\n                                                    <span\r\n                                                        *ngFor=\"let ability of get_AnimalCompanionAbilities(type); let index = index; trackBy:trackByIndex;\">\r\n                                                        {{index ? \", \" : \"\"}}<strong>{{ability.name}}</strong>\r\n                                                        {{ability.modifier}}\r\n                                                    </span>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Hit Points</strong>\r\n                                                    {{type.hitpoints}}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Skill</strong>\r\n                                                    {{type.skillChoices[0].increases[0].name}}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Senses</strong>\r\n                                                    {{type.senses.join(\",\r\n                                                    \")}}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Speed</strong>\r\n                                                    <span\r\n                                                        *ngFor=\"let speed of type.speeds; let index = index; trackBy:trackByIndex;\">\r\n                                                        {{index > 0 ? \", \" : \"\"}}{{speed.name.split(' ')[0] + \" \" +\r\n                                                        speed.value + \" feet\"}}\r\n                                                    </span>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Support Benefit</strong>\r\n                                                    {{type.supportBenefit}}\r\n                                                </p>\r\n                                                <p *ngIf=\"type.specialdesc.length\">\r\n                                                    <strong>Special</strong>\r\n                                                    {{type.specialdesc}}\r\n                                                </p>\r\n                                            </div>\r\n                                            <ng-container\r\n                                                *ngFor=\"let gain of [type.activities[1]]; trackBy:trackByIndex;\">\r\n                                                <div class=\"newrow left-aligned\"\r\n                                                    *ngFor=\"let activity of get_Activities(gain.name); trackBy:trackByIndex;\">\r\n                                                    <header class=\"spellHeader left-aligned\">\r\n                                                        Advanced Maneuver: {{activity.name}}\r\n                                                        <app-actionIcons [actionString]=\"activity.actions\">\r\n                                                        </app-actionIcons>\r\n                                                        {{(activity.activationType) ? activity.activationType : \"\"}}\r\n                                                    </header>\r\n                                                    <app-activity class=\"newrow\" [activity]=activity\r\n                                                        [allowActivate]=false>\r\n                                                    </app-activity>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                            <input id=\"{{type.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"on_CompanionTypeChange(type, $event.target.checked)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\">\r\n                                                <app-gridIcon [title]=\"type.name\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span [ngbPopover]=\"AnimalCompanionDetailsTemplate\"\r\n                                                        triggers=\"click\">{{type.name}}</span>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Companion Specialization Content-->\r\n                <ng-container\r\n                    *ngFor=\"let companionSpecializationContent of get_ActiveSpecialChoiceShown('companionspecialization'); trackBy:trackByID\">\r\n                    <ng-container *ngFor=\"let companion of [get_Companion()]; trackBy:trackByIndex\">\r\n                        <ng-container\r\n                            *ngFor=\"let available of [get_CompanionSpecializationsAvailable(companionSpecializationContent.levelNumber)]; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let takenSpecializations of [get_TakenCompanionSpecializations(companionSpecializationContent.levelNumber)]; trackBy:trackByIndex\">\r\n                                <div class=\"newrow list-item padding-8 center-aligned\">\r\n                                    <header class=\"box-header sectionHeader\">\r\n                                        Animal Companion Specialization{{available > 1 ? \": \"+\r\n                                        takenSpecializations.length +\"/\"+ available : (takenSpecializations.length == 1)\r\n                                        ? \": \"+ takenSpecializations[0] : \"\"}}\r\n                                    </header>\r\n                                </div>\r\n                                <div class=\"list-item\">\r\n                                    <p>\r\n                                        The first time an animal gains a specialization, it gains the following: Its\r\n                                        proficiency rank for unarmed attacks increases to expert. Its proficiency ranks\r\n                                        for saving throws and Perception increase to master. Increase its Dexterity\r\n                                        modifier by 1 and its Intelligence modifier by 2. Its unarmed attack damage\r\n                                        increases from two dice to three dice, and it increases its additional damage\r\n                                        with unarmed attacks from 2 to 4 or from 3 to 6.\r\n                                    </p>\r\n                                </div>\r\n                                <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let spec of get_AvailableCompanionSpecializations(companionSpecializationContent.levelNumber); trackBy:trackByIndex;\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let taken of [takenSpecializations.includes(spec.name)]; trackBy:trackByIndex\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let checked of [taken || have_CompanionSpecialization(spec.name)]; trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let disabled of [(have_CompanionSpecialization(spec.name) || (takenSpecializations.length == available)) && !taken]; trackBy:trackByIndex\">\r\n                                                    <ng-template #CompanionSpecializationDetailsTemplate>\r\n                                                        <header class=\"spellHeader\">{{spec.name}}</header>\r\n                                                        <div class=\"button newrow no-animation\"\r\n                                                            *ngIf=\"!disabled && (taken || !checked)\"\r\n                                                            [ngClass]=\"{'fancy-button':taken}\">\r\n                                                            <label>\r\n                                                                <input type=\"checkbox\"\r\n                                                                    (change)=\"on_SpecializationChange(spec, $event.target.checked, companionSpecializationContent.levelNumber)\"\r\n                                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                                {{checked ? \"Remove\" : \"Choose\"}}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\">\r\n                                                            <cite class=\"problem\" *ngIf=\"checked && !taken\">\r\n                                                                Already taken\r\n                                                            </cite>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\">\r\n                                                            <p>\r\n                                                                {{spec.desc}}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                                        [ngClass]=\"{'selected':taken}\">\r\n                                                        <input id=\"{{spec.name}}\" type=\"checkbox\"\r\n                                                            class=\"character-choice\"\r\n                                                            (change)=\"on_SpecializationChange(spec, $event.target.checked, companionSpecializationContent.levelNumber)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                                        <div class=\"gridicon-fullsizebox\">\r\n                                                            <app-gridIcon [title]=\"spec.name\">\r\n                                                            </app-gridIcon>\r\n                                                            <header class=\"sectionHeader\">\r\n                                                                <span\r\n                                                                    [ngbPopover]=\"CompanionSpecializationDetailsTemplate\"\r\n                                                                    triggers=\"click\">{{spec.name}}</span>\r\n                                                            </header>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Familiar Content-->\r\n                <ng-container\r\n                    *ngFor=\"let familiarContent of get_ActiveSpecialChoiceShown('familiar'); trackBy:trackByID\">\r\n                    <ng-container *ngFor=\"let familiar of [get_Familiar()]; trackBy:trackByIndex\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Familiar\r\n                            </header>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <div class=\"newrow list-item\">\r\n                                <button class=\"newrow list-item\" (click)=\"on_NewFamiliar()\">\r\n                                    <header class=\"sectionHeader\">Reset Familiar</header>\r\n                                </button>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Name&nbsp;\r\n                                        <input id=\"FamiliarName\" type=\"text\" [(ngModel)]=\"familiar.name\" maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Creature&nbsp;\r\n                                        <input id=\"FamiliarCreature\" type=\"text\" [(ngModel)]=\"familiar.species\"\r\n                                            maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"FamiliarSwimmer\" type=\"checkbox\"\r\n                                        (click)=\"on_FamiliarSpeedChange($event.target.checked)\"\r\n                                        [checked]=\"is_FamiliarSwimmer()\">\r\n                                    <label for=\"FamiliarSwimmer\">\r\n                                        <strong>\r\n                                            Gain Swim Speed instead of Land Speed\r\n                                        </strong>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Different Worlds content-->\r\n                <ng-container\r\n                    *ngFor=\"let differentWorldsContent of get_ActiveSpecialChoiceShown('differentworlds'); trackBy:trackByID\">\r\n                    <ng-container\r\n                        *ngFor=\"let differentWorldsFeat of get_DifferentWorldsFeat(differentWorldsContent.levelNumber); trackBy:trackByIndex;\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Different Worlds{{(differentWorldsFeat.data.background) ? \": \"+\r\n                                differentWorldsFeat.data.background : \"\"}}\r\n                            </header>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <div class=\"newrow list-item\">\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>Alternative name&nbsp;\r\n                                        <input type=\"text\" [(ngModel)]=\"differentWorldsFeat.data.name\"\r\n                                            (blur)=on_NameChange() maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"list-item transparent\">\r\n                                <header class=\"sectionHeader\">Alternative background</header>\r\n                            </div>\r\n                            <!-- Filter -->\r\n                            <div class=\"list-item lower\">\r\n                                <strong>Filter</strong>\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"adventureBackgroundsFilter\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"adventureBackgrounds\">\r\n                                    <label for=\"adventureBackgroundsFilter\"><strong>Show adventure\r\n                                            backgrounds</strong></label>\r\n                                </div>\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"regionalBackgroundsFilter\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"regionalBackgrounds\">\r\n                                    <label for=\"regionalBackgroundsFilter\"><strong>Show regional\r\n                                            backgrounds</strong></label>\r\n                                </div>\r\n                            </div>\r\n                            <!-- End Filter -->\r\n                            <ng-container *ngFor=\"let background of get_Backgrounds(); trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let selected of [background.name === differentWorldsFeat.data.background]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let checked of [selected || background.name === get_Character().class.background.name || background.name === get_Character().class.background.superType]; trackBy:trackByIndex\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let disabled of [!selected && (checked || differentWorldsFeat.data.background)]; trackBy:trackByIndex\">\r\n                                            <ng-template #DifferentWorldsBackgroundChoiceDetailsTemplate>\r\n                                                <header class=\"spellHeader\">{{background.name}}</header>\r\n                                                <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                                    [ngClass]=\"{'fancy-button':selected, 'disabled':disabled}\">\r\n                                                    <label>\r\n                                                        <input type=\"checkbox\"\r\n                                                            (change)=\"on_DifferentWorldsBackgroundChange(differentWorldsContent.levelNumber, differentWorldsFeat, background, $event.target.checked)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{selected\r\n                                                        ? \"Remove\" : \"Choose\"}}\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned tags\">\r\n                                                    <cite class=\"trait\"\r\n                                                        *ngFor=\"let trait of background.traits; trackBy:trackByIndex;\"\r\n                                                        [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                        openDelay=100>{{trait}}</cite>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"background.sourceBook\">\r\n                                                    <strong>Source</strong><i>&nbsp;{{background.sourceBook}}</i>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"background.prerequisites\">\r\n                                                    <strong>Prerequisites</strong>&nbsp;{{background.prerequisites}}\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"background.region\">\r\n                                                    <strong>Region</strong>&nbsp;{{background.region}}\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let desc of background.desc.split('\\n\\n'); let index = index; trackBy:trackByIndex;\">\r\n                                                        <ng-container *ngIf=\"index == 0\">\r\n                                                            <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                                <li\r\n                                                                    *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                                    {{line}}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"background.loreChoices[0]?.loreName != ''\">\r\n                                                        <p>\r\n                                                            You're trained in {{background.loreChoices[0].loreName}}\r\n                                                            Lore.\r\n                                                        </p>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"background.loreChoices[0]?.loreDesc != ''\">\r\n                                                        <p>\r\n                                                            You're trained in\r\n                                                            {{background.loreChoices[0].loreDesc.substr(0,1).toLowerCase()}}{{background.loreChoices[0].loreDesc.substr(1)}}.\r\n                                                        </p>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                            </ng-template>\r\n                                            <div class=\"list-item gridicon-fullsizebox\"\r\n                                                [ngClass]=\"{'selected':selected}\">\r\n                                                <input id=\"{{background.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                    (change)=\"on_DifferentWorldsBackgroundChange(differentWorldsContent.levelNumber, differentWorldsFeat, background, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                                <div class=\"gridicon-fullsizebox\"\r\n                                                    [ngbPopover]=\"DifferentWorldsBackgroundChoiceDetailsTemplate\"\r\n                                                    triggers=\"click\">\r\n                                                    <app-gridIcon [title]=\"background.name\"\r\n                                                        [detail]=\"background.traits.includes('Rare') ? 'Rare' : (background.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                    </app-gridIcon>\r\n                                                    <header class=\"sectionHeader\">\r\n                                                        <span>{{background.name}}&nbsp;</span>\r\n                                                        <cite class=\"trait\" *ngIf=\"background.traits.includes('Rare')\"\r\n                                                            [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                            openDelay=100>Rare</cite>\r\n                                                        <cite class=\"trait\"\r\n                                                            *ngIf=\"background.traits.includes('Uncommon')\"\r\n                                                            [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                            openDelay=100>Uncommon</cite>\r\n                                                    </header>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Blessed Blood Content-->\r\n                <ng-container\r\n                    *ngFor=\"let blessedBloodContent of get_ActiveSpecialChoiceShown('blessedblood'); trackBy:trackByID;\">\r\n                    <ng-container *ngFor=\"let blessedBloodSpells of [get_BlessedBloodSpells()]; trackBy:trackByIndex;\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Blessed Blood Deity Spells: {{blessedBloodSpells}}/3\r\n                            </header>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <p>\r\n                                Add up to three of your deity's spells (spells your deity grants to clerics) to your\r\n                                spell list. They are not automatically added to your repertoire, but you can select them\r\n                                just as you would spells normally on the divine spell list.\r\n                            </p>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <ng-container *ngFor=\"let spell of get_BlessedBloodDeitySpells(); trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [get_BlessedBloodHaveSpell(spell)]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [blessedBloodSpells >= 3 && !checked]; trackBy:trackByIndex\">\r\n                                        <ng-template #BlessedBloodChoiceDetailsTemplate>\r\n                                            <header class=\"spellHeader newrow\">\r\n                                                <span style=\"flex-grow:10\">\r\n                                                    {{spell.name}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons>\r\n                                                    {{(spell.castType) ? spell.castType : \"\"}}\r\n                                                </span>\r\n                                                <span style=\"flex-basis:auto; flex-shrink:0\">\r\n                                                    Spell {{spell.levelreq}}\r\n                                                </span>\r\n                                            </header>\r\n                                            <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                                [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                                <label>\r\n                                                    <input type=\"checkbox\"\r\n                                                        (change)=\"on_BlessedBloodSpellTaken(spell, blessedBloodContent.levelNumber, $event.target.checked)\"\r\n                                                        [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                    {{checked ? \"Remove\" : \"Choose\"}}\r\n                                                </label>\r\n                                            </div>\r\n                                            <app-spell class=\"newrow\" [spell]=spell [spellLevel]=\"spell.levelreq\">\r\n                                            </app-spell>\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                            <input id=\"{{spell.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"on_BlessedBloodSpellTaken(spell, blessedBloodContent.levelNumber, $event.target.checked)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\"\r\n                                                [ngbPopover]=\"BlessedBloodChoiceDetailsTemplate\" triggers=\"click\">\r\n                                                <app-gridIcon [title]=\"spell.name\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>{{spell.name}}</span>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Fuse Stance content-->\r\n                <ng-container\r\n                    *ngFor=\"let fuseStanceContent of get_ActiveSpecialChoiceShown('fusestance'); trackBy:trackByID;\">\r\n                    <ng-container\r\n                        *ngFor=\"let fuseStanceFeat of get_FuseStanceFeat(fuseStanceContent.levelNumber); trackBy:trackByIndex\">\r\n                        <ng-container\r\n                            *ngFor=\"let finished of [fuseStanceFeat.data.stances.length == 2]; trackBy:trackByIndex\">\r\n                            <div class=\"newrow list-item padding-8 center-aligned\">\r\n                                <header class=\"box-header sectionHeader\">\r\n                                    Fuse Stance{{(finished && fuseStanceFeat.data.name) ? \": \"+\r\n                                    fuseStanceFeat.data.name + \" (\" + fuseStanceFeat.data.stances.join(', ') + \")\" :\r\n                                    \"\"}}\r\n                                </header>\r\n                            </div>\r\n                            <div class=\"list-item\">\r\n                                <p>\r\n                                    Choose two stances you know and combine them into a single fused stance. Give your\r\n                                    new fused stance a unique name. When you enter your fused stance, you gain all the\r\n                                    effects of both stances, including the requirements and restrictions.\r\n                                </p>\r\n                                <p>\r\n                                    You can't fuse stances with fundamentally incompatible requirements or restrictions\r\n                                    (such as Mountain Stance and Crane Stance, which both require using only one type of\r\n                                    Strike).\r\n                                </p>\r\n                            </div>\r\n                            <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                                <div class=\"newrow list-item\">\r\n                                    <div class=\"newrow list-item\">\r\n                                        <strong>Stance name&nbsp;\r\n                                            <input type=\"text\" [(ngModel)]=\"fuseStanceFeat.data.name\"\r\n                                                (blur)=\"on_FuseStanceNameChange()\" maxLength=\"30\">\r\n                                        </strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"list-item transparent\">\r\n                                    <header class=\"sectionHeader\">Fused Stances</header>\r\n                                </div>\r\n                                <ng-container\r\n                                    *ngFor=\"let stance of get_StancesToFuse(fuseStanceContent.levelNumber, fuseStanceFeat); trackBy:trackByIndex;\">\r\n                                    <ng-template #FuseStanceChoiceDetailsPopover>\r\n                                        <header class=\"spellHeader\">{{stance.activity.name}}\r\n                                            <app-actionIcons [actionString]=\"stance.activity.actions\">\r\n                                            </app-actionIcons>{{(stance.activity.activationType) ?\r\n                                            stance.activity.activationType\r\n                                            : \"\"}}\r\n                                        </header>\r\n                                        <app-activity [creature]=\"'Character'\" [activity]=stance.activity\r\n                                            [allowActivate]=false>\r\n                                        </app-activity>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                        [ngClass]=\"{'unavailable':stance.reason, 'selected':fuseStanceFeat.data.stances.includes(stance.activity.name)}\">\r\n                                        <input id=\"{{stance.activity.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"on_FuseStanceStanceChange(fuseStanceFeat, stance.activity.name, $event.target.checked)\"\r\n                                            [checked]=\"fuseStanceFeat.data.stances.includes(stance.activity.name)\"\r\n                                            [disabled]=\"(finished || stance.reason) && !fuseStanceFeat.data.stances.includes(stance.activity.name)\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"FuseStanceChoiceDetailsPopover\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"stance.activity.name\"\r\n                                                [superTitle]=\"stance.restricted ? 'icon-ra ra-bird-claw' : ''\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{stance.activity.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\" *ngIf=\"stance.restricted\"\r\n                                                    [ngbPopover]=\"'While in this stance, you can only use the stance\\'s special attack. You can only add one stance of this type to the fused stance.'\"\r\n                                                    openDelay=100>\r\n                                                    Attack restrictions\r\n                                                </cite>\r\n                                                <cite class=\"problem\" *ngIf=\"stance.reason\">\r\n                                                    {{stance.reason}}\r\n                                                </cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Additional Heritages content-->\r\n                <ng-container\r\n                    *ngFor=\"let additionalHeritagesContent of get_ActiveSpecialChoiceShown('additionalheritages'); trackBy:trackByID;\">\r\n                    <ng-container\r\n                        *ngFor=\"let heritageGain of get_AdditionalHeritagesAvailable(additionalHeritagesContent.levelNumber); trackBy:trackByIndex\">\r\n                        <ng-container\r\n                            *ngFor=\"let heritageIndex of get_AdditionalHeritageIndex(heritageGain.source); trackBy:trackByIndex\">\r\n                            <ng-container *ngIf=\"heritageGain.source == additionalHeritagesContent.choice.source\">\r\n                                <div class=\"newrow list-item padding-8 center-aligned\">\r\n                                    <header class=\"box-header sectionHeader\">\r\n                                        Heritage\r\n                                        ({{heritageGain.source}}){{(get_Character().class.additionalHeritages[heritageIndex].name)\r\n                                        ? \": \"+ get_Character().class.additionalHeritages[heritageIndex].name : \"\"}}\r\n                                    </header>\r\n                                </div>\r\n                                <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let heritage of get_AvailableHeritages('', heritageGain.ancestry, heritageIndex); trackBy:trackByIndex;\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let selected of [heritage.name === get_Character().class.additionalHeritages[heritageIndex].name]; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let checked of [selected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let disabled of [!selected && (checked || get_Character().class.additionalHeritages[heritageIndex].name)]; trackBy:trackByIndex;\">\r\n                                                    <ng-template #HeritageChoiceDetailsTemplate>\r\n                                                        <header class=\"spellHeader\">{{heritage.name}}</header>\r\n                                                        <div class=\"button newrow no-animation\"\r\n                                                            *ngIf=\"!disabled && !heritage.subTypes.length\"\r\n                                                            [ngClass]=\"{'fancy-button':selected, 'disabled':disabled}\">\r\n                                                            <label>\r\n                                                                <input type=\"checkbox\"\r\n                                                                    (change)=\"on_AdditionalHeritageChange(heritage, $event.target.checked, heritageIndex, heritageGain.source)\"\r\n                                                                    [checked]=\"checked\" [disabled]=\"disabled\"\r\n                                                                    hidden>{{checked ? \"Remove\" : \"Choose\"}}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned tags\">\r\n                                                            <cite class=\"trait\"\r\n                                                                *ngFor=\"let trait of heritage.traits; trackBy:trackByIndex;\"\r\n                                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                                openDelay=100>{{trait}}</cite>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\" *ngIf=\"heritage.sourceBook\">\r\n                                                            <strong>Source</strong><i>&nbsp;{{heritage.sourceBook}}</i>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let desc of heritage.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                                <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                                    <li\r\n                                                                        *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                                        {{line}}\r\n                                                                    </li>\r\n                                                                </ul>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let activityName of heritage.gainActivities; trackBy:trackByIndex;\">\r\n                                                            <div class=\"newrow left-aligned\"\r\n                                                                *ngFor=\"let activity of get_Activities(activityName); trackBy:trackByIndex;\">\r\n                                                                <header class=\"spellHeader left-aligned\">\r\n                                                                    {{activity.name}}\r\n                                                                    <app-actionIcons [actionString]=\"activity.actions\">\r\n                                                                    </app-actionIcons>\r\n                                                                    {{(activity.activationType) ?\r\n                                                                    activity.activationType :\r\n                                                                    \"\"}}\r\n                                                                </header>\r\n                                                                <app-activity class=\"newrow\" [activity]=activity\r\n                                                                    [allowActivate]=false>\r\n                                                                </app-activity>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                        <!--Subheritages-->\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let subheritage of heritage.subTypes; trackBy:trackByIndex;\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let subheritageSelected of [subheritage.name === get_Character().class.additionalHeritages[heritageIndex].name]; trackBy:trackByIndex;\">\r\n                                                                <ng-container\r\n                                                                    *ngFor=\"let subheritageChecked of [subheritageSelected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex;\">\r\n                                                                    <ng-container\r\n                                                                        *ngFor=\"let subheritageDisabled of [!subheritageSelected && (subheritageChecked || get_Character().class.additionalHeritages[heritageIndex].name)]; trackBy:trackByIndex;\">\r\n                                                                        <div class=\"list-item\"\r\n                                                                            [ngClass]=\"{'selected':subheritageSelected}\">\r\n                                                                            <div class=\"gridicon-fullsizebox lower\">\r\n                                                                                <input id=\"{{subheritage.name}}\"\r\n                                                                                    type=\"checkbox\"\r\n                                                                                    class=\"character-choice\"\r\n                                                                                    (change)=\"on_AdditionalHeritageChange(subheritage, $event.target.checked, heritageIndex, heritageGain.source)\"\r\n                                                                                    [checked]=\"subheritageChecked\"\r\n                                                                                    [disabled]=\"subheritageDisabled\">\r\n                                                                                <label for=\"{{subheritage.name}}\">\r\n                                                                                    <strong>{{subheritage.subType}}</strong>\r\n                                                                                </label>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </ng-container>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                        <!--End Subheritages-->\r\n                                                    </ng-template>\r\n                                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                                        [ngClass]=\"{'selected':selected}\">\r\n                                                        <input *ngIf=\"!heritage.subTypes.length\" id=\"{{heritage.name}}\"\r\n                                                            type=\"checkbox\" class=\"character-choice\"\r\n                                                            (change)=\"on_AdditionalHeritageChange(heritage, $event.target.checked, heritageIndex, heritageGain.source)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                                        <button class=\"character-choice\"\r\n                                                            *ngIf=\"heritage.subTypes.length\"\r\n                                                            (click)=\"HeritageChoiceDetailsPopover.toggle()\">+</button>\r\n                                                        <div class=\"gridicon-fullsizebox\"\r\n                                                            #HeritageChoiceDetailsPopover=\"ngbPopover\"\r\n                                                            [ngbPopover]=\"HeritageChoiceDetailsTemplate\"\r\n                                                            triggers=\"click\">\r\n                                                            <app-gridIcon [title]=\"heritage.name\"\r\n                                                                [detail]=\"heritage.traits.includes('Rare') ? 'Rare' : (heritage.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                            </app-gridIcon>\r\n                                                            <header class=\"sectionHeader\">\r\n                                                                <span>{{heritage.name}}&nbsp;</span>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"heritage.traits.includes('Rare')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                                    openDelay=100>Rare</cite>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"heritage.traits.includes('Uncommon')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                                    openDelay=100>Uncommon</cite>\r\n                                                            </header>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export class FormulaLearned {\r\n    public id: string = \"\";\r\n    public source: string = \"\";\r\n    public snareSpecialistPrepared: number = 0;\r\n    public snareSpecialistAvailable: number = 0;\r\n}\r\n","import { Consumable } from './Consumable';\r\n\r\nexport class OtherConsumable extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Other Consumables should be type \"otherconsumables\" to be found in the database\r\n    readonly type = \"otherconsumables\";\r\n}","<div id=\"dice\" class=\"diceBox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleDiceMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"list-item\" style=\"gap:8px;\">\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 4)\" [ngbTooltip]=\"'Roll 1d4'\">\r\n                <app-diceIcons_D4></app-diceIcons_D4>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 4)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd4'\">\r\n                {{diceNum}}d4\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 6)\" [ngbTooltip]=\"'Roll 1d6'\">\r\n                <app-diceIcons_D6></app-diceIcons_D6>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 6)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd6'\">\r\n                {{diceNum}}d6\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 8)\" [ngbTooltip]=\"'Roll 1d8'\">\r\n                <app-diceIcons_D8></app-diceIcons_D8>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 8)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd8'\">\r\n                {{diceNum}}d8\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 10)\" [ngbTooltip]=\"'Roll 1d10'\">\r\n                <app-diceIcons_D10></app-diceIcons_D10>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 10)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd10'\">\r\n                {{diceNum}}d10\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 12)\" [ngbTooltip]=\"'Roll 1d12'\">\r\n                <app-diceIcons_D12></app-diceIcons_D12>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 12)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd12'\">\r\n                {{diceNum}}d12\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 20)\" [ngbTooltip]=\"'Roll 1d20'\">\r\n                <app-diceIcons_D20></app-diceIcons_D20>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 20)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd20'\">\r\n                {{diceNum}}d20\r\n            </button>\r\n        </div>\r\n        <div class=\"newrow\">\r\n            <strong style=\"flex-basis: 7.5em; flex-grow:0;\">Dice number</strong> <input class=\"slider\" type=\"range\"\r\n                min=\"1\" max=\"20\" [(ngModel)]=\"diceNum\">\r\n        </div>\r\n    </div>\r\n    <div [ngbCollapse]=\"cleared\">\r\n        <div class=\"list-item center-aligned\">\r\n            <header class=\"sectionHeader box-header dice-result\">{{get_DiceSum()}}</header>\r\n            <div class=\"newrow center-aligned\" *ngIf=\"diceResult.length > 1\">\r\n                <span>\r\n                    <span *ngFor=\"let result of diceResult; let index = index; trackBy:trackByIndex\">\r\n                        {{index != 0 ? \"+ \" : \"\"}}\r\n                        <span [ngbTooltip]=\"result.roll\">{{result.result}}</span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow center-aligned\" *ngIf=\"diceResult.length <= 1\">&nbsp;</div>\r\n            <div class=\"newrow center-aligned\">\r\n                <span>\r\n                    ({{get_DiceSummary()}})\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow center-aligned\">\r\n                <button class=\"center-aligned\" (click)=\"clear()\">\r\n                    <header class=\"sectionHeader\">Clear</header>\r\n                </button>\r\n            </div>\r\n            <ng-container *ngFor=\"let creatureType of ['Character','Companion','Familiar']; trackBy:trackByIndex\">\r\n                <div class=\"newrow center-aligned\" *ngFor=\"let creature of get_Creature(creatureType); trackBy:trackByIndex\">\r\n                    <button class=\"center-aligned\" (click)=\"on_Heal(creature)\">\r\n                        Heal {{creature.name || creatureType}}\r\n                    </button>\r\n                    <button class=\"center-aligned\" (click)=\"on_TakeDamage(creature)\">\r\n                        Damage {{creature.name || creatureType}}\r\n                    </button>\r\n                    <button class=\"center-aligned\" (click)=\"set_TempHP(creature)\">\r\n                        Temp HP for {{creature.name || creatureType}}\r\n                    </button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CharacterService } from '../character.service';\r\nimport { Creature } from '../Creature';\r\n\r\n@Component({\r\n    selector: 'app-dice',\r\n    templateUrl: './dice.component.html',\r\n    styleUrls: ['./dice.component.css']\r\n})\r\nexport class DiceComponent implements OnInit {\r\n\r\n    public diceResult: { roll: string, result: number }[] = [];\r\n    public diceNum: number = 5;\r\n    public cleared: boolean = true;\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggleDiceMenu() {\r\n        this.characterService.toggle_Menu(\"dice\");\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    roll(amount: number, size: number) {\r\n        for (let index = 0; index < amount; index++) {\r\n            this.diceResult.push({ roll: \"d\" + size, result: Math.ceil(Math.random() * size) });\r\n        }\r\n        if (this.cleared) { this.cleared = false; }\r\n    }\r\n\r\n    get_DiceSummary() {\r\n        let summary: string[] = [];\r\n        [\"d4\", \"d6\", \"d8\", \"d10\", \"d12\", \"d20\"].forEach(die => {\r\n            let count = this.diceResult.filter(result => result.roll == die).length;\r\n            if (count) {\r\n                summary.push(count + die);\r\n            }\r\n        })\r\n        return summary.join(\", \");\r\n    }\r\n\r\n    get_Creature(creatureType: string) {\r\n        if (creatureType == \"Companion\") {\r\n            return this.characterService.get_CompanionAvailable() ? [this.characterService.get_Creature(creatureType)] : [];\r\n        }\r\n        if (creatureType == \"Familiar\") {\r\n            return this.characterService.get_FamiliarAvailable() ? [this.characterService.get_Creature(creatureType)] : [];\r\n        }\r\n        return [this.characterService.get_Creature(creatureType)];\r\n    }\r\n\r\n    on_Heal(creature: Creature) {\r\n        let amount = this.get_DiceSum();\r\n        let dying = creature.health.dying(creature, this.characterService);\r\n        creature.health.heal(creature, this.characterService, this.characterService.effectsService, amount, true, true, dying);\r\n        this.characterService.set_ToChange(creature.type, \"health\");\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TakeDamage(creature: Creature) {\r\n        let amount = this.get_DiceSum();\r\n        let wounded = creature.health.wounded(creature, this.characterService);\r\n        let dying = creature.health.dying(creature, this.characterService);\r\n        creature.health.takeDamage(creature, this.characterService, this.characterService.effectsService, amount, false, wounded, dying);\r\n        this.characterService.set_ToChange(creature.type, \"health\");\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_TempHP(creature: Creature) {\r\n        let amount = this.get_DiceSum();\r\n        creature.health.temporaryHP[0] = { amount: amount, source: \"Manual\", sourceId: \"\" };\r\n        creature.health.temporaryHP.length = 1;\r\n        this.characterService.set_ToChange(creature.type, \"health\");\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_DiceSum() {\r\n        return this.diceResult.reduce((a, b) => a + b.result, 0);\r\n    }\r\n\r\n    clear() {\r\n        this.cleared = true;\r\n        setTimeout(() => {\r\n            this.diceResult.length = 0;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Skill } from './Skill';\r\nimport * as json_skills from '../assets/json/skills';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SkillsService {\r\n    private skills: Skill[] = []; \r\n    private loading: boolean = true;\r\n    \r\n    constructor() { }\r\n\r\n    get_Skills(customSkills: Skill[], name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        if (!this.still_loading()) {\r\n            let skills: Skill[] = this.skills.concat(customSkills);\r\n            if (name == \"Lore\") {\r\n                return skills.filter(skill => \r\n                (\r\n                    skill.name.toLowerCase().includes(name.toLowerCase())\r\n                ) && (\r\n                    type ? skill.type.toLowerCase() == type.toLowerCase() : true\r\n                ) && (\r\n                    locked != undefined ? skill.locked == locked : true\r\n                ));\r\n            }\r\n            return skills.filter(skill => \r\n                (\r\n                    name ? skill.name.toLowerCase() == name.toLowerCase() : true\r\n                ) && (\r\n                    type ? skill.type.toLowerCase() == type.toLowerCase() : true\r\n                ) && (\r\n                    locked != undefined ? skill.locked == locked : true\r\n                ));\r\n        } else { return [new Skill()] }\r\n    }\r\n\r\n    get_SkillLevelName(level: number, short: boolean = false) {\r\n        if (short) {\r\n            return [\"U\", \"U\", \"T\", \"T\", \"E\", \"E\", \"M\", \"M\", \"L\"][level]\r\n        } else {\r\n            return [\"Untrained\", \"Untrained\", \"Trained\", \"Trained\", \"Expert\", \"Expert\", \"Master\", \"Master\", \"Legendary\"][level]\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.skills.length) {\r\n            this.loading = true;\r\n            this.load_Skills();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Skills() {\r\n        this.skills = [];\r\n        Object.keys(json_skills).forEach(key => {\r\n            this.skills.push(...json_skills[key].map(obj => Object.assign(new Skill(), obj)));\r\n        });\r\n    }\r\n    \r\n}","import core from './core.json';\r\nimport advanced_character_guide from './advanced_character_guide.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    advanced_character_guide,\r\n    custom_kitsune\r\n};","import { Level } from './Level';\r\nimport { Ancestry } from './Ancestry';\r\nimport { Heritage } from './Heritage';\r\nimport { Background } from './Background';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemsService } from './items.service';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { Skill } from './Skill';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { Equipment } from './Equipment';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SpellGain } from './SpellGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { SpellLearned } from './SpellLearned';\r\nimport { FormulaLearned } from './FormulaLearned';\r\nimport { LanguageGain } from './LanguageGain';\r\n\r\nexport class Class {\r\n    public readonly _className: string = this.constructor.name;\r\n    public activities: ActivityGain[] = [];\r\n    public ancestry: Ancestry = new Ancestry();\r\n    public anathema: string[] = [];\r\n    public animalCompanion: AnimalCompanion = new AnimalCompanion();\r\n    public background: Background = new Background();\r\n    public customSkills: Skill[] = [];\r\n    public deity: string = \"\";\r\n    public desc: {name:string, value:string}[] = [];\r\n    public familiar: Familiar = new Familiar();\r\n    public focusPoints: number = 0;\r\n    public focusPointsLast: number = 0;\r\n    public gainItems: ItemGain[] = [];\r\n    public heritage: Heritage = new Heritage();\r\n    public additionalHeritages: Heritage[] = [];\r\n    public hitPoints: number = 0;\r\n    public languages: LanguageGain[] = [];\r\n    public levels: Level[] = [];\r\n    public name: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public spellCasting: SpellCasting[] = [];\r\n    public spellBook: SpellLearned[] = [];\r\n    public spellList: SpellLearned[] = [];\r\n    public formulaBook: FormulaLearned[] = [];\r\n    on_ChangeClass(characterService: CharacterService) {\r\n        let character = characterService.get_Character();\r\n        //Of each granted Item, find the item with the stored id and drop it.\r\n        this.gainItems.forEach((freeItem: ItemGain) => {\r\n            if (freeItem.id) {\r\n                character.inventories.forEach(inv => {\r\n                    inv[freeItem.type].filter((item: Equipment) => item.id == freeItem.id).forEach(item => {\r\n                        characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                        freeItem.id = \"\";\r\n                    });\r\n                })\r\n            }\r\n        });\r\n        //Some feats get specially processed when taken.\r\n        //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n        this.levels.forEach(level => {\r\n            level.featChoices.filter(choice => choice.available).forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, false);\r\n                });\r\n            });\r\n        });\r\n        this.customSkills.forEach(skill => {\r\n            character.customSkills = character.customSkills.filter(customSkill => customSkill.name != skill.name);\r\n        });\r\n    }\r\n    on_NewClass(characterService: CharacterService, itemsService: ItemsService) {\r\n        if (this.name) {\r\n            let character = characterService.get_Character();\r\n            //Grant all items and save their id in the ItemGain.\r\n            this.gainItems.forEach((freeItem: ItemGain) => {\r\n                let item: Equipment = itemsService.get_Items()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                if (item) {\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            this.levels.forEach(level => {\r\n                level.featChoices.forEach(choice => {\r\n                    let count: number = 0;\r\n                    choice.feats.forEach(feat => {\r\n                        count++;\r\n                        character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                    });\r\n                    choice.feats.splice(0, count);\r\n                });\r\n            });\r\n            this.customSkills.forEach(skill => {\r\n                character.customSkills.push(Object.assign(new Skill(), skill));\r\n            });\r\n        }\r\n    }\r\n    on_ChangeAncestry(characterService: CharacterService) {\r\n        if (this.ancestry.name) {\r\n            let character = characterService.get_Character();\r\n            let level = this.levels[1];\r\n            this.languages = this.languages.filter(language => language.source != this.ancestry.name);\r\n            characterService.set_ToChange(\"Character\", \"general\");\r\n            level.abilityChoices = level.abilityChoices.filter(availableBoost => availableBoost.source != \"Ancestry\")\r\n            //Of each granted Item, find the item with the stored id and drop it.\r\n            this.ancestry.gainItems.forEach((freeItem: ItemGain) => {\r\n                if (freeItem.id) {\r\n                    character.inventories.forEach(inv => {\r\n                        inv[freeItem.type].filter((item: Equipment) => item.id == freeItem.id).forEach(item => {\r\n                            characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                            freeItem.id = \"\";\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n            this.ancestry.featChoices.filter(choice => choice.available).forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, false);\r\n                });\r\n            });\r\n            this.levels.forEach(level => {\r\n                //Remove all Adopted Ancestry feats\r\n                level.featChoices.filter(choice => choice.feats.filter(feat => feat.name.includes(\"Adopted Ancestry\")).forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, feat.locked)\r\n                }));\r\n            });\r\n        }\r\n    }\r\n    on_NewAncestry(characterService: CharacterService, itemsService: ItemsService) {\r\n        if (this.ancestry.name) {\r\n            let character = characterService.get_Character();\r\n            let level = this.levels[1];\r\n            this.languages.push(...this.ancestry.languages.map(language => Object.assign(new LanguageGain(), {name:language, locked:true, source:this.ancestry.name})));\r\n            characterService.set_ToChange(\"Character\", \"general\");\r\n            level.abilityChoices.push(...this.ancestry.abilityChoices);\r\n            level.featChoices.push(...this.ancestry.featChoices);\r\n            characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n            //Grant all items and save their id in the ItemGain.\r\n            this.ancestry.gainItems.forEach((freeItem: ItemGain) => {\r\n                let item: Equipment = itemsService.get_Items()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                if (item) {\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            level.featChoices.filter(choice => choice.source == \"Ancestry\").forEach(choice => {\r\n                let count: number = 0;\r\n                choice.feats.forEach(feat => {\r\n                    count++;\r\n                    character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                });\r\n                choice.feats.splice(0, count);\r\n            });\r\n        }\r\n    }\r\n    on_ChangeHeritage(characterService: CharacterService, index: number = -1) {\r\n        let heritage: Heritage = this.heritage;\r\n        if (index != -1) {\r\n            heritage = this.additionalHeritages[index];\r\n        }\r\n        if (heritage?.name) {\r\n            let level = this.levels[1];\r\n            let character = characterService.get_Character();\r\n            heritage.ancestries.forEach(ancestryListing => {\r\n                let a = this.ancestry.ancestries;\r\n                a.splice(a.indexOf(ancestryListing), 1);\r\n            })\r\n            heritage.traits.forEach(traitListing => {\r\n                this.ancestry.traits = this.ancestry.traits.filter(trait => trait != traitListing)\r\n                characterService.set_ToChange(\"Character\", \"general\");\r\n                characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n            })\r\n            //Of each granted Item, find the item with the stored id and drop it.\r\n            heritage.gainItems.forEach((freeItem: ItemGain) => {\r\n                if (freeItem.id) {\r\n                    character.inventories.forEach(inv => {\r\n                        inv[freeItem.type].filter((item: Equipment) => item.id == freeItem.id).forEach(item => {\r\n                            characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                            freeItem.id = \"\";\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n            heritage.featChoices.filter(choice => choice.available).forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, false);\r\n                });\r\n            });\r\n            level.featChoices = level.featChoices.filter(choice => choice.source != heritage.name);\r\n            level.skillChoices = level.skillChoices.filter(choice => choice.source != heritage.name);\r\n            //Also remove the 1st and 5th level skill increase from Skilled Heritage if you are removing Skilled Heritage\r\n            if (heritage.name == \"Skilled Heritage\") {\r\n                this.levels[5].skillChoices = this.levels[5].skillChoices.filter(choice => choice.source != heritage.name);\r\n            }\r\n            heritage.gainActivities.forEach((gainActivity: string) => {\r\n                let oldGain = character.class.activities.find(gain => gain.name == gainActivity && gain.source == heritage.name);\r\n                if (oldGain) {\r\n                    character.lose_Activity(characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, characterService.activitiesService, oldGain);\r\n                }\r\n            });\r\n            //Gain Spell or Spell Option\r\n            heritage.spellChoices.forEach(oldSpellChoice => {\r\n                character.remove_SpellChoice(characterService, oldSpellChoice);\r\n            });\r\n            //Undo all Wellspring Gnome changes, where we turned Primal spells into other traditions.\r\n            //We collect all Gnome feats that grant a primal spell, and for all of those spells that you own, set the spell tradition to Primal on the character:\r\n            if (heritage.name.includes(\"Wellspring Gnome\")) {\r\n                let feats: string[] = characterService.get_Feats(\"\", \"Gnome\")\r\n                    .filter(feat => \r\n                        feat.gainSpellChoice.filter(choice => \r\n                            choice.castingType == \"Innate\" &&\r\n                            choice.tradition == \"Primal\"\r\n                        ).length)\r\n                    .map(feat => feat.name);\r\n                this.spellCasting.find(casting => casting.castingType == \"Innate\")\r\n                    .spellChoices.filter(choice => feats.includes(choice.source.substr(6))).forEach(choice => {\r\n                    choice.tradition = \"Primal\";\r\n                    if (choice.available) {\r\n                        choice.spells.length = 0;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    on_NewHeritage(characterService: CharacterService, itemsService: ItemsService, index: number = -1) {\r\n        let heritage: Heritage = this.heritage;\r\n        if (index != -1) {\r\n            heritage = this.additionalHeritages[index];\r\n        }\r\n        if (heritage?.name) {\r\n            let character = characterService.get_Character();\r\n            let level = this.levels[1];\r\n            this.ancestry.traits.push(...heritage.traits)\r\n            this.ancestry.ancestries.push(...heritage.ancestries);\r\n            level.featChoices.push(...heritage.featChoices);\r\n            level.skillChoices.push(...heritage.skillChoices);\r\n            //Grant all items and save their id in the ItemGain.\r\n            heritage.gainItems.forEach((freeItem: ItemGain) => {\r\n                let item: Equipment = itemsService.get_CleanItems()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                if (item) {\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            level.featChoices.filter(choice => choice.source == heritage.name).forEach(choice => {\r\n                let count: number = 0;\r\n                choice.feats.forEach(feat => {\r\n                    count++;\r\n                    character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                });\r\n                choice.feats.splice(0, count);\r\n            });\r\n            //You may get a skill training from a heritage.\r\n            //If you have already trained this skill from another source:\r\n            //Check if it is a free training (not locked). If so, remove it and reimburse the skill point, then replace it with the heritage's.\r\n            //If it is locked, we better not replace it. Instead, you get a free Heritage skill increase.\r\n            if (heritage.skillChoices.length && heritage.skillChoices[0].increases.length) {\r\n                let existingIncreases = character.get_SkillIncreases(characterService, 1, 1, heritage.skillChoices[0].increases[0].name, '');\r\n                if (existingIncreases.length) {\r\n                    let existingIncrease = existingIncreases[0];\r\n                    let existingSkillChoice: SkillChoice = character.get_SkillChoice(existingIncrease.sourceId);\r\n                    if (existingSkillChoice !== heritage.skillChoices[0]) {\r\n                        if (!existingIncrease.locked) {\r\n                            character.increase_Skill(characterService, existingIncrease.name, false, existingSkillChoice, false);\r\n                        } else {\r\n                            heritage.skillChoices[0].increases.pop();\r\n                            heritage.skillChoices[0].available = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            heritage.gainActivities.forEach((gainActivity: string) => {\r\n                character.gain_Activity(characterService, Object.assign(new ActivityGain(), {name:gainActivity, source:heritage.name}), 1);\r\n            });\r\n            //Gain Spell or Spell Option\r\n            heritage.spellChoices.forEach(newSpellChoice => {\r\n                let insertSpellChoice = Object.assign(new SpellChoice(), JSON.parse(JSON.stringify(newSpellChoice)));\r\n                insertSpellChoice.spells.forEach((gain: SpellGain) => {\r\n                    gain.sourceId = insertSpellChoice.id;\r\n                    gain.source = insertSpellChoice.source;\r\n                    gain.frequency = insertSpellChoice.frequency;\r\n                    gain.cooldown = insertSpellChoice.cooldown;\r\n                })\r\n                character.add_SpellChoice(characterService, level.number, insertSpellChoice);\r\n            });\r\n            //Wellspring Gnome changes primal spells to another tradition.\r\n            //We collect all Gnome feats that grant a primal spell and set that spell to the same tradition as the heritage:\r\n            if (heritage.name.includes(\"Wellspring Gnome\")) {\r\n                let feats: string[] = characterService.get_Feats(\"\", \"Gnome\")\r\n                    .filter(feat => feat.gainSpellChoice.some(choice => choice.castingType == \"Innate\" && choice.tradition == \"Primal\")).map(feat => feat.name);\r\n                this.spellCasting.find(casting => casting.castingType == \"Innate\")\r\n                    .spellChoices.filter(choice => feats.includes(choice.source.substr(6))).forEach(choice => {\r\n                    choice.tradition = heritage.subType;\r\n                    if (choice.available) {\r\n                        choice.spells.length = 0;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    on_ChangeBackground(characterService: CharacterService) {\r\n        if (this.background.name) {\r\n            let level = this.levels[1];\r\n            let character = characterService.get_Character();\r\n            level.skillChoices = level.skillChoices.filter(choice => choice.source != \"Background\");\r\n            level.abilityChoices = level.abilityChoices.filter(availableBoost => availableBoost.source != \"Background\");\r\n            //Some feats get specially processed when taken.\r\n            //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n            level.featChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                character.take_Feat(character, characterService, undefined, feat.name, false, choice, feat.locked);\r\n                });\r\n            });\r\n            level.featChoices = level.featChoices.filter(availableBoost => availableBoost.source != \"Background\");\r\n            //Remove all Lores\r\n            let oldChoices: LoreChoice[] = level.loreChoices.filter(choice => choice.source == \"Background\");\r\n            let oldChoice = oldChoices[oldChoices.length - 1];\r\n            if (oldChoice.increases.length) {\r\n                character.remove_Lore(characterService, oldChoice);\r\n            }\r\n            level.loreChoices = level.loreChoices.filter(choice => choice.source != \"Background\");\r\n            //Process skill choices in case any custom skills need to be removed.\r\n            this.background.skillChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                choice.increases.forEach(increase => {\r\n                    character.process_Skill(characterService, increase.name, false, choice, true)\r\n                })\r\n            });\r\n            \r\n        }\r\n    }\r\n    on_NewBackground(characterService: CharacterService) {\r\n        if (this.background.name) {\r\n            let level = this.levels[1];\r\n            let character = characterService.get_Character();\r\n            level.abilityChoices.push(...this.background.abilityChoices);\r\n            level.skillChoices.push(...this.background.skillChoices);\r\n            level.featChoices.push(...this.background.featChoices);\r\n            level.loreChoices.push(...this.background.loreChoices);\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            level.featChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                let count: number = 0;\r\n                choice.feats.forEach(feat => {\r\n                    count++;\r\n                    character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                });\r\n                choice.feats.splice(0, count);\r\n            });\r\n            //Process the new skill choices in case any new skill needs to be created.\r\n            level.skillChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                choice.increases.forEach(increase => {\r\n                    character.process_Skill(characterService, increase.name, true, choice, true)\r\n                })\r\n            });\r\n            if (this.background.loreChoices[0].loreName) {\r\n                if (characterService.get_Skills(character, 'Lore: '+this.background.loreChoices[0].loreName).length) {\r\n                    let increases = character.get_SkillIncreases(characterService, 1, 20, 'Lore: '+this.background.loreChoices[0].loreName).filter(increase => \r\n                        increase.sourceId.includes(\"-Lore-\")\r\n                        );\r\n                    if (increases.length) {\r\n                        let oldChoice = character.get_LoreChoice(increases[0].sourceId)\r\n                        if (oldChoice.available == 1) {\r\n                            character.remove_Lore(characterService, oldChoice);\r\n                        }\r\n                    }\r\n                }\r\n                character.add_Lore(characterService, this.background.loreChoices[0])\r\n            }\r\n            if (this.background.skillChoices[0].increases.length) {\r\n                let existingIncreases = character.get_SkillIncreases(characterService, 1, 1, this.background.skillChoices[0].increases[0].name, '');\r\n                if (existingIncreases.length) {\r\n                    let existingIncrease = existingIncreases[0];\r\n                    let existingSkillChoice: SkillChoice = character.get_SkillChoice(existingIncrease.sourceId);\r\n                    //If you have already trained this skill from another source:\r\n                    //Check if it is a free training (not locked). If so, remove it and reimburse the skill point, then replace it with the background's.\r\n                    //If it is locked, we better not replace it. Instead, you get a free Background skill increase.\r\n                    if (existingSkillChoice !== this.background.skillChoices[0]) {\r\n                        if (!existingIncrease.locked) {\r\n                            character.increase_Skill(characterService, existingIncrease.name, false, existingSkillChoice, false);\r\n                        } else {\r\n                            this.background.skillChoices[0].increases.pop();\r\n                            this.background.skillChoices[0].available = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Trait } from './Trait';\r\nimport { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport * as json_traits from '../assets/json/traits';\r\nimport { Creature } from './Creature';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TraitsService {\r\n\r\n    private traits: Trait[] = [];\r\n    private loading: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            //Some trait instances have information after the trait name, so we allow traits that are included in the name as long as they have the dynamic attribute.\r\n            let traits = this.traits\r\n                .filter(trait =>\r\n                    traitName == \"\" ||\r\n                    trait.name == traitName ||\r\n                    (\r\n                        traitName.includes(trait.name) &&\r\n                        trait.dynamic\r\n                    )\r\n                )\r\n            if (traits.length) {\r\n                return traits;\r\n            } else {\r\n                console.error(\"Trait missing: \" + traitName)\r\n                return [Object.assign(new Trait(), {name: (\"Trait missing: \" + traitName), desc: \"This trait does not exist in the database.\"})]\r\n            }\r\n        } else {\r\n            return [new Trait()];\r\n        }\r\n    }\r\n\r\n    get_TraitsForThis(creature: Creature, name: string) {\r\n        if (!this.still_loading()) {\r\n            //Return all traits that are set to SHOW ON this named object and that are on any equipped equipment in your inventory\r\n            //uses the haveOn() method of Trait that returns any equipment that has this trait\r\n            let traits = this.traits;\r\n            return traits.filter(trait =>\r\n                trait.hints.find(hint => hint.showon.toLowerCase().includes(name.toLowerCase()))\r\n                && trait.haveOn(creature).length > 0\r\n            )\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    have_Trait(characterService: CharacterService, object: any, traitName: string) {\r\n        //Find out if this object - could be anything - has this trait. Sounds easy enough, but some items get traits added by certain circumstances, so here we are.\r\n        //Traits can have additional information, so we compare only the first word - but if the given traitName includes spaces, we compare the entire string.\r\n        return (object.get_Traits ? object.get_Traits(characterService, characterService.get_Character()) : object.traits)\r\n            .some((trait: string) =>\r\n                (\r\n                    traitName.includes(\" \") &&\r\n                    traitName == trait\r\n                ) || \r\n                (\r\n                    !traitName.includes(\" \") &&\r\n                    trait.split(\" \")[0].toLowerCase() == traitName.toLowerCase()\r\n                )\r\n            )\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.traits.length) {\r\n            this.loading = true;\r\n            this.load_Traits();\r\n            this.loading = false;\r\n        } else {\r\n            this.traits.forEach(trait => {\r\n                trait.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Traits() {\r\n        this.traits = [];\r\n        Object.keys(json_traits).forEach(key => {\r\n            this.traits.push(...json_traits[key].map(obj => Object.assign(new Trait(), obj)));\r\n        });\r\n    }\r\n\r\n}","export class Savegame {\r\n    public readonly _className: string = this.constructor.name;\r\n    name: string;\r\n    id: string;\r\n    dbId: string;\r\n    class: string;\r\n    classChoice: string;\r\n    heritage: string;\r\n    ancestry: string;\r\n    level: number;\r\n    partyName: string;\r\n}","import { EffectGain } from './EffectGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { SpellCast } from './SpellCast';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Hint } from './Hint';\r\nimport { CharacterService } from './character.service';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Activity {\r\n    public actions: string = \"1A\";\r\n    public activationType: string = \"\";\r\n    public castSpells: SpellCast[] = [];\r\n    public cooldown: number = 0;\r\n    //For Conditions that are toggled, if cooldownAfterEnd is set, the cooldown starts only after the active duration is finished.\r\n    // This is relevant for activities that cannot be used for X time after finishing.\r\n    // All others start ticking down their cooldown as soon as they start.\r\n    public cooldownAfterEnd: boolean = false;\r\n    public cost: string = \"\";\r\n    public maxDuration: number = 0;\r\n    public sustained: boolean = false;\r\n    //How often can you activate the activity? 0 is one activation per cooldown, or infinite activations if no cooldown is given. Use maxCharges() to read.\r\n    private charges: number = 0;\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public desc: string = \"\";\r\n    public effects: EffectGain[] = [];\r\n    public failure: string = \"\";\r\n    public frequency: string = \"\";\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public hints: Hint[] = [];\r\n    public inputRequired: string = \"\";\r\n    public name: string = \"\";\r\n    public onceEffects: EffectGain[] = [];\r\n    public requirements: string = \"\";\r\n    public showActivities: string[] = [];\r\n    public showSpells: string[] = [];\r\n    public specialdesc: string = \"\";\r\n    public success: string = \"\";\r\n    public toggle: boolean = false;\r\n    public traits: string[] = [];\r\n    public trigger: string = \"\";\r\n    //$cooldown is a calculated cooldown that it set by get_Cooldown() so that it can be used by can_Activate() without passing parameters.\r\n    public $cooldown: number = 0;\r\n    //Set displayOnly if the activity should not be used, but displayed for information, e.g. for ammunition\r\n    public displayOnly: boolean = false;\r\n    //If a gained condition has choices, these are shown on the activity. You can hide them with hideChoice.\r\n    public hideChoices: boolean = false;\r\n    can_Activate() {\r\n        //Test any circumstance under which this can be activated\r\n        let isStance: boolean = (this.traits.includes(\"Stance\"))\r\n        return isStance || this.gainItems.length || this.castSpells.length || this.gainConditions.length || this.cooldown || this.$cooldown || this.toggle || this.effects.length || this.onceEffects.length;\r\n    }\r\n    maxCharges(creature: Creature, characterService: CharacterService) {\r\n        //Add any effects to the number of charges you have. If you have none, start with 1, and if the result then remains 1, return 0.\r\n        let charges = this.charges;\r\n        let startWithZero: boolean = false;\r\n        if (charges == 0) {\r\n            startWithZero = true;\r\n            charges = 1;\r\n        }\r\n        characterService.effectsService.get_AbsolutesOnThis(creature, this.name + \" Charges\")\r\n            .forEach(effect => {\r\n                charges = parseInt(effect.setValue);\r\n            })\r\n        characterService.effectsService.get_RelativesOnThis(creature, this.name + \" Charges\")\r\n            .forEach(effect => {\r\n                charges += parseInt(effect.value);\r\n            })\r\n        if (startWithZero && charges == 1) {\r\n            return 0;\r\n        } else {\r\n            return charges;\r\n        }\r\n    }\r\n    get_Cooldown(creature: Creature, characterService: CharacterService) {\r\n        //Add any effects to the activity's cooldown.\r\n        let cooldown = this.cooldown;\r\n        //Use get_AbsolutesOnThese() because it allows to prefer lower values. We still sort the effects in descending setValue.\r\n        characterService.effectsService.get_AbsolutesOnThese(creature, [this.name + \" Cooldown\"], true)\r\n            .sort((a, b) => parseInt(b.setValue) - parseInt(a.setValue))\r\n            .forEach(effect => {\r\n                cooldown = parseInt(effect.setValue);\r\n            })\r\n        //Use get_RelativesOnThese() because it allows to prefer lower values. We still sort the effects in descending value.\r\n        characterService.effectsService.get_RelativesOnThese(creature, [this.name + \" Cooldown\"], true)\r\n            .sort((a, b) => parseInt(b.value) - parseInt(a.value))\r\n            .forEach(effect => {\r\n                cooldown += parseInt(effect.value);\r\n            })\r\n        //If the cooldown has changed from the original, update all activity gains that refer to this condition to lower their cooldown if necessary.\r\n        this.$cooldown = cooldown;\r\n        if (this.cooldown != cooldown) {\r\n            characterService.get_OwnedActivities(creature, 20, true).filter(gain => gain.name == this.name).forEach(gain => {\r\n                gain.activeCooldown = Math.min(gain.activeCooldown, cooldown);\r\n            })\r\n        }\r\n        return cooldown;\r\n    }\r\n}","import { Equipment } from './Equipment';\r\n\r\nexport class HeldItem extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Worn Items cannot be equipped or unequipped\r\n    readonly equippable = false;\r\n    //Held Items should be type \"helditems\" to be found in the database\r\n    readonly type = \"helditems\";\r\n    //How is this item held when used? Example: \"held in one hand\"\r\n    public usage: string = \"\";\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Spell } from './Spell';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemsService } from './items.service';\r\nimport { SpellGain } from './SpellGain';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Item } from './Item';\r\nimport { ItemGain } from './ItemGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { ConditionsService } from './conditions.service';\r\nimport * as json_spells from '../assets/json/spells';\r\nimport { Creature } from './Creature';\r\nimport { SpellChoice } from './SpellChoice';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SpellsService {\r\n\r\n    private spells: Spell[] = [];\r\n    private loading: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.spells.filter(spell =>\r\n                (spell.name.toLowerCase() == (name.toLowerCase()) || name == \"\") &&\r\n                (spell.traits.includes(type) || type == \"\") &&\r\n                (spell.traditions.includes(tradition) || tradition == \"\")\r\n            );\r\n        } else {\r\n            return [new Spell()];\r\n        }\r\n    }\r\n\r\n    get_DynamicSpellLevel(casting: SpellCasting, choice: SpellChoice, characterService: CharacterService) {\r\n        //highestSpellLevel is used in the eval() process.\r\n        let highestSpellLevel = 1;\r\n        let Character = characterService.get_Character();\r\n        function Skill_Level(name: string) {\r\n            return characterService.get_Skills(Character, name)[0]?.level(Character, characterService);\r\n        }\r\n        //Get the available spell level of this casting. This is the highest spell level of the spell choices that are available at your character level (and don't have a dynamic level).\r\n        highestSpellLevel = Math.max(...casting.spellChoices.filter(spellChoice => spellChoice.charLevelAvailable <= Character.level).map(spellChoice => spellChoice.level));\r\n        try {\r\n            return parseInt(eval(choice.dynamicLevel));\r\n        } catch (e) {\r\n            console.log(\"Error parsing spell level requirement (\" + choice.dynamicLevel + \"): \" + e)\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    process_Spell(creature: Creature, target: string = \"\", characterService: CharacterService, itemsService: ItemsService, conditionsService: ConditionsService, casting: SpellCasting, gain: SpellGain, spell: Spell, level: number, activated: boolean, manual: boolean = false, changeAfter: boolean = true) {\r\n\r\n        //Cantrips and Focus spells are automatically heightened to your maximum available spell level.\r\n        //If a spell is cast with a lower level than its minimum, the level is raised to the minimum.\r\n        let spellLevel: number = spell.get_EffectiveSpellLevel(creature, level, characterService, characterService.effectsService);\r\n\r\n        //If this spell was cast by an activity, it may have a specified duration. Keep that here before the duration is changed to keep the spell active (or not).\r\n        let customDuration: number = 0;\r\n        if (activated && gain.duration) {\r\n            customDuration = gain.duration;\r\n        }\r\n\r\n        if (activated) {\r\n            //Start cooldown\r\n            if (gain.cooldown && !gain.activeCooldown) {\r\n                gain.activeCooldown = gain.cooldown;\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n        }\r\n\r\n        if (activated && spell.sustained) {\r\n            gain.active = true;\r\n            if (spell.sustained) {\r\n                gain.duration = customDuration || spell.sustained;\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n            gain.target = target;\r\n        } else {\r\n            gain.active = false;\r\n            gain.duration = 0;\r\n            gain.target = \"\";\r\n        }\r\n\r\n        //Find out if target was given. If no target is set, most effects will not be applied.\r\n        let targetCreature: Creature | null = null;\r\n        switch (target) {\r\n            case \"Character\":\r\n                targetCreature = characterService.get_Character();\r\n                break;\r\n            case \"Companion\":\r\n                targetCreature = characterService.get_Companion();\r\n                break;\r\n            case \"Familiar\":\r\n                targetCreature = characterService.get_Familiar();\r\n                break;\r\n        }\r\n\r\n        //Apply conditions.\r\n        //Remove conditions only if the spell was deactivated manually, i.e. if you want the condition to end.\r\n        //If the spell ends by the time running out, the condition will also have a timer and run out by itself.\r\n        //This allows us to manually change the duration for a condition and keep it running when the spell runs out\r\n        //  (because it's much more difficult to change the spell duration -and- the condition duration).\r\n        if (spell.get_HeightenedConditions(spellLevel)) {\r\n            if (activated) {\r\n                let choicesIndex = 0;\r\n                spell.get_HeightenedConditions(spellLevel).forEach(conditionGain => {\r\n                    let newConditionGain = Object.assign(new ConditionGain(), conditionGain);\r\n                    let condition = conditionsService.get_Conditions(conditionGain.name)[0]\r\n                    //If this condition has choices, and the gain has choices prepared, apply the choice from the gain.\r\n                    // The order of gain.choices maps directly onto the order of the spell conditions that have choices.\r\n                    if (gain.choices.length >= choicesIndex - 1) {\r\n                        if (condition?.get_Choices(characterService, true, spellLevel).length && condition.$choices.includes(gain.choices[choicesIndex])) {\r\n                            newConditionGain.choice = gain.choices[choicesIndex];\r\n                            choicesIndex++;\r\n                        }\r\n                    }\r\n                    //If there is a choiceBySubType value, and you have a feat with superType == choiceBySubType, set the choice to that feat's subType as long as it's a valid choice for the condition. This overrides any manual choice.\r\n                    if (newConditionGain.choiceBySubType) {\r\n                        let subType = (characterService.get_FeatsAndFeatures(newConditionGain.choiceBySubType, \"\", true, true).find(feat => feat.superType == newConditionGain.choiceBySubType && feat.have(creature, characterService, creature.level, false)));\r\n                        if (subType && condition.choices.map(choice => choice.name).includes(subType.subType)) {\r\n                            newConditionGain.choice = subType.subType;\r\n                        }\r\n                    }\r\n                    //Pass the spell level in case that condition effects change with level\r\n                    newConditionGain.heightened = spellLevel;\r\n                    //Pass the spellcasting ability in case the condition needs to use the modifier\r\n                    if (casting) {\r\n                        newConditionGain.spellCastingAbility = casting.ability;\r\n                    }\r\n                    newConditionGain.spellSource = gain?.source || \"\";\r\n                    newConditionGain.spellGainID = gain?.id || \"\";\r\n                    //If this spell was cast by an activity, it may have a specified duration. Apply that here.\r\n                    if (customDuration) {\r\n                        newConditionGain.duration = customDuration;\r\n                    }\r\n                    let conditionTarget = targetCreature;\r\n                    if (conditionGain.targetFilter == \"caster\") {\r\n                        conditionTarget = creature;\r\n                    }\r\n                    //Form Control changes the duration of the Wild Shape spell and the condition in various ways.\r\n                    if (spell.name == \"Wild Shape\") {\r\n                        //If Form Control is activated,\r\n                        // 1. The duration is permanent if you have Perfect Form Control\r\n                        // 2. Otherwise, the duration is 1 hour\r\n                        if (conditionsService.get_AppliedConditions(creature, characterService, creature.conditions, true).some(gain => gain.name == \"Form Control\")) {\r\n                            if (creature.type == \"Character\" && (creature as Character).get_FeatsTaken(1, creature.level, \"Perfect Form Control\").length) {\r\n                                gain.duration = -1;\r\n                                newConditionGain.duration = gain.duration;\r\n                            } else {\r\n                                gain.duration = 6000;\r\n                                newConditionGain.duration = gain.duration;\r\n                            }\r\n                        //Without Form Control, Pest Form is 10 minutes, and every other form remains at 1 minute.\r\n                        } else {\r\n                            if (newConditionGain.choice == \"Pest Form\") {\r\n                                gain.duration = 1000;\r\n                                newConditionGain.duration = gain.duration;\r\n                            }\r\n                        }\r\n                        //If you have Insect Shape and use wild shape to polymorph into the non-flying insect form listed in pest form, the duration is 24 hours instead of 10 minutes.\r\n                        if (gain.duration != -1 && creature.type == \"Character\" && (creature as Character).get_FeatsTaken(1, creature.level, \"Insect Shape\").length) {\r\n                            if (newConditionGain.choice == \"Pest Form (non-flying insect)\") {\r\n                                gain.duration = 144000;\r\n                                newConditionGain.duration = gain.duration;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (conditionTarget) {\r\n                        characterService.add_Condition(conditionTarget, newConditionGain, false);\r\n                    }\r\n                });\r\n            } else if (manual) {\r\n                spell.get_HeightenedConditions(spellLevel).forEach(conditionGain => {\r\n                    let conditionTarget = targetCreature;\r\n                    if (conditionGain.targetFilter == \"caster\") {\r\n                        conditionTarget = creature;\r\n                    }\r\n                    if (conditionTarget) {\r\n                        characterService.get_AppliedConditions(conditionTarget, conditionGain.name)\r\n                            .filter(existingConditionGain => existingConditionGain.source == conditionGain.source)\r\n                            .forEach(existingConditionGain => {\r\n                                characterService.remove_Condition(conditionTarget, existingConditionGain, false);\r\n                            });\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if (changeAfter) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    rest(character: Character, characterService: CharacterService) {\r\n        //Get all owned spell gains that have a cooldown active.\r\n        //If its cooldown is exactly one day or until rest (-2), the spell gain's cooldown is reset.\r\n        character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.activeCooldown).forEach(taken => {\r\n            if ([-2, 144000].includes(taken.gain.cooldown)) {\r\n                taken.gain.activeCooldown = 0;\r\n            }\r\n        });\r\n        character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\").forEach(casting => {\r\n            casting.spellChoices.forEach(choice => {\r\n                choice.spells.forEach(gain => {\r\n                    gain.prepared = true;\r\n                });\r\n            });\r\n        });\r\n        character.class.spellCasting.filter(casting => casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\").forEach(casting => {\r\n            casting.spellChoices.filter(choice => choice.source == \"Feat: Occult Evolution\").forEach(choice => {\r\n                choice.spells.length = 0;\r\n                characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n            })\r\n        })\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n\r\n    refocus(character: Character, characterService: CharacterService) {\r\n        //Get all owned spell gains that have a cooldown active.\r\n        //If its cooldown is until refocus (-3), the spell gain's cooldown is reset.\r\n        character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.activeCooldown).forEach(taken => {\r\n            if (taken.gain.cooldown == -3) {\r\n                taken.gain.activeCooldown = 0;\r\n            }\r\n        });\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n\r\n    tick_Spells(character: Character, characterService: CharacterService, itemsService: ItemsService, conditionsService: ConditionsService, turns: number = 10) {\r\n        character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.activeCooldown || taken.gain.duration).forEach(taken => {\r\n            //Tick down the duration and the cooldown.\r\n            if (taken.gain.duration > 0) {\r\n                taken.gain.duration = Math.max(taken.gain.duration - turns, 0)\r\n                if (taken.gain.duration == 0) {\r\n                    let spell: Spell = this.get_Spells(taken.gain.name)[0];\r\n                    if (spell) {\r\n                        this.process_Spell(character, taken.gain.target, characterService, itemsService, conditionsService, null, taken.gain, spell, 0, false, false)\r\n                    }\r\n                }\r\n            }\r\n            characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            if (taken.gain.activeCooldown) {\r\n                taken.gain.activeCooldown = Math.max(taken.gain.activeCooldown - turns, 0)\r\n            }\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.spells.length) {\r\n            this.loading = true;\r\n            this.load_Spells();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Spells() {\r\n        this.spells = [];\r\n        Object.keys(json_spells).forEach(key => {\r\n            this.spells.push(...json_spells[key].map(obj => Object.assign(new Spell(), obj)));\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { Shield } from 'src/app/Shield';\r\nimport { WeaponMaterial } from 'src/app/WeaponMaterial';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { Material } from 'src/app/Material';\r\n\r\n@Component({\r\n    selector: 'app-itemMaterial',\r\n    templateUrl: './itemMaterial.component.html',\r\n    styleUrls: ['./itemMaterial.component.css']\r\n})\r\nexport class ItemMaterialComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Weapon | Armor | Shield;\r\n    @Input()\r\n    craftingStation: boolean = false;\r\n    @Input()\r\n    customItemStore: boolean = false;\r\n\r\n    public newWeaponMaterial: { material: Material, disabled?: boolean }[];\r\n    public inventories: string[] = [];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_InitialWeaponMaterials() {\r\n        let weapon = this.item as Weapon;\r\n        //Start with one empty rune to select nothing.\r\n        let allWeaponMaterials: { material: WeaponMaterial, disabled?: boolean }[] = [{ material: new WeaponMaterial() }];\r\n        allWeaponMaterials[0].material.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (weapon.material[0]) {\r\n            allWeaponMaterials.push(this.newWeaponMaterial[0] as { material: WeaponMaterial });\r\n        }\r\n        return allWeaponMaterials;\r\n    }\r\n\r\n    get_WeaponMaterials() {\r\n        let weapon: Weapon = this.item as Weapon;\r\n        let allWeaponMaterials: { material: WeaponMaterial, disabled?: boolean }[] = [];\r\n        this.itemsService.get_WeaponMaterials().forEach(material => {\r\n            allWeaponMaterials.push({ material: material });\r\n        })\r\n        //Set all materials to disabled that have the same name as any that is already equipped.\r\n        allWeaponMaterials.forEach((material: { material: WeaponMaterial, disabled?: boolean }) => {\r\n            if (weapon.material[0] && weapon.material[0].name == material.material.name) {\r\n                material.disabled = true;\r\n            }\r\n        });\r\n        let charLevel = 0;\r\n        let crafting = 0;\r\n        if (this.craftingStation) {\r\n            let character = this.get_Character();\r\n            charLevel = character.level;\r\n            crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n        }\r\n        //Disable all materials whose requirements are not met.\r\n        allWeaponMaterials.forEach(material => {\r\n            if (\r\n                (\r\n                    //If you are crafting this item yourself, you must fulfill the crafting skill requirement.\r\n                    !this.craftingStation ||\r\n                    material.material.craftingRequirement <= crafting && material.material.level <= charLevel\r\n                ) &&\r\n                (\r\n                    //You can't change to a material that doesn't support the currently equipped runes.\r\n                    material.material.runeLimit ?\r\n                        (\r\n                            !this.item.propertyRunes.find(rune => rune.level > material.material.runeLimit) &&\r\n                            (this.item.potencyRune == 1 ? material.material.runeLimit >= 2 : true) &&\r\n                            (this.item.potencyRune == 2 ? material.material.runeLimit >= 10 : true) &&\r\n                            (this.item.potencyRune == 3 ? material.material.runeLimit >= 16 : true) &&\r\n                            (this.item.strikingRune == 1 ? material.material.runeLimit >= 4 : true) &&\r\n                            (this.item.strikingRune == 2 ? material.material.runeLimit >= 12 : true) &&\r\n                            (this.item.strikingRune == 3 ? material.material.runeLimit >= 19 : true)\r\n                        )\r\n                        : true\r\n                )\r\n            ) {\r\n                material.disabled = false;\r\n            } else {\r\n                material.disabled = true;\r\n            }\r\n        });\r\n        return allWeaponMaterials.sort(function (a, b) {\r\n            if (a.material.name > b.material.name) {\r\n                return 1;\r\n            }\r\n            if (a.material.name < b.material.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.material.level - b.material.level);\r\n    }\r\n\r\n    add_WeaponMaterial() {\r\n        let weapon = this.item as Weapon;\r\n        let material = this.newWeaponMaterial[0].material;\r\n        if (!weapon.material[0] || material !== weapon.material[0]) {\r\n            //If there is a material in this slot, remove the old material from the item.\r\n            if (weapon.material[0]) {\r\n                weapon.material.shift();\r\n            }\r\n            //Then add the new material to the item.\r\n            if (material.name != \"\") {\r\n                //Add a copy of the material to the item\r\n                weapon.material.push(Object.assign(new WeaponMaterial, JSON.parse(JSON.stringify(material))));\r\n            }\r\n        }\r\n        this.set_MaterialNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Title(material: Material) {\r\n        if (!this.craftingStation && material.price) {\r\n            return \"Price \" + this.get_Price(material.price) + (material.bulkPrice ? \" (+\" + this.get_Price(material.bulkPrice) + \" per Bulk)\" : \"\");\r\n        }\r\n        if (this.craftingStation && material.craftingRequirement) {\r\n            switch (material.craftingRequirement) {\r\n                case 4:\r\n                    return \"Requires Crafting E and Level \" + material.level;\r\n                case 6:\r\n                    return \"Requires Crafting M and Level \" + material.level;\r\n                case 8:\r\n                    return \"Requires Crafting L and Level \" + material.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    get_Price(price: number) {\r\n        if (price == 0) {\r\n            return \"\";\r\n        } else {\r\n            let priceString: string = \"\";\r\n            if (price >= 100) {\r\n                priceString += Math.floor(price / 100)+\"gp\";\r\n                price %= 100;\r\n                if (price >= 10) {priceString += \" \";}\r\n            }\r\n            if (price >= 10) {\r\n                priceString += Math.floor(price / 10)+\"sp\";\r\n                price %= 10;\r\n                if (price >= 1) {priceString += \" \";}\r\n            }\r\n            if (price >= 1) {\r\n                priceString += price+\"cp\";\r\n            }\r\n            return priceString;\r\n        }\r\n    }\r\n\r\n    set_MaterialNames() {\r\n        if (this.item.constructor == Weapon) {\r\n            let weapon = this.item as Weapon;\r\n            this.newWeaponMaterial =\r\n                (weapon.material ? [\r\n                    (weapon.material[0] ? { material: weapon.material[0] } : { material: new WeaponMaterial() })\r\n                ] : [{ material: new WeaponMaterial() }])\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_MaterialNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Weapon Material-->\r\n<div class=\"list-item\" *ngIf=\"['weapon', 'armor'].includes(item.moddable) || customItemStore\">\r\n    <ng-container *ngIf=\"item.material && ((item.moddable=='weapon' && item.constructor.name == 'Weapon') || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon'))\">\r\n        <div class=\"newrow\">\r\n            <strong>Material</strong>\r\n            <select [(ngModel)]=\"newWeaponMaterial[0]\" (ngModelChange)=\"add_WeaponMaterial()\">\r\n                <ng-container *ngFor=\"let material of get_InitialWeaponMaterials(); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                    <option [ngValue]=\"material\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.material[0]>\r\n                        \r\n                    </option>\r\n                    <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current material\">\r\n                        <option [ngValue]=\"material\">\r\n                            {{material.material.name}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n                <optgroup label=\"Available materials\" *ngIf=\"get_WeaponMaterials().length\">\r\n                    <option *ngFor=\"let material of get_WeaponMaterials(); trackBy:trackByIndex;\" [ngValue]=\"material\" [disabled]=\"material.disabled\"\r\n                    title=\"{{get_Title(material.material)}}\">\r\n                        {{material.material.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </select>\r\n        </div>\r\n        <ng-container *ngIf=\"craftingStation\">\r\n            <ng-container *ngFor=\"let material of item.material\">\r\n                <div class=\"newrow\" *ngIf=\"material.craftRequirement\">\r\n                    <span>\r\n                        <strong>Craft Requirement&nbsp;</strong>\r\n                        <span>{{material.craftRequirement}}</span>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Consumable } from './Consumable';\r\n\r\nexport class Ammunition extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Ammunition should be type \"ammunition\" to be found in the database\r\n    readonly type = \"ammunition\";\r\n    actions = \"\";\r\n    activationType = \"\";\r\n    //The ammunition group, in order to identify suitable weapons. Same as the weapon type: Arrows, Blowgun Darts, Bolts, Sling Bullets or Any\r\n    public ammunition: string = \"\";\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName\r\n        } else if (this.storedSpells[0]?.spells?.length) {\r\n            return this.name+\" of \"+this.storedSpells[0].spells[0].name;\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D20',\r\n  templateUrl: './D20.svg',\r\n  styleUrls: ['./diceIcons_D20.component.css']\r\n})\r\nexport class DiceIcons_D20Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D20\"\r\n        d=\"M 5.00,17.00\r\n           C 5.00,17.00 32.00,1.00 32.00,1.00\r\n             32.00,1.00 59.00,17.00 59.00,17.00\r\n             59.00,17.00 59.00,47.00 59.00,47.00\r\n             59.00,47.00 32.00,63.00 32.00,63.00\r\n             32.00,63.00 5.00,47.00 5.00,47.00\r\n             5.00,47.00 5.00,17.00 5.00,17.00 Z\r\n           M 32.00,14.00\r\n           C 32.00,14.00 48.00,42.00 48.00,42.00\r\n             48.00,42.00 16.00,42.00 16.00,42.00\r\n             16.00,42.00 32.00,14.00 32.00,14.00 Z\r\n           M 48.00,42.00\r\n           C 48.00,42.00 32.00,63.00 32.00,63.00\r\n             32.00,63.00 16.00,42.00 16.00,42.00\r\n             16.00,42.00 5.00,17.00 5.00,17.00\r\n             5.00,17.00 32.00,14.00 32.00,14.00\r\n             32.00,14.00 59.00,17.00 59.00,17.00\r\n             59.00,17.00 48.00,42.00 48.00,42.00 Z\r\n           M 48.00,42.00\r\n           C 48.00,42.00 59.00,47.00 59.00,47.00M 16.00,42.00\r\n           C 16.00,42.00 5.00,47.00 5.00,47.00M 32.00,14.00\r\n           C 32.00,14.00 32.00,1.00 32.00,1.00\" />\r\n   </g>\r\n</svg>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AbilitiesComponent } from './abilities/abilities.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { SkillsComponent } from './skills/skills.component';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { CharacterSheetComponent } from './character-sheet/character-sheet.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { CharacterComponent } from './character/character.component';\r\nimport { AttacksComponent } from './attacks/attacks.component';\r\nimport { EffectsComponent } from './effects/effects.component';\r\nimport { DefenseComponent } from './defense/defense.component';\r\nimport { ProficiencyFormComponent } from './proficiency-form/proficiency-form.component';\r\nimport { SkillComponent } from './skill/skill.component';\r\nimport { HealthComponent } from './health/health.component';\r\nimport { GeneralComponent } from './general/general.component';\r\nimport { ActivitiesComponent } from './activities/activities.component';\r\nimport { SpellsComponent } from './spells/spells.component';\r\nimport { SpellbookComponent } from './spellbook/spellbook.component';\r\nimport { ConditionsComponent } from './conditions/conditions.component';\r\nimport { TimeComponent } from './time/time.component';\r\nimport { ActivityComponent } from './activity/activity.component';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { SpellComponent } from './spell/spell.component';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { NewItemPropertyComponent } from './items/newItemProperty/newItemProperty.component';\r\nimport { ItemRunesComponent } from './item/itemRunes/itemRunes.component';\r\nimport { AnimalCompanionComponent } from './animal-companion/animal-companion.component';\r\nimport { SpellchoiceComponent } from './spells/spellchoice/spellchoice.component';\r\nimport { FamiliarComponent } from './familiar/familiar.component';\r\nimport { FeatchoiceComponent } from './character/featchoice/featchoice.component';\r\nimport { FamiliarabilitiesComponent } from './familiar/familiarabilities/familiarabilities.component';\r\nimport { ItemOilsComponent } from './item/itemOils/itemOils.component';\r\nimport { ItemAeonStonesComponent } from './item/itemAeonStones/itemAeonStones.component';\r\nimport { ActionIconsComponent } from './actionIcons/actionIcons.component';\r\nimport { FeatComponent } from './character/feat/feat.component';\r\nimport { SpellLibraryComponent } from './spellLibrary/spellLibrary.component';\r\nimport { ItemTalismansComponent } from './item/itemTalismans/itemTalismans.component';\r\nimport { CraftingComponent } from './crafting/crafting.component';\r\nimport { ItemMaterialComponent } from './item/itemMaterial/itemMaterial.component';\r\nimport { ItemPoisonsComponent } from './item/itemPoisons/itemPoisons.component';\r\nimport { DiceComponent } from './dice/dice.component';\r\nimport { DiceIcons_D4Component } from './dice/diceIcons_D4/diceIcons_D4.component';\r\nimport { DiceIcons_D6Component } from './dice/diceIcons_D6/diceIcons_D6.component';\r\nimport { DiceIcons_D8Component } from './dice/diceIcons_D8/diceIcons_D8.component';\r\nimport { DiceIcons_D10Component } from './dice/diceIcons_D10/diceIcons_D10.component';\r\nimport { DiceIcons_D12Component } from './dice/diceIcons_D12/diceIcons_D12.component';\r\nimport { DiceIcons_D20Component } from './dice/diceIcons_D20/diceIcons_D20.component';\r\nimport { SkillchoiceComponent } from './character/skillchoice/skillchoice.component';\r\nimport { ItemBladeAllyComponent } from './item/itemBladeAlly/itemBladeAlly.component';\r\nimport { HintComponent } from './tags/hint/hint.component';\r\nimport { ConditionComponent } from './effects/condition/condition.component';\r\nimport { NgbActiveModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GridIconComponent } from './gridIcon/gridIcon.component';\r\n\r\n@NgModule({\r\n   declarations: [\t\r\n      AppComponent,\r\n      AbilitiesComponent,\r\n      TopBarComponent,\r\n      SkillsComponent,\r\n      ItemsComponent,\r\n      CharacterSheetComponent,\r\n      InventoryComponent,\r\n      CharacterComponent,\r\n      AttacksComponent,\r\n      EffectsComponent,\r\n      DefenseComponent,\r\n      ProficiencyFormComponent,\r\n      SkillComponent,\r\n      HealthComponent,\r\n      GeneralComponent,\r\n      ActivitiesComponent,\r\n      SpellsComponent,\r\n      SpellbookComponent,\r\n      ConditionsComponent,\r\n      TimeComponent,\r\n      ActivityComponent,\r\n      ItemComponent,\r\n      SpellComponent,\r\n      TagsComponent,\r\n      NewItemPropertyComponent,\r\n      ItemRunesComponent,\r\n      AnimalCompanionComponent,\r\n      SpellchoiceComponent,\r\n      FamiliarComponent,\r\n      FeatchoiceComponent,\r\n      FamiliarabilitiesComponent,\r\n      ItemOilsComponent,\r\n      ItemAeonStonesComponent,\r\n      ActionIconsComponent,\r\n      FeatComponent,\r\n      SpellLibraryComponent,\r\n      ItemTalismansComponent,\r\n      CraftingComponent,\r\n      ItemMaterialComponent,\r\n      ItemPoisonsComponent,\r\n      DiceComponent,\r\n      DiceIcons_D4Component,\r\n      DiceIcons_D6Component,\r\n      DiceIcons_D8Component,\r\n      DiceIcons_D10Component,\r\n      DiceIcons_D12Component,\r\n      DiceIcons_D20Component,\r\n      SkillchoiceComponent,\r\n      ItemBladeAllyComponent,\r\n      HintComponent,\r\n      ConditionComponent,\r\n      GridIconComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      AppRoutingModule,\r\n      HttpClientModule,\r\n      NgbModule\r\n   ],\r\n   providers: [\r\n      NgbActiveModal\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D6',\r\n  templateUrl: './D6.svg',\r\n  styleUrls: ['./diceIcons_D6.component.css']\r\n})\r\nexport class DiceIcons_D6Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D6\"\r\n        d=\"M 8.00,8.00\r\n           C 8.00,8.00 56.00,8.00 56.00,8.00\r\n             56.00,8.00 56.00,56.00 56.00,56.00\r\n             56.00,56.00 8.00,56.00 8.00,56.00\r\n             8.00,56.00 8.00,8.00 8.00,8.00 Z\" />\r\n   </g>\r\n</svg>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TraitsService } from '../traits.service';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { AdventuringGear } from '../AdventuringGear';\r\nimport { CharacterService } from '../character.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { Item } from '../Item';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { SpellsService } from '../spells.service';\r\nimport { Talisman } from '../Talisman';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { AlchemicalPoison } from '../AlchemicalPoison';\r\nimport { Weapon } from '../Weapon';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-item',\r\n    templateUrl: './item.component.html',\r\n    styleUrls: ['./item.component.css']\r\n})\r\nexport class ItemComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    item;\r\n    @Input()\r\n    allowActivate: boolean = false;\r\n    @Input()\r\n    armoredSkirt: AdventuringGear;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    @Input()\r\n    isSubItem: boolean = false;\r\n\r\n    constructor(\r\n        private traitsService: TraitsService,\r\n        private activitiesService: ActivitiesService,\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Creature(type: string = this.creature) {\r\n        return this.characterService.get_Creature(type) as Character|AnimalCompanion;\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    get_FullPrice(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (this.get_FullPrice(item)) {\r\n            if (item.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = this.get_FullPrice(item);\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100)+\"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) {priceString += \" \";}\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10)+\"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) {priceString += \" \";}\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price+\"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    get_BulkDifference(item: Item) {\r\n        if (!isNaN(+item.get_Bulk()) && !isNaN(+item.bulk)) {\r\n            return parseInt(item.get_Bulk()) - parseInt(item.bulk)\r\n        } else if (!isNaN(+item.get_Bulk()) && isNaN(+item.bulk)) {\r\n            return 1\r\n        } else if (isNaN(+item.get_Bulk()) && !isNaN(+item.bulk)) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    on_TalismanUse(talisman: Talisman, index: number) {\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), talisman);\r\n        this.item.talismans.splice(index, 1)\r\n        if ([\"armors\", \"shields\"].includes(this.item.type)) {\r\n            this.characterService.set_ToChange(this.creature, \"defense\");\r\n        }\r\n        if (this.item.constructor == Weapon) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_PoisonUse(poison: AlchemicalPoison) {\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), poison);\r\n        if (this.item.constructor == Weapon) {\r\n            this.item.poisonsApplied.length = 0;\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_DoublingRingsOptions(ring:string) {\r\n        switch (ring) {\r\n            case \"gold\":\r\n                return this.get_Creature().inventories[0].weapons.filter(weapon => weapon.melee && weapon.potencyRune);\r\n            case \"iron\":\r\n                return this.get_Creature().inventories[0].weapons.filter(weapon => weapon.melee && weapon.moddable == \"weapon\");\r\n        }\r\n    }\r\n\r\n    on_DoublingRingsChange() {\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        let ironItem = this.get_DoublingRingsOptions(\"iron\").find(weapon => weapon.id == this.item.data[0].value);\r\n        if (ironItem && this.item.invested) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n            this.characterService.set_EquipmentViewChanges(this.get_Creature(), ironItem);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_ItemSpell(item: Item) {\r\n        if (item.storedSpells.length && item.storedSpells[0].spells.length) {\r\n            let spell = this.get_Spells(item.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return [spell];\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_StoredSpells(item: Item) {\r\n        return item.storedSpells.filter(choice => choice.available);\r\n    }\r\n\r\n    get_StoredSpellsTaken(item: Item) {\r\n        return item.storedSpells.filter(choice => choice.spells.length);\r\n    }\r\n\r\n    on_SpellItemUse(item: Item) {\r\n        let spellName = item.storedSpells[0]?.spells[0]?.name || \"\";\r\n        let spellChoice = item.storedSpells[0];\r\n        if (spellChoice && spellName) {\r\n            let spell = this.get_Spells(item.storedSpells[0]?.spells[0]?.name)[0];\r\n            let target = \"\";\r\n            if (spell.target == \"self\") {\r\n                target = \"Character\";\r\n            }\r\n            if (spell) {\r\n                let tempGain: SpellGain = new SpellGain();\r\n                this.spellsService.process_Spell(this.get_Creature(\"Character\"), target, this.characterService, this.itemsService, this.characterService.conditionsService, null, tempGain, spell, spellChoice.level, true, true, false);\r\n            }\r\n            spellChoice.spells.shift();\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\")\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if ([\"weaponrunes\", \"armorrunes\", \"oils\"].includes(this.item.type) && !this.isSubItem) {\r\n            this.allowActivate = false;\r\n        }\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let traits of [(item.get_Traits ? item.get_Traits(characterService, get_Creature()) : item.traits)]; trackBy:trackByIndex\">\r\n    <div class=\"newrow left-aligned tags\" *ngIf=\"traits.length\">\r\n        <cite class=\"trait\" *ngFor=\"let trait of traits; trackBy:trackByIndex;\" [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n    </div>\r\n</ng-container>\r\n\r\n<div class=\"newrow left-aligned tags\">\r\n    <app-tags [creature]=\"creature\" [objectName]=\"item.name\" [showTraits]=true [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n</div>\r\n<div class=\"newrow left-aligned\" *ngIf=\"item.sourceBook\">\r\n    <span>\r\n        <strong>Source</strong>\r\n        <i>&nbsp;{{item.sourceBook}}</i>\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <span *ngIf=\"item.price\">\r\n        <strong>Price</strong>\r\n        {{get_Price(item)}}{{item.stack && item.stack > 1 ? \" per \"+item.stack : \"\"}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.dicenum\">\r\n        <strong>Damage</strong>\r\n        {{item.dicenum}}d{{item.dicesize}} {{item.dmgType}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.acbonus\">\r\n        <strong>AC Bonus</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':item.get_ACBonus && (item.get_ACBonus() < item.acbonus), 'bonus':item.get_ACBonus && (item.get_ACBonus() > item.acbonus)}\">\r\n            {{item.get_ACBonus ? item.get_ACBonus() : item.acbonus}}{{item.coverbonus ? \" (\" +\r\n            (item.acbonus+item.coverbonus) + \")\" : \"\"}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"(item.type == 'armors' && (item.get_DexCap ? item.get_DexCap() != -1 : item.dexcap != -1))\">\r\n        <strong>Dex Cap</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':item.get_DexCap() < item.dexcap, 'bonus':item.get_DexCap() > item.dexcap || (!item.get_DexCap() && item.dexcap)}\">\r\n            &nbsp;{{(item.get_DexCap ? item.get_DexCap() : item.dexcap)}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.skillpenalty\">\r\n        <strong>Check Penalty</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':item.get_SkillPenalty() < item.skillpenalty, 'bonus':item.get_SkillPenalty() > item.skillpenalty}\">\r\n            &nbsp;{{(item.get_SkillPenalty ? item.get_SkillPenalty() : item.skillpenalty)}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.speedpenalty\">\r\n        <strong>Speed Penalty</strong>\r\n        {{item.speedpenalty}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"(item.get_Strength ? item.get_Strength() : item.strength)\">\r\n        <strong>Strength</strong>\r\n        <span [ngClass]=\"{'penalty':item.get_Strength() > item.strength, 'bonus':item.get_Strength() < item.strength}\">\r\n            {{(item.get_Strength ? item.get_Strength() : item.strength)}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.usage\">\r\n        <strong>Usage</strong>\r\n        {{item.usage}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.storeBulk\">\r\n        <strong>Bulk</strong>\r\n        {{item.storeBulk}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.get_Bulk()\">\r\n        <strong>Bulk{{item.carryingBulk && !item.equipped ? \" (unequipped)\" : \"\"}}</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':(get_BulkDifference(item) > 0), 'bonus':(get_BulkDifference(item) < 0)}\">&nbsp;{{item.get_Bulk()}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.carryingBulk && item.equipped\">\r\n        <strong>Bulk (unequipped)</strong>\r\n        {{item.carryingBulk}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.hardness\">\r\n        <strong>Hardness</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':(item.get_Hardness() < item.hardness), 'bonus':(item.get_Hardness() > item.hardness)}\">&nbsp;{{item.get_Hardness\r\n            ? item.get_Hardness() : item.hardness}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.hitpoints\">\r\n        <strong>HP</strong><strong *ngIf=\"item.brokenThreshold\"> (BT)</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':(item.get_MaxHP() < item.hitpoints), 'bonus':(item.get_MaxHP() > item.hitpoints)}\">&nbsp;{{item.get_MaxHP\r\n            ? item.get_MaxHP() : item.hitpoints}}\r\n        </span>\r\n    <span *ngIf=\"item.brokenThreshold\" [ngClass]=\"{'penalty':(item.get_BrokenThreshold() < item.brokenThreshold), 'bonus':(item.get_BrokenThreshold() > item.brokenThreshold)}\">({{item.get_BrokenThreshold\r\n            ? item.get_BrokenThreshold() : item.brokenThreshold}})\r\n        </span> &nbsp;\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <span *ngIf=\"item.hands\">\r\n        <strong>Hands</strong>\r\n        {{item.hands}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.ranged\">\r\n        <strong>Range</strong>\r\n        {{item.ranged}} ft.&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.reload\">\r\n        <strong>Reload</strong>\r\n        {{item.reload}}&nbsp;\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <p *ngIf=\"(item.activationType || (item.actions && item.actions != ' ')) && (!item.trigger && !item.requirements)\">\r\n        <strong>Activate</strong>\r\n        <app-actionIcons [actionString]=\"item.actions\">\r\n        </app-actionIcons>{{item.activationType}}\r\n        <span *ngIf=\"item.trigger\">\r\n            <strong>Trigger</strong>\r\n            {{item.trigger}}\r\n        </span>\r\n        <span *ngIf=\"item.requirements\">\r\n            <strong>Requirements</strong>\r\n            {{item.requirements}}\r\n        </span>\r\n        <span *ngIf=\"item.frequency\">\r\n            <strong>Frequency</strong>\r\n            {{item.frequency}}\r\n        </span>\r\n        <span *ngIf=\"item.effect\">\r\n            <strong>Effect</strong>\r\n            {{item.effect}}\r\n        </span>\r\n    </p>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <span *ngIf=\"item.ammunition\">\r\n        <strong>Ammunition</strong>\r\n        {{item.ammunition}}&nbsp;\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <hr class=\"newrow\">\r\n    <ng-container *ngFor=\"let desc of item.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n        </ul>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"item.name == 'Grievous'\">\r\n        <p *ngFor=\"let data of item.data; trackBy:trackByIndex;\">\r\n            <strong>{{data.name}}&nbsp;</strong>{{data.value}}\r\n        </p>\r\n    </ng-container>\r\n    <p *ngIf=\"item.benefit\">\r\n        <strong>Benefit</strong> {{item.benefit}}\r\n    </p>\r\n    <p *ngIf=\"item.drawback\">\r\n        <strong>Drawback</strong> {{item.drawback}}\r\n    </p>\r\n    <p *ngIf=\"item.savingThrow || item.maxDuration || item.stages?.length\">\r\n        <span *ngIf=\"item.savingThrow\"><strong>Saving Throw&nbsp;</strong>{{item.savingThrow}}&nbsp;</span>\r\n        <span *ngIf=\"item.stages[0]\"><strong>Onset&nbsp;</strong>{{item.stages[0]}}&nbsp;</span>\r\n        <span *ngIf=\"item.maxDuration\"><strong>Maximum Duration&nbsp;</strong>{{item.maxDuration}}&nbsp;</span>\r\n        <ng-container *ngFor=\"let stage of item.stages; let stageIndex = index; trackBy:trackByIndex;\">\r\n            <span *ngIf=\"stageIndex > 0\">\r\n                <strong>Stage {{stageIndex}}&nbsp;</strong>{{item.stages[stageIndex]}}&nbsp;\r\n            </span>\r\n        </ng-container>\r\n    </p>\r\n    <p *ngIf=\"(item.activationType || (item.actions && item.actions != ' ')) && (item.trigger || item.requirements)\">\r\n        <strong>Activate</strong>\r\n        <app-actionIcons [actionString]=\"item.actions\">\r\n        </app-actionIcons>{{item.activationType}}\r\n        <span *ngIf=\"item.trigger\">\r\n            <strong>Trigger</strong>\r\n            {{item.trigger}}\r\n        </span>\r\n        <span *ngIf=\"item.requirements\">\r\n            <strong>Requirements</strong>\r\n            {{item.requirements}}\r\n        </span>\r\n    </p>\r\n    <p *ngIf=\"item.subType\">\r\n        <strong>{{item.subType}}</strong> {{item.subTypeDesc}}\r\n    </p>\r\n    <p *ngIf=\"item.craftRequirement\">\r\n        <strong>Craft Requirement</strong> {{item.craftRequirement}}\r\n    </p>\r\n    <p *ngIf=\"item.critsuccess\">\r\n        <strong>Critical Success</strong> {{item.critsuccess}}\r\n    </p>\r\n    <p *ngIf=\"item.success\">\r\n        <strong>Success</strong> {{item.success}}\r\n    </p>\r\n    <p *ngIf=\"item.failure\">\r\n        <strong>Failure</strong> {{item.failure}}\r\n    </p>\r\n    <p *ngIf=\"item.critfailure\">\r\n        <strong>Critical Failure</strong> {{item.critfailure}}\r\n    </p>\r\n    <div class=\"list-item newrow problem\" *ngIf=\"item.inputRequired\">\r\n        <strong>Player input required:</strong>\r\n        <div class=\"newrow left-aligned\">\r\n            <p *ngFor=\"let inputRequired of item.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                {{inputRequired}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"newrow\" *ngIf=\"item.isDoublingRings && !itemStore\">\r\n    <header class=\"spellHeader\">Doubling Rings</header>\r\n    <div class=\"newrow\">\r\n        <strong>Weapon wielded in the gold ring hand</strong>\r\n        <select [(ngModel)]=\"item.data[0].value\" (ngModelChange)=\"on_DoublingRingsChange()\">\r\n            <option *ngFor=\"let weapon of get_DoublingRingsOptions('gold'); trackBy:trackByIndex;\"\r\n                [ngValue]=\"weapon.id\">\r\n                {{weapon.get_Name()}}</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow\">\r\n        <strong>Weapon wielded in the iron ring hand</strong>\r\n        <select [(ngModel)]=\"item.data[1].value\" (ngModelChange)=\"on_DoublingRingsChange()\">\r\n            <option *ngFor=\"let weapon of get_DoublingRingsOptions('iron'); trackBy:trackByIndex;\"\r\n                [ngValue]=\"weapon.id\">\r\n                {{weapon.get_Name()}}</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"item.isDoublingRings == 'Doubling Rings (Greater)'\">\r\n        <input id=\"{{item.id}}doublingRingsApplyPropertyRunes\" type=\"checkbox\" [(ngModel)]=\"item.data[2]\" (ngModelChange)=\"on_DoublingRingsChange()\">\r\n        <label for=\"{{item.id}}doublingRingsApplyPropertyRunes\">&nbsp;Apply property runes</label>\r\n    </div>\r\n</div>\r\n<app-itemAeonStones class=\"list-item\" [item]=item [itemStore]=itemStore *ngIf=\"item.isWayfinder\"></app-itemAeonStones>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let cast of item.castSpells; trackBy:trackByIndex;\">\r\n    <div *ngFor=\"let spell of get_Spells(cast.name); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">{{spell.name}}\r\n            <app-actionIcons [actionString]=\"spell.actions\">\r\n            </app-actionIcons> {{spell.castType.toString()}}</header>\r\n        <app-spell [spell]=spell [spellLevel]=\"(cast.level) ? cast.level : 0\"></app-spell>\r\n    </div>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let material of item.material\">\r\n    <header class=\"spellHeader\">{{material.name}}</header>\r\n    <ng-container *ngFor=\"let desc of material.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n        </ul>\r\n    </ng-container>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngIf=\"armoredSkirt\">\r\n    <header class=\"spellHeader\">Armored Skirt</header>\r\n    <app-item [item]=armoredSkirt></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let choice of get_StoredSpells(item); trackBy:trackByIndex;\">\r\n    <app-spellchoice [choice]=\"choice\" [allowHeightened]=\"true\" [level]=\"choice.level\" [itemSpell]=\"true\">\r\n    </app-spellchoice>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let choice of get_StoredSpellsTaken(item); trackBy:trackByIndex;\">\r\n    <ng-container *ngFor=\"let taken of choice.spells; trackBy:trackByIndex;\">\r\n        <div *ngFor=\"let spell of get_Spells(taken.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader\">{{spell.name}}\r\n                <app-actionIcons [actionString]=\"spell.actions\">\r\n                </app-actionIcons> {{spell.castType.toString()}}</header>\r\n            <app-spell [spell]=spell [spellLevel]=\"(taken.level) ? taken.level : (choice.level ? choice.level : 0)\"></app-spell>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n\r\n<div class=\"list-item left-aligned\" *ngFor=\"let activity of item.activities; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\" *ngIf=\"activity.name\">\r\n        {{activity.name}}\r\n        <app-actionIcons [actionString]=\"activity.actions\">\r\n        </app-actionIcons>{{(activity.activationType) ? activity.activationType : \"\"}}\r\n    </header>\r\n    <app-activity [creature]=\"creature\" [activity]=activity [gain]=activity [allowActivate]=\"allowActivate && !item.broken && (activity.resonant ? isSubItem : true)\" [isSubItem]=isSubItem>\r\n    </app-activity>\r\n</div>\r\n<ng-container *ngFor=\"let gain of item.gainActivities; trackBy:trackByIndex;\">\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let activity of get_Activities(gain.name); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">\r\n            {{activity.name}}\r\n            <app-actionIcons [actionString]=\"activity.actions\">\r\n            </app-actionIcons>{{(activity.activationType) ? activity.activationType : \"\"}}\r\n        </header>\r\n        <app-activity [creature]=\"creature\" [activity]=activity [gain]=gain [allowActivate]=allowActivate [isSubItem]=isSubItem></app-activity>\r\n    </div>\r\n</ng-container>\r\n<ng-container *ngFor=\"let activityName of item.showActivities; trackBy:trackByIndex;\">\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let activity of get_Activities(activityName); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">\r\n            {{activity.name}}\r\n            <app-actionIcons [actionString]=\"activity.actions\">\r\n            </app-actionIcons>{{(activity.activationType) ? activity.activationType : \"\"}}\r\n        </header>\r\n        <app-activity [creature]=\"creature\" [activity]=activity [gain]=null [allowActivate]=false [isSubItem]=isSubItem>\r\n        </app-activity>\r\n    </div>\r\n</ng-container>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let oil of item.oilsApplied; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{oil.get_Name()}}</header>\r\n    <app-item [creature]=\"creature\" [item]=oil [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let poison of item.poisonsApplied; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{poison.name}}</header>\r\n    <button class=\"newrow left-aligned\" (click)=\"on_PoisonUse(poison)\" *ngIf=\"allowActivate\">\r\n        <span>Spend/Remove</span>\r\n    </button>\r\n    <app-item [creature]=\"creature\" [item]=poison [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngIf=\"item.runeEffect\">\r\n    <header class=\"spellHeader\">Rune Effect: {{item.runeEffect.name}}</header>\r\n    <app-item [creature]=\"creature\" [item]=item.runeEffect [allowActivate]=allowActivate [isSubItem]=isSubItem>\r\n    </app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let rune of item.propertyRunes; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{rune.name}} Rune</header>\r\n    <ng-container *ngFor=\"let spell of get_ItemSpell(rune)\">\r\n        <button class=\"newrow center-aligned\" (click)=\"on_SpellItemUse(rune)\">\r\n            <span>Use<app-actionIcons [actionString]=\"spell.actions\">\r\n                </app-actionIcons> (Cast spell)\r\n            </span>\r\n        </button>\r\n    </ng-container>\r\n    <app-item [creature]=\"creature\" [item]=rune [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<ng-container *ngIf=\"item.bladeAlly\">\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let rune of item.bladeAllyRunes; trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">{{rune.name}} Rune</header>\r\n        <app-item [creature]=\"creature\" [item]=rune [allowActivate]=\"allowActivate\" [isSubItem]=true></app-item>\r\n    </div>\r\n</ng-container>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let stone of item.aeonStones; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{stone.name}}</header>\r\n    <app-item [creature]=\"creature\" [item]=stone [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let talisman of item.talismans; let index = index; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{talisman.name}}</header>\r\n    <button class=\"newrow left-aligned\" (click)=\"on_TalismanUse(talisman, index)\" *ngIf=\"allowActivate\">\r\n        <span>Activate<app-actionIcons [actionString]=\"talisman.actions\">\r\n            </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n        </span>\r\n    </button>\r\n    <app-item [creature]=\"creature\" [item]=talisman [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>","import core from './core.json';\r\nexport {\r\n    core\r\n};","export class ItemGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public amount: number = 1;\r\n    //Only for on==rest: Gain this amount per level additionally to the amount.\r\n    public amountPerLevel: number = 0;\r\n    public expiration: number = 0;\r\n    //The id is copied from the item after granting it, so that it can be removed again.\r\n    public id: string = \"\";\r\n    public name: string = \"Fist\";\r\n    public on: \"grant\"|\"equip\"|\"use\"|\"rest\"|\"\" = \"grant\";\r\n    public type: string = \"weapons\";\r\n    //Spells choose from multiple item gains those that match their level.\r\n    //For example, if a spell has an ItemGain with heightenedFilter 1 and one with heightenedFilter 2, and the spell is cast at 2nd level, only the heightenedFilter 2 ItemGain is used.\r\n    public heightenedFilter: number = 0;\r\n    //For conditions that grant an item only on a certain choice, set conditionChoiceFilter.\r\n    public conditionChoiceFilter: string = \"\";\r\n}\r\n","import core from './core.json';\r\nimport advanced_character_guide from './advanced_character_guide.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    advanced_character_guide,\r\n    custom_kitsune\r\n};","<div class=\"fullsize-only newrow left-aligned\">\r\n    <ng-container *ngFor=\"let trait of get_TraitsForThis(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'trait'\" [object]=\"trait\" [objectName]=\"objectName\"\r\n            [description]=\"trait.name +' ('+ trait.haveOn(get_Creature(), this.characterService, true) + ')'\">\r\n        </app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let trait of get_TraitsForThis(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'trait'\" [object]=\"trait\" [objectName]=\"specialName\"\r\n                [description]=\"trait.name +' ('+ trait.haveOn(get_Creature(), this.characterService, true) + ')'\">\r\n            </app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let feat of get_FeatsShowingOn(objectName, showFeats); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'feat'\" [object]=\"feat\" [objectName]=\"objectName\"\r\n            [description]=\"feat.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let feat of get_FeatsShowingOn(specialName, true); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'feat'\" [object]=\"feat\" [objectName]=\"specialName\"\r\n                [description]=\"feat.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let item of get_ItemsShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"item\" [objectName]=\"objectName\"\r\n            [description]=\"item.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let item of get_ItemsShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"item\" [objectName]=\"specialName\"\r\n                [description]=\"item.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let spec of get_SpecializationsShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"spec\" [objectName]=\"objectName\"\r\n            [description]=\"spec.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let spec of get_SpecializationsShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"spec\" [objectName]=\"specialName\"\r\n                [description]=\"spec.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let activity of get_ActivitiesShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'activity'\" [object]=\"activity\" [objectName]=\"objectName\"\r\n            [description]=\"activity.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let activity of get_ActivitiesShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'activity'\" [object]=\"activity\" [objectName]=\"specialName\"\r\n                [description]=\"activity.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let condition of get_ConditionsShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'condition'\" [object]=\"condition\" [objectName]=\"objectName\"\r\n            [description]=\"condition.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let condition of get_ConditionsShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'condition'\" [object]=\"condition\" [objectName]=\"specialName\"\r\n                [description]=\"condition.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-template #effectTemplate let-effect=\"effect\">\r\n        <div class=\"newrow\">\r\n            <span>\r\n                <strong\r\n                    [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\">{{effect.target}}\r\n                    {{parseInt(effect.value) ? effect.value : ''}}{{effect.setValue ? \"= \"+effect.setValue : ''}}\r\n                </strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"effect.type != 'untyped' && !effect.toggle && !effect.setValue\">\r\n            <span>\r\n                <strong>Type</strong> {{effect.type + \" \" + (effect.penalty ? 'penalty' : 'bonus')}}</span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"effect.duration\">\r\n            <span>\r\n                <strong>Duration</strong> {{effect.duration ? get_Duration(effect.duration) : ''}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\">\r\n            <span><strong>Source&nbsp;</strong>{{effect.source.includes('conditional, ') ? effect.source.substr(13) : effect.source}}</span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"effect.source.includes('conditional, ')\">\r\n            <span><strong>Conditional&nbsp;</strong>This effect only applies for certain actions or under specific circumstances.</span>\r\n        </div>\r\n    </ng-template>\r\n    <ng-container *ngFor=\"let effect of get_EffectsOnThis(objectName); trackBy:trackByIndex;\">\r\n        <ng-template #effectPopover>\r\n            <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n        </ng-template>\r\n        <cite class=\"effect\"\r\n            [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\"\r\n            [ngbPopover]=\"effectPopover\">{{parseInt(effect.value)\r\n            ? effect.value : ''}}{{effect.setValue ? effect.setValue : ''}}\r\n            ({{effect.source}})&nbsp;</cite>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let effect of specialEffects; trackBy:trackByIndex;\">\r\n        <ng-template #effectPopover>\r\n            <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n        </ng-template>\r\n        <cite class=\"effect\"\r\n            [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\"\r\n            [ngbPopover]=\"effectPopover\">{{parseInt(effect.value)\r\n            ? effect.value : ''}}{{effect.setValue ? effect.setValue : ''}}\r\n            ({{effect.source}})&nbsp;</cite>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Effect } from '../Effect';\r\nimport { Hint } from '../Hint';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TimeService } from '../time.service';\r\n\r\n@Component({\r\n    selector: 'app-tags',\r\n    templateUrl: './tags.component.html',\r\n    styleUrls: ['./tags.component.css']\r\n})\r\nexport class TagsComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    objectName: string = \"\";\r\n    @Input()\r\n    showTraits:boolean = false;\r\n    @Input()\r\n    showFeats:boolean = false;\r\n    @Input()\r\n    showItems:boolean = false;\r\n    @Input()\r\n    showActivities:boolean = false;\r\n    @Input()\r\n    showConditions:boolean = false;\r\n    @Input()\r\n    showEffects:boolean = false;\r\n    @Input()\r\n    specialNames:string[] = [];\r\n    @Input()\r\n    specialEffects:Effect[] = []\r\n\r\n    public parseInt = parseInt;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        private timeService: TimeService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n    }\r\n    \r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Duration(duration: number) {\r\n        return this.timeService.get_Duration(duration);\r\n    }\r\n\r\n    get_TraitsForThis(name: string) {\r\n        if (this.showTraits && name) {\r\n            return this.sortByName(this.traitsService.get_TraitsForThis(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_FeatsShowingOn(name: string, show: boolean ) {\r\n        if (show && name && this.creature == \"Character\") {\r\n            return this.sortByName(this.characterService.get_FeatsShowingOn(name));\r\n        } else if (show && name && this.creature == \"Companion\") {\r\n            return this.sortByName(this.characterService.get_CompanionShowingOn(name));\r\n        } else if (show && name && this.creature == \"Familiar\") {\r\n            return this.sortByName(this.characterService.get_FamiliarShowingOn(name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_EffectsOnThis(name: string) {\r\n        if (this.showEffects && name) {\r\n            return this.sortByName(\r\n                this.effectsService.get_AbsolutesOnThis(this.get_Creature(), name)\r\n                .concat(this.effectsService.get_RelativesOnThis(this.get_Creature(), name))\r\n                );\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_ConditionsShowingOn(name: string) {\r\n        if (this.showConditions && name) {\r\n            return this.sortByName(this.characterService.get_ConditionsShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n    \r\n    get_ActivitiesShowingOn(name: string) {\r\n        if (this.showActivities && name) {\r\n            return this.sortByName(this.characterService.get_ActivitiesShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_ItemsShowingOn(name: string) {\r\n        if (this.showItems && name) {\r\n            return this.sortByName(this.characterService.get_ItemsShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_SpecializationsShowingOn(name: string) {\r\n        if (this.showItems && name) {\r\n            return this.sortByName(this.characterService.get_ArmorSpecializationsShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_Hints(hints: Hint[], name: string) {\r\n        return hints\r\n            .filter(hint =>\r\n                hint.showon.split(\",\")\r\n                .find(showon => \r\n                    showon.trim().toLowerCase() == name.toLowerCase() ||\r\n                    (\r\n                        name.toLowerCase().includes(\"lore\") &&\r\n                        showon.trim().toLowerCase() == \"lore\"\r\n                    )\r\n                )\r\n            )\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"tags\", \"all\", this.creature, this.objectName].includes(target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature == this.creature &&\r\n                    (\r\n                        view.target == \"all\" ||\r\n                        (view.target == \"tags\" && [this.objectName, ...this.specialNames, \"all\"].includes(view.subtarget))\r\n                    )) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    sortByName(list: any[]) {\r\n        return list.sort(function(a,b) {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    on_ActivateEffect() {\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { AnimalCompanion } from 'src/app/AnimalCompanion';\r\nimport { Character } from 'src/app/Character';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Condition } from 'src/app/Condition';\r\nimport { ConditionGain } from 'src/app/ConditionGain';\r\nimport { ConditionsService } from 'src/app/conditions.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { Creature } from 'src/app/Creature';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-condition',\r\n    templateUrl: './condition.component.html',\r\n    styleUrls: ['./condition.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConditionComponent implements OnInit {\r\n\r\n    @Input()\r\n    conditionGain: ConditionGain;\r\n    @Input()\r\n    condition: Condition;\r\n    @Input()\r\n    showItem: string = \"\";\r\n    @Input()\r\n    creature: string = \"Character\"\r\n    @Input()\r\n    fullDisplay: boolean = false;\r\n    @Output()\r\n    showItemMessage = new EventEmitter<string>();\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private conditionsService: ConditionsService,\r\n        private traitsService: TraitsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n        this.showItemMessage.emit(this.showItem);\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Creature;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Duration(duration: number) {\r\n        return this.timeService.get_Duration(duration);\r\n    }\r\n\r\n    get_IsInformationalCondition() {\r\n        //Return whether the condition is purely informational, i.e. has no effects and is not currently causing any conditions.\r\n        return !this.condition.effects?.length && !this.condition.hints.some(hint => hint.effects?.length) && !this.characterService.get_AppliedConditions(this.get_Creature(), \"\", \"\", true).some(existingCondition => existingCondition.parentID == this.conditionGain.id);\r\n    }\r\n\r\n    change_ConditionDuration(gain: ConditionGain, condition: Condition, turns: number) {\r\n        gain.duration += turns;\r\n        gain.maxDuration = gain.duration;\r\n        this.toggle_Item(\"\");\r\n        //Conditions who use their own duration in their effects need to update effects after changing duration.\r\n        if (condition?.effects.some(effect => effect.setValue?.includes(\"parentcondition.duration\") || effect.value?.includes(\"parentcondition.duration\"))) {\r\n            this.characterService.set_ToChange(this.creature, \"effects\");\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    change_ConditionValue(gain: ConditionGain, oldValue: number, change: number = 0) {\r\n        if (change) {\r\n            gain.value += change;\r\n        } else {\r\n            change = gain.value - oldValue;\r\n        }\r\n        if (gain.name == \"Drained\" && change < 0) {\r\n            //When you lower your drained value, you regain Max HP, but not the lost HP.\r\n            //Because HP is Max HP - Damage, we increase damage to represent not regaining the HP.\r\n            //We subtract level*change from damage because change is negative.\r\n            this.get_Creature().health.damage == Math.max(0, (this.get_Creature().health.damage - (this.get_Creature().level * change)));\r\n        }\r\n        this.toggle_Item(\"\");\r\n        gain.showValue = false;\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    change_ConditionRadius(gain: ConditionGain, change: number) {\r\n        gain.radius += change;\r\n    }\r\n\r\n    get_ConditionChoices(conditionGain: ConditionGain, condition: Condition) {\r\n        if (conditionGain.source == \"Manual\") {\r\n            return condition.get_Choices(this.characterService, false);\r\n        } else {\r\n            return condition.get_Choices(this.characterService, true, conditionGain.heightened);\r\n        }\r\n    }\r\n\r\n    change_ConditionChoice(gain: ConditionGain, condition: Condition, oldChoice: string) {\r\n        let creature = this.get_Creature();\r\n        if (this.creature != \"Familiar\" && oldChoice != gain.choice) {\r\n            //Remove any items that were granted by the previous choice.\r\n            if (oldChoice) {\r\n                gain.gainItems.filter(gainItem => gainItem.conditionChoiceFilter == oldChoice).forEach(gainItem => {\r\n                    this.conditionsService.remove_ConditionItem(creature as Character | AnimalCompanion, this.characterService, this.itemsService, gainItem);\r\n                });\r\n            }\r\n            //Add any items that are granted by the new choice.\r\n            if (gain.choice) {\r\n                gain.gainItems.filter(gainItem => gainItem.conditionChoiceFilter == gain.choice).forEach(gainItem => {\r\n                    this.conditionsService.add_ConditionItem(creature as Character | AnimalCompanion, this.characterService, this.itemsService, gainItem, condition);\r\n                });\r\n            }\r\n        }\r\n        if (oldChoice != gain.choice) {\r\n            let creature = this.get_Creature();\r\n            //Remove any conditions that were granted by the previous choice, unless they are persistent (but still if they are ignorePersistentAtChoiceChange).\r\n            if (oldChoice) {\r\n                condition.gainConditions.filter(extraCondition => extraCondition.conditionChoiceFilter == oldChoice).forEach(extraCondition => {\r\n                    let addCondition = Object.assign(new ConditionGain, JSON.parse(JSON.stringify(extraCondition)));\r\n                    addCondition.source = gain.name;\r\n                    let originalCondition = this.characterService.get_Conditions(addCondition.name)[0];\r\n                    if (!(addCondition.persistent || originalCondition?.persistent) || addCondition.ignorePersistentAtChoiceChange) {\r\n                        this.characterService.remove_Condition(creature, addCondition, false, false, true, true);\r\n                    }\r\n                })\r\n            }\r\n            //Add any conditions that are granted by the new choice.\r\n            if (gain.choice) {\r\n                condition.gainConditions.filter(extraCondition => extraCondition.conditionChoiceFilter == gain.choice).forEach(extraCondition => {\r\n                    let addCondition = Object.assign(new ConditionGain, JSON.parse(JSON.stringify(extraCondition)));\r\n                    if (!addCondition.heightened) {\r\n                        addCondition.heightened = gain.heightened;\r\n                    }\r\n                    addCondition.source = gain.name;\r\n                    addCondition.parentID = gain.id;\r\n                    addCondition.apply = true;\r\n                    this.characterService.add_Condition(creature, addCondition, false, gain);\r\n                })\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        if (condition.attackRestrictions.length) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        }\r\n        if (condition.senses.length) {\r\n            this.characterService.set_ToChange(this.creature, \"skills\");\r\n        }\r\n        gain.showChoices = false;\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    change_ConditionStage(gain: ConditionGain, condition: Condition, choices: string[], change: number) {\r\n        if (change == 0) {\r\n            //If no change, the condition remains, but the onset is reset.\r\n            gain.nextStage = condition.choices.find(choice => choice.name == gain.choice)?.nextStage || 0;\r\n            this.characterService.set_ToChange(this.creature, \"time\");\r\n            this.characterService.set_ToChange(this.creature, \"health\");\r\n            this.characterService.set_ToChange(this.creature, \"effects\");\r\n        } else {\r\n            let newChoice = choices[choices.indexOf(gain.choice) + change];\r\n            if (newChoice) {\r\n                gain.nextStage = condition.choices.find(choice => choice.name == newChoice)?.nextStage || 0;\r\n                if (gain.nextStage) {\r\n                    this.characterService.set_ToChange(this.creature, \"time\");\r\n                    this.characterService.set_ToChange(this.creature, \"health\");\r\n                }\r\n                let oldChoice = gain.choice;\r\n                gain.choice = newChoice;\r\n                this.change_ConditionChoice(gain, condition, oldChoice);\r\n            }\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_Condition(conditionGain: ConditionGain) {\r\n        this.characterService.remove_Condition(this.get_Creature(), conditionGain, true);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if (target == \"effects\" || target == \"all\" || target == this.creature) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature == this.creature && [\"effects\", \"all\"].includes(view.target)) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngIf=\"conditionGain\">\r\n    <ng-container *ngFor=\"let choices of [get_ConditionChoices(conditionGain, condition)]; trackBy:trackByIndex\">\r\n        <div class=\"newrow\">\r\n            <div style=\"flex-grow:10\">\r\n                <span>\r\n                    <input id=\"{{conditionGain.id+'notes'}}\" class=\"invisible\" type=\"checkbox\"\r\n                        [(ngModel)]=\"conditionGain.showNotes\">\r\n                    <label for=\"{{conditionGain.id+'notes'}}\" [ngbTooltip]=\"'Edit notes'\">\r\n                        <i class='bi-pencil-square'></i>&nbsp;\r\n                    </label>\r\n                    <strong\r\n                        [ngClass]=\"condition.buff ? 'bonus' : 'penalty'\">{{conditionGain.name}}{{conditionGain.choice ?\r\n                        \": \" : \"\"}}\r\n                        <input id=\"{{conditionGain.id+'choice'}}\" class=\"invisible\" type=\"checkbox\"\r\n                            [(ngModel)]=\"conditionGain.showChoices\"\r\n                            *ngIf=\"choices.length && !conditionGain.choiceLocked\">\r\n                        <label for=\"{{conditionGain.id+'choice'}}\" [ngbTooltip]=\"'Change effect choice'\"\r\n                            style=\"text-shadow: none\" *ngIf=\"choices.length && !conditionGain.choiceLocked\">\r\n                            <i class='bi-list-stars'></i>\r\n                            <span *ngIf=\"conditionGain.choice && !conditionGain.showChoices\">\r\n                                &nbsp;{{conditionGain.choice}}\r\n                            </span>\r\n                        </label>\r\n                        <ng-container\r\n                            *ngIf=\"conditionGain.showChoices && choices.length && !conditionGain.choiceLocked\">\r\n                            <span *ngFor=\"let oldChoice of [conditionGain.choice]; trackBy:trackByIndex;\">\r\n                                <select [(ngModel)]=\"conditionGain.choice\"\r\n                                    (ngModelChange)=\"change_ConditionChoice(conditionGain, condition, oldChoice)\">\r\n                                    <option *ngFor=\"let choice of choices; trackBy:trackByIndex;\" [ngValue]=\"choice\">\r\n                                        {{choice}}\r\n                                    </option>\r\n                                </select>\r\n                            </span>\r\n                        </ng-container>\r\n                        <span\r\n                            *ngIf=\"conditionGain.value && conditionGain.valueLockedByParent && conditionGain.parentID\">\r\n                            {{conditionGain.value}}\r\n                        </span>\r\n                        <span\r\n                            *ngIf=\"conditionGain.value && !(conditionGain.valueLockedByParent && conditionGain.parentID)\">\r\n                            <input id=\"{{conditionGain.id+'value'}}\" class=\"invisible\" type=\"checkbox\"\r\n                                [(ngModel)]=\"conditionGain.showValue\">\r\n                            <label for=\"{{conditionGain.id+'value'}}\" [ngbTooltip]=\"'Change value'\"\r\n                                style=\"text-shadow: none\">\r\n                                <i class='bi-gear-fill'></i>&nbsp;\r\n                            </label>\r\n                            {{!conditionGain.showValue ? conditionGain.value : \"\"}}\r\n                            <ng-container *ngIf=\"conditionGain.showValue\">\r\n                                <span *ngFor=\"let oldValue of [conditionGain.value]; trackBy:trackByIndex;\">\r\n                                    <span><button (click)=\"change_ConditionValue(conditionGain, oldValue, -1)\"\r\n                                            [disabled]=\"oldValue == 1 && conditionGain.lockedByParent && conditionGain.parentID\">-1</button></span>\r\n                                    <select [(ngModel)]=\"conditionGain.value\"\r\n                                        (ngModelChange)=\"change_ConditionValue(conditionGain, oldValue)\">\r\n                                        <option\r\n                                            *ngFor=\"let valueOption of [0,1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                            [ngValue]=\"valueOption\"\r\n                                            [disabled]=\"valueOption == 0 && conditionGain.lockedByParent && conditionGain.parentID\">\r\n                                            {{valueOption}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <span>\r\n                                        <button (click)=\"change_ConditionValue(conditionGain, oldValue, 1)\">+1\r\n                                        </button>\r\n                                    </span>\r\n                                </span>\r\n                            </ng-container>\r\n                        </span>\r\n                    </strong>\r\n                </span>\r\n            </div>\r\n            <span *ngIf=\"!(conditionGain.lockedByParent && conditionGain.parentID)\"\r\n                [ngbTooltip]=\"conditionGain.source.includes('Feat: ') ? 'Conditions gained from feats cannot be removed.' : ''\">\r\n                <button (click)=\"remove_Condition(conditionGain)\" [disabled]=\"conditionGain.source.includes('Feat: ')\"\r\n                    *ngIf=\"conditionGain.duration != 1\">\r\n                    Remove\r\n                </button>\r\n                <button (click)=\"remove_Condition(conditionGain)\"\r\n                    [ngbTooltip]=\"'Instant effects should be resolved immediately and then ended.'\"\r\n                    *ngIf=\"conditionGain.duration == 1\">\r\n                    Done\r\n                </button>\r\n            </span>\r\n        </div>\r\n        <div [ngbCollapse]=\"!conditionGain.showNotes\">\r\n            <div class=\"list-item newrow\">\r\n                <span>\r\n                    <strong>Notes</strong>\r\n                    <input type=\"textarea\" class=\"fullwidth\" [(ngModel)]=\"conditionGain.notes\">\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.source\">\r\n            <span><strong>Source&nbsp;</strong>{{conditionGain.source}}</span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.heightened\">\r\n            <span><strong>Spell level&nbsp;</strong>{{conditionGain.heightened}}</span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\">\r\n            <input id=\"{{conditionGain.id+'duration'}}\" class=\"invisible\" type=\"checkbox\"\r\n                [(ngModel)]=\"conditionGain.showDuration\">\r\n            <label for=\"{{conditionGain.id+'duration'}}\" [ngbTooltip]=\"'Change duration'\"\r\n                *ngIf=\"conditionGain.duration > -1\"><i class='bi-gear-fill'></i>&nbsp;</label>\r\n            <span><strong>Duration&nbsp;</strong>{{get_Duration(conditionGain.duration)}}</span>\r\n        </div>\r\n        <div [ngbCollapse]=\"(!conditionGain.showDuration || conditionGain.duration <= -1)\">\r\n            <div class=\"newrow list-item\">\r\n                <strong>Change Duration</strong>\r\n                <div class=\"newrow\">\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 10)\">+ 1\r\n                            turn</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 100)\">+ 1\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 1000)\">+ 10\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 6000)\">+ 1\r\n                            hour</button></span>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -10)\">- 1\r\n                            turn</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -100)\">- 1\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -1000)\">- 10\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -6000)\">- 1\r\n                            hour</button></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.persistent\">\r\n            <span [ngbTooltip]=\"'This condition will remain if its source is removed.'\">\r\n                <strong>Persistent</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.lockedByParent && conditionGain.parentID\">\r\n            <span [ngbTooltip]=\"'This condition can\\'t be removed while ' + conditionGain.source + ' is active.'\">\r\n                <strong>Locked by parent condition</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.valueLockedByParent && conditionGain.parentID\">\r\n            <span\r\n                [ngbTooltip]=\"'You can\\'t change the value of this condition while ' + conditionGain.source + ' is active.'\">\r\n                <strong>Value locked by parent condition</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"get_IsInformationalCondition()\">\r\n            <span [ngbTooltip]=\"'This condition has no numeral effects and is currently not causing any other conditions.'\">\r\n                <strong>Informational</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.radius\">\r\n            <input id=\"{{conditionGain.id+'radius'}}\" class=\"invisible\" type=\"checkbox\"\r\n                [(ngModel)]=\"conditionGain.showRadius\">\r\n            <label for=\"{{conditionGain.id+'radius'}}\" [ngbTooltip]=\"'Change radius'\"\r\n                *ngIf=\"conditionGain.radius && !condition.allowRadiusChange\"><i class='bi-gear-fill'></i>&nbsp;</label>\r\n            <strong>Radius&nbsp;</strong><span>\r\n                <button (click)=\"change_ConditionRadius(conditionGain, -5)\"\r\n                    *ngIf=\"(condition.allowRadiusChange || conditionGain.showRadius) && conditionGain.radius\"\r\n                    (disabled)=\"conditionGain.radius <= 5\">-5</button> {{conditionGain.radius}} feet\r\n                <button (click)=\"change_ConditionRadius(conditionGain, +5)\"\r\n                    *ngIf=\"(condition.allowRadiusChange || conditionGain.showRadius) && conditionGain.radius\">+5</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow list-item\" *ngIf=\"conditionGain.showChoices && condition.name == 'Persistent Damage'\">\r\n            <span>\r\n                Damage type and amount: <input type=\"text\" id=\"persistentDamage\" [(ngModel)]=\"conditionGain.choice\"\r\n                    maxLength=\"30\">\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"conditionGain.nextStage > 0\">\r\n            <span>\r\n                <strong>Affliction onset&nbsp;</strong>{{get_Duration(conditionGain.nextStage)}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"conditionGain.nextStage == -1 && conditionGain.choice && choices.length\">\r\n            <div class=\"list-item lower newrow problem\">\r\n                <strong>Affliction onset reached</strong>\r\n                <div class=\"newrow left-aligned\">\r\n                    <p>Make {{condition.traits.includes(\"Virulent\") ? \"two saving throws\" : \"a saving throw\"}} to\r\n                        determine the next stage of the affliction.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"conditionGain.nextStage != 0 && conditionGain.choice && choices.length\">\r\n            <span\r\n                *ngIf=\"choices.indexOf(conditionGain.choice) < 1 || choices[choices.indexOf(conditionGain.choice) - 1] == 'Onset'\">\r\n                <button (click)=\"remove_Condition(conditionGain)\">{{conditionGain.nextStage == -1 ? \"Success: \" :\r\n                    \"\"}}Recover\r\n                </button>\r\n            </span>\r\n            <span\r\n                *ngIf=\"choices.indexOf(conditionGain.choice) > 0 && choices[choices.indexOf(conditionGain.choice) - 1] != 'Onset'\">\r\n                <button (click)=\"change_ConditionStage(conditionGain, condition, choices, -1)\">{{conditionGain.nextStage\r\n                    == -1 ? \"Success: \" : \"\"}}Previous stage</button>\r\n            </span>\r\n            <span *ngIf=\"choices.indexOf(conditionGain.choice) < choices.length - 1\">\r\n                <button (click)=\"change_ConditionStage(conditionGain, condition, choices, 1)\">{{conditionGain.nextStage\r\n                    == -1 ? \"Failure: \" : \"\"}}Next stage</button>\r\n            </span>\r\n            <span *ngIf=\"choices.indexOf(conditionGain.choice) == choices.length - 1\">\r\n                <button (click)=\"change_ConditionStage(conditionGain, condition, choices, 0)\">{{conditionGain.nextStage\r\n                    == -1 ? \"Failure: \" : \"\"}}Remain at this stage\r\n                </button>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"condition.inputRequired && !conditionGain.acknowledgedInputRequired\">\r\n            <div class=\"list-item lower newrow problem\">\r\n                <strong>Player input required:</strong>\r\n                <div class=\"newrow left-aligned\">\r\n                    <p *ngFor=\"let inputRequired of condition.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                        {{inputRequired}}\r\n                    </p>\r\n                </div>\r\n                <button (click)=\"conditionGain.acknowledgedInputRequired = true\"\r\n                    [ngbTooltip]=\"'Acknowledge and hide message.'\">\r\n                    OK\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"fullDisplay\">\r\n            <span>\r\n                <button (click)=\"toggle_Item(conditionGain.id+'description')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowItem()==conditionGain.id+'description'}\">\r\n                    {{get_ShowItem()==conditionGain.id+'description' ? \"Hide\" : \"Show\"}} Description\r\n                </button>\r\n            </span>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>\r\n<div [ngbCollapse]=\"fullDisplay && get_ShowItem()!=conditionGain.id+'description'\">\r\n    <div class=\"newrow lower left-aligned\" *ngFor=\"let desc of condition.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n        </ul>\r\n    </div>\r\n</div>","import { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { CharacterService } from './character.service';\r\nimport { Equipment } from './Equipment';\r\nimport { ItemsService } from './items.service';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\n\r\nexport class AnimalCompanionClass {\r\n    public readonly _className: string = this.constructor.name;\r\n    public ancestry: AnimalCompanionAncestry = new AnimalCompanionAncestry();\r\n    public hitPoints: number = 6;\r\n    public levels: AnimalCompanionLevel[] = [];\r\n    public name: string = \"\";\r\n    public specializations: AnimalCompanionSpecialization[] = [];\r\n    reset_levels(characterService: CharacterService) {\r\n        //Don't call it unless you are resetting the animal companion.\r\n        this.levels = characterService.get_AnimalCompanionLevels().map(level => Object.assign(new AnimalCompanionLevel(), level));\r\n    }\r\n    on_ChangeAncestry(characterService: CharacterService) {\r\n        if (this.ancestry.name) {\r\n            if (this.ancestry.gainItems.length) {\r\n                this.ancestry.gainItems.forEach(freeItem => {\r\n                    let items: Equipment[] = characterService.get_Companion().inventories[0][freeItem.type].filter((item: Equipment) => item.id == freeItem.id);\r\n                    items.forEach(item => {\r\n                        characterService.drop_InventoryItem(characterService.get_Companion(), characterService.get_Companion().inventories[0], item, false, true, true, freeItem.amount);\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    on_NewAncestry(characterService: CharacterService, itemsService: ItemsService) {\r\n        if (this.ancestry.name) {\r\n            if (this.ancestry.gainItems.length) {\r\n                this.ancestry.gainItems.forEach(freeItem => {\r\n                    let item: Equipment = itemsService.get_Items()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Companion(), characterService.get_Companion().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                });\r\n            }\r\n        }\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Consumable } from './Consumable';\r\n\r\nexport class AlchemicalElixir extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical Elixirs should be type \"alchemicalelixirs\" to be found in the database\r\n    readonly type = \"alchemicalelixirs\";\r\n    //Alchemical Elixirs can have benefits and drawbacks. Describe them here.\r\n    //Will be shown as \"Benefit\":\"...\"\r\n    public benefit: string = \"\";\r\n    //Will be shown as \"Drawback\":\"...\"\r\n    public drawback: string = \"\";\r\n}","import { Injectable } from '@angular/core';\r\nimport { Activity } from './Activity';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemsService } from './items.service';\r\nimport { Item } from './Item';\r\nimport { Equipment } from './Equipment';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { SpellsService } from './spells.service';\r\nimport { SpellCast } from './SpellCast';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { Hint } from './Hint';\r\nimport * as json_activities from '../assets/json/activities';\r\nimport { Creature } from './Creature';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ActivitiesService {\r\n\r\n    private activities: Activity[] = [];\r\n    private loading: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Activities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.activities.filter(action => action.name == name || name == \"\");\r\n        } else {\r\n            return [new Activity()];\r\n        }\r\n    }\r\n\r\n    activate_Activity(creature: Creature, spellTarget: string, characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, gain: ActivityGain|ItemActivity, activity: Activity|ItemActivity, activated: boolean, changeAfter: boolean = true) {\r\n        //Find item, if it exists\r\n        let item: Equipment = null;\r\n        creature.inventories.forEach(inventory => {\r\n            inventory.allEquipment().filter((equipment: Equipment) => equipment.id == gain.source).forEach((equipment: Equipment) => {\r\n                if (equipment.activities.some((itemActivity: ItemActivity) => itemActivity === activity)) {\r\n                    item = equipment;\r\n                }\r\n                if (equipment.gainActivities.some((activityGain: ActivityGain) => activityGain === gain)) {\r\n                    item = equipment;\r\n                }\r\n            });\r\n        });\r\n        \r\n        if (activity.hints.length) {\r\n            characterService.set_HintsToChange(creature.type, activity.hints);\r\n        }\r\n\r\n        if (activated || activity.cooldownAfterEnd) {\r\n            let cooldown = activity.get_Cooldown(creature, characterService);\r\n            //Start cooldown, unless one is already in effect. If the activity ends and cooldownAfterEnd is set, start the cooldown anew.\r\n            if (cooldown && (!gain.activeCooldown || (!activated && activity.cooldownAfterEnd))) {\r\n                gain.activeCooldown = cooldown;\r\n            }\r\n        }\r\n\r\n        if (activated) {\r\n            let cooldown = activity.get_Cooldown(creature, characterService);\r\n            //Start cooldown, unless one is already in effect.\r\n            if (cooldown && !gain.activeCooldown) {\r\n                gain.activeCooldown = cooldown;\r\n            }\r\n            //Use charges\r\n            let maxCharges = activity.maxCharges(creature, characterService);\r\n            if (maxCharges || gain.sharedChargesID) {\r\n                //If this activity belongs to an item and has a sharedCharges ID, spend a charge for every activity with the same sharedChargesID and start their cooldown if necessary.\r\n                if (item && gain.sharedChargesID) {\r\n                    item.activities\r\n                        .filter(itemActivity => itemActivity.sharedChargesID == gain.sharedChargesID)\r\n                        .forEach(itemActivity => {\r\n                            if (itemActivity.maxCharges(creature, characterService)) {\r\n                                itemActivity.chargesUsed += 1;\r\n                            }\r\n                            let otherCooldown = itemActivity.get_Cooldown(creature, characterService)\r\n                            if (!itemActivity.activeCooldown && otherCooldown) {\r\n                                itemActivity.activeCooldown = otherCooldown;\r\n                            }\r\n                        })\r\n                    item.gainActivities\r\n                        .filter(activityGain => activityGain.sharedChargesID == gain.sharedChargesID)\r\n                        .forEach(activityGain => {\r\n                            let originalActivity = this.get_Activities(activityGain.name)[0];\r\n                            if (originalActivity?.maxCharges(creature, characterService)) {\r\n                                activityGain.chargesUsed += 1;\r\n                            }\r\n                            let otherCooldown = originalActivity?.get_Cooldown(creature, characterService) || 0\r\n                            if (!activityGain.activeCooldown && otherCooldown) {\r\n                                activityGain.activeCooldown = otherCooldown;\r\n                            }\r\n                        })\r\n                } else if (maxCharges) {\r\n                    gain.chargesUsed += 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (activated && activity.toggle) {\r\n            gain.active = true;\r\n            if (activity.maxDuration) {\r\n                gain.duration = activity.maxDuration;\r\n            }\r\n        } else {\r\n            gain.active = false;\r\n            gain.duration = 0;\r\n        }\r\n        characterService.set_ToChange(creature.type, \"activities\");\r\n        if (item) {characterService.set_ToChange(creature.type, \"inventory\");}\r\n\r\n        //Process various results of activating the activity\r\n\r\n        //One time effects\r\n        if (activity.onceEffects) {\r\n            activity.onceEffects.forEach(effect => {\r\n                if (!effect.source) {\r\n                    effect.source = activity.name;\r\n                }\r\n                characterService.process_OnceEffect(creature, effect);\r\n            })\r\n        }\r\n\r\n        //Gain Items on Activation\r\n        if (activity.gainItems.length && creature.type != \"Familiar\") {\r\n            if (activated) {\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.gainItems = activity.gainItems.map(gainItem => Object.assign(new ItemGain(), gainItem));\r\n                }\r\n                gain.gainItems.forEach(gainItem => {\r\n                    let newItem: Item = itemsService.get_CleanItems()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n                    if (newItem) {\r\n                        let grantedItem = characterService.grant_InventoryItem(creature as Character|AnimalCompanion, creature.inventories[0], newItem, false, false, true);\r\n                        gainItem.id = grantedItem.id;\r\n                        grantedItem.expiration = gainItem.expiration;\r\n                        if (grantedItem.get_Name) {\r\n                            grantedItem.grantedBy = \"(Granted by \" + activity.name + \")\";\r\n                        };\r\n                    } else {\r\n                        console.log(\"Failed granting \" + gainItem.type + \" \" + gainItem.name + \" - item not found.\")\r\n                    }\r\n                });\r\n            } else {\r\n                gain.gainItems.forEach(gainItem => {\r\n                    characterService.lose_GainedItem(creature as Character|AnimalCompanion, gainItem);\r\n                });\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.gainItems = [];\r\n                }\r\n            }\r\n        }\r\n\r\n        //Apply conditions.\r\n        //The condition source is the activity name.\r\n        if (activity.gainConditions) {\r\n            if (activated) {\r\n                activity.gainConditions.forEach((conditionGain, conditionIndex) => {\r\n                    let newConditionGain = Object.assign(new ConditionGain(), conditionGain);\r\n                    if (!newConditionGain.source) {\r\n                        newConditionGain.source = activity.name;\r\n                    }\r\n                    //If this ActivityGain has effectChoices prepared, and the conditionGain does not include a choice, apply the choice to the conditionGain.\r\n                    // The order of gain.effectChoices maps directly onto the order of the conditions, no matter if they have choices.\r\n                    if (!newConditionGain.choice) {\r\n                        newConditionGain.choice = gain.effectChoices?.[conditionIndex] || \"\";\r\n                    }\r\n                    characterService.add_Condition(creature, newConditionGain, false);\r\n                });\r\n            } else {\r\n                activity.gainConditions.forEach(gain => {\r\n                    let conditionGains = characterService.get_AppliedConditions(creature, gain.name).filter(conditionGain => conditionGain.source == gain.source || conditionGain.source == activity.name);\r\n                    if (conditionGains.length) {\r\n                        characterService.remove_Condition(creature, conditionGains[0], false);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        //Cast Spells\r\n        if (activity.castSpells) {\r\n            if (activated) {\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.castSpells = activity.castSpells.map(spellCast => Object.assign(new SpellCast(), spellCast));\r\n                }\r\n            }\r\n            gain.castSpells.forEach((cast, spellCastIndex) => {\r\n                let librarySpell = spellsService.get_Spells(cast.name)[0];\r\n                if (librarySpell) {\r\n                    if (activated && gain.spellEffectChoices[spellCastIndex].length) {\r\n                        cast.spellGain.choices = gain.spellEffectChoices[spellCastIndex];\r\n                    }\r\n                    spellsService.process_Spell(creature, spellTarget, characterService, itemsService, conditionsService, null, cast.spellGain, librarySpell, cast.level, activated, true, false);\r\n                }\r\n            })\r\n            if (!activated) {\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.castSpells = [];\r\n                }\r\n            }\r\n        }\r\n\r\n        //Exclusive activity activation\r\n        //If you activate one activity of an Item that has an exclusiveActivityID, deactivate the other active activities on it that have the same ID.\r\n        if (item && activated && activity.toggle && gain.exclusiveActivityID) {\r\n            if (item.activities.length + item.gainActivities.length > 1) {\r\n                item.gainActivities.filter((activityGain: ActivityGain) => activityGain !== gain && activityGain.active && activityGain.exclusiveActivityID == gain.exclusiveActivityID).forEach((activityGain: ActivityGain) => {\r\n                    this.activate_Activity(creature, creature.type, characterService, conditionsService, itemsService, spellsService, activityGain, this.get_Activities(activityGain.name)[0], false, false)\r\n                })\r\n                item.activities.filter((itemActivity: ItemActivity) => itemActivity !== gain && itemActivity.active && itemActivity.exclusiveActivityID == gain.exclusiveActivityID).forEach((itemActivity: ItemActivity) => {\r\n                    this.activate_Activity(creature, creature.type, characterService, conditionsService, itemsService, spellsService, itemActivity, itemActivity, false, false)\r\n                })\r\n            }\r\n        }\r\n\r\n        if (changeAfter) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    rest(creature: Creature, characterService: CharacterService) {\r\n        //Get all owned activity gains that have a cooldown active or have a current duration of -2 (until rest).\r\n        //Get the original activity information, and if its cooldown is exactly one day or until rest (-2), the activity gain's cooldown is reset.\r\n        characterService.get_OwnedActivities(creature).filter((gain: ActivityGain|ItemActivity) => gain.activeCooldown != 0 || gain.duration == -2).forEach(gain => {\r\n            let activity: Activity|ItemActivity;\r\n            if (gain.constructor == ItemActivity) {\r\n                activity = gain as ItemActivity;\r\n            } else {\r\n                activity = this.get_Activities(gain.name)[0];\r\n            }\r\n            if (gain.duration == -2 && activity) {\r\n                this.activate_Activity(creature, creature.type, characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, gain, activity, false, false);\r\n            }\r\n            if ([144000,-2].includes(activity.get_Cooldown(creature, characterService))) {\r\n                gain.activeCooldown = 0;\r\n                gain.chargesUsed = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    refocus(creature: Creature, characterService: CharacterService) {\r\n        //Get all owned activity gains that have a cooldown or a current duration of -3 (until refocus).\r\n        //Get the original activity information, and if its cooldown is until refocus (-3), the activity gain's cooldown is reset.\r\n        characterService.get_OwnedActivities(creature).filter((gain: ActivityGain|ItemActivity) => gain.activeCooldown == -3 || gain.duration == -3).forEach(gain => {\r\n            let activity: Activity|ItemActivity;\r\n            if (gain.constructor == ItemActivity) {\r\n                activity = gain as ItemActivity;\r\n            } else {\r\n                activity = this.get_Activities(gain.name)[0];\r\n            }\r\n            if (gain.duration == -3 && activity) {\r\n                this.activate_Activity(creature, creature.type, characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, gain, activity, false, false);\r\n            }\r\n            if ((activity.get_Cooldown(creature, characterService)) == -3) {\r\n                gain.activeCooldown = 0;\r\n                gain.chargesUsed = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    tick_Activities(creature: Creature, characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, turns: number = 10) {\r\n        characterService.get_OwnedActivities(creature, undefined, true).filter(gain => gain.activeCooldown || gain.duration).forEach(gain => {\r\n            //Tick down the duration and the cooldown by the amount of turns.\r\n            let activity: Activity|ItemActivity;\r\n            if (gain.constructor == ItemActivity) {\r\n                activity = gain as ItemActivity;\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            } else {\r\n                activity = this.get_Activities(gain.name)[0];\r\n            }\r\n            // Reduce the turns by the amount you took from the duration, then apply the rest to the cooldown.\r\n            let remainingTurns = turns;\r\n            characterService.set_ToChange(creature.type, \"activities\");\r\n            if (gain.duration > 0) {\r\n                let difference = Math.min(gain.duration, remainingTurns);\r\n                gain.duration -= difference;\r\n                remainingTurns -= difference;\r\n                if (gain.duration == 0) {\r\n                    if (activity) {\r\n                        this.activate_Activity(creature, creature.type, characterService, conditionsService, itemsService, spellsService, gain, activity, false, false);\r\n                    }\r\n                }\r\n            }\r\n            //Only if the activity has a cooldown active, reduce the cooldown and restore charges. If the activity does not have a cooldown, the charges are permanently spent.\r\n            //If the activity has cooldownAfterEnd, only the remaining turns are applied.\r\n            let cooldownTurns = activity.cooldownAfterEnd ? remainingTurns : turns;\r\n            if (gain.activeCooldown) {\r\n                gain.activeCooldown = Math.max(gain.activeCooldown - cooldownTurns, 0)\r\n                if (gain.chargesUsed && gain.activeCooldown == 0) {\r\n                    gain.chargesUsed = 0;\r\n                }\r\n            }\r\n            if (gain.constructor == ItemActivity) {\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.activities.length) {\r\n            this.loading = true;\r\n            this.load_Activities();\r\n            this.loading = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.activities.forEach(activity => {\r\n                activity.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Activities() {\r\n        this.activities = []\r\n        Object.keys(json_activities).forEach(key => {\r\n            this.activities.push(...json_activities[key].map(activity => Object.assign(new Activity(), activity)));\r\n        });\r\n        this.activities.forEach((activity: Activity) => {\r\n            activity.castSpells = activity.castSpells.map(cast => Object.assign(new SpellCast(), cast));\r\n            activity.hints = activity.hints.map(hint => Object.assign(new Hint(), hint));\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { WeaponRune } from 'src/app/WeaponRune';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { LoreChoice } from 'src/app/LoreChoice';\r\nimport { Rune } from 'src/app/Rune';\r\nimport { ArmorRune } from 'src/app/ArmorRune';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { WornItem } from 'src/app/WornItem';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { ConditionsService } from 'src/app/conditions.service';\r\n\r\n@Component({\r\n    selector: 'app-itemRunes',\r\n    templateUrl: './itemRunes.component.html',\r\n    styleUrls: ['./itemRunes.component.css']\r\n})\r\nexport class ItemRunesComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Equipment;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    @Input()\r\n    customItemStore: boolean = false;\r\n    @Input()\r\n    bladeAlly: boolean = false;\r\n\r\n\r\n    public newPropertyRune: { rune: Rune, inv: ItemCollection, disabled?: boolean }[];\r\n    public inventories: string[] = [];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private activitiesService: ActivitiesService,\r\n        private spellsService: SpellsService,\r\n        private conditionsService: ConditionsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_WeaponPotencyRunes() {\r\n        let runes: { potency: number, rune?: Rune, disabled?: boolean }[] = [{ potency: 0 }];\r\n        if (this.item.potencyRune) {\r\n            runes.push({ potency: this.item.potencyRune, disabled: true });\r\n        }\r\n        if (this.itemStore) {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_CleanItems().weaponrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.weaponrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n            .sort(function (a, b) {\r\n                if (a.potency > b.potency) {\r\n                    return 1;\r\n                }\r\n                if (a.potency < b.potency) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });;\r\n    }\r\n\r\n    get_ArmorPotencyRunes() {\r\n        let runes: { potency: number, rune?: Rune, disabled?: boolean }[] = [{ potency: 0 }];\r\n        if (this.item.potencyRune) {\r\n            runes.push({ potency: this.item.potencyRune, disabled: true });\r\n        }\r\n        if (this.itemStore) {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_CleanItems().armorrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.armorrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n        .sort(function (a, b) {\r\n            if (a.potency > b.potency) {\r\n                return 1;\r\n            }\r\n            if (a.potency < b.potency) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_StrikingRunes() {\r\n        let runes: { striking: number, rune?: Rune, disabled?: boolean }[] = [{ striking: 0, rune: new Rune() }];\r\n        if (this.item.strikingRune) {\r\n            runes.push({ striking: this.item.strikingRune, disabled: true });\r\n        }\r\n        let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n        if (this.itemStore) {\r\n            this.get_CleanItems().weaponrunes.filter(rune => rune.striking && rune.striking != this.item.strikingRune && rune.striking <= this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ striking: rune.striking, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ striking: rune.striking, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.weaponrunes.filter(rune => rune.striking && rune.striking != this.item.strikingRune && rune.striking <= this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ striking: rune.striking, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ striking: rune.striking, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n        .sort(function (a, b) {\r\n            if (a.striking > b.striking) {\r\n                return 1;\r\n            }\r\n            if (a.striking < b.striking) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_ResilientRunes() {\r\n        let runes: { resilient: number, rune?: Rune, disabled?: boolean }[] = [{ resilient: 0, rune: new Rune() }];\r\n        if (this.item.resilientRune) {\r\n            runes.push({ resilient: this.item.resilientRune, disabled: true });\r\n        }\r\n        let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n        if (this.itemStore) {\r\n            this.get_CleanItems().armorrunes.filter(rune => rune.resilient && rune.resilient != this.item.resilientRune && rune.resilient <= this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ resilient: rune.resilient, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ resilient: rune.resilient, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.armorrunes.filter(rune => rune.resilient && rune.resilient != this.item.resilientRune && rune.resilient <= this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ resilient: rune.resilient, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ resilient: rune.resilient, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n        .sort(function (a, b) {\r\n            if (a.resilient > b.resilient) {\r\n                return 1;\r\n            }\r\n            if (a.resilient < b.resilient) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_PropertyRunes() {\r\n        let indexes: number[] = [];\r\n        //For each rune with the Saggorak trait, provide one less field.\r\n        let saggorak = this.item.propertyRunes.filter(rune => rune.traits.includes(\"Saggorak\")).length;\r\n        for (let index = 0; index < this.item.potencyRune - saggorak; index++) {\r\n            indexes.push(index);\r\n        }\r\n        let extraRune = this.item.material?.[0]?.extraRune || 0;\r\n        if (this.item.potencyRune == 3 && extraRune) {\r\n            for (let index = 0; index < extraRune; index++) {\r\n                indexes.push(indexes.length);\r\n            }\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n    get_RuneCooldown(rune: Rune) {\r\n        //If any activity on this rune has a cooldown, return the lowest of these in a human readable format.\r\n        if (rune.activities && rune.activities.length && rune.activities.some(activity => activity.activeCooldown)) {\r\n            let lowestCooldown = Math.min(...rune.activities.filter(activity => activity.activeCooldown).map(activity => activity.activeCooldown));\r\n            return \" (Cooldown \" + this.timeService.get_Duration(lowestCooldown) + \")\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    get_Inventories() {\r\n        if (this.itemStore) {\r\n            return [this.get_CleanItems()];\r\n        } else {\r\n            return this.get_Character().inventories;\r\n        }\r\n    }\r\n\r\n    get_InitialPropertyRunes(index: number) {\r\n        let weapon = this.item;\r\n        //Start with one empty rune to select nothing.\r\n        let allRunes: { rune: Rune, inv: ItemCollection, disabled?: boolean }[] = [{ rune: new WeaponRune(), inv: null }];\r\n        allRunes[0].rune.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (weapon.propertyRunes[index]) {\r\n            allRunes.push(this.newPropertyRune[index] as { rune: WeaponRune, inv: ItemCollection });\r\n        }\r\n        return allRunes;\r\n    }\r\n\r\n    get_WeaponPropertyRunes(index: number, inv: ItemCollection) {\r\n        let weapon: Weapon | WornItem;\r\n        if (this.item.type == \"wornitems\") {\r\n            weapon = this.item as WornItem\r\n        } else {\r\n            weapon = this.item as Weapon\r\n        }\r\n        //In the case of Handwraps of Mighty Blows, we need to compare the rune's requirements with the Fist weapon, but its potency rune requirements with the Handwraps.\r\n        //For this purpose, we use two different \"weapon\"s.\r\n        let weapon2 = this.item;\r\n        if ((weapon as WornItem).isHandwrapsOfMightyBlows) {\r\n            weapon2 = this.get_CleanItems().weapons.filter(weapon => weapon.name == \"Fist\")[0];\r\n        }\r\n        let allRunes: { rune: Rune, inv: ItemCollection, disabled?: boolean }[] = [];\r\n        //Add all runes either from the item store or from the inventories.\r\n        if (this.itemStore) {\r\n            inv.weaponrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: null });\r\n            });\r\n        } else {\r\n            inv.weaponrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: inv });\r\n            });\r\n        }\r\n        //Set all runes to disabled that have the same name as any that is already equipped.\r\n        allRunes.forEach((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }) => {\r\n            if (weapon.propertyRunes\r\n                .map(propertyRune => propertyRune.name)\r\n                .includes(rune.rune.name)) {\r\n                rune.disabled = true;\r\n            }\r\n        });\r\n        allRunes = allRunes.filter((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }) => !rune.rune.potency && !rune.rune.striking);\r\n        //Filter all runes whose requirements are not met.\r\n        allRunes.forEach((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }, $index) => {\r\n            if (\r\n                (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    this.item.material?.[0]?.runeLimit ?\r\n                        this.item.material[0].runeLimit >= rune.rune.level\r\n                        : true\r\n                ) && (\r\n                    //Show runes that can only be applied to this item (by name).\r\n                    rune.rune.namereq ?\r\n                        weapon2.name == rune.rune.namereq\r\n                        : true\r\n                ) && (\r\n                    //Don't show runes whose opposite runes are equipped.\r\n                    rune.rune.runeblock ?\r\n                        !weapon.propertyRunes\r\n                            .map(propertyRune => propertyRune.name)\r\n                            .includes(rune.rune.runeblock)\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a trait if that trait is present on the weapon.\r\n                    rune.rune.traitreq ?\r\n                        weapon2.traits\r\n                            .filter(trait => trait.includes(rune.rune.traitreq)).length\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a range if the weapon has a value for that range.\r\n                    rune.rune.rangereq ?\r\n                        weapon2[rune.rune.rangereq] > 0\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a damage type if the weapon's dmgType contains either of the letters in the requirement.\r\n                    rune.rune.damagereq ?\r\n                        (\r\n                            (weapon2 as Weapon).dmgType &&\r\n                            (\r\n                                rune.rune.damagereq.split(\"\")\r\n                                    .filter(req => (weapon2 as Weapon).dmgType.includes(req)).length ||\r\n                                (weapon2 as Weapon).dmgType == \"modular\"\r\n                            )\r\n                        )\r\n                        : true\r\n                ) && (\r\n                    //Show Saggorak runes only if there are 2 rune slots available,\r\n                    //  or if one is available and this slot is taken (so you can replace the rune in this slot).\r\n                    rune.rune.traits.includes(\"Saggorak\") ?\r\n                        (\r\n                            weapon.freePropertyRunes > 1 ||\r\n                            (\r\n                                weapon.propertyRunes[index] &&\r\n                                weapon.freePropertyRunes == 1\r\n                            ) ||\r\n                            (\r\n                                weapon.propertyRunes[index] &&\r\n                                $index == 1\r\n                            )\r\n                        )\r\n                        : true\r\n                )\r\n            ) {\r\n                rune.disabled = false;\r\n            } else {\r\n                rune.disabled = true;\r\n            }\r\n        })\r\n        return allRunes.sort(function (a, b) {\r\n            if (a.rune.name > b.rune.name) {\r\n                return 1;\r\n            }\r\n            if (a.rune.name < b.rune.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.rune.level - b.rune.level);\r\n    }\r\n\r\n    get_ArmorPropertyRunes(index: number, inv: ItemCollection) {\r\n        let armor: Armor = this.item as Armor;\r\n        let allRunes: { rune: Rune, inv: ItemCollection, disabled?: boolean }[] = [];\r\n        //Add all runes either from the item store or from the inventories.\r\n        if (this.itemStore) {\r\n            inv.armorrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: null });\r\n            });\r\n        } else {\r\n            inv.armorrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: inv });\r\n            });\r\n        }\r\n        //Set all runes to disabled that have the same name as any that is already equipped.\r\n        allRunes.forEach((rune: { rune: ArmorRune, inv: ItemCollection, disabled?: boolean }) => {\r\n            if (armor.propertyRunes\r\n                .map(propertyRune => propertyRune.name)\r\n                .includes(rune.rune.name)) {\r\n                rune.disabled = true;\r\n            }\r\n        });\r\n        allRunes = allRunes.filter((rune: { rune: ArmorRune, inv: ItemCollection, disabled?: boolean }) => !rune.rune.potency && !rune.rune.resilient);\r\n        //Filter all runes whose requirements are not met.\r\n        allRunes.forEach((rune: { rune: ArmorRune, inv: ItemCollection, disabled?: boolean }, $index) => {\r\n            if (\r\n                (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    this.item.material?.[0]?.runeLimit ?\r\n                        this.item.material[0].runeLimit >= rune.rune.level\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a proficiency if the armor has that proficiency.\r\n                    rune.rune.profreq.length ?\r\n                        rune.rune.profreq.includes(armor.get_Proficiency())\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a nonmetallic armor if the armor is one.\r\n                    // Identifying nonmetallic armors is unclear in the rules, so we exclude Chain, Composite and Plate armors as well as armors with the word \"metal\" in their description.\r\n                    rune.rune.nonmetallic ?\r\n                        ![\"Chain\", \"Composite\", \"Plate\"].includes(armor.group) && !armor.desc.includes(\"metal\")\r\n                        : true\r\n                ) && (\r\n                    //Show Saggorak runes only if there are 2 rune slots available,\r\n                    //  or if one is available and this slot is taken (so you can replace the rune in this slot).\r\n                    rune.rune.traits.includes(\"Saggorak\") ?\r\n                        (\r\n                            armor.freePropertyRunes > 1 ||\r\n                            (\r\n                                armor.propertyRunes[index] &&\r\n                                armor.freePropertyRunes == 1\r\n                            ) ||\r\n                            (\r\n                                armor.propertyRunes[index] &&\r\n                                $index == 1\r\n                            )\r\n                        )\r\n                        : true\r\n                )\r\n            ) {\r\n                rune.disabled = false;\r\n            } else {\r\n                rune.disabled = true;\r\n            }\r\n        })\r\n\r\n        return allRunes.sort(function (a, b) {\r\n            if (a.rune.name > b.rune.name) {\r\n                return 1;\r\n            }\r\n            if (a.rune.name < b.rune.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.rune.level - b.rune.level);\r\n    }\r\n\r\n    on_WeaponRuneChange(runeType: string, previousRune: number) {\r\n        let weapon: Equipment = this.item;\r\n        switch (runeType) {\r\n            case \"potency\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != weapon.potencyRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: WeaponRune = this.get_CleanItems().weaponrunes.filter(rune => rune.potency == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (weapon.potencyRune > 0) {\r\n                        let insertedRune: WeaponRune = this.get_Character().inventories[0].weaponrunes.filter(rune => rune.potency == weapon.potencyRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                //If the potency rune has been lowered and the striking rune has become invalid, throw out the striking rune\r\n                if (weapon.potencyRune < weapon.strikingRune) {\r\n                    let oldStriking: number = weapon.strikingRune;\r\n                    weapon.strikingRune = 0;\r\n                    this.on_WeaponRuneChange(\"striking\", oldStriking);\r\n                }\r\n                //As long as there are more property Runes assigned than allowed, throw out the last property rune\r\n                while (weapon.freePropertyRunes < 0) {\r\n                    if (!this.itemStore) {\r\n                        this.remove_WeaponPropertyRune(weapon.propertyRunes.length - 1);\r\n                    }\r\n                    weapon.propertyRunes.splice(weapon.propertyRunes.length - 1, 1);\r\n                }\r\n                break;\r\n            case \"striking\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != weapon.strikingRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: WeaponRune = this.get_CleanItems().weaponrunes.filter(rune => rune.striking == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (weapon.strikingRune > 0) {\r\n                        let insertedRune: WeaponRune = this.get_Character().inventories[0].weaponrunes.filter(rune => rune.striking == weapon.strikingRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        if (this.item.equipped) {\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_ArmorRuneChange(runeType: string, previousRune: number) {\r\n        let armor: Equipment = this.item;\r\n        switch (runeType) {\r\n            case \"potency\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != armor.potencyRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: ArmorRune = this.get_CleanItems().armorrunes.filter(rune => rune.potency == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (armor.potencyRune > 0) {\r\n                        let insertedRune: ArmorRune = this.get_Character().inventories[0].armorrunes.filter(rune => rune.potency == armor.potencyRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                //If the potency rune has been lowered and the resilient rune has become invalid, throw out the resilient rune\r\n                if (armor.potencyRune < armor.resilientRune) {\r\n                    let oldResilient: number = armor.resilientRune;\r\n                    armor.resilientRune = 0;\r\n                    this.on_ArmorRuneChange(\"resilient\", oldResilient);\r\n                }\r\n                //As long as there are more property Runes assigned than allowed, throw out the last property rune\r\n                while (armor.freePropertyRunes < 0) {\r\n                    if (!this.itemStore) {\r\n                        this.remove_ArmorPropertyRune(armor.propertyRunes.length - 1);\r\n                    }\r\n                    armor.propertyRunes.splice(armor.propertyRunes.length - 1, 1);\r\n                }\r\n                break;\r\n            case \"resilient\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != armor.resilientRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: ArmorRune = this.get_CleanItems().armorrunes.filter(rune => rune.resilient == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (armor.resilientRune > 0) {\r\n                        let insertedRune: ArmorRune = this.get_Character().inventories[0].armorrunes.filter(rune => rune.resilient == armor.resilientRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        if (this.item.equipped) {\r\n            this.characterService.set_ToChange(\"Character\", \"defense\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    add_WeaponPropertyRune(index: number) {\r\n        let weapon = this.item;\r\n        let rune = this.newPropertyRune[index].rune;\r\n        let inv = this.newPropertyRune[index].inv;\r\n        if (!weapon.propertyRunes[index] || rune !== weapon.propertyRunes[index]) {\r\n            //If there is a rune in this slot, return the old rune to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (weapon.propertyRunes[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_WeaponPropertyRune(index);\r\n                }\r\n                weapon.propertyRunes.splice(index, 1);\r\n            }\r\n            //Then add the new rune to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (rune.name != \"\") {\r\n                //Add a copy of the rune to the item\r\n                let newLength = weapon.propertyRunes.push(Object.assign(new WeaponRune, JSON.parse(JSON.stringify(rune))));\r\n                weapon.propertyRunes[newLength - 1] = this.characterService.reassign(weapon.propertyRunes[newLength - 1]);\r\n                let newRune = weapon.propertyRunes[newLength - 1];\r\n                newRune.amount = 1;\r\n                newRune.loreChoices = newRune.loreChoices.map(choice => Object.assign(new LoreChoice(), choice));\r\n                //If we are not in the item store, remove the inserted rune from the inventory, either by decreasing the amount or by dropping the item.\r\n                //Also add the rune's lore if needed.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, rune, false, false, false, 1);\r\n                    if ((weapon.propertyRunes[newLength - 1] as WeaponRune).loreChoices.length) {\r\n                        this.characterService.add_RuneLore(weapon.propertyRunes[newLength - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        this.set_PropertyRuneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_WeaponPropertyRune(index: number) {\r\n        let weapon: Equipment = this.item;\r\n        let oldRune: Rune = weapon.propertyRunes[index];\r\n        //Deactivate any active toggled activities of the removed rune.\r\n        oldRune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n            this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n        })\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldRune, false, false, false, 1);\r\n        //Remove the Ancestral Echoing Lore if applicable.\r\n        if (oldRune.loreChoices.length) {\r\n            this.characterService.remove_RuneLore(oldRune);\r\n        }\r\n    }\r\n\r\n    add_ArmorPropertyRune(index: number) {\r\n        let armor = this.item;\r\n        let rune = this.newPropertyRune[index].rune;\r\n        let inv = this.newPropertyRune[index].inv;\r\n        if (!armor.propertyRunes[index] || rune !== armor.propertyRunes[index]) {\r\n            //If there is a rune in this slot, return the old rune to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (armor.propertyRunes[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_ArmorPropertyRune(index);\r\n                }\r\n                armor.propertyRunes.splice(index, 1);\r\n            }\r\n            //Then add the new rune to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (rune.name != \"\") {\r\n                //Add a copy of the rune to the item\r\n                let newLength = armor.propertyRunes.push(Object.assign(new ArmorRune, JSON.parse(JSON.stringify(rune))));\r\n                armor.propertyRunes[newLength - 1] = this.characterService.reassign(armor.propertyRunes[newLength - 1]);\r\n                let newRune = armor.propertyRunes[newLength - 1];\r\n                newRune.amount = 1;\r\n                newRune.loreChoices = newRune.loreChoices.map(choice => Object.assign(new LoreChoice(), choice));\r\n                //If we are not in the item store, remove the inserted rune from the inventory, either by decreasing the amount or by dropping the item.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, rune, false, false, false, 1);\r\n\r\n                }\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.set_ToChange(rune as ArmorRune);\r\n        this.set_PropertyRuneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_ArmorPropertyRune(index: number) {\r\n        let armor: Equipment = this.item;\r\n        let oldRune: Rune = armor.propertyRunes[index];\r\n        this.set_ToChange(oldRune as ArmorRune);\r\n        //Deactivate any active toggled activities of the removed rune.\r\n        oldRune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n            this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n        })\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldRune, false, false, false, 1);\r\n    }\r\n\r\n    get_Title(rune: Rune) {\r\n        if (this.itemStore && rune?.price) {\r\n            return \"Price \" + this.get_Price(rune);\r\n        }\r\n    }\r\n\r\n    get_Price(rune: Rune) {\r\n        if (rune.price) {\r\n            if (rune.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = rune.price;\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100) + \"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) { priceString += \" \"; }\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10) + \"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) { priceString += \" \"; }\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price + \"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    set_ToChange(rune: ArmorRune) {\r\n        rune.hints?.forEach(hint => {\r\n            this.characterService.set_TagsToChange(\"Character\", hint.showon);\r\n        })\r\n        if (rune.effects?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        }\r\n        if (rune.activities?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n    }\r\n\r\n    set_PropertyRuneNames() {\r\n        this.newPropertyRune =\r\n            (this.item.propertyRunes ? [\r\n                (this.item.propertyRunes[0] ? { rune: this.item.propertyRunes[0], inv: null } : { rune: new Rune(), inv: null }),\r\n                (this.item.propertyRunes[1] ? { rune: this.item.propertyRunes[1], inv: null } : { rune: new Rune(), inv: null }),\r\n                (this.item.propertyRunes[2] ? { rune: this.item.propertyRunes[2], inv: null } : { rune: new Rune(), inv: null }),\r\n                (this.item.propertyRunes[3] ? { rune: this.item.propertyRunes[3], inv: null } : { rune: new Rune(), inv: null })\r\n            ] : [{ rune: new Rune(), inv: null }, { rune: new Rune(), inv: null }, { rune: new Rune(), inv: null }])\r\n        this.newPropertyRune.filter(rune => rune.rune.name == \"New Item\").forEach(rune => {\r\n            rune.rune.name = \"\";\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_PropertyRuneNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Weapon Runes-->\r\n<div class=\"list-item\" *ngIf=\"['weapon', 'armor'].includes(item.moddable) || customItemStore\">\r\n    <div class=\"newrow\" *ngIf=\"item.moddable=='weapon' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon')\">\r\n        <strong>Potency rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.potencyRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.potencyRune\" (ngModelChange)=\"on_WeaponRuneChange('potency', previousRune)\">\r\n                <option *ngFor=\"let potency of get_WeaponPotencyRunes(); trackBy:trackByIndex;\" [ngValue]=\"potency.potency\"\r\n                [disabled]=\"potency.disabled\" title=\"{{get_Title(potency.rune)}}\">\r\n                    {{item.get_Potency(potency.potency)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.moddable=='armor' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Armor')\">\r\n        <strong>Potency rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.potencyRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.potencyRune\" (ngModelChange)=\"on_ArmorRuneChange('potency', previousRune)\">\r\n                <option *ngFor=\"let potency of get_ArmorPotencyRunes(); trackBy:trackByIndex;\" [ngValue]=\"potency.potency\"\r\n                [disabled]=\"potency.disabled\" title=\"{{get_Title(potency.rune)}}\">\r\n                    {{item.get_Potency(potency.potency)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.potencyRune > 0 && (item.moddable=='weapon' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon'))\">\r\n        <strong>Striking rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.strikingRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.strikingRune\" (ngModelChange)=\"on_WeaponRuneChange('striking', previousRune)\">\r\n                <option *ngFor=\"let striking of get_StrikingRunes(); trackBy:trackByIndex;\" [ngValue]=\"striking.striking\"\r\n                [disabled]=\"striking.disabled\" title=\"{{get_Title(striking.rune)}}\">\r\n                    {{item.get_Striking(striking.striking)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.potencyRune > 0 && (item.moddable=='armor' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Armor'))\">\r\n        <strong>Resilient rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.resilientRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.resilientRune\" (ngModelChange)=\"on_ArmorRuneChange('resilient', previousRune)\">\r\n                <option *ngFor=\"let resilient of get_ResilientRunes(); trackBy:trackByIndex;\" [ngValue]=\"resilient.resilient\"\r\n                [disabled]=\"resilient.disabled\" title=\"{{get_Title(resilient.rune)}}\">\r\n                    {{item.get_Resilient(resilient.resilient)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <ng-container *ngIf=\"item.potencyRune > 0 && (item.moddable=='weapon' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon'))\">\r\n        <div class=\"newrow\" *ngFor=\"let index of get_PropertyRunes(); trackBy:trackByIndex;\">\r\n            <strong *ngIf=\"index == 0\">Property runes</strong>\r\n            <span *ngIf=\"index != 0\">&nbsp;</span>\r\n            <select [(ngModel)]=\"newPropertyRune[index]\" (ngModelChange)=\"add_WeaponPropertyRune(index)\" [disabled]=\"!item.propertyRunes[index-1] && index > 0\">\r\n                <ng-container *ngFor=\"let rune of get_InitialPropertyRunes(index); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                    <option [ngValue]=\"rune\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.propertyRunes[index]>\r\n                        <!--Blank option to deselect-->\r\n                    </option>\r\n                    <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current rune\">\r\n                        <option [ngValue]=\"rune\">\r\n                            {{rune.rune.name}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n                    <optgroup label=\"{{itemStore ? 'Available runes' : inv.get_Name(characterService)}}\" *ngIf=\"get_WeaponPropertyRunes(index, inv).length\">\r\n                        <option *ngFor=\"let rune of get_WeaponPropertyRunes(index, inv); trackBy:trackByIndex;\" [ngValue]=\"rune\" [disabled]=\"rune.disabled\"\r\n                        title=\"{{get_Title(rune.rune)}}\">\r\n                            {{rune.rune.amount > 1 ? rune.rune.amount+\" \" : \"\"}}{{rune.rune.name}}{{get_RuneCooldown(rune.rune)}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n            </select>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"item.potencyRune > 0 && (item.moddable=='armor' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Armor'))\">\r\n        <div class=\"newrow\" *ngFor=\"let index of get_PropertyRunes(); trackBy:trackByIndex;\">\r\n            <strong *ngIf=\"index == 0\">Property runes</strong>\r\n            <span *ngIf=\"index != 0\">&nbsp;</span>\r\n            <select [(ngModel)]=\"newPropertyRune[index]\" (ngModelChange)=\"add_ArmorPropertyRune(index)\" [disabled]=\"!item.propertyRunes[index-1] && index > 0\">\r\n                <ng-container *ngFor=\"let rune of get_InitialPropertyRunes(index); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                    <option [ngValue]=\"rune\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.propertyRunes[index]>\r\n                        <!--Blank option to deselect-->\r\n                    </option>\r\n                    <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current rune\">\r\n                        <option [ngValue]=\"rune\">\r\n                            {{rune.rune.name}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n                    <optgroup label=\"{{itemStore ? 'Available runes' : inv.get_Name(characterService)}}\" *ngIf=\"get_ArmorPropertyRunes(index, inv).length\">\r\n                        <option *ngFor=\"let rune of get_ArmorPropertyRunes(index, inv); trackBy:trackByIndex;\" [ngValue]=\"rune\" [disabled]=\"rune.disabled\"\r\n                        title=\"{{get_Title(rune.rune)}}\">\r\n                            {{rune.rune.amount > 1 ? rune.rune.amount+\" \" : \"\"}}{{rune.rune.name}}{{get_RuneCooldown(rune.rune)}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n            </select>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SpellsService } from '../spells.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { Spell } from '../Spell';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { SpellChoice } from '../SpellChoice';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { TraitsService } from '../traits.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spellLibrary',\r\n    templateUrl: './spellLibrary.component.html',\r\n    styleUrls: ['./spellLibrary.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellLibraryComponent implements OnInit {\r\n\r\n    private showList: number = -1;\r\n    private showItem: string = \"\";\r\n    public id: number = 0;\r\n    public hover: number = 0;\r\n    public wordFilter: string = \"\";\r\n    public traditionFilter: string = \"\";\r\n    public spellSource: string = \"spell library\";\r\n    public showLevel: number = 0;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private spellsService: SpellsService,\r\n        private characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(level: number) {\r\n        if (this.showList == level) {\r\n            this.showList = -1;\r\n        } else {\r\n            this.showList = level;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Tradition(tradition: string) {\r\n        this.traditionFilter = tradition;\r\n    }\r\n\r\n    get_ShowTradition() {\r\n        return this.traditionFilter;\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_Item(id: string) {\r\n        if (this.showItem == id) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    set_Changed(target: string) {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList == -2) {\r\n            this.showList = -1;\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = -2;\r\n        }\r\n    }\r\n\r\n    toggleSpellLibraryMenu() {\r\n        this.characterService.toggle_Menu(\"spelllibrary\");\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.characterService.get_SpellLibraryMenuState();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Spells(name: string = \"\") {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellsFromSource() {\r\n        switch (this.spellSource.toLowerCase()) {\r\n            case \"spell library\":\r\n                return this.get_Spells();\r\n            case \"your spellbook\":\r\n                return this.get_Character().class?.spellBook.map(learned => this.get_Spells(learned.name)[0]).filter(spell => spell);\r\n        }\r\n    }\r\n\r\n    get_VisibleSpells(level: number) {\r\n        return this.get_SpellsFromSource().filter((spell: Spell) =>\r\n            (\r\n                (spell.levelreq == level && !spell.traits.includes(\"Cantrip\")) ||\r\n                (level == 0 && spell.traits.includes(\"Cantrip\"))\r\n            ) &&\r\n            (\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        spell.name\r\n                            .concat(spell.desc)\r\n                            .concat(spell.area)\r\n                            .concat(spell.targets)\r\n                            .concat(spell.range)\r\n                            .toLowerCase()\r\n                            .includes(this.wordFilter.toLowerCase()) ||\r\n                        spell.traits.filter(trait => trait.toLowerCase().includes(this.wordFilter.toLowerCase())).length\r\n                    )\r\n                )\r\n            ) && (\r\n                (\r\n                    !this.traditionFilter && !spell.traditions.includes(\"Focus\")\r\n                ) || (\r\n                    this.traditionFilter && spell.traditions.includes(this.traditionFilter)\r\n                )\r\n            )\r\n        ).sort((a,b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            \r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            \r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_WizardSpellCasting() {\r\n        let casting: SpellCasting = this.get_Character().class?.spellCasting.find(casting => casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && casting.charLevelAvailable <= this.get_Character().level);\r\n        return casting || new SpellCasting(\"Innate\");\r\n    }\r\n\r\n    get_BardSpellCasting() {\r\n        let character = this.get_Character();\r\n        let casting: SpellCasting = character.class?.spellCasting.find(casting => casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && casting.charLevelAvailable <= character.level);\r\n        if (this.have_Feat(\"Esoteric Polymath\")) {\r\n            return casting || new SpellCasting(\"Innate\");\r\n        } else {\r\n            return new SpellCasting(\"Innate\");\r\n        }\r\n    }\r\n\r\n    get_SorcererSpellCasting() {\r\n        let character = this.get_Character();\r\n        let casting: SpellCasting = character.class?.spellCasting.find(casting => casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\" && casting.charLevelAvailable <= character.level);\r\n        if (this.have_Feat(\"Arcane Evolution\")) {\r\n            return casting || new SpellCasting(\"Innate\");\r\n        } else {\r\n            return new SpellCasting(\"Innate\");\r\n        }\r\n    }\r\n\r\n    get_School() {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level).find(taken =>\r\n            [\"Abjuration School\", \"Conjuration School\", \"Divination School\", \"Enchantment School\", \"Evocation School\",\r\n                \"Illusion School\", \"Necromancy School\", \"Transmutation School\", \"Universalist Wizard\"].includes(taken.name)\r\n        )?.name || \"\";\r\n    }\r\n\r\n    get_LearningAvailable(wizardCasting: SpellCasting, bardCasting: SpellCasting, sorcererCasting: SpellCasting) {\r\n        if (wizardCasting.className == \"Wizard\" && wizardCasting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\")) {\r\n            let result: string = \"You can currently learn the following number of spells as a wizard:\\n\";\r\n            let school = this.get_School();\r\n            let charLevel: number = this.get_Character().level;\r\n            let overdraw: number = 0;\r\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].forEach(level => {\r\n                let wizardLearned: number = this.get_SpellsLearned(\"\", 'wizard', level).length;\r\n                wizardLearned += overdraw;\r\n                overdraw = 0;\r\n                let schoolLearned: number = this.get_SpellsLearned(\"\", 'school', level).length;\r\n                let wizardAvailable: number = 0;\r\n                let schoolAvailable: number = 0;\r\n                let adaptedCantripAvailable: number = 0;\r\n                let adaptiveAdeptCantripAvailable: number = 0;\r\n                let adaptiveAdept1stLevelAvailable: number = 0;\r\n                if (level == 0) {\r\n                    wizardAvailable = wizardCasting.spellBookSlots[level];\r\n                    adaptedCantripAvailable = this.have_Feat(\"Adapted Cantrip\") ? 1 : 0;\r\n                    adaptiveAdeptCantripAvailable = this.have_Feat(\"Adaptive Adept: Cantrip\") ? 1 : 0;\r\n                } else {\r\n                    for (let index = level * 2 - 1; index <= charLevel && index <= level * 2; index++) {\r\n                        wizardAvailable += wizardCasting.spellBookSlots[index];\r\n                    }\r\n                }\r\n                if (level == 1 && school) {\r\n                    if (school == \"Universalist Wizard\") {\r\n                        wizardAvailable += 1\r\n                    } else {\r\n                        schoolAvailable = 1;\r\n                    }\r\n                }\r\n                if (level == 1) {\r\n                    adaptiveAdept1stLevelAvailable = this.have_Feat(\"Adaptive Adept: 1st-Level Spell\") ? 1 : 0;\r\n                }\r\n                if (wizardAvailable < wizardLearned) {\r\n                    overdraw += wizardLearned - wizardAvailable;\r\n                    wizardLearned = wizardAvailable;\r\n                }\r\n                if (wizardAvailable || schoolAvailable) {\r\n                    result += \"\\n\" + (wizardAvailable - wizardLearned - adaptedCantripAvailable - adaptiveAdeptCantripAvailable - adaptiveAdept1stLevelAvailable) + \" of \" + (wizardAvailable - adaptedCantripAvailable - adaptiveAdeptCantripAvailable - adaptiveAdept1stLevelAvailable) + (level == 0 ? \" Arcane Cantrips\" : \" Arcane spell(s) up to level \" + level);\r\n                    if (schoolAvailable) {\r\n                        result += \"\\n\" + (schoolAvailable - schoolLearned) + \" of \" + schoolAvailable + \" Arcane spell(s) of the \" + school.toLowerCase() + \" up to level \" + level;\r\n                    }\r\n                }\r\n                if (adaptedCantripAvailable) {\r\n                    let adaptedCantripLearned: number = this.get_SpellsLearned(\"\", 'adaptedcantrip').length;\r\n                    result += \"\\n\" + (1 - adaptedCantripLearned) + \" of \" + 1 + \" non-Arcane Cantrips via Adapted Cantrip\";\r\n                }\r\n                if (adaptiveAdeptCantripAvailable) {\r\n                    let adaptedcantrip = this.get_SpellsLearned(\"\", 'adaptedcantrip')[0];\r\n                    if (adaptedcantrip) {\r\n                        let originalSpell = this.get_Spells(adaptedcantrip.name)[0];\r\n                        if (originalSpell) {\r\n                            let adaptiveAdeptLearned: number = this.get_SpellsLearned(\"\", 'adaptiveadept').length;\r\n                            result += \"\\n\" + (1 - adaptiveAdeptLearned) + \" of \" + 1 + \" non-Arcane Cantrips of the following traditions via Adaptive Adept: \" + originalSpell.traditions.join(\", \");\r\n                        }\r\n                    }\r\n                }\r\n                if (adaptiveAdept1stLevelAvailable) {\r\n                    let adaptedcantrip = this.get_SpellsLearned(\"\", 'adaptedcantrip')[0];\r\n                    if (adaptedcantrip) {\r\n                        let originalSpell = this.get_Spells(adaptedcantrip.name)[0];\r\n                        if (originalSpell) {\r\n                            let adaptiveAdeptLearned: number = this.get_SpellsLearned(\"\", 'adaptiveadept').length;\r\n                            result += \"\\n\" + (1 - adaptiveAdeptLearned) + \" of \" + 1 + \" non-Arcane 1st-level spell of the following traditions via Adaptive Adept: \" + originalSpell.traditions.join(\", \");\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            return result || \"\";\r\n        } else if (bardCasting.className == \"Bard\" && bardCasting.castingType == \"Spontaneous\" && (this.get_EsotericPolymathAllowed(bardCasting, this.traditionFilter))) {\r\n            let result = \"You can add any spell in your repertoire to your spellbook for free via esoteric polymath. You can learn and cast spells of the following traditions using esoteric polymath:\\n\";\r\n            [\"Arcane\", \"Divine\", \"Occult\", \"Primal\"].forEach(tradition => {\r\n                if (this.get_EsotericPolymathAllowed(bardCasting, tradition)) {\r\n                    result += \"\\n\" + tradition\r\n                }\r\n            });\r\n            return result || \"\";\r\n        } else if (sorcererCasting.className == \"Sorcerer\" && sorcererCasting.castingType == \"Spontaneous\" && (this.get_ArcaneEvolutionAllowed(sorcererCasting, this.traditionFilter))) {\r\n            let result = \"You can add any spell in your repertoire to your spellbook for free via arcane evolution.\";\r\n            return result || \"\";\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    get_AvailableForLearning(casting: SpellCasting, spell: Spell, adaptedCantrip: boolean = false, adaptiveAdept: boolean = false) {\r\n        if (!adaptedCantrip && casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\" || this.get_Character().get_SpellListSpell(spell.name).length)) {\r\n            return !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n        if (adaptedCantrip && casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter != \"Arcane\")) {\r\n            return this.have_Feat(\"Adapted Cantrip\") && spell.traits.includes(\"Cantrip\") && !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n        if (adaptiveAdept && casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter != \"Arcane\")) {\r\n            return (this.have_Feat(\"Adaptive Adept: Cantrip\") && spell.traits.includes(\"Cantrip\") && !this.get_SpellsLearned(spell.name).length) ||\r\n                (this.have_Feat(\"Adaptive Adept: 1st-Level Spell\") && spell.levelreq == 1 && !this.get_SpellsLearned(spell.name).length);\r\n        }\r\n        if (casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Occult\" || this.get_Character().get_SpellListSpell(spell.name).length)) {\r\n            return !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n        if (casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\" || this.get_Character().get_SpellListSpell(spell.name).length)) {\r\n            return !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n    }\r\n\r\n    get_SpellsLearned(name: string = \"\", source: string = \"\", level: number = -1) {\r\n        return this.get_Character().get_SpellsLearned(name, source, level);\r\n    }\r\n\r\n    can_Learn(casting: SpellCasting, level: number, spell: Spell, source: string) {\r\n        let character = this.get_Character();\r\n        if (source == \"wizard\" && casting.className == \"Wizard\" && (spell.traditions.includes(\"Arcane\") || character.get_SpellListSpell(spell.name).length)) {\r\n            let charLevel: number = character.level;\r\n            let wizardLearned: number = this.get_SpellsLearned(\"\", 'wizard').filter(learned => learned.level == level && (learned.level > 0 || level == 0)).length;\r\n            let wizardLearnedAll: number = this.get_SpellsLearned(\"\", 'wizard').filter(learned => (level > 0 && learned.level > 0) || (level == 0 && learned.level == 0)).length;\r\n            let wizardAvailable = 0;\r\n            let wizardAvailableAll = 0;\r\n            let adaptedCantripAvailable = this.have_Feat(\"Adapted Cantrip\") ? 1 : 0;\r\n            let adaptiveAdeptCantripAvailable = this.have_Feat(\"Adaptive Adept: Cantrip\") ? 1 : 0;\r\n            let adaptiveAdept1stLevelAvailable = this.have_Feat(\"Adaptive Adept: 1st-Level Spell\") ? 1 : 0;\r\n            if (level == 0) {\r\n                wizardAvailable = casting.spellBookSlots[level] - adaptedCantripAvailable - adaptiveAdeptCantripAvailable;\r\n                wizardAvailableAll = casting.spellBookSlots[level] - adaptedCantripAvailable - adaptiveAdeptCantripAvailable;\r\n            } else {\r\n                for (let index = level * 2 - 1; index <= charLevel; index++) {\r\n                    wizardAvailable += casting.spellBookSlots[index];\r\n                }\r\n                for (let index = 1; index <= charLevel; index++) {\r\n                    wizardAvailableAll += casting.spellBookSlots[index];\r\n                }\r\n            }\r\n            if (level == 1 && this.get_School() == \"Universalist Wizard\") {\r\n                wizardAvailable += 1\r\n                wizardAvailableAll += 1;\r\n            }\r\n            if (level == 1) {\r\n                wizardAvailable -= adaptiveAdept1stLevelAvailable;\r\n                wizardAvailableAll -= adaptiveAdept1stLevelAvailable;\r\n            }\r\n            return wizardAvailable > wizardLearned && wizardAvailableAll > wizardLearnedAll;\r\n        }\r\n        if (source == \"school\" && casting.className == \"Wizard\" && (spell.traditions.includes(\"Arcane\") || character.get_SpellListSpell(spell.name).length)) {\r\n            let school = this.get_School();\r\n            let schoolAvailable = 0;\r\n            let schoolLearned: number = this.get_SpellsLearned(\"\", 'school', level).length;\r\n            if (level == 1 && school) {\r\n                if (school != \"Universalist Wizard\" && spell.traits.includes(school.split(\" \")[0])) {\r\n                    schoolAvailable += 1\r\n                }\r\n            }\r\n            return schoolAvailable > schoolLearned;\r\n        }\r\n        if (source == \"esotericpolymath\" && casting.className == \"Bard\") {\r\n            if (spell.traditions.find(tradition => this.get_EsotericPolymathAllowed(casting, tradition))) {\r\n                //You can learn a spell via esoteric polymath if it is in your spell repertoire, i.e. if you have chosen it for any spell slot.\r\n                if (casting.spellChoices.find(choice => choice.spells.find(taken => taken.name == spell.name))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (source == \"arcaneevolution\" && casting.className == \"Sorcerer\") {\r\n            if (spell.traditions.find(tradition => this.get_ArcaneEvolutionAllowed(casting, tradition))) {\r\n                //You can learn a spell via arcane evolution if it is in your spell repertoire, i.e. if you have chosen it for any spell slot.\r\n                if (casting.spellChoices.find(choice => choice.spells.find(taken => taken.name == spell.name))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (source == \"adaptedcantrip\" && casting.className == \"Wizard\") {\r\n            //You can learn a spell via adapted cantrip if none of its traditions is your own.\r\n            if (!spell.traditions.includes(\"Arcane\")) {\r\n                return this.get_SpellsLearned(\"\", 'adaptedcantrip').length < 1;\r\n            }\r\n        }\r\n        if (source == \"adaptiveadept\" && casting.className == \"Wizard\") {\r\n            //You can learn a spell via adaptive adept if none of its traditions is your own, and it matches a tradition of the cantrip learned via adapted adept.\r\n            //With Adaptive Adept, you can choose spells of the same tradition(s) as with Adapted Cantrip, but not your own.\r\n            let adaptedcantrip = this.get_SpellsLearned(\"\", 'adaptedcantrip')[0]\r\n            if (adaptedcantrip) {\r\n                let originalSpell = this.get_Spells(adaptedcantrip.name)[0];\r\n                if (originalSpell) {\r\n                    if (!spell.traditions.includes(\"Arcane\") && spell.traditions.some(tradition => originalSpell.traditions.includes(tradition))) {\r\n                        return this.get_SpellsLearned(\"\", 'adaptiveadept').length < 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    learn_Spell(spell: Spell, source: string) {\r\n        this.get_Character().learn_Spell(spell, source);\r\n        if (this.get_Character().settings.autoCloseChoices) { this.toggle_Item(\"\"); }\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    unlearn_Spell(spell: Spell) {\r\n        this.get_Character().unlearn_Spell(spell);\r\n    }\r\n\r\n    get_LearnedSpellSource(source: string) {\r\n        switch (source) {\r\n            case \"wizard\":\r\n                return \"(learned as Wizard)\";\r\n            case \"esotericpolymath\":\r\n                return \"(learned via Esoteric Polymath)\";\r\n            case \"arcaneevolution\":\r\n                return \"(learned via Arcane Evolution)\";\r\n            case \"adaptedcantrip\":\r\n                return \"(learned via Adapted Cantrip)\";\r\n            case \"adaptiveadept\":\r\n                return \"(learned via Adaptive Adept)\";\r\n            case \"school\":\r\n                return \"(learned via \" + (this.get_School()?.toLowerCase() || \"school\") + \")\";\r\n            case \"free\":\r\n                return \"(learned via Learn A Spell activity)\";\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length\r\n    }\r\n\r\n    get_SpellMasteryAvailable(casting: SpellCasting) {\r\n        if (casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\")) {\r\n            if (this.have_Feat(\"Spell Mastery\")) {\r\n                let available = 4;\r\n                let selected: SpellChoice[] = this.get_SpellMasterySpells(casting);\r\n                let result: string = \"You can select \" + (available - selected.length) + \" of \" + (available) + \" spells of different levels up to 9th level to automatically prepare via Spell Mastery.\";\r\n                if (selected.length) {\r\n                    result += \" You have already selected the following spells:\\n\"\r\n                }\r\n                selected.sort(function (a, b) {\r\n                    if (a.level > b.level) {\r\n                        return 1\r\n                    }\r\n                    if (a.level < b.level) {\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                }).forEach(choice => {\r\n                    result += \"\\n\" + choice.spells[0].name + \" (level \" + choice.level + \")\"\r\n                });\r\n                return result;\r\n            } else {\r\n                return \"\"\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    get_AvailableForSpellMastery(casting: SpellCasting, spell: Spell) {\r\n        if (spell.levelreq > 0 &&\r\n            !spell.traits.includes(\"Cantrip\") &&\r\n            casting.className == \"Wizard\" &&\r\n            casting.castingType == \"Prepared\" &&\r\n            (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\") &&\r\n            this.have_Feat(\"Spell Mastery\")) {\r\n            return spell.traditions.includes(casting.tradition) && !this.get_SpellMasterySelected(casting, spell);\r\n        }\r\n    }\r\n\r\n    get_SpellMasterySelected(casting: SpellCasting, spell: Spell) {\r\n        return casting.spellChoices.find(choice => choice.source == \"Feat: Spell Mastery\" && choice.spells.find(spellTaken => spellTaken.name == spell.name));\r\n    }\r\n\r\n    get_SpellMasterySpells(casting: SpellCasting) {\r\n        return casting.spellChoices.filter(choice => choice.source == \"Feat: Spell Mastery\" && choice.spells.length);\r\n    }\r\n\r\n    get_SpellMasteryAllowed(casting: SpellCasting, levelNumber: number, spell: Spell) {\r\n        //Allow taking this spell if this spell or a spell of this level is not taken yet, and if no more than 3 of 4 spells are taken.\r\n        return !casting.spellChoices.find(choice =>\r\n            choice.source == \"Feat: Spell Mastery\" &&\r\n            (\r\n                choice.level == levelNumber ||\r\n                choice.spells.find(spellTaken => spellTaken.name == spell.name)\r\n            )\r\n        ) &&\r\n            casting.spellChoices.filter(choice => choice.source == \"Feat: Spell Mastery\").length < 4;\r\n    }\r\n\r\n    add_SpellMasterySpell(spell: Spell) {\r\n        let newChoice: SpellChoice = new SpellChoice();\r\n        let newSpellTaken: SpellGain = new SpellGain();\r\n        newChoice.className = \"Wizard\";\r\n        newChoice.castingType = \"Prepared\";\r\n        newChoice.source = \"Feat: Spell Mastery\";\r\n        newChoice.level = spell.levelreq;\r\n        newSpellTaken.name = spell.name;\r\n        newSpellTaken.locked = true;\r\n        newSpellTaken.source = \"Feat: Spell Mastery\";\r\n        newChoice.spells.push(newSpellTaken);\r\n        this.get_Character().add_SpellChoice(this.characterService, spell.levelreq, newChoice);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_SpellMasterySpell(casting: SpellCasting, spell: Spell) {\r\n        let oldChoice: SpellChoice = casting.spellChoices.find(choice => choice.source == \"Feat: Spell Mastery\" && choice.spells.find(spellTaken => spellTaken.name == spell.name));\r\n        if (oldChoice) {\r\n            this.get_Character().remove_SpellChoice(this.characterService, oldChoice);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_EsotericPolymathAllowed(casting: SpellCasting, tradition: string) {\r\n        if (casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && this.have_Feat(\"Esoteric Polymath\")) {\r\n            if ([\"\", \"Occult\"].includes(tradition)) {\r\n                return true;\r\n            } else if (this.have_Feat(\"Impossible Polymath\")) {\r\n                let character = this.get_Character();\r\n                let skill: string = \"\";\r\n                switch (tradition) {\r\n                    case \"Arcane\":\r\n                        skill = \"Arcana\";\r\n                        break;\r\n                    case \"Divine\":\r\n                        skill = \"Religion\";\r\n                        break;\r\n                    case \"Primal\":\r\n                        skill = \"Nature\";\r\n                        break;\r\n                }\r\n                return this.characterService.get_Skills(character, skill)[0].level(character, this.characterService, character.level) >= 2\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get_ArcaneEvolutionAllowed(casting: SpellCasting, tradition: string) {\r\n        if (casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\" && this.have_Feat(\"Arcane Evolution\")) {\r\n            if (tradition == \"Arcane\") {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.spellsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spelllibrary\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"spelllibrary\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<div id=\"spelllibrary\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleSpellLibraryMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"get_SpellLibraryMenuState()=='in'\">\r\n        <div class=\"list-item\">\r\n            <strong>Find (in Name, Description or Traits)</strong>\r\n            <span>\r\n                <input id=\"SpellsWordFilter\" type=text [(ngModel)]=\"wordFilter\" (keypress)=check_Filter() />\r\n                <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>Show spells from</strong>\r\n            <select [(ngModel)]=\"spellSource\">\r\n                <option *ngFor=\"let source of ['spell library','your spellbook']; trackBy:trackByIndex;\"\r\n                    [ngValue]=\"source\">\r\n                    {{source}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>\r\n                Show spells on level\r\n            </strong>\r\n            <span>\r\n                <select [(ngModel)]=\"showLevel\">\r\n                    <option *ngFor=\"let levelOption of [0,1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                        [ngValue]=\"levelOption\">\r\n                        {{levelOption == 0 ? \"Default\" : levelOption}}\r\n                    </option>\r\n                </select>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <button (click)=\"toggle_Tradition('')\" [ngClass]=\"{'fancy-button':(get_ShowTradition()=='')}\">All except\r\n                Focus</button>\r\n            <button (click)=\"toggle_Tradition('Arcane')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Arcane')}\">Arcane</button>\r\n            <button (click)=\"toggle_Tradition('Divine')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Divine')}\">Divine</button>\r\n            <button (click)=\"toggle_Tradition('Occult')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Occult')}\">Occult</button>\r\n            <button (click)=\"toggle_Tradition('Primal')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Primal')}\">Primal</button>\r\n            <button (click)=\"toggle_Tradition('Focus')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Focus')}\">Focus</button>\r\n        </div>\r\n        <div class=\"itembox-inner\">\r\n            <ng-container *ngFor=\"let wizardCasting of [get_WizardSpellCasting()]; trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let bardCasting of [get_BardSpellCasting()]; trackBy:trackByIndex;\">\r\n                    <ng-container *ngFor=\"let sorcererCasting of [get_SorcererSpellCasting()]; trackBy:trackByIndex;\">\r\n                        <ng-container\r\n                            *ngFor=\"let descblock of [get_LearningAvailable(wizardCasting, bardCasting, sorcererCasting)]; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                        <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n                                    </ul>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container\r\n                            *ngFor=\"let descblock of [get_SpellMasteryAvailable(wizardCasting)]; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                        <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n                                    </ul>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container *ngFor=\"let level of [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let visibleSpells of [get_VisibleSpells(level)]; trackBy:trackByIndex;\">\r\n                                <button class=\"list-item\"\r\n                                    [ngStyle]=\"{'display':!visibleSpells.length ? 'none' : 'flex' }\"\r\n                                    (click)=\"toggle_List(level)\">\r\n                                    <header class=\"sectionHeader\" *ngIf=\"level == 0\">Cantrips</header>\r\n                                    <header class=\"sectionHeader\" *ngIf=\"level > 0\">{{\"Level \"+level}}</header>\r\n                                </button>\r\n                                <div class=\"list-item\" [ngStyle]=\"{'display':!visibleSpells.length ? 'none' : 'flex' }\"\r\n                                    *ngIf=\"get_ShowList()==level||get_ShowList()==-2\">\r\n                                    <div class=\"list-item\"\r\n                                        *ngFor=\"let spell of visibleSpells; trackBy:trackByIndex;\">\r\n                                        <button class=\"newrow left-aligned sublist-toggle\"\r\n                                            (click)=\"toggle_Item(spell.id)\"\r\n                                            [ngClass]=\"{'fancy-button':get_SpellsLearned(spell.name).length}\">\r\n                                            <span [ngbTooltip]=\"'Spell Mastery spell'\"\r\n                                                *ngIf=\"get_SpellMasterySelected(wizardCasting, spell)\"><i class='ra ra-crown'></i>&nbsp;</span>\r\n                                            <span>\r\n                                                {{spell.name}}<app-actionIcons [actionString]=\"spell.actions\">\r\n                                                </app-actionIcons>{{spell.castType}}\r\n                                                <cite class=\"trait\" *ngIf=\"spell.traits.includes('Rare')\"\r\n                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\">Rare</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"spell.traits.includes('Uncommon')\"\r\n                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\">Uncommon</cite>\r\n                                            </span>\r\n                                        </button>\r\n                                        <div class=\"list-item sublist\" *ngIf=\"get_ShowItem()==spell.id\"\r\n                                            [ngClass]=\"{'fancy-list':get_SpellsLearned(spell.name).length}\">\r\n                                            <button class=\"newrow center-aligned\" (click)=\"learn_Spell(spell, 'wizard')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'wizard')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell)\">\r\n                                                Learn as Wizard\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"learn_Spell(spell, 'school')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'school')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell)\">\r\n                                                Learn via School\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'esotericpolymath')\"\r\n                                                [disabled]=\"!can_Learn(bardCasting, level, spell, 'esotericpolymath')\"\r\n                                                *ngIf=\"get_AvailableForLearning(bardCasting, spell)\">\r\n                                                Learn via Esoteric Polymath\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'arcaneevolution')\"\r\n                                                [disabled]=\"!can_Learn(sorcererCasting, level, spell, 'arcaneevolution')\"\r\n                                                *ngIf=\"get_AvailableForLearning(sorcererCasting, spell)\">\r\n                                                Learn via Arcane Evolution\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'adaptedcantrip')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'adaptedcantrip')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell, true)\">\r\n                                                Learn via Adapted Cantrip\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'adaptiveadept')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'adaptiveadept')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell, false, true)\">\r\n                                                Learn via Adaptive Adept\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"learn_Spell(spell, 'free')\"\r\n                                                *ngIf=\"!get_SpellsLearned(spell.name).length && !spell.traditions.includes('Focus')\">\r\n                                                Learn using Learn A Spell activity\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"unlearn_Spell(spell)\"\r\n                                                [disabled]=\"\"\r\n                                                *ngFor=\"let learned of get_SpellsLearned(spell.name); trackBy:trackByIndex;\">\r\n                                                Unlearn {{get_LearnedSpellSource(learned.source)}}\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"add_SpellMasterySpell(spell)\"\r\n                                                [disabled]=\"!get_SpellMasteryAllowed(wizardCasting, level, spell)\"\r\n                                                *ngIf=\"get_AvailableForSpellMastery(wizardCasting, spell)\">\r\n                                                <i class='ra ra-crown'></i>&nbsp;Add to Spell Mastery selection\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"remove_SpellMasterySpell(wizardCasting, spell)\"\r\n                                                *ngIf=\"get_SpellMasterySelected(wizardCasting, spell)\">\r\n                                                <i class='ra ra-crown'></i>&nbsp;Remove from Spell Mastery selection\r\n                                            </button>\r\n                                            <div class=\"list-item\">\r\n                                                <strong>\r\n                                                    Show spells on level\r\n                                                </strong>\r\n                                                <span>\r\n                                                    <select [(ngModel)]=\"showLevel\">\r\n                                                        <option\r\n                                                            *ngFor=\"let levelOption of [0,1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                                            [ngValue]=\"levelOption\">\r\n                                                            {{levelOption == 0 ? \"Default\" : levelOption}}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                </span>\r\n                                            </div>\r\n                                            <app-spell [spell]=\"spell\" [spellLevel]=\"showLevel ? showLevel : level\">\r\n                                            </app-spell>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { SavegameService } from './savegame.service';\r\nimport * as json_ancestries from '../assets/json/animalcompanions';\r\nimport * as json_levels from '../assets/json/animalcompanionlevels';\r\nimport * as json_specializations from '../assets/json/animalcompanionspecializations';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AnimalCompanionsService {\r\n\r\n    private companionAncestries: AnimalCompanionAncestry[] = [];\r\n    private companionLevels: AnimalCompanionLevel[] = [];\r\n    private companionSpecializations: AnimalCompanionSpecialization[] = [];\r\n    private loading_ancestries: boolean = false;\r\n    private loading_levels: boolean = false;\r\n    private loading_specializations: boolean = false;\r\n    \r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    get_CompanionTypes(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.companionAncestries.filter(animalCompanion => animalCompanion.name == name || name == \"\");\r\n        } else { return [new AnimalCompanionAncestry()] }\r\n    }\r\n\r\n    get_CompanionLevels() {\r\n        if (!this.still_loading()) {\r\n            return this.companionLevels;\r\n        } else { return [new AnimalCompanionLevel()] }\r\n    }\r\n\r\n    get_CompanionSpecializations(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.companionSpecializations.filter(spec => spec.name == name || name == \"\");\r\n        } else { return [new AnimalCompanionSpecialization()] }\r\n    }\r\n\r\n    restore_AncestryFromSave(ancestry: AnimalCompanionAncestry, savegameService: SavegameService) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_CompanionTypes(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    ancestry = savegameService.merge(libraryObject, ancestry);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    clean_AncestryForSave(ancestry: AnimalCompanionAncestry) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_CompanionTypes(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(ancestry).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading via the name.\r\n                        if (JSON.stringify(ancestry[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete ancestry[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    restore_LevelsFromSave($class: AnimalCompanionClass, savegameService: SavegameService) {\r\n        if ($class.levels) {\r\n            let libraryObject = this.get_CompanionLevels();\r\n            if (libraryObject) {\r\n                for (let index = 0; index < $class.levels.length; index++) {\r\n                    //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    $class.levels = savegameService.merge(libraryObject, $class.levels);\r\n                    } catch (e) {\r\n                        console.log(\"Failed reassigning: \" + e)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    clean_LevelsForSave($class: AnimalCompanionClass) {\r\n        if ($class.levels) {\r\n            let libraryObject = this.get_CompanionLevels();\r\n            if (libraryObject) {\r\n                for (let index = 0; index < $class.levels.length; index++) {\r\n                    Object.keys($class.levels[index]).forEach(key => {\r\n                        if (![\"name\", \"_className\"].includes(key)) {\r\n                            //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                            //If they have the same value, delete the property from the item - it can be recovered during loading from the database.\r\n                            if (JSON.stringify($class.levels[index][key]) == JSON.stringify(libraryObject[index][key])) {\r\n                                delete $class.levels[index][key];\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    restore_SpecializationFromSave(spec: AnimalCompanionSpecialization, savegameService: SavegameService) {\r\n        if (spec.name) {\r\n            let libraryObject = this.get_CompanionSpecializations(spec.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    spec = savegameService.merge(libraryObject, spec);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return spec;\r\n    }\r\n\r\n    clean_SpecializationForSave(spec: AnimalCompanionSpecialization) {\r\n        if (spec.name) {\r\n            let libraryObject = this.get_CompanionSpecializations(spec.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(spec).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading via the name.\r\n                        if (JSON.stringify(spec[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete spec[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return spec;\r\n    }\r\n\r\n    change_Type(companion: AnimalCompanion, type: AnimalCompanionAncestry) {\r\n        companion.class.ancestry = new AnimalCompanionAncestry();\r\n        companion.class.ancestry = Object.assign(new AnimalCompanionAncestry(), JSON.parse(JSON.stringify(type)));\r\n        companion.class.ancestry = this.savegameService.reassign(companion.class.ancestry)\r\n    }\r\n\r\n    add_Specialization(companion: AnimalCompanion, spec: AnimalCompanionSpecialization, levelNumber: number) {\r\n        let newLength = companion.class.specializations.push(Object.assign(new AnimalCompanionSpecialization(), JSON.parse(JSON.stringify(spec))));\r\n        companion.class.specializations[newLength-1].level = levelNumber;\r\n        companion.class.specializations[newLength-1] = this.savegameService.reassign(companion.class.specializations[newLength-1]);\r\n    }\r\n\r\n    remove_Specialization(companion: AnimalCompanion, spec: AnimalCompanionSpecialization) {\r\n        companion.class.specializations = companion.class.specializations.filter(specialization => specialization.name != spec.name);\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading_ancestries || this.loading_levels || this.loading_specializations);\r\n    }\r\n  \r\n    initialize() {\r\n        if (!this.companionAncestries.length) {\r\n            this.loading_ancestries = true;\r\n            this.load(json_ancestries, \"companionAncestries\", AnimalCompanionAncestry);\r\n            this.loading_ancestries = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.companionAncestries.forEach(ancestry => {\r\n                ancestry.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n        if (!this.companionLevels.length) {\r\n            this.loading_levels = true;\r\n            this.load(json_levels, \"companionLevels\", AnimalCompanionLevel);\r\n            this.loading_levels = false;\r\n        }\r\n        if (!this.companionSpecializations.length) {\r\n            this.loading_specializations = true;\r\n            this.load(json_specializations, \"companionSpecializations\", AnimalCompanionSpecialization);\r\n            this.loading_specializations = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.companionSpecializations.forEach(spec => {\r\n                spec.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load(source, target: string, type) {\r\n        this[target] = [];\r\n        Object.keys(source).forEach(key => {\r\n            this[target].push(...source[key].map(obj => Object.assign(new type(), obj)));\r\n        });\r\n        this[target].forEach(obj => {\r\n            obj = this.savegameService.reassign(obj)\r\n        });\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Item } from 'src/app/Item';\r\nimport { AlchemicalPoison } from 'src/app/AlchemicalPoison';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { Weapon } from 'src/app/Weapon';\r\n\r\n@Component({\r\n    selector: 'app-itemPoisons',\r\n    templateUrl: './itemPoisons.component.html',\r\n    styleUrls: ['./itemPoisons.component.css']\r\n})\r\nexport class ItemPoisonsComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Weapon;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    newPoison: { poison: AlchemicalPoison, inv: ItemCollection } = { poison: new AlchemicalPoison(), inv: null };\r\n\r\n    public newPropertyRuneName: string[] = [\"\", \"\", \"\"];\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Duration(turns: number) {\r\n        return this.timeService.get_Duration(turns)\r\n    }\r\n\r\n    get_Poisons() {\r\n        let allPoisons: { poison: AlchemicalPoison, inv: ItemCollection }[] = [{ poison: new AlchemicalPoison(), inv: null }];\r\n        allPoisons[0].poison.name = \"\";\r\n        if (this.itemStore) {\r\n            allPoisons.push(...this.get_CleanItems().alchemicalpoisons.filter(poison => poison.traits.includes(\"Injury\")).map(poison => ({ poison: poison, inv: null })));\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                allPoisons.push(...inv.alchemicalpoisons.filter(poison => poison.traits.includes(\"Injury\")).map(poison => ({ poison: poison, inv: inv })));\r\n            });\r\n        }\r\n        return allPoisons;\r\n    }\r\n\r\n    add_Poison() {\r\n        if (this.newPoison.poison.name) {\r\n            let item = this.item;\r\n            item.poisonsApplied.length = 0;\r\n            let newLength = item.poisonsApplied.push(Object.assign(new AlchemicalPoison(), JSON.parse(JSON.stringify(this.newPoison.poison))));\r\n            item.poisonsApplied[newLength - 1] = this.characterService.reassign(item.poisonsApplied[newLength - 1]);\r\n            if (this.newPoison.inv) {\r\n                this.characterService.drop_InventoryItem(this.get_Character(), this.newPoison.inv, this.newPoison.poison, false, false, false, 1);\r\n            }\r\n            this.newPoison = { poison: new AlchemicalPoison(), inv: null };\r\n            this.newPoison.poison.name = \"\";\r\n            this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n            this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    remove_Poison(index: number) {\r\n        this.item.poisonsApplied.splice(index, 1);\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","<!--Adding Poisons-->\r\n<div class=\"list-item\" *ngIf=\"get_Poisons().length > 1 || item.poisonsApplied.length\">\r\n    <div class=\"newrow\">\r\n        <strong title=\"{{item.poisonsApplied.length ? 'Applying a new poison will waste the currently applied poison.' : ''}}\">\r\n            {{item.poisonsApplied.length ? 'Replace' : 'Apply'}} poison\r\n        </strong>\r\n        <select [(ngModel)]=\"newPoison\" (ngModelChange)=\"add_Poison()\">\r\n            <option *ngFor=\"let poison of get_Poisons(); trackBy:trackByIndex;\" [ngValue]=\"poison\">\r\n                {{poison.poison.amount != 1 ? poison.poison.amount + \" \" : \"\"}}{{poison.poison.get_Name()}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.poisonsApplied.length\">\r\n        <strong>Applied poison</strong>\r\n        <div class=\"newrow\" *ngFor=\"let poison of item.poisonsApplied; let index = index; trackBy:trackByIndex;\">\r\n            <span>{{poison.get_Name()}}</span>\r\n            <button class=\"lower\" (click)=\"remove_Poison(index)\">Spend/Remove</button>\r\n        </div>\r\n    </div>\r\n</div>","import { SpellCast } from './SpellCast';\r\n\r\nexport class Deity {\r\n    public name: string = \"\";\r\n    public category: string = \"\";\r\n    public alignment: string = \"\";\r\n    public followerAlignments: string[] = [];\r\n    public divineAbility: string[] = [];\r\n    public divineFont: string[] = [];\r\n    public divineSkill: string[] = [];\r\n    public favoredWeapon: string[] = [];\r\n    public domains: string[] = [];\r\n    public clericSpells: SpellCast[] = [];\r\n}\r\n","import { Consumable } from './Consumable';\r\n\r\nexport class Snare extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Snares should be type \"snares\" to be found in the database\r\n    readonly type = \"snares\";\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public failure: string = \"\";\r\n    public success: string = \"\";\r\n    public tradeable: boolean = false;\r\n    public actions = \"1 minute\";\r\n}","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\"\r\n    *ngIf=\"creature=='Character' && showMinimizeButton\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-general-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">General information</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <ng-container *ngIf=\"creature=='Character'\">\r\n            <div class=\"list-item\">\r\n                <span>\r\n                    <strong>Level</strong>\r\n                    {{get_Character().level}}\r\n                </span>\r\n                <span>\r\n                    <strong>Hero Points</strong>\r\n                    {{get_Character().heroPoints}}\r\n                    <button (click)=\"add_HeroPoints(-1)\" [disabled]=\"get_Character().heroPoints <= 0\">-1</button>\r\n                    <button (click)=\"add_HeroPoints(1)\">+1</button>\r\n                </span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Character Name</strong>\r\n                <span>{{get_Character().name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.ancestry.name\">\r\n                <strong>Ancestry</strong>\r\n                <span>{{get_Character().class.ancestry.name}}{{(get_Character().class.heritage.name) ? \" - \" +\r\n                    get_Character().class.heritage.name : \"\"}}</span>\r\n                <div class=\"newrow left-aligned\" *ngIf=\"get_Character().class.ancestry.traits.length\">\r\n                    <cite class=\"trait\"\r\n                        *ngFor=\"let trait of get_CharacterTraits(); trackBy:trackByIndex;\">{{trait}}&nbsp;</cite>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Ancestry'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\"\r\n                *ngIf=\"get_Character().class.background && get_Character().class.background.name\">\r\n                <strong>Background</strong>\r\n                <span>{{get_Character().class.background.name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.name\">\r\n                <div class=\"newrow\" *ngFor=\"let specialization of get_ClassChoices(); trackBy:trackByIndex;\">\r\n                    <strong>{{specialization.name}}</strong>\r\n                    <span>{{specialization.choice}}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.ancestry.name\">\r\n                <strong>Size</strong>\r\n                <span>{{get_Size()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Size'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().alignment && get_Character().alignment.length\">\r\n                <strong>Alignment</strong>\r\n                <span>{{get_Character().alignment}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Alignment'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.deity\">\r\n                <strong>Deity</strong>\r\n                <span>{{get_Character().class.deity}}</span>\r\n            </div>\r\n            <div class=\"list-item\"\r\n                *ngIf=\"get_Character().class.ancestry.languages && get_Character().class.ancestry.languages.length\">\r\n                <strong>Languages</strong>\r\n                <span>{{get_Languages()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Languages'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Tenets().length\">\r\n                <strong>Tenets</strong>\r\n                <div class=\"newrow\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tenet of get_Tenets(); trackBy:trackByIndex;\">{{tenet}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Anathema().length\">\r\n                <strong>Anathema</strong>\r\n                <div class=\"newrow\">\r\n                    <ul>\r\n                        <li *ngFor=\"let anathema of get_Anathema(); trackBy:trackByIndex;\">{{anathema}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngFor=\"let feat of get_DifferentWorldsFeat(); trackBy:trackByIndex;\">\r\n                <strong>Alternative Identity (Different Worlds)</strong>\r\n                <span>{{feat.data.name}} {{(feat.data.background) ? \"(\"+feat.data.background+\")\" : \"\"}}</span>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"creature=='Companion'\">\r\n            <div class=\"newrow left-aligned tags\" *ngIf=\"get_Companion().class.ancestry.name\">\r\n                <cite class=\"trait\" *ngFor=\"let trait of get_Companion().class.ancestry.traits; trackBy:trackByIndex;\"\r\n                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            </div>\r\n            <app-tags [creature]=\"'Character'\" [objectName]=\"'Animal Companion'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Companion Name</strong>\r\n                <span>{{get_Companion().name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Animal</strong>\r\n                <span>{{get_CompanionSpecies()}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Companion().class.specializations.length\">\r\n                <strong>Specializations</strong>\r\n                <span>{{get_CompanionSpecializations()}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Companion().class.ancestry.name\">\r\n                <strong>Size</strong>\r\n                <span>{{get_Size()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Size'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"list-item\" *ngIf=\"get_Companion().class.ancestry.name\">\r\n                <strong>Support Benefit</strong>\r\n                <p>{{get_Companion().class.ancestry.supportBenefit}}</p>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"creature=='Familiar'\">\r\n            <div class=\"newrow left-aligned tags\">\r\n                <cite class=\"trait\" *ngFor=\"let trait of get_Familiar().traits; trackBy:trackByIndex;\"\r\n                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            </div>\r\n            <app-tags [creature]=\"'Character'\" [objectName]=\"'Familiar'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Familiar Name</strong>\r\n                <span>{{get_Familiar().name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Creature</strong>\r\n                <span>{{get_Familiar().species}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Size</strong>\r\n                <span>{{get_Size()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Size'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <header class=\"subsectionHeader\">Familiar Abilities</header>\r\n            <div class=\"list-item\" *ngFor=\"let ability of get_Familiar().abilities.feats; trackBy:trackByIndex;\">\r\n                <strong>{{ability.name}}</strong>\r\n                <div class=\"newrow left-aligned tags\">\r\n                    <cite class=\"trait\"\r\n                        *ngFor=\"let trait of get_FamiliarAbilities(ability.name)[0].traits; trackBy:trackByIndex;\"\r\n                        [ngbPopover]=\"get_Traits(trait).length ? get_Traits(trait)[0].desc : ''\">{{trait}}</cite>\r\n                </div>\r\n                <div class=\"newrow left-aligned\">\r\n                    {{get_FamiliarAbilities(ability.name)[0].desc}}\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { FamiliarsService } from '../familiars.service';\r\nimport { FeatChoice } from '../FeatChoice';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-general',\r\n    templateUrl: './general.component.html',\r\n    styleUrls: ['./general.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GeneralComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public showMinimizeButton: boolean = true;\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    \r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        public traitsService: TraitsService,\r\n        private familiarsService: FamiliarsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.generalMinimized = !this.characterService.get_Character().settings.generalMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.generalMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Companion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    get_FamiliarAbilities(name: string) {\r\n        return this.familiarsService.get_FamiliarAbilities(name);\r\n    }\r\n\r\n    get_CompanionSpecies() {\r\n        let companion: AnimalCompanion = this.get_Companion();\r\n        if (companion.level && companion.class.levels.length) {\r\n            let species: string = companion.class.levels[companion.level].name;\r\n            if (companion.species) {\r\n                species += \" \" + companion.species;\r\n            } else if (companion.class.ancestry && companion.class.ancestry.name) {\r\n                species += \" \" + companion.class.ancestry.name;\r\n            }\r\n            return species;\r\n        }\r\n    }\r\n\r\n    get_CompanionSpecializations() {\r\n        let companion: AnimalCompanion = this.get_Companion();\r\n        if (companion.level && companion.class.specializations.length) {\r\n            return companion.class.specializations.filter(spec => spec.level <= this.get_Character().level).map(spec => spec.name).join(\", \");\r\n        }\r\n    }\r\n\r\n    add_HeroPoints(amount: number) {\r\n        this.get_Character().heroPoints += amount;\r\n    }\r\n\r\n    get_Size() {\r\n        return this.get_Creature().get_Size(this.effectsService);\r\n    }\r\n\r\n    get_Tenets() {\r\n        //Collect tenets from all feats and features you have that include them.\r\n        return [].concat(...this.characterService.get_FeatsAndFeatures()\r\n            .filter(feat => feat.tenets?.length && feat.have(this.get_Character(), this.characterService))\r\n            .map(feat => feat.tenets))\r\n    }\r\n\r\n    get_Anathema() {\r\n        //Collect anathema from all feats and features you have that include them.\r\n        return this.get_Character().class.anathema.concat(...this.characterService.get_FeatsAndFeatures()\r\n            .filter(feat => feat.anathema?.length && feat.have(this.get_Character(), this.characterService))\r\n            .map(feat => feat.anathema))\r\n    }\r\n\r\n    get_Languages() {\r\n        return this.get_Character().class.languages.filter(language => (!language.level || language.level <= this.get_Character().level) && language.name != \"\").map(language => language.name).join(', ')\r\n    }\r\n\r\n    get_DifferentWorldsFeat() {\r\n        if (this.get_Character().get_FeatsTaken(1, this.get_Character().level, \"Different Worlds\").length) {\r\n            return this.get_Character().customFeats.filter(feat => feat.name == \"Different Worlds\");\r\n        }\r\n    }\r\n\r\n    get_ClassChoices() {\r\n        //Get the basic decisions for your class and all archetypes.\r\n        // These decisions are feat choices identified by being .specialChoice, having exactly one feat, and having the class name (or the dedication feat name) as its type.\r\n        let results: { name: string, choice: string }[] = [];\r\n        let character = this.get_Character();\r\n        let featChoices: FeatChoice[] = [];\r\n        let className = character.class?.name || \"\";\r\n        if (className) {\r\n            results.push({ name: \"Class\", choice: className });\r\n            character.class.levels.forEach(level => {\r\n                featChoices.push(...level.featChoices.filter(choice => choice.specialChoice && choice.feats.length == 1 && choice.available == 1));\r\n            })\r\n            featChoices.filter(choice => choice.source == className).forEach(choice => {\r\n                let choiceName = choice.feats[0].name;\r\n                if (choiceName.includes(choice.type)) {\r\n                    choiceName = choiceName.split(\" \" + choice.type).join(\"\");\r\n                }\r\n                results.push({ name: className + \" \" + choice.type, choice: choiceName })\r\n            })\r\n            let archetypes = this.characterService.get_FeatsAndFeatures().filter(feat => feat.traits.includes(\"Dedication\") && feat.have(this.get_Character(), this.characterService));\r\n            archetypes.forEach(archetype => {\r\n                results.push({ name: \"Archetype\", choice: archetype.archetype });\r\n                featChoices.filter(choice => choice.source == \"Feat: \" + archetype.name).forEach(choice => {\r\n                    let choiceName = choice.feats[0].name;\r\n                    if (choiceName.includes(choice.type)) {\r\n                        choiceName = choiceName.split(\" \" + choice.type).join(\"\");\r\n                    }\r\n                    results.push({ name: archetype.archetype + \" \" + choice.type, choice: choiceName })\r\n                })\r\n            })\r\n        }\r\n        return results;\r\n    }\r\n\r\n    get_CharacterTraits() {\r\n        let character = this.get_Character();\r\n        //Verdant Metamorphosis adds the Plant trait and removes the Humanoid, Animal or Fungus trait.\r\n        if (character.get_FeatsTaken(1, character.level, \"Verdant Metamorphosis\").length) {\r\n            return [\"Plant\"].concat(this.get_Character().class.ancestry.traits.filter(trait => ![\"Humanoid\", \"Animal\", \"Fungus\"].includes(trait)))\r\n            .sort(function(a,b) {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n        } else {\r\n            return this.get_Character().class.ancestry.traits\r\n        }\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"general\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"general\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import { SpellGain } from './SpellGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nexport class SpellChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    //This is a list of all the attributes that should not be discarded when saving the character.\r\n    //For SpellChoices, if the choice is part of a class, the class may designate this choice as a signature spell.\r\n    //A regular SpellChoice does not do that, so if you disable the signature spell on the choice, it is false == false and gets discarded.\r\n    //Loading the character recreates the class and overwrites attributes that aren't set, so the SpellChoice will be a signature spell again.\r\n    public readonly save = [\r\n        \"_className\",\r\n        \"signatureSpell\"\r\n    ];\r\n    public available: number = 0;\r\n    //className is used to identify the proper SpellCasting to sort this into\r\n    //If \"\", the main class is used.\r\n    public className: string = \"\";\r\n    public cooldown: number = 0;\r\n    public frequency: string = \"\";\r\n    public filter: string[] = [];\r\n    public traitFilter: string[] = [];\r\n    public id = uuidv1();\r\n    //If insertClass is set, this SpellChoice is only granted by a feat if the character class name matches this name.\r\n    // This is especially useful for class choices (hunter's edge, rogue racket, bloodline etc.) that don't give certain benefits when multiclassing.\r\n    public insertClass: string = \"\";\r\n    public level: number = 0;\r\n    //For spell choices that are \"three levels below your highest spell level\"\r\n    //Example: \"character.get_SpellLevel() - 3\"\r\n    public dynamicLevel: string = \"\";\r\n    //Don't display this choice or its spells if the character level is lower than charLevelAvailable.\r\n    //If a feat adds a spellChoice with charLevelAvailable = 0, it gets set to the level the feat was taken\r\n    //If a feat adds a spellChoice with a lower charLevelAvailable as the level the feat was taken, it get set to the feat level instead\r\n    public charLevelAvailable: number = 0;\r\n    //The CastingType is mostly there to identify the proper SpellCasting to sort this into if it comes from a feat.\r\n    public castingType: \"Focus\"|\"Innate\"|\"Spontaneous\"|\"Prepared\"|\"Default\";\r\n    //Spell Combination is for wizards and designates this spell choice as one that fits two spells in one spell slot.\r\n    public spellCombinationAllowed: boolean = false;\r\n    //You can choose to use a combination slot for a spell combination, which changes the available spells.\r\n    public spellCombination: boolean = false;\r\n    //The spells chosen must match the tradition of the spell choice, if one is given, or otherwise the tradition of the spellcasting or nothing.\r\n    public tradition: string = \"\";\r\n    public source: string = \"\";\r\n    //If showOnSheet is set, this choice is intended to be made on the character sheet instead of while building the character.\r\n    // This is relevant for features like Infinite Possibilities.\r\n    public showOnSheet: boolean = false;\r\n    public singleTarget: boolean = false;\r\n    //Only allow spells from your spellbook.\r\n    public spellBookOnly: boolean = false;\r\n    public spells: SpellGain[] = [];\r\n    //Spell Blending is for Wizards and tracks spell blending choices for this spell choice. It contains three numbers.\r\n    //The numbers are:\r\n    // [0]: Number of spell slots traded away for cantrips\r\n    // [1]: Number of spell slots traded away for a spell slot 1 level higher\r\n    // [2]: Number of spell slots traded away for a spell slot 2 levels higher\r\n    public spellBlending: number[] = [0,0,0]\r\n    //Infinite Possibilities is for Wizards and tracks whether one of the spell slots of this choice has been traded away for an Infinite Possibilities slot.\r\n    public infinitePossibilities: boolean = false;\r\n    //Adapted Cantrip tracks whether one of the spell slots of this choice has been traded away for an Adapted Cantrip slot.\r\n    public adaptedCantrip: boolean = false;\r\n    //Adaptive Adept tracks whether one of the spell slots of this choice has been traded away for an Adaptive Adept slot.\r\n    public adaptiveAdept: boolean = false;\r\n    //Crossblooded Evolution tracks whether one of the spell slots of this choice can be filled with a spell from another tradition.\r\n    public crossbloodedEvolution: boolean = false;\r\n    //If target is set to \"Others\", you can only choose spells with target != \"self\".\r\n    //If target is set to \"Caster\", you can only choose spells with target \"self\".\r\n    //If target is set to \"Allies\", you can only choose spells with target \"ally\".\r\n    //If target is set to \"Enemies\", you can only choose spells with no target property (so it's likely not beneficial).\r\n    public target: string = \"\";\r\n}\r\n","import core from './core.json';\r\nimport custom_eselfreunde from './custom_eselfreunde.json';\r\nexport {\r\n    core,\r\n    custom_eselfreunde\r\n};","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { SkillsService } from '../skills.service';\r\nimport { FeatsService } from '../feats.service';\r\nimport { Character } from '../Character';\r\nimport { SkillChoice } from '../SkillChoice';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Speed } from '../Speed';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-skills',\r\n    templateUrl: './skills.component.html',\r\n    styleUrls: ['./skills.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SkillsComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public skillsService: SkillsService,\r\n        public featsService: FeatsService,\r\n        public effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.skillsMinimized = !this.characterService.get_Character().settings.skillsMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.skillsMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SkillChoice }) {\r\n        this.toggle_List(message.name);\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        let creature = this.get_Creature();\r\n        return this.characterService.get_Skills(creature, name, type)\r\n            .filter(skill =>\r\n                !skill.name.includes(\"Lore\") ||\r\n                skill.level(creature as Character, this.characterService, creature.level)\r\n            ).sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.characterService.get_Character().get_FeatsTaken(1, this.characterService.get_Character().level, name).length;\r\n    }\r\n\r\n    get_Senses() {\r\n        return this.characterService.get_Senses(this.get_Creature());\r\n    }\r\n\r\n    get_Speeds() {\r\n        let speeds: Speed[] = this.characterService.get_Speeds(this.get_Creature());\r\n        if ([\"Character\", \"Companion\"].includes(this.get_Creature().type)) {\r\n            (this.get_Creature() as Character).class?.ancestry?.speeds?.forEach(speed => {\r\n                speeds.push(new Speed(speed.name));\r\n            });\r\n        }\r\n        //We don't process the values yet - for now we just collect all Speeds that are mentioned in effects.\r\n        // Since we pick up every effect that includes \"Speed\", but we don't want \"Ignore Circumstance Penalties To Speed\" to show up, we filter out \"Ignore\".\r\n        let speedEffects = this.effectsService.get_Effects(this.creature).all.filter(effect => effect.apply && (effect.target.includes(\"Speed\") && !effect.target.includes(\"Ignore\")));\r\n        speedEffects.forEach(effect => {\r\n            if (!speeds.some(speed => speed.name == effect.target)) {\r\n                speeds.push(new Speed(effect.target))\r\n            }\r\n        });\r\n        //Remove any duplicates for display\r\n        let uniqueSpeeds: Speed[] = [];\r\n        speeds.forEach(speed => {\r\n            if (!uniqueSpeeds.find(uniqueSpeed => uniqueSpeed.name == speed.name)) {\r\n                uniqueSpeeds.push(speed);\r\n            }\r\n        })\r\n        return uniqueSpeeds.filter(speed => speed.value(this.get_Creature(), this.characterService, this.effectsService)[0] != 0);\r\n    }\r\n\r\n    get_SkillChoices() {\r\n        if (this.creature == \"Character\") {\r\n            let character = (this.get_Creature() as Character);\r\n            let choices: SkillChoice[] = [];\r\n            character.class.levels.filter(level => level.number <= character.level).forEach(level => {\r\n                choices.push(...level.skillChoices.filter(choice => choice.showOnSheet))\r\n            });\r\n            return choices;\r\n        }\r\n    }\r\n\r\n    get_SenseDesc(sense: string) {\r\n        switch (sense) {\r\n            case \"Darkvision\":\r\n                return \"You can see in darkness and dim light just as well as you can see in bright light, though your vision in darkness is in black and white.\"\r\n            case \"Greater Darkvision\":\r\n                return \"You can see in darkness and dim light just as well as you can see in bright light, though your vision in darkness is in black and white. Some forms of magical darkness, such as a 4th-level darkness spell, block normal darkvision. A creature with greater darkvision, however, can see through even these forms of magical darkness.\"\r\n            case \"Low-Light Vision\":\r\n                return \"You can see in dim light as though it were bright light, and you ignore the concealed condition due to dim light.\"\r\n            default:\r\n                if (sense.includes(\"Scent\")) {\r\n                    return \"You can use your sense of smell to determine the location of a creature, but it remains hidden.\"\r\n                }\r\n                if (sense.includes(\"Tremorsense\")) {\r\n                    return \"You can feel the vibrations through a solid surface caused by movement.\"\r\n                }\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.skillsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"skills\", \"alls\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"skills\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-skills-height\" class=\"attributeBox\">\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <header class=\"sectionHeader box-header\">Perception</header>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Perception'); trackBy:trackByIndex;\">\r\n            <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n        </ng-container>\r\n        <header class=\"subsectionHeader\">Senses</header>\r\n        <div class=\"list-item lower\" [ngbPopover]=\"get_SenseDesc(sense)\"\r\n            *ngFor=\"let sense of get_Senses(); trackBy:trackByIndex;\">\r\n            {{sense}}\r\n        </div>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Senses'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true></app-tags>\r\n        <ng-container *ngIf=\"creature=='Familiar'\">\r\n            <header class=\"sectionHeader box-header\">Attack Rolls</header>\r\n            <ng-container *ngFor=\"let skill of get_Skills('', 'Familiar Proficiency'); trackBy:trackByIndex;\">\r\n                <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n            </ng-container>\r\n        </ng-container>\r\n        <header class=\"sectionHeader box-header\">Movement</header>\r\n        <ng-container *ngFor=\"let speed of get_Speeds(); trackBy:trackByIndex;\">\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <span>\r\n                        <strong>{{(speed.name==\"Speed\") ? \"All Speeds\" : speed.name}}</strong>\r\n                    </span>\r\n                    <span>\r\n                        <div class=\"value\"\r\n                            [ngbPopover]=\"speed.value(get_Creature(), characterService, effectsService)[1]\" [ngClass]=\"{'penalty':speed.penalties(get_Creature(), effectsService, speed.name, true),\r\n                        'bonus':speed.bonuses(get_Creature(), effectsService, speed.name, true),\r\n                        'absolute':speed.absolutes(get_Creature(), effectsService, speed.name, true).length}\">\r\n                            {{speed.value(get_Creature(), characterService, effectsService)[0]}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=speed.name [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true\r\n                    [specialEffects]=\"speed.absolutes(get_Creature(), effectsService, speed.name, true).concat(speed.relatives(get_Creature(), effectsService, speed.name, true))\">\r\n                </app-tags>\r\n            </div>\r\n        </ng-container>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Movement'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <header class=\"sectionHeader box-header\">Skills</header>\r\n        <!--Skill Increases-->\r\n        <ng-container *ngFor=\"let choice of get_SkillChoices(); trackBy:trackByIndex;\">\r\n            <app-skillchoice (showSkillChoiceMessage)=\"receive_ChoiceMessage($event)\" [showTitle]=\"true\"\r\n                [showContent]=\"true\" [choice]=\"choice\" [showChoice]=\"get_ShowList()\">\r\n            </app-skillchoice>\r\n        </ng-container>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Skills'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Skill Checks'\" [showTraits]=true [showFeats]=true\r\n            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Skill'); trackBy:trackByIndex;\">\r\n            <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { ActivityGain } from '../ActivityGain';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { FeatChoice } from '../FeatChoice';\r\nimport { ItemActivity } from '../ItemActivity';\r\n\r\n@Component({\r\n    selector: 'app-activities',\r\n    templateUrl: './activities.component.html',\r\n    styleUrls: ['./activities.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActivitiesComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private id: number = 0;\r\n    private showAction: number = 0;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private activitiesService: ActivitiesService\r\n    ) { }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.activitiesMinimized = !this.characterService.get_Character().settings.activitiesMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.activitiesMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n    \r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_Action(id: number) {\r\n        if (this.showAction == id) {\r\n            this.showAction = 0;\r\n        } else {\r\n            this.showAction = id;\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    get_ShowAction() {\r\n        return this.showAction;\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n            this.showAction = 0;\r\n        }\r\n    }\r\n\r\n    receive_ChoiceNameMessage(name: string) {\r\n        this.toggle_List(name);\r\n    }\r\n\r\n    receive_FeatMessage(name: string) {\r\n        this.toggle_Item(name);\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.activitiesService.still_loading() || this.characterService.still_loading();\r\n    }\r\n    \r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Character|AnimalCompanion;\r\n    }\r\n    \r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_ClassDCs() {\r\n        return this.characterService.get_Skills(this.get_Creature(), \"\", \"Class DC\").filter(skill => skill.level(this.get_Creature() as Character|AnimalCompanion, this.characterService) > 0);\r\n    }\r\n\r\n    get_OwnedActivities() {\r\n        this.id = 0;\r\n        let activities: (ActivityGain|ItemActivity)[] = [];\r\n        let unique: string[] = [];\r\n        this.characterService.get_OwnedActivities(this.get_Creature()).forEach(activity => {\r\n            if (activity.constructor == ItemActivity) {\r\n                activity.get_Cooldown(this.get_Creature(), this.characterService)\r\n            } else {\r\n                this.get_Activities(activity.name).forEach(actualActivity => {actualActivity.get_Cooldown(this.get_Creature(), this.characterService)})\r\n            }\r\n            if (!unique.includes(activity.name)) {\r\n                unique.push(activity.name);\r\n                activities.push(activity);\r\n            }\r\n        })\r\n        return activities;\r\n    }\r\n\r\n    get_FuseStanceName() {\r\n        let fuseStance = this.characterService.get_Character().customFeats.filter(feat => feat.name == \"Fuse Stance\");\r\n        if (fuseStance.length && fuseStance[0].data && fuseStance[0].data[\"name\"]) {\r\n            return fuseStance[0].data[\"name\"];\r\n        } else {\r\n            return \"Fused Stance\";\r\n        }\r\n    }\r\n\r\n    get_TemporaryFeatChoices() {\r\n        let choices: FeatChoice[] = [];\r\n        if (this.creature == \"Character\") {\r\n            (this.get_Creature() as Character).class.levels.filter(level => level.number <= this.get_Creature().level).forEach(level => {\r\n                choices.push(...level.featChoices.filter(choice => choice.showOnSheet))\r\n            })\r\n        }\r\n        return choices;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if (target == \"activities\" || target == \"all\" || target.toLowerCase() == this.creature.toLowerCase()) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"activities\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-activities-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Actions and Activities</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Activities'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <ng-container *ngFor=\"let skill of get_ClassDCs(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"subsectionHeader fullsize-only\" *ngIf=\"index == 0\">Class DCs</header>\r\n            <app-skill [skill]=skill [isDC]=true></app-skill>\r\n        </ng-container>\r\n        <header class=\"subsectionHeader\">Actions and Activities</header>\r\n        <ng-container *ngFor=\"let gain of get_OwnedActivities(); trackBy:trackByIndex;\">\r\n            <ng-container\r\n                *ngFor=\"let activity of (gain.can_Activate ? [gain] : get_Activities(gain.name)); trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let maxCharges of [activity.maxCharges(get_Creature(), characterService)]\">\r\n                    <div class=\"list-item\" *ngFor=\"let activityID of [get_ID()]; trackBy:trackByIndex;\">\r\n                        <button class=\"newrow left-aligned sublist-toggle\"\r\n                            [ngClass]=\"{'fancy-button':gain.active, 'inactive-button':((gain.activeCooldown ? (maxCharges == gain.chargesUsed) : false) && !gain.active)}\"\r\n                            (click)=\"toggle_Action(activityID)\">\r\n                            <span *ngIf=\"activity.name == 'Fused Stance'\">{{get_FuseStanceName()}}</span>\r\n                            <span *ngIf=\"activity.name != 'Fused Stance'\">{{activity.name}}</span>\r\n                            <app-actionIcons [actionString]=\"activity.actions\"></app-actionIcons>\r\n                            {{(activity.activationType) ? activity.activationType : \"\"}}\r\n                        </button>\r\n                        <div class=\"list-item sublist lower\"\r\n                            [ngClass]=\"{'fancy-list':gain.active, 'inactive-list':((gain.activeCooldown ? (maxCharges == gain.chargesUsed) : false) && !gain.active)}\"\r\n                            *ngIf=\"get_ShowAction()==activityID\">\r\n                            <app-activity [creature]=\"creature\" [activity]=activity [gain]=gain [allowActivate]=\"true\">\r\n                            </app-activity>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let choice of get_TemporaryFeatChoices(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader box-header\" *ngIf=\"index == 0\">Temporary Feats</header>\r\n            <app-featchoice (showChoiceNameMessage)=\"receive_ChoiceNameMessage($event)\"\r\n                (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"choice\" [levelNumber]=\"get_Creature().level\"\r\n                [showFeat]=\"get_ShowItem()\" [showChoice]=\"get_ShowList()\">\r\n            </app-featchoice>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Effect } from './Effect';\r\nimport { CharacterService } from './character.service';\r\nimport { TraitsService } from './traits.service';\r\nimport { EffectCollection } from './EffectCollection';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Character } from './Character';\r\nimport { Speed } from './Speed';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { AbilitiesService } from './abilities.service';\r\nimport { Creature } from './Creature';\r\nimport { Feat } from './Feat';\r\nimport { ItemProperty } from './ItemProperty';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { Activity } from './Activity';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Equipment } from './Equipment';\r\nimport { Oil } from './Oil';\r\nimport { WornItem } from './WornItem';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport * as json_effectproperties from '../assets/json/effectproperties';\r\nimport { forEachChild } from 'typescript';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EffectsService {\r\n\r\n    private effects: EffectCollection[] = [new EffectCollection(), new EffectCollection(), new EffectCollection()];\r\n    //The bonus types are hardcoded. If Paizo ever adds a new bonus type, this is where we need to change them.\r\n    private bonusTypes: string[] = [\"item\", \"circumstance\", \"status\", \"proficiency\", \"untyped\"];\r\n    private effectProperties: ItemProperty[] = [];\r\n\r\n    constructor(\r\n        private traitsService: TraitsService,\r\n        private abilitiesService: AbilitiesService,\r\n        private activitiesService: ActivitiesService\r\n    ) { }\r\n\r\n    get_Effects(creature: string) {\r\n        let index = this.get_CalculatedIndex(creature);\r\n        return this.effects[index];\r\n    }\r\n\r\n    get_CalculatedIndex(creature: string) {\r\n        switch (creature) {\r\n            case \"Character\":\r\n                return 0;\r\n            case \"Companion\":\r\n                return 1;\r\n            case \"Familiar\":\r\n                return 2;\r\n        }\r\n    }\r\n\r\n    get_Creature(creature: string, characterService: CharacterService) {\r\n        return characterService.get_Creature(creature);\r\n    }\r\n\r\n    get_EffectsOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].all.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_RelativesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].relatives.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_RelativesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].relatives.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , false, lowerIsBetter);\r\n    }\r\n\r\n    get_AbsolutesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].absolutes.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_AbsolutesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].absolutes.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , true, lowerIsBetter);\r\n    }\r\n\r\n    get_BonusesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].bonuses.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_BonusesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].bonuses.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , false, lowerIsBetter);\r\n    }\r\n\r\n    get_PenaltiesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].penalties.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_PenaltiesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].penalties.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , false, lowerIsBetter);\r\n    }\r\n\r\n    show_BonusesOnThis(creature: Creature, ObjectName: string) {\r\n        //This function is usually only used to determine if a value should be highlighted as a bonus. Because we don't want to highlight values if their bonus comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].bonuses.some(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply && effect.show);\r\n    }\r\n\r\n    show_BonusesOnThese(creature: Creature, ObjectNames: string[]) {\r\n        //This function is usually only used to determine if a value should be highlighted as a bonus. Because we don't want to highlight values if their bonus comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].bonuses.some(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply && effect.show);\r\n    }\r\n\r\n    show_PenaltiesOnThis(creature: Creature, ObjectName: string) {\r\n        //This function is usually only used to determine if a value should be highlighted as a penalty. Because we don't want to highlight values if their penalty comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].penalties.some(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply && effect.show);\r\n    }\r\n\r\n    show_PenaltiesOnThese(creature: Creature, ObjectNames: string[]) {\r\n        //This function is usually only used to determine if a value should be highlighted as a penalty. Because we don't want to highlight values if their penalty comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].penalties.some(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply && effect.show);\r\n    }\r\n\r\n    get_TypeFilteredEffects(effects: Effect[], absolutes: boolean = false, lowerIsBetter: boolean = false) {\r\n        //This function takes a batch of effects and reduces them to the highest bonus and the lowest (i.e. worst) penalty per bonus type, since only untyped bonuses stack.\r\n        //Explicitly cumulative effects are added together before comparing.\r\n        //It assumes that these effects come pre-filtered to apply to one specific calculation, i.e. passing this.effects[0] would not be beneficial.\r\n        //It also disables certain relative effect if absolute effects are active.\r\n        let returnedEffects: Effect[] = [];\r\n        let filteredEffects: Effect[] = effects;\r\n        //If any effects with a setValue exist for this target, all item, proficiency and untyped effects for the same target are ignored.\r\n        if (effects.find(effect => effect.target == effect.setValue)) {\r\n            filteredEffects = effects.filter(effect => effect.setValue || ![\"item\", \"proficiency\", \"untyped\"].includes(effect.type))\r\n        };\r\n        this.bonusTypes.forEach(type => {\r\n            if (type == \"untyped\" && !absolutes) {\r\n                //Keep all untyped relative effects.\r\n                returnedEffects.push(...filteredEffects.filter(effect => effect.type == type));\r\n            } else {\r\n                //For all bonus types except untyped, check all and get the highest bonus and the lowest penalty.\r\n                let bonusEffects: Effect[] = filteredEffects.filter(effect => effect.type == type && effect.penalty == false);\r\n                if (bonusEffects.length) {\r\n                    //If we have any bonuses for this type, figure out which one is the largest and only get that one.\r\n                    // Multiple effects might have the same value, but it doesn't matter so long as one of them applies.\r\n                    //We have to make sure there are applicable effects, because reduce doesn't like empty arrays.\r\n                    if (absolutes && bonusEffects.some(effect => effect.setValue)) {\r\n                        if (lowerIsBetter) {\r\n                            returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.setValue) < parseInt(current.setValue) ? prev : current)));\r\n                        } else {\r\n                            returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.setValue) > parseInt(current.setValue) ? prev : current)));\r\n                        }\r\n                    } else if (bonusEffects.some(effect => effect.value)) {\r\n                        //If any effects are cumulative, and any effect exists whose source appears in the cumulative list, we build groups.\r\n                        // Every effect is grouped with all effects that includes its source in their cumulative list.\r\n                        // Then we add all those groups up and keep the effects from the one with the highest sum.\r\n                        if (bonusEffects.some(effect => effect.cumulative.length) && bonusEffects.some(effect => bonusEffects.some(otherEffect => otherEffect.cumulative.includes(effect.source)))) {\r\n                            let effectGroups: Effect[][] = [];\r\n                            bonusEffects.forEach(effect => {\r\n                                effectGroups.push([effect].concat(bonusEffects.filter(otherEffect => otherEffect !== effect && otherEffect.cumulative.includes(effect.source))))\r\n                            })\r\n                            function groupSum(effectGroup: Effect[]) {\r\n                                return effectGroup.reduce((prev, current) => prev + parseInt(current.value), 0)\r\n                            }\r\n                            if (effectGroups.length) {\r\n                                if (lowerIsBetter) {\r\n                                    returnedEffects.push(...effectGroups.reduce((prev, current) => (groupSum(prev) < groupSum(current) ? prev : current)));\r\n                                } else {\r\n                                    returnedEffects.push(...effectGroups.reduce((prev, current) => (groupSum(prev) > groupSum(current) ? prev : current)));\r\n                                }\r\n\r\n                            }\r\n                        } else {\r\n                            if (lowerIsBetter) {\r\n                                returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.value) < parseInt(current.value) ? prev : current)));\r\n                            } else {\r\n                                returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.value) > parseInt(current.value) ? prev : current)));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                let penaltyEffects: Effect[] = filteredEffects.filter(effect => effect.type == type && effect.penalty == true);\r\n                if (penaltyEffects.length > 0) {\r\n                    //If we have any PENALTIES for this type, we proceed as with bonuses,\r\n                    // only we pick the lowest number (that is, the worst penalty).\r\n                    if (absolutes && penaltyEffects.some(effect => effect.setValue)) {\r\n                        returnedEffects.push(penaltyEffects.reduce((prev, current) => (parseInt(prev.setValue) < parseInt(current.setValue) ? prev : current)));\r\n                    } else if (penaltyEffects.some(effect => effect.value)) {\r\n                        if (penaltyEffects.some(effect => effect.cumulative.length) && penaltyEffects.some(effect => penaltyEffects.some(otherEffect => otherEffect.cumulative.includes(effect.source)))) {\r\n                            let effectGroups: Effect[][] = [];\r\n                            penaltyEffects.forEach(effect => {\r\n                                effectGroups.push([effect].concat(penaltyEffects.filter(otherEffect => otherEffect !== effect && otherEffect.cumulative.includes(effect.source))))\r\n                            })\r\n                            function groupSum(effectGroup: Effect[]) {\r\n                                return effectGroup.reduce((prev, current) => prev + parseInt(current.value), 0)\r\n                            }\r\n                            if (effectGroups.length) {\r\n                                returnedEffects.push(...effectGroups.reduce((prev, current) => (groupSum(prev) < groupSum(current) ? prev : current)));\r\n                            }\r\n                        } else {\r\n                            returnedEffects.push(penaltyEffects.reduce((prev, current) => (parseInt(prev.value) < parseInt(current.value) ? prev : current)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return returnedEffects;\r\n    }\r\n\r\n    get_EffectProperties() {\r\n        return this.effectProperties;\r\n    }\r\n\r\n    get_TestSpeed(name: string) {\r\n        return (new Speed(name));\r\n    }\r\n\r\n    get_SimpleEffects(creature: Creature, characterService: CharacterService, object: any, name: string = \"\", parentConditionGain: ConditionGain = null) {\r\n        //If an object has a simple instruction in effects, such as \"Athletics\", \"+2\", turn it into an effect,\r\n        // then mark the effect as a penalty if the change is negative (except for Bulk).\r\n        //The effect can have a formula as well, for example \"Max HP\", \"Character.level + 2\", which is evaluated with the variables and functions listed here.\r\n        //Try to get the type, too - if no type is given, set it to untyped.\r\n        //Return an array of Effect objects\r\n        let objectEffects: Effect[] = [];\r\n        //Get the object name unless a name is enforced.\r\n        let source = name ? name : ((object.get_Name) ? object.get_Name() : object.name);\r\n        //Define some values that may be relevant for effect values\r\n        let effectsService = this;\r\n        effectsService = effectsService;\r\n        characterService = characterService;\r\n        let abilitiesService = this.abilitiesService;\r\n        let Creature: Creature = creature;\r\n        let Character: Character = characterService.get_Character();\r\n        let Companion: AnimalCompanion = characterService.get_Companion();\r\n        let Familiar: Familiar = characterService.get_Familiar();\r\n        let Level: number = Character.level;\r\n        //Some values specific to conditions for effect values\r\n        let Duration: number = object.duration;\r\n        let Value: number = object.value;\r\n        let Heightened: number = object.heightened;\r\n        let Choice: string = object.choice;\r\n        let SpellCastingAbility: string = object.spellCastingAbility;\r\n        let SpellSource: string = object.spellSource;\r\n        //Hint effects of conditions pass their conditionGain for these values.\r\n        //Conditions pass their own gain as parentConditionGain for effects.\r\n        //Conditions that are caused by conditions also pass the original conditionGain for the evaluation of their activationPrerequisite.\r\n        if (parentConditionGain) {\r\n            if (!Duration) {\r\n                Duration = parentConditionGain.duration;\r\n            }\r\n            if (!Value) {\r\n                Value = parentConditionGain.value;\r\n            }\r\n            if (!Heightened) {\r\n                Heightened = parentConditionGain.heightened;\r\n            }\r\n            if (!Choice) {\r\n                Choice = parentConditionGain.choice;\r\n            }\r\n            if (!SpellCastingAbility) {\r\n                SpellCastingAbility = parentConditionGain.spellCastingAbility;\r\n            }\r\n        }\r\n        //Some Functions for effect values\r\n        function Temporary_HP(source: string = \"\", sourceId: string = \"\") {\r\n            if (sourceId) {\r\n                return creature.health.temporaryHP.find(tempHPSet => tempHPSet.sourceId == sourceId).amount;\r\n            } else if (source) {\r\n                return creature.health.temporaryHP.find(tempHPSet => tempHPSet.source == source).amount;\r\n            } else {\r\n                return creature.health.temporaryHP[0].amount;\r\n            }\r\n        }\r\n        function Current_HP() {\r\n            return creature.health.currentHP(creature, characterService, effectsService).result;\r\n        }\r\n        function Max_HP() {\r\n            return creature.health.maxHP(creature, characterService, effectsService).result;\r\n        }\r\n        function Ability(name: string) {\r\n            if (creature.type == \"Familiar\") {\r\n                return 0;\r\n            } else {\r\n                return characterService.get_Abilities(name)[0]?.value((creature as AnimalCompanion | Character), characterService, effectsService).result;\r\n            }\r\n        }\r\n        function Modifier(name: string) {\r\n            if (creature.type == \"Familiar\") {\r\n                return 0;\r\n            } else {\r\n                return characterService.get_Abilities(name)[0]?.mod((creature as AnimalCompanion | Character), characterService, effectsService).result;\r\n            }\r\n        }\r\n        function BaseSize() {\r\n            return (creature as AnimalCompanion | Character | Familiar).get_BaseSize();\r\n        }\r\n        function Size() {\r\n            return (creature as AnimalCompanion | Character | Familiar).get_Size(this);\r\n        }\r\n        function Skill(name: string) {\r\n            return characterService.get_Skills(creature, name)[0]?.baseValue((creature as AnimalCompanion | Character), characterService, abilitiesService, effectsService, Level).result;\r\n        }\r\n        function Skill_Level(name: string) {\r\n            if (creature.type == \"Familiar\") {\r\n                return 0;\r\n            } else {\r\n                return characterService.get_Skills(creature, name)[0]?.level((creature as AnimalCompanion | Character), characterService, Level);\r\n            }\r\n        }\r\n        let get_TestSpeed = this.get_TestSpeed;\r\n        function Speed(name: string) {\r\n            return (get_TestSpeed(name))?.value((creature as AnimalCompanion | Character), characterService, effectsService)[0] || 0;\r\n        }\r\n        function Has_Condition(name: string) {\r\n            return characterService.get_AppliedConditions(creature, name, \"\", true).length\r\n        }\r\n        function Armor() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].armors.find(armor => armor.equipped);\r\n            }\r\n        }\r\n        function Shield() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].shields.find(shield => shield.equipped);\r\n            }\r\n        }\r\n        function Weapons() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].weapons.filter(weapon => weapon.equipped);\r\n            }\r\n        }\r\n        function WornItems() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].wornitems.filter(wornItem => wornItem.can_Invest() ? wornItem.invested : true);\r\n            }\r\n        }\r\n        function Has_Feat(creature: string, name: string) {\r\n            if (creature == \"Familiar\") {\r\n                return characterService.familiarsService.get_FamiliarAbilities(name).some(feat => feat.have(Familiar, characterService, Level, false));\r\n            } else if (creature == \"Character\") {\r\n                return characterService.featsService.get_All(Character.customFeats, name, \"\", true, true).some(feat => feat.have(Character, characterService, Level, false));\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function SpellcastingModifier() {\r\n            if (SpellCastingAbility) {\r\n                return abilitiesService.get_Abilities(SpellCastingAbility)?.[0]?.mod(Character, characterService, effectsService, Character.level).result || 0\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Has_Heritage(name: string) {\r\n            return characterService.get_Character().class?.heritage?.name.toLowerCase() == name.toLowerCase() ||\r\n                characterService.get_Character().class?.additionalHeritages.find(extraHeritage => extraHeritage.name.toLowerCase() == name.toLowerCase())\r\n        }\r\n        //effects come as {affected, value} where value is a string that contains a statement.\r\n        //This statement is eval'd here. The statement can use characterService to check level, skills, abilities etc.\r\n        object.effects.forEach((effect: EffectGain) => {\r\n            let show: boolean = false;\r\n            let type: string = \"untyped\";\r\n            let penalty: boolean = false;\r\n            let value: string = \"0\";\r\n            let setValue: string = \"\";\r\n            let toggle: boolean = effect.toggle;\r\n            if (object === creature) {\r\n                source = effect.source || \"Custom Effect\"\r\n            }\r\n            try {\r\n                value = eval(effect.value).toString();\r\n                if (parseInt(value) > 0) {\r\n                    value = \"+\" + value;\r\n                }\r\n            } catch (error) {\r\n                value = \"0\";\r\n            };\r\n            if (effect.setValue) {\r\n                try {\r\n                    setValue = eval(effect.setValue).toString();\r\n                } catch (error) {\r\n                    setValue = \"\";\r\n                };\r\n            }\r\n            if ((!parseInt(value) && !parseFloat(value)) || parseFloat(value) == Infinity) {\r\n                value = \"0\";\r\n            }\r\n            if (effect.type) {\r\n                type = effect.type;\r\n            }\r\n            if (setValue) {\r\n                penalty = false;\r\n                value = \"0\";\r\n            } else if (parseInt(value) < 0) {\r\n                if (effect.affected != \"Bulk\") {\r\n                    penalty = true;\r\n                } else {\r\n                    penalty = false;\r\n                }\r\n            } else {\r\n                if (effect.affected != \"Bulk\") {\r\n                    penalty = false;\r\n                } else {\r\n                    penalty = true;\r\n                }\r\n            }\r\n            if (toggle) {\r\n                setValue = \"\";\r\n                value = \"0\";\r\n            }\r\n            //Hide all relative effects that come from feats, so we don't see green effects permanently after taking a feat.\r\n            show = effect.show;\r\n            if (effect.show == undefined && object.constructor == Feat) {\r\n                show = false;\r\n            }\r\n            if (source == \"Custom Effect\") {\r\n                show = true;\r\n            }\r\n            //Effects can affect another creature. In that case, remove the notation and change the target.\r\n            let target: string = creature.id;\r\n            let affected: string = effect.affected;\r\n            if (effect.affected.includes(\"Character:\")) {\r\n                target = Character?.id || \"\";\r\n                affected = effect.affected.replace(\"Character:\", \"\");\r\n            }\r\n            if (effect.affected.includes(\"Companion:\")) {\r\n                target = Companion?.id || \"\";\r\n                affected = effect.affected.replace(\"Companion:\", \"\");\r\n            }\r\n            if (effect.affected.includes(\"Familiar:\")) {\r\n                target = Familiar?.id || \"\";\r\n                affected = effect.affected.replace(\"Familiar:\", \"\");\r\n            }\r\n            //Effects that have neither a value nor a toggle get ignored.\r\n            if (toggle || setValue || parseInt(value) != 0) {\r\n                objectEffects.push(new Effect(target, type, affected, value, setValue, toggle, source, penalty, undefined, show, effect.duration, effect.maxDuration, effect.cumulative));\r\n            }\r\n        });\r\n        return objectEffects;\r\n    }\r\n\r\n    generate_Effects(creatureType: string, characterService: CharacterService, secondRun: boolean = false) {\r\n        //Never call this function.\r\n        //It gets called by this.initialize whenever the character has changed.\r\n        //Every other function can skip the whole process and just do get_Effects().\r\n\r\n        let creature: Creature = this.get_Creature(creatureType, characterService);\r\n        let character: Character = (creature.type == \"Character\") ? creature as Character : null;\r\n        let companion: AnimalCompanion = (creature.type == \"Companion\") ? creature as AnimalCompanion : null;\r\n        let familiar: Familiar = (creature.type == \"Familiar\") ? creature as Familiar : null;\r\n        let creatureIndex: number = this.get_CalculatedIndex(creatureType)\r\n\r\n        //Fetch any effects from the other creatures that apply to this.\r\n        let foreignEffects: Effect[] = [];\r\n        [0, 1, 2].filter(otherCreatureIndex => otherCreatureIndex != creatureIndex).forEach(otherCreatureIndex => {\r\n            foreignEffects.push(...this.effects[otherCreatureIndex].all.filter(effect => effect.creature == creature.id));\r\n        });\r\n\r\n        //Create simple effects from equipped items, feats, conditions etc.\r\n        //Creature Effects\r\n        let simpleEffects: Effect[] = this.get_SimpleEffects(creature, characterService, creature);\r\n\r\n        //Character and Companion Items\r\n        if (!familiar) {\r\n            characterService.get_Inventories(creature)[0].allEquipment().filter(item => item.invested && !item.broken && item.effects?.length && item.type != \"armorrunes\").forEach(item => {\r\n                simpleEffects = simpleEffects.concat(this.get_SimpleEffects(creature, characterService, item));\r\n            });\r\n            characterService.get_Inventories(creature)[0].allEquipment().filter(item => item.equipped && !item.broken && item.propertyRunes?.length).forEach(item => {\r\n                item.propertyRunes.filter(rune => rune[\"effects\"]?.length).forEach(rune => {\r\n                    simpleEffects = simpleEffects.concat(this.get_SimpleEffects(creature, characterService, rune));\r\n                })\r\n            });\r\n        }\r\n        \r\n        //Write active hint effects into a separate list first. All effects from feats should be shown, after which they are moved into simpleEffects.\r\n        let hintEffects: Effect[] = [];\r\n        \r\n        //Traits that are on currently equipped items\r\n        characterService.traitsService.get_Traits().filter(trait => trait.hints.length).forEach(trait => {\r\n            trait.hints.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length && trait.haveOn(creature).length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + trait.name));\r\n            })\r\n        })\r\n        \r\n        //Write passive feat effects into a separate list first. All effects from feats should be hidden, after which they are moved into simpleEffects.\r\n        let featEffects: Effect[] = [];\r\n        \r\n        //Character Feats and active hints\r\n        if (character) {\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => (feat.effects?.length || feat.hints?.length) && feat.have(character, characterService, character.level))\r\n                .forEach(feat => {\r\n                    if (feat.effects?.length) {\r\n                        featEffects = featEffects.concat(this.get_SimpleEffects(character, characterService, feat));\r\n                    }\r\n                    feat.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                        hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + feat.name));\r\n                    })\r\n                });\r\n        }\r\n        //Companion Specializations and active hints\r\n        if (companion) {\r\n            companion.class?.ancestry?.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + companion.class.ancestry.name));\r\n            })\r\n            companion.class?.specializations?.filter(spec => spec.effects?.length || spec.hints?.length).forEach(spec => {\r\n                if (spec.effects?.length) {\r\n                    featEffects = featEffects.concat(this.get_SimpleEffects(companion, characterService, spec));\r\n                }\r\n                spec.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                    hintEffects = hintEffects.concat(this.get_SimpleEffects(companion, characterService, hint, \"conditional, \" + spec.name));\r\n                })\r\n            })\r\n        }\r\n        //Familiar Feats and active hints\r\n        if (familiar) {\r\n            characterService.familiarsService.get_FamiliarAbilities().filter(ability => ability.have(familiar, characterService))\r\n                .filter(ability => ability.effects?.length || ability.hints?.length)\r\n                .forEach(ability => {\r\n                    if (ability.effects?.length) {\r\n                        featEffects = featEffects.concat(this.get_SimpleEffects(familiar, characterService, ability));\r\n                    }\r\n                    ability.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                        hintEffects = hintEffects.concat(this.get_SimpleEffects(familiar, characterService, hint, \"conditional, \" + ability.name));\r\n                    })\r\n                });\r\n        }\r\n        //Hide all feat effects and push them into simpleEffects.\r\n        featEffects.forEach(effect => {\r\n            effect.show = false;\r\n        })\r\n        simpleEffects.push(...featEffects);\r\n\r\n        //Conditions\r\n        let appliedConditions = characterService.get_AppliedConditions(creature).filter(condition => condition.apply);\r\n        appliedConditions.forEach(gain => {\r\n            let originalCondition = characterService.get_Conditions(gain.name)[0];\r\n            if (originalCondition?.effects?.length) {\r\n                //Create an object that contains the condition gain data and the condition effects.\r\n                let effectsObject: any = JSON.parse(JSON.stringify(gain));\r\n                effectsObject.effects = JSON.parse(JSON.stringify(originalCondition.effects));\r\n                simpleEffects = simpleEffects.concat(this.get_SimpleEffects(creature, characterService, effectsObject, \"\", gain));\r\n            }\r\n            originalCondition?.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(creature, characterService, hint, \"conditional, \" + originalCondition.name, gain));\r\n            })\r\n        });\r\n        //Active activities and active hints\r\n        characterService.get_OwnedActivities(creature, creature.level, true).filter(activity => activity.active).forEach(activity => {\r\n            let originalActivity: Activity;\r\n            if (activity.constructor == ItemActivity) {\r\n                originalActivity = activity as ItemActivity;\r\n            } else {\r\n                originalActivity = this.activitiesService.get_Activities(activity.name)[0];\r\n            }\r\n            if (originalActivity?.effects?.length) {\r\n                simpleEffects = simpleEffects.concat(this.get_SimpleEffects(character, characterService, originalActivity));\r\n            }\r\n            originalActivity?.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + originalActivity.name));\r\n            })\r\n        })\r\n        //Active hints of equipped items\r\n        if (!familiar) {\r\n            function add_HintEffects(item: Equipment | Oil | WornItem | ArmorRune | WeaponRune, effectsService: EffectsService) {\r\n                item.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                    hintEffects = hintEffects.concat(effectsService.get_SimpleEffects(character, characterService, hint, \"conditional, \" + (item.get_Name ? item.get_Name() : item.name)));\r\n                })\r\n            }\r\n            creature.inventories.forEach(inventory => {\r\n                inventory.allEquipment().filter(item => (item.equippable ? item.equipped : true) && item.amount && !item.broken && (item.can_Invest() ? item.invested : true)).forEach(item => {\r\n                    add_HintEffects(item, this);\r\n                    item.oilsApplied.forEach(oil => {\r\n                        add_HintEffects(oil, this);\r\n                    });\r\n                    if ((item as WornItem).aeonStones) {\r\n                        (item as WornItem).aeonStones.forEach(stone => {\r\n                            add_HintEffects(stone, this);\r\n                        });\r\n                    }\r\n                    if (item.moddable == \"armor\" && (item as Equipment).propertyRunes) {\r\n                        (item as Equipment).propertyRunes.forEach(rune => {\r\n                            add_HintEffects(rune as ArmorRune, this);\r\n                        });\r\n                    }\r\n                    if (item.moddable == \"weapon\" && (item as Equipment).propertyRunes) {\r\n                        (item as Equipment).propertyRunes.forEach(rune => {\r\n                            add_HintEffects(rune as WeaponRune, this);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //Show all hint effects and push them into simpleEffects.\r\n        hintEffects.forEach(effect => {\r\n            effect.show = true;\r\n        })\r\n        simpleEffects.push(...hintEffects);\r\n\r\n\r\n        let itemEffects: Effect[] = [];\r\n\r\n        //Get Item bonuses for Character or Companion\r\n        if (!familiar) {\r\n            let items = creature.inventories[0];\r\n\r\n            //Initialize shoddy values and shield ally for all shields.\r\n            creature.inventories.forEach(inv => {\r\n                inv.shields.forEach(shield => {\r\n                    let oldShoddy = shield.$shoddy;\r\n                    shield.get_Shoddy((creature as AnimalCompanion | Character), characterService);\r\n                    if (oldShoddy != shield.$shoddy) {\r\n                        characterService.set_ToChange(creature.type, \"inventory\");\r\n                    }\r\n                    let oldShieldAlly = shield.$shieldAlly;\r\n                    shield.get_ShieldAlly((creature as AnimalCompanion | Character), characterService);\r\n                    if (oldShieldAlly != shield.$shieldAlly) {\r\n                        characterService.set_ToChange(creature.type, \"inventory\");\r\n                    }\r\n                })\r\n            })\r\n            //Get shield bonuses from raised shields\r\n            //If a shield is raised, add its circumstance bonus to AC with a + in front. If you are taking cover with the shield raised, you gain the \"Greater Cover\" condition; This doesn't need to be handled here.\r\n            items.shields.filter(shield => shield.equipped && shield.raised && !shield.broken).forEach(shield => {\r\n                let shieldBonus = shield.get_ACBonus();\r\n                if (shieldBonus) {\r\n                    itemEffects.push(new Effect(creature.id, 'circumstance', \"AC\", \"+\" + shieldBonus, \"\", false, shield.get_Name(), false));\r\n                }\r\n                //Reflexive Shield\r\n                if (character.get_FeatsTaken(1, character.level, \"Reflexive Shield\").length) {\r\n                    itemEffects.push(new Effect(creature.id, 'circumstance', \"Reflex\", \"+\" + shieldBonus, \"\", false, \"Reflexive Shield\", false));\r\n                }\r\n            });\r\n            //Initialize armored skirt and shoddy values for all armor.\r\n            creature.inventories.forEach(inv => {\r\n                inv.armors.forEach(armor => {\r\n                    let oldArmoredSkirt = armor.$affectedByArmoredSkirt;\r\n                    let oldShoddy = armor.$shoddy;\r\n                    armor.get_ArmoredSkirt((creature as AnimalCompanion | Character), characterService);\r\n                    armor.get_Shoddy((creature as AnimalCompanion | Character), characterService);\r\n                    if (oldArmoredSkirt != armor.$affectedByArmoredSkirt || oldShoddy != armor.$shoddy) {\r\n                        characterService.set_ToChange(creature.type, \"inventory\");\r\n                    }\r\n                })\r\n            })\r\n            items.armors.filter(armor => armor.equipped).forEach(armor => {\r\n                //For Saving Throws, add any resilient runes on the equipped armor\r\n                if (armor.get_ResilientRune() > 0 && !armor.broken) {\r\n                    let resilient = armor.get_ResilientRune();\r\n                    itemEffects.push(new Effect(creature.id, 'item', \"Saving Throws\", \"+\" + resilient, \"\", false, armor.get_Resilient(resilient), false))                    \r\n                }\r\n                //Add Armor specialization effects if they apply\r\n                armor.get_ArmorSpecialization(creature, characterService).forEach(spec => {\r\n                    itemEffects.push(...this.get_SimpleEffects(creature, characterService, spec))\r\n                })\r\n                //Add broken penalty if the armor is broken\r\n                if (armor.broken) {\r\n                    switch (armor.get_Proficiency()) {\r\n                        case \"Light Armor\":\r\n                            itemEffects.push(new Effect(creature.id, \"untyped\", \"AC\", \"-1\", \"\", false, \"Broken Armor\", true));\r\n                            break;\r\n                        case \"Medium Armor\":\r\n                            itemEffects.push(new Effect(creature.id, \"untyped\", \"AC\", \"-2\", \"\", false, \"Broken Armor\", true));\r\n                            break;\r\n                        case \"Heavy Armor\":\r\n                            itemEffects.push(new Effect(creature.id, \"untyped\", \"AC\", \"-3\", \"\", false, \"Broken Armor\", true));\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n\r\n            //Get skill and speed penalties from armor\r\n            //Skip this if there is an \"Ignore Armor Penalty\" effect.\r\n            if (!simpleEffects.concat(itemEffects).concat(foreignEffects).some(effect => effect.creature == creature.id && effect.target == \"Ignore Armor Penalty\" && effect.toggle)) {\r\n                //If an armor has a skillpenalty or a speedpenalty, check if Strength meets its strength requirement.\r\n                let Strength = characterService.get_Abilities(\"Strength\")[0].value(creature as Character | AnimalCompanion, characterService, this).result;\r\n                items.armors.filter(item => item.equipped && item.get_SkillPenalty()).forEach(item => {\r\n                    //These methods the AC and skill penalty of the armor.\r\n                    item.get_ArmoredSkirt((creature as AnimalCompanion | Character), characterService);\r\n                    item.get_Shoddy((creature as AnimalCompanion | Character), characterService);\r\n                    let name = item.get_Name();\r\n                    if (Strength < item.get_Strength()) {\r\n                        //You are not strong enough to act freely in this armor.\r\n                        //If the item has the Flexible trait, its penalty doesn't apply to Acrobatics and Athletics.\r\n                        //We push this as an apply:false effect to each so you can see that (and why) you were spared from it.\r\n                        //We also add a note to the source for clarity.\r\n                        if (this.traitsService.have_Trait(characterService, item, \"Flexible\")) {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Acrobatics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Flexible)\", true, false));\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Athletics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Flexible)\", true, false));\r\n                        } else {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Acrobatics\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Athletics\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                        }\r\n                        //These two always apply unless you are strong enough.\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Stealth\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Thievery\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                    } else {\r\n                        //If you ARE strong enough, we push some not applying effects so you can feel good about that\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Acrobatics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Athletics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Thievery\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        //UNLESS the item is also Noisy, in which case you do get the stealth penalty because you are dummy thicc and the clap of your ass cheeks keeps alerting the guards.\r\n                        if (this.traitsService.have_Trait(characterService, item, \"Noisy\")) {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Stealth\", item.get_SkillPenalty().toString(), \"\", false, name + \" (Noisy)\", true))\r\n                        } else {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Stealth\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        }\r\n                    }\r\n                });\r\n                //Skip this if there is an \"Ignore Armor Speed Penalty\" effect.\r\n                if (!simpleEffects.find(effect => effect.creature == creature.id && effect.target == \"Ignore Armor Speed Penalty\" && effect.toggle)) {\r\n                    items.armors.filter(item => item.equipped && item.speedpenalty).forEach(item => {\r\n                        let name = item.get_Name();\r\n                        if (Strength < item.get_Strength()) {\r\n                            //You are not strong enough to move unhindered in this armor. You get a speed penalty.\r\n                            itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, name, true));\r\n                        } else {\r\n                            //You are strong enough, but if the armor is particularly heavy, your penalty is only lessened.\r\n                            if (item.speedpenalty < -5) {\r\n                                //In this case we push both the avoided and the actual effect so you can feel at least a little good about yourself.\r\n                                itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", (item.speedpenalty + 5).toString(), \"\", false, name, true));\r\n                                itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                            } else {\r\n                                //If you are strong enough and the armor only gave -5ft penalty, you get a fully avoided effect to gaze at.\r\n                                itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                items.shields.filter(item => item.equipped && item.speedpenalty).forEach(item => {\r\n                    //Shields don't have a strength requirement for speed penalties. In this case, the penalty just alwas applies.\r\n                    itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, item.get_Name(), true));\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        //Push simpleEffects and itemEffects into effects together.\r\n        let allEffects: Effect[] = simpleEffects.concat(itemEffects).concat(foreignEffects);\r\n\r\n        //If you have the Unburdened Iron feat and are taking speed penalties, reduce the first of them by 5.\r\n        if (character?.get_FeatsTaken(0, character.level, \"Unburdened Iron\").length) {\r\n            let done: boolean = false;\r\n            //Try global speed penalties first (this is more beneficial to the character).\r\n            allEffects.filter(effect => effect.target == \"Speed\" && effect.penalty && !effect.toggle).forEach(effect => {\r\n                if (!done) {\r\n                    effect.value = (parseInt(effect.value) + 5).toString();\r\n                    if (effect.value == \"0\" || effect.value == \"\") { effect.apply = false }\r\n                    effect.source = effect.source + \" (Lessened by Unburdened Iron)\";\r\n                    done = true;\r\n                }\r\n            })\r\n            allEffects.filter(effect => effect.target == \"Land Speed\" && effect.penalty && !effect.toggle).forEach(effect => {\r\n                if (!done) {\r\n                    effect.value = (parseInt(effect.value) + 5).toString();\r\n                    if (effect.value == \"0\" || effect.value == \"\") { effect.apply = false }\r\n                    effect.source = effect.source + \" (Lessened by Unburdened Iron)\";\r\n                    done = true;\r\n                }\r\n            })\r\n        }\r\n\r\n        //Split off effects that affect another creature for later. We don't want these to influence or be influenced by the next steps.\r\n        let effectsForOthers = allEffects.filter(effect => effect.creature != creature.id);\r\n        allEffects = allEffects.filter(effect => effect.creature == creature.id);\r\n\r\n        //Toggle effects are always applied.\r\n        allEffects.filter(effect => effect.toggle).forEach(effect => {\r\n            effect.apply = true;\r\n        })\r\n\r\n        //Now we need to go over all the effects.\r\n        // If one target is affected by two bonuses of the same type, only the bigger one is applied.\r\n        // The same goes for penalties, unless they are untyped.\r\n\r\n        //If an effect with the target \"Ignore <type> bonuses and penalties\" exists, all effects of that type are disabled.\r\n        this.bonusTypes.forEach(type => {\r\n            if (allEffects.find(effect => effect.target.toLowerCase() == \"ignore \" + type + \" bonuses and penalties\")) {\r\n                allEffects.filter(effect => effect.type == type && effect.apply == undefined).forEach(effect => {\r\n                    effect.apply = false;\r\n                })\r\n            }\r\n        })\r\n        //If there is an effect that says to ignore all <type> effects, bonuses or penalties,\r\n        // all effects (or bonuses or penalties) to that target (or all targets) with that type are disabled.\r\n        this.bonusTypes.forEach(type => {\r\n            allEffects\r\n                .filter(effect => effect.target.includes(\"Ignore \" + type[0].toUpperCase() + type.substring(1) + \" Effects\"))\r\n                .forEach(ignoreeffect => {\r\n                    let target = \"all\";\r\n                    if (ignoreeffect.target.includes(\" To \")) {\r\n                        target = ignoreeffect.target.split(\" To \")[1];\r\n                    }\r\n                    allEffects\r\n                        .filter(effect => (target == \"all\" || effect.target == target) && effect.type == type)\r\n                        .forEach(effect => {\r\n                            effect.apply = false;\r\n                        })\r\n                })\r\n            allEffects\r\n                .filter(effect => effect.target.includes(\"Ignore \" + type[0].toUpperCase() + type.substring(1) + \" Bonuses\"))\r\n                .forEach(ignoreeffect => {\r\n                    let target = \"all\";\r\n                    if (ignoreeffect.target.includes(\" To \")) {\r\n                        target = ignoreeffect.target.split(\" To \")[1];\r\n                    }\r\n                    allEffects\r\n                        .filter(effect => (target == \"all\" || effect.target == target) && effect.type == type && !effect.penalty)\r\n                        .forEach(effect => {\r\n                            effect.apply = false;\r\n                        })\r\n                })\r\n            allEffects\r\n                .filter(effect => effect.target.includes(\"Ignore \" + type[0].toUpperCase() + type.substring(1) + \" Penalties\"))\r\n                .forEach(ignoreeffect => {\r\n                    let target = \"all\";\r\n                    if (ignoreeffect.target.includes(\" To \")) {\r\n                        target = ignoreeffect.target.split(\" To \")[1];\r\n                    }\r\n                    allEffects\r\n                        .filter(effect => (target == \"all\" || effect.target == target) && effect.type == type && effect.penalty)\r\n                        .forEach(effect => {\r\n                            effect.apply = false;\r\n                        })\r\n                })\r\n        })\r\n\r\n        let targets: string[] = [];\r\n        //Collect all targets of effects, but each only once\r\n        allEffects.forEach(effect => {\r\n            if (!targets.includes(effect.target)) {\r\n                targets.push(effect.target);\r\n            }\r\n        });\r\n        targets.forEach(target => {\r\n            //Apply all untyped relative effects, but only the highest bonus and lowest penalty for each type for this target.\r\n            //We only apply effects if the decision hasn't already been made (that is, if apply == undefined)\r\n            this.get_TypeFilteredEffects(allEffects\r\n                .filter(effect =>\r\n                    effect.target == target && effect.apply == undefined && effect.value\r\n                ), false)\r\n                .forEach(effect => {\r\n                    effect.apply = true;\r\n                })\r\n            //Apply only the highest absolute effect for each type for this target.\r\n            // (There aren't actually any absolute penalties, and absolute effects are usually untyped.)\r\n            this.get_TypeFilteredEffects(allEffects\r\n                .filter(effect =>\r\n                    effect.target == target && effect.apply == undefined && effect.setValue\r\n                ), true)\r\n                .forEach(effect => {\r\n                    effect.apply = true;\r\n                })\r\n        })\r\n\r\n        //Disable all effects that are not applied so far.\r\n        allEffects.filter(effect => effect.apply == undefined).forEach(effect => {\r\n            effect.apply = false;\r\n        })\r\n\r\n        //Add back the effects that affect another creature.\r\n        allEffects = allEffects.concat(effectsForOthers);\r\n\r\n        //Figure out whether to show or hide an effect if it isn't set already.\r\n        let alwaysShow: string[] = [\r\n            \"AC\",\r\n            \"Acrobatics\",\r\n            \"Actions per Turn\",\r\n            \"All Checks and DCs\",\r\n            \"Arcana\",\r\n            \"Athletics\",\r\n            \"Attack Rolls\",\r\n            \"Bulk\",\r\n            \"Class DC\",\r\n            \"Crafting\",\r\n            \"Damage\",\r\n            \"Damage Rolls\",\r\n            \"Deception\",\r\n            \"Diplomacy\",\r\n            \"Fortitude\",\r\n            \"Hardness\",\r\n            \"Intimidation\",\r\n            \"Lore\",\r\n            \"Max Dying\",\r\n            \"Max HP\",\r\n            \"Medicine\",\r\n            \"Melee Attack Rolls\",\r\n            \"Melee Damage\",\r\n            \"Nature\",\r\n            \"Occultism\",\r\n            \"Perception\",\r\n            \"Performance\",\r\n            \"Ranged Attack Rolls\",\r\n            \"Ranged Damage\",\r\n            \"Reach\",\r\n            \"Reflex\",\r\n            \"Religion\",\r\n            \"Saving Throws\",\r\n            \"Size\",\r\n            \"Skill Checks\",\r\n            \"Society\",\r\n            \"Spell Attack Rolls\",\r\n            \"Spell DCs\",\r\n            \"Stealth\",\r\n            \"Survival\",\r\n            \"Thievery\",\r\n            \"Unarmed Attack Rolls\",\r\n            \"Unarmed Damage\",\r\n            \"Untrained Skills\",\r\n            \"Will\"\r\n        ].map(name => name.toLowerCase())\r\n        let alwaysShowWildcard: string[] = [\r\n            \"Resistance\",\r\n            \"Immunity\",\r\n            \"Ignore\",\r\n            \"Speed\",\r\n            \"-based Checks and DCs\",\r\n            \"Lore: \"\r\n        ].map(name => name.toLowerCase())\r\n        allEffects.filter(effect => effect.show == undefined).forEach(effect => {\r\n            if (alwaysShow.includes(effect.target.toLowerCase())) {\r\n                effect.show = true;\r\n            } else if (alwaysShowWildcard.some(wildcard => effect.target.toLowerCase().includes(wildcard))) {\r\n                effect.show = true;\r\n            } else {\r\n                effect.show = false;\r\n            }\r\n        })\r\n\r\n        //Lastly, overwrite this.effects ONLY if the effects have changed, and if so,\r\n        //set the character changed, so this function is called again straight away.\r\n        //This ensures that any new strength bonuses get applied to any strength-based penalties,\r\n        //and that this.effects is always up to date and never needs to be regenerated by any other process.\r\n        //When the effects are finished and up-to-date, refresh all affected areas.\r\n\r\n        if ((JSON.stringify(this.effects[creatureIndex].all)) != (JSON.stringify(allEffects))) {\r\n            this.set_ToChange(creature, allEffects, this.effects[creatureIndex].all, characterService);\r\n            this.effects[creatureIndex] = new EffectCollection();\r\n            this.effects[creatureIndex].all = allEffects.map(effect => Object.assign(new Effect(), effect));\r\n            this.effects[creatureIndex].relatives = this.effects[creatureIndex].all.filter(effect => parseInt(effect.value));\r\n            //Sort the absolute effects in ascending order of value. This means that the largest value will usually be the the one that ultimately counts.\r\n            this.effects[creatureIndex].absolutes = this.effects[creatureIndex].all.filter(effect => effect.setValue).sort((a, b) => parseInt(a.setValue) - parseInt(b.setValue));\r\n            this.effects[creatureIndex].penalties = this.effects[creatureIndex].all.filter(effect => parseInt(effect.value) < 0);\r\n            this.effects[creatureIndex].bonuses = this.effects[creatureIndex].all.filter(effect => parseInt(effect.value) > 0);\r\n\r\n            if (!characterService.still_loading()) {\r\n                this.generate_Effects(creatureType, characterService, true);\r\n            }\r\n        } else if (secondRun) {\r\n            //After all effects are generated, keep the language list length updated and process all changes prepared by the effects.\r\n            characterService.update_LanguageList();\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    set_ToChange(creature: Creature, newEffects: Effect[], oldEffects: Effect[], characterService: CharacterService) {\r\n        //Set refresh commands for all components of the application depending on whether there are new effects affecting their data,\r\n        // or old effects have been removed.\r\n        let general: string[] = [\"Max Languages\", \"Size\"].map(name => name.toLowerCase());\r\n        let generalWildcard: string[] = [].map(name => name.toLowerCase());\r\n        let abilities: string[] = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"].map(name => name.toLowerCase());\r\n        let abilitiesWildcard: string[] = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"].map(name => name.toLowerCase());\r\n        let health: string[] = [\"HP\", \"Fast Healing\", \"Hardness\", \"Max Dying\", \"Max HP\", \"Resting HP Gain\", \"Temporary HP\", \"Resting Blocked\"].map(name => name.toLowerCase());\r\n        let healthWildcard: string[] = [\"Resistance\", \"Immunity\"].map(name => name.toLowerCase());\r\n        let defense: string[] = [\"AC\", \"Saving Throws\", \"Fortitude\", \"Reflex\", \"Will\", \"Dexterity-based Checks and DCs\", \"Constitution-based Checks and DCs\",\r\n            \"Wisdom-based Checks and DCs\", \"All Checks and DCs\", \"Ignore Armor Penalty\", \"Ignore Armor Speed Penalty\", \"Proficiency Level\", \"Dexterity Modifier Cap\"].map(name => name.toLowerCase());\r\n        let defenseWildcard: string[] = [\"Proficiency Level\"].map(name => name.toLowerCase());\r\n        let attacks: string[] = [\"Damage Rolls\", \"Dexterity-based Checks and DCs\", \"Strength-based Checks and DCs\", \"All Checks and DCs\",\r\n            \"Unarmed Damage per Die\", \"Weapon Damage per Die\"].map(name => name.toLowerCase());\r\n        let attacksWildcard: string[] = [\"Attack Rolls\", \"Damage\", \"Dice Size\", \"Dice Number\", \"Proficiency Level\", \"Reach\", \"Damage Per Die\"].map(name => name.toLowerCase());\r\n        let individualskills: string[] = [\"Perception\", \"Fortitude\", \"Reflex\", \"Will\", \"Acrobatics\", \"Arcana\", \"Athletics\", \"Crafting\", \"Deception\", \"Diplomacy\", \"Intimidation\", \"Medicine\",\r\n            \"Nature\", \"Occultism\", \"Performance\", \"Religion\", \"Society\", \"Stealth\", \"Survival\", \"Thievery\", \"Fortitude\", \"Reflex\", \"Will\"].map(name => name.toLowerCase());\r\n        let individualSkillsWildcard: string[] = [\"Lore\", \"Class DC\", \"Spell DC\"].map(name => name.toLowerCase());\r\n        let skillsWildcard: string[] = [\"All Checks and DCs\", \"Skill Checks\", \"Untrained Skills\", \"Proficiency Level\", \"Recall Knowledge Checks\", \"Master Recall Knowledge Checks\", \"Saving Throws\", \"Speed\"].map(name => name.toLowerCase());\r\n        let inventory: string[] = [\"Bulk\", \"Encumbered Limit\", \"Max Bulk\", \"Max Invested\"].map(name => name.toLowerCase());\r\n        let spellbook: string[] = [\"Refocus Bonus Points\", \"Focus Points\", \"Focus Pool\", \"All Checks and DCs\", \"Attack Rolls\", \"Spell Attack Rolls\", \"Spell DCs\"].map(name => name.toLowerCase());\r\n        let spellbookWildcard: string[] = [\"Spell Slots\", \"Proficiency Level\", \"Spell Level\", \"Disabled\"].map(name => name.toLowerCase());\r\n        let activities: string[] = [\"Dexterity-based Checks and DCs\", \"Strength-based Checks and DCs\", \"All Checks and DCs\"].map(name => name.toLowerCase());\r\n        let activitiesWildcard: string[] = [\"Class DC\", \"Charges\", \"Cooldown\", \"Disabled\"].map(name => name.toLowerCase());\r\n\r\n        let changedEffects: Effect[] = [];\r\n        //Collect all new feats that don't exist in the old list or old feats that don't exist in the new list - that is, everything that has changed.\r\n        newEffects.filter(effect => effect.apply).forEach(newEffect => {\r\n            if (!oldEffects.some(oldEffect => JSON.stringify(oldEffect) == JSON.stringify(newEffect))) {\r\n                changedEffects.push(newEffect);\r\n            }\r\n        })\r\n        oldEffects.filter(effect => effect.apply).forEach(oldEffect => {\r\n            if (!newEffects.some(newEffect => JSON.stringify(newEffect) == JSON.stringify(oldEffect))) {\r\n                changedEffects.push(oldEffect);\r\n            }\r\n        })\r\n\r\n        //Then prepare changes for everything that should be updated according to the effect.\r\n        changedEffects.forEach(effect => {\r\n            let lowerCaseTarget = effect.target.toLowerCase();\r\n            let target = effect.target;\r\n            if (general.includes(lowerCaseTarget) || generalWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n            if (abilities.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"abilities\");\r\n            }\r\n            abilitiesWildcard.filter(name => lowerCaseTarget.includes(name)).forEach(name => {\r\n                characterService.set_ToChange(creature.type, \"individualskills\", name);\r\n            });\r\n            if (health.includes(lowerCaseTarget) || healthWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"health\");\r\n            }\r\n            if (defense.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"defense\");\r\n            }\r\n            if (defenseWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"defense\");\r\n            }\r\n            if (attacks.includes(lowerCaseTarget) || attacksWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n                characterService.set_ToChange(creature.type, \"individualskills\", \"attacks\");\r\n            }\r\n            if (individualskills.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"individualskills\", target);\r\n            }\r\n            if (individualSkillsWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"individualskills\", target);\r\n            }\r\n            if (skillsWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"skills\");\r\n                characterService.set_ToChange(creature.type, \"individualskills\", \"all\");\r\n            }\r\n            if (inventory.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n            if (spellbook.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n            if (spellbookWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n            if (activities.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"activities\");\r\n            }\r\n            if (activitiesWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"activities\");\r\n            }\r\n            //Specific triggers\r\n            if (lowerCaseTarget == \"familiar abilities\") {\r\n                characterService.set_ToChange(\"Familiar\", \"featchoices\");\r\n            }\r\n        })\r\n\r\n        //If any equipped weapon is affected, update attacks, and if any equipped armor or shield is affected, update defense.\r\n        if (creature.inventories[0].weapons.some(weapon => weapon.equipped && changedEffects.some(effect => effect.target.toLowerCase() == weapon.name.toLowerCase()))) {\r\n            characterService.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (creature.inventories[0].armors.some(armor => armor.equipped && changedEffects.some(effect => effect.target.toLowerCase() == armor.name.toLowerCase()))) {\r\n            characterService.set_ToChange(creature.type, \"defense\");\r\n        }\r\n        if (creature.inventories[0].shields.some(shield => shield.equipped && changedEffects.some(effect => effect.target.toLowerCase() == shield.name.toLowerCase()))) {\r\n            characterService.set_ToChange(creature.type, \"defense\");\r\n        }\r\n    }\r\n\r\n    tick_CustomEffects(creature: Creature, characterService: CharacterService, turns: number) {\r\n        //Tick down all custom effects and set them to remove when they expire.\r\n        creature.effects.filter(gain => gain.duration > 0).forEach(gain => {\r\n            //Tick down all custom effects and set them to remove when they expire.\r\n            gain.duration -= turns;\r\n            if (gain.duration <= 0) {\r\n                gain.type = \"DELETE\";\r\n            }\r\n            characterService.set_ToChange(creature.type, \"effects\");\r\n        });\r\n        //Remove all effects that were marked for removal.\r\n        creature.effects = creature.effects.filter(gain => gain.type != \"DELETE\");\r\n    }\r\n\r\n    initialize(characterService: CharacterService) {\r\n        if (characterService.still_loading()) {\r\n            setTimeout(() => this.initialize(characterService), 500)\r\n        } else {\r\n            if (!this.effectProperties.length) {\r\n                this.load_EffectProperties();\r\n            }\r\n            characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"effects\", \"all\", \"Character\", \"Companion\", \"Familiar\"].includes(target)) {\r\n                        if ([\"Character\", \"Companion\", \"Familiar\"].includes(target)) {\r\n                            this.generate_Effects(target, characterService);\r\n                        } else {\r\n                            this.generate_Effects(\"Character\", characterService);\r\n                            this.generate_Effects(\"Companion\", characterService);\r\n                            this.generate_Effects(\"Familiar\", characterService);\r\n                        }\r\n\r\n                    }\r\n                });\r\n            characterService.get_ViewChanged()\r\n                .subscribe((target) => {\r\n                    if ([\"effects\", \"all\"].includes(target.target)) {\r\n                        this.generate_Effects(target.creature, characterService);\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    load_EffectProperties() {\r\n        this.effectProperties = [];\r\n        Object.keys(json_effectproperties).forEach(key => {\r\n            this.effectProperties.push(...json_effectproperties[key].map(obj => Object.assign(new ItemProperty(), obj)));\r\n        });\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Consumable } from './Consumable';\r\nimport { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Scroll extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Scrolls should be type \"scrolls\" to be found in the database\r\n    readonly type = \"scrolls\";\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName;\r\n        } else if (this.storedSpells.length && this.storedSpells[0].spells.length) {\r\n            return this.name+\" of \"+this.storedSpells[0].spells[0].name;\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //creature is not needed for scrolls, but for other types of item.\r\n        if (this.storedSpells[0]?.spells.length) {\r\n            let spell = characterService.spellsService.get_Spells(this.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return Array.from(new Set(this.traits.concat(spell.traits))).sort(function(a,b) {\r\n                    if (a > b) {\r\n                        return 1;\r\n                    }\r\n                    if (a < b) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n            } else {\r\n                return this.traits;\r\n            }\r\n        } else {\r\n            return this.traits;\r\n        }\r\n    }\r\n}","import { v1 as uuidv1 } from 'uuid';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { Oil } from './Oil';\r\nimport { ItemGain } from './ItemGain';\r\n\r\nexport class Item {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    public allowEquippable: boolean;\r\n    //Number of items of this kind in your inventory.\r\n    //Items that can be equipped or invested, or come with an activity,\r\n    // get duplicated and not stacked - the amount remains 1.\r\n    public amount: number = 1;\r\n    //Bulk: Either \"\" or \"L\" or \"<number>\"\r\n    public bulk: string = \"\";\r\n    public craftable: boolean = true;\r\n    public crafted: boolean = false;\r\n    //Some items need certain requirements to be crafted.\r\n    public craftRequirement: string = \"\";\r\n    //Some items need to store data - selected runes, spells, etc...\r\n    public data: {name:string, value:any}[] = [];\r\n    //Full description of the item, ideally unchanged from the source material\r\n    public desc: string = \"\";\r\n    //For summoned items or infused reagents, the expiration ticks down, and the item is then dropped or the amount reduced. Expiration is turns * 10.\r\n    public expiration: number = 0;\r\n    //If this name is set, always show it instead of the expanded base name\r\n    public displayName: string = \"\";\r\n    //Can this item be equipped (and apply its effect only then)\r\n    public equippable: boolean;\r\n    //Should this item be hidden in the item store\r\n    public hide: boolean = false;\r\n    //List ItemGain for every Item that you receive when you get, equip or use this item (specified in the ItemGain)\r\n    public gainItems: ItemGain[] = [];\r\n    //Set only if the item is granted via an ItemGain\r\n    public grantedBy: string = \"\";\r\n    //Every item gets an ID to reference in activities or other items.\r\n    public id = uuidv1();\r\n    //Theoretical Level before which the player should not have this item\r\n    public level: number = 0;\r\n    //Base name of the item, may be expanded by rune names for equipment\r\n    public name: string = \"New Item\";\r\n    //Any notes the player adds to the item\r\n    public notes: string = \"\";\r\n    //Store any oils applied to this item.\r\n    public oilsApplied: Oil[] = [];\r\n    //Price in Copper\r\n    public price: number = 0;\r\n    //This is the id of the library item this one is based on. It is used when loading the character.\r\n    public refId: string = \"\"\r\n    //Is the notes input shown in the inventory\r\n    public showNotes: boolean = false;\r\n    public sourceBook: string = \"\";\r\n    //This bulk is only valid while in the item store.\r\n    //This is for items like the Adventurer's Pack that is immediately unpacked into its parts and doesn't weigh anything in the inventory.\r\n    public storeBulk: string = \"\";\r\n    //What spells are stored in this item, or can be?\r\n    //Only the first spell will be cast when using the item.\r\n    public storedSpells: SpellChoice[] = [];\r\n    //Does this item come in different types? Like lesser, greater, major...\r\n    //If so, name the subtype here\r\n    public subType: string = \"\";\r\n    //If you have named a subtype, this description will show up\r\n    //e.g.: \"Greater\":\"The bonus to Athletics is +2\"\r\n    public subTypeDesc: string = \"\";\r\n    public tradeable: boolean = true;\r\n    //What traits does the item have? Can be expanded under certain circumstances\r\n    public traits: string[] = [];\r\n    //Type of item - very important. Must be set by the specific Item class and decides which database is searched for the item\r\n    public type: string;\r\n    //For items with the same id (from different source files for example), higher overridePriority wins. If two have the same priority, the first in the list wins.\r\n    public overridePriority: number = 0;\r\n    get_Bulk() {\r\n        //Return either the bulk set by an oil, or else the actual bulk of the item.\r\n        let oilBulk: string = \"\";\r\n        this.oilsApplied.forEach(oil => {\r\n            if (oil.bulkEffect) {\r\n                oilBulk = oil.bulkEffect;\r\n            }\r\n        });\r\n        return oilBulk || this.bulk;\r\n    }\r\n    can_Invest() {\r\n        return (this.traits.includes(\"Invested\"));\r\n    }\r\n    can_Stack() {\r\n        return (!this.equippable &&\r\n            !this.can_Invest() &&\r\n            (this[\"gainInventory\"] ? !this[\"gainInventory\"].length : true) &&\r\n            (this[\"gainItems\"] ? !this[\"gainItems\"].filter(gain => gain.on != \"use\").length : true) &&\r\n            (this[\"gainActivities\"] ? !this[\"gainActivities\"].filter((activity: ItemActivity) => !activity.displayOnly).length : true) &&\r\n            (this[\"activities\"] ? !this[\"activities\"].filter((activity: ItemActivity) => !activity.displayOnly).length : true) &&\r\n            (this[\"storedSpells\"] ? !this[\"storedSpells\"].length : true)) &&\r\n            (this.constructor.name != \"Snare\")\r\n    }\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName;\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n}","import { Skill } from './Skill';\r\nimport { Level } from './Level';\r\nimport { Class } from './Class';\r\nimport { Feat } from './Feat';\r\nimport { CharacterService } from './character.service';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { ItemsService } from './items.service';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { Settings } from './Settings';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { Creature } from './Creature';\r\nimport { AbilityBoost } from './AbilityBoost';\r\nimport { EffectsService } from './effects.service';\r\nimport { SpellsService } from './spells.service';\r\nimport { SpellGain } from './SpellGain';\r\nimport { Familiar } from './Familiar';\r\nimport { SkillIncrease } from './SkillIncrease';\r\nimport { Spell } from './Spell';\r\nimport { FeatTaken } from './FeatTaken';\r\nimport { Item } from './Item';\r\nimport { FormulaLearned } from './FormulaLearned';\r\nimport { ConditionsService } from './conditions.service';\r\n\r\nexport class Character extends Creature {\r\n    public readonly _className: string = this.constructor.name;\r\n    readonly type = \"Character\";\r\n    public partyName: string = \"\";\r\n    public alignment: string = \"\";\r\n    public baseValues: { name: string, baseValue: number }[] = [];\r\n    public cash: number[] = [0, 15, 0, 0];\r\n    public class: Class = new Class();\r\n    public customFeats: Feat[] = [];\r\n    public customSkills: Skill[] = [];\r\n    public heroPoints: number = 1;\r\n    public experiencePoints: number = 0;\r\n    public settings: Settings = new Settings();\r\n    //yourTurn is only written when saving the character to the database and read when loading.\r\n    public yourTurn: number = 0;\r\n    get_Changed(characterService: CharacterService,) {\r\n        return characterService.get_Changed();\r\n    }\r\n    get_BaseSize() {\r\n        return this.class.ancestry.size ? this.class.ancestry.size : 0;\r\n    }\r\n    get_Size(effectsService: EffectsService) {\r\n        let size: number = this.get_BaseSize();\r\n\r\n        let setSizeEffects = effectsService.get_AbsolutesOnThis(this, \"Size\");\r\n        if (setSizeEffects.length) {\r\n            size = Math.max(...setSizeEffects.map(effect => parseInt(effect.setValue)));\r\n        }\r\n\r\n        let sizeEffects = effectsService.get_RelativesOnThis(this, \"Size\");\r\n        sizeEffects.forEach(effect => {\r\n            size += parseInt(effect.value)\r\n        })\r\n\r\n        switch (size) {\r\n            case -2:\r\n                return \"Tiny\";\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\"\r\n            case 1:\r\n                return \"Large\"\r\n            case 2:\r\n                return \"Huge\"\r\n            case 3:\r\n                return \"Gargantuan\"\r\n        }\r\n    }\r\n    get_SpellLevel(levelNumber: number = this.level) {\r\n        return Math.ceil(levelNumber / 2);\r\n    }\r\n    get_DefaultSpellcasting() {\r\n        //Return the spellcasting that is assigned to this class, named \"<class> Spellcasting\" and neither focus not innate. Useful for feat requirements and assigning spell choices to the default spellcasting.\r\n        return this.class.spellCasting.find(casting => casting.className == this.class.name && ![\"Focus\", \"Innate\"].includes(casting.castingType) && casting.source == this.class.name + \" Spellcasting\");\r\n    }\r\n    get_AbilityBoosts(minLevelNumber: number, maxLevelNumber: number, abilityName: string = \"\", type: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        if (this.class) {\r\n            let boosts = [];\r\n            let levels = this.class.levels.filter(level => level.number >= minLevelNumber && level.number <= maxLevelNumber);\r\n            levels.forEach(level => {\r\n                level.abilityChoices.forEach(choice => {\r\n                    choice.boosts.filter(boost =>\r\n                        (boost.name == abilityName || abilityName == \"\") &&\r\n                        (boost.type == type || type == \"\") &&\r\n                        (boost.source == source || source == \"\") &&\r\n                        (boost.sourceId == sourceId || sourceId == \"\") &&\r\n                        (boost.locked == locked || locked == undefined)\r\n                    ).forEach(boost => {\r\n                        boosts.push(boost);\r\n                    });\r\n                });\r\n            });\r\n            return boosts as AbilityBoost[];\r\n        }\r\n    }\r\n    boost_Ability(characterService: CharacterService, abilityName: string, boost: boolean, choice: AbilityChoice, locked: boolean) {\r\n        let type: string = choice.infoOnly ? \"Info\" : \"Boost\";\r\n        if (boost) {\r\n            choice.boosts.push({ \"name\": abilityName, \"type\": type, \"source\": choice.source, \"locked\": locked, \"sourceId\": choice.id });\r\n        } else {\r\n            let oldBoost = choice.boosts.filter(boost =>\r\n                boost.name == abilityName &&\r\n                boost.type == type &&\r\n                boost.locked == locked\r\n            )[0];\r\n            choice.boosts = choice.boosts.filter(boost => boost !== oldBoost);\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        characterService.set_ToChange(\"Character\", \"abilities\");\r\n        characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n    }\r\n    add_AbilityChoice(level: Level, newChoice: AbilityChoice) {\r\n        let existingChoices = level.abilityChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new AbilityChoice, JSON.parse(JSON.stringify(newChoice)))\r\n        tempChoice.id = level.number + \"-Ability-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.abilityChoices.push(tempChoice);\r\n        return level.abilityChoices[newLength - 1];\r\n    }\r\n    remove_AbilityChoice(oldChoice: AbilityChoice) {\r\n        let levelNumber = parseInt(oldChoice.id.split(\"-\")[0]);\r\n        let a = this.class.levels[levelNumber].abilityChoices;\r\n        a.splice(a.indexOf(oldChoice), 1);\r\n    }\r\n    get_AbilityChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].abilityChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    add_SkillChoice(level: Level, newChoice: SkillChoice) {\r\n        let existingChoices = level.skillChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new SkillChoice, JSON.parse(JSON.stringify(newChoice)))\r\n        tempChoice.id = level.number + \"-Skill-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.skillChoices.push(tempChoice);\r\n        return level.skillChoices[newLength - 1];\r\n    }\r\n    get_SkillChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].skillChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    remove_SkillChoice(oldChoice: SkillChoice) {\r\n        let levelNumber = parseInt(oldChoice.id.split(\"-\")[0]);\r\n        let a = this.class.levels[levelNumber].skillChoices;\r\n        a.splice(a.indexOf(oldChoice), 1);\r\n    }\r\n    add_SpellCasting(characterService: CharacterService, level: Level, newCasting: SpellCasting) {\r\n        let newLength: number = this.class.spellCasting.push(Object.assign(new SpellCasting(newCasting.castingType), JSON.parse(JSON.stringify(newCasting))));\r\n        let newSpellCasting: SpellCasting = this.class.spellCasting[newLength - 1];\r\n        //If the SpellCasting has a charLevelAvailable above 0, but lower than the current level, you could use it before you get it.\r\n        //So we raise the charLevelAvailable to either the current level or the original value, whichever is higher.\r\n        if (newSpellCasting.charLevelAvailable) {\r\n            newSpellCasting.charLevelAvailable = Math.max(newSpellCasting.charLevelAvailable, level.number);\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        characterService.set_ToChange(\"Character\", \"spells\");\r\n        return this.class.spellCasting[newLength - 1];\r\n    }\r\n    remove_SpellCasting(characterService: CharacterService, oldCasting: SpellCasting) {\r\n        this.class.spellCasting = this.class.spellCasting.filter(casting => casting !== oldCasting);\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        characterService.set_ToChange(\"Character\", \"spells\");\r\n    }\r\n    add_LoreChoice(level: Level, newChoice: LoreChoice) {\r\n        let existingChoices = level.loreChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new LoreChoice, JSON.parse(JSON.stringify(newChoice)))\r\n        tempChoice.increases = Object.assign([], newChoice.increases);\r\n        tempChoice.id = level.number + \"-Lore-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.loreChoices.push(tempChoice);\r\n        return level.loreChoices[newLength - 1];\r\n    }\r\n    get_LoreChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].loreChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    add_FeatChoice(level: Level, newChoice: FeatChoice) {\r\n        let existingChoices = level.featChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new FeatChoice, JSON.parse(JSON.stringify(newChoice)));\r\n        tempChoice.id = level.number + \"-\" + (tempChoice.type ? tempChoice.type : \"Feat\") + \"-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.featChoices.push(tempChoice);\r\n        level.featChoices[newLength - 1].feats.forEach(feat => {\r\n            feat.source = level.featChoices[newLength - 1].source;\r\n            feat.sourceId = level.featChoices[newLength - 1].id;\r\n        })\r\n        return level.featChoices[newLength - 1];\r\n    }\r\n    get_FeatChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].featChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    add_SpellChoice(characterService: CharacterService, levelNumber: number, newChoice: SpellChoice) {\r\n        let insertChoice = Object.assign(new SpellChoice(), JSON.parse(JSON.stringify(newChoice)));\r\n        if (insertChoice.className == \"Default\") {\r\n            insertChoice.className = this.class.name;\r\n        }\r\n        if (insertChoice.castingType == \"Default\") {\r\n            insertChoice.castingType = this.get_DefaultSpellcasting()?.castingType || \"\";\r\n        }\r\n        let spellCasting = this.class.spellCasting\r\n            .find(casting =>\r\n                casting.castingType == insertChoice.castingType &&\r\n                (\r\n                    casting.className == insertChoice.className ||\r\n                    insertChoice.className == \"\"\r\n                )\r\n            );\r\n        if (spellCasting) {\r\n            let newLength: number = spellCasting.spellChoices.push(insertChoice);\r\n            let choice = spellCasting.spellChoices[newLength - 1];\r\n            choice.spells = choice.spells.map(gain => Object.assign(new SpellGain(), gain));\r\n            //If the choice has a charLevelAvailable lower than the current level, you could choose spells before you officially get this choice.\r\n            //So we raise the charLevelAvailable to either the current level or the original value, whichever is higher.\r\n            choice.charLevelAvailable = Math.max(choice.charLevelAvailable, levelNumber);\r\n            //If the spellcasting was not available so far, it is now.\r\n            if (!spellCasting.charLevelAvailable) {\r\n                spellCasting.charLevelAvailable = choice.charLevelAvailable;\r\n            }\r\n            characterService.set_ToChange(\"Character\", \"spells\");\r\n            characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            return choice;\r\n        } else {\r\n            console.log(\"No suitable spell casting ability found to add spell choice.\")\r\n        }\r\n    }\r\n    remove_SpellChoice(characterService: CharacterService, oldChoice: SpellChoice) {\r\n        //Remove the spellChoice by ID\r\n        this.class.spellCasting.forEach(casting => {\r\n            casting.spellChoices = casting.spellChoices.filter(choice => choice.id != oldChoice.id);\r\n        })\r\n        //If the spellcasting has no spellchoices left, it is no longer available.\r\n        this.class.spellCasting.filter(casting => casting.spellChoices.length == 0).forEach(casting => {\r\n            casting.charLevelAvailable = 0;\r\n        })\r\n        characterService.set_ToChange(\"Character\", \"spells\");\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n    gain_Activity(characterService: CharacterService, newGain: ActivityGain, levelNumber: number) {\r\n        let newLength = this.class.activities.push(newGain);\r\n        this.class.activities[newLength - 1].level = levelNumber;\r\n        characterService.set_ToChange(\"Character\", \"activities\");\r\n        return this.class.activities[newLength - 1];\r\n    }\r\n    lose_Activity(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, activitiesService: ActivitiesService, oldGain: ActivityGain) {\r\n        let a = this.class.activities;\r\n        if (oldGain.active) {\r\n            activitiesService.activate_Activity(this, \"\", characterService, conditionsService, itemsService, spellsService, oldGain, activitiesService.get_Activities(oldGain.name)[0], false);\r\n        }\r\n        a.splice(a.indexOf(oldGain), 1);\r\n        characterService.set_ToChange(\"Character\", \"activities\");\r\n    }\r\n    get_SkillIncreases(characterService: CharacterService, minLevelNumber: number, maxLevelNumber: number, skillName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, excludeTemporary: boolean = false) {\r\n        if (this.class) {\r\n            let increases: SkillIncrease[] = [];\r\n            let choices: SkillChoice[] = []\r\n            //Collect all skill choices from spellcasting, level and some item runes as well as oils that emulate those runes.\r\n            let levels = this.class.levels.filter(level => level.number >= minLevelNumber && level.number <= maxLevelNumber);\r\n            levels.forEach(level => {\r\n                choices.push(...level.skillChoices.filter(choice => excludeTemporary ? !choice.showOnSheet : true));\r\n                choices.push(...level.loreChoices);\r\n            });\r\n            this.inventories.forEach(inventory => {\r\n                inventory.allEquipment().filter(item => item.propertyRunes.filter(rune => rune.loreChoices && rune.loreChoices.length).length && item.equipped && (item.can_Invest() ? item.invested : true))\r\n                    .forEach(item => {\r\n                        item.propertyRunes.filter(rune => rune.loreChoices && rune.loreChoices.length).forEach(rune => {\r\n                            choices.push(...rune.loreChoices);\r\n                        })\r\n                    });\r\n                inventory.allEquipment().filter(item => item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.loreChoices && oil.runeEffect.loreChoices.length).length && item.equipped && (item.can_Invest() ? item.invested : true))\r\n                    .forEach(item => {\r\n                        item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.loreChoices && oil.runeEffect.loreChoices.length).forEach(oil => {\r\n                            choices.push(...oil.runeEffect.loreChoices);\r\n                        })\r\n                    });\r\n            })\r\n            //Only return skill increases for a specific skill if at least one increase has a minRank of 0 (an initial training) - if not, we don't consider this skill increased at all. \r\n            if (skillName) {\r\n                if (choices.some(choice => choice.minRank == 0 && choice.increases.some(increase => increase.name == skillName))) {\r\n                    //Get all matching skill increases from the choices\r\n                    choices.forEach(choice => {\r\n                        choice.increases.filter(increase =>\r\n                            (increase.name == skillName) &&\r\n                            (increase.source == source || source == \"\") &&\r\n                            (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                            (increase.locked == locked || locked == undefined)\r\n                        ).forEach(increase => {\r\n                            increases.push(increase);\r\n                        })\r\n                    });\r\n                }\r\n            } else {\r\n                //Get all matching skill increases from the choices\r\n                choices.forEach(choice => {\r\n                    choice.increases.filter(increase =>\r\n                        (increase.source == source || source == \"\") &&\r\n                        (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                        (increase.locked == locked || locked == undefined)\r\n                    ).forEach(increase => {\r\n                        increases.push(increase);\r\n                    })\r\n                });\r\n            }\r\n            return increases;\r\n        } else {\r\n            return [] as SkillIncrease[];\r\n        }\r\n    }\r\n    increase_Skill(characterService: CharacterService, skillName: string, train: boolean, choice: SkillChoice, locked: boolean) {\r\n        if (train) {\r\n            choice.increases.push({ \"name\": skillName, \"source\": choice.source, \"maxRank\": choice.maxRank, \"locked\": locked, \"sourceId\": choice.id });\r\n        } else {\r\n            let oldIncrease = choice.increases.filter(\r\n                increase => increase.name == skillName &&\r\n                    increase.locked == locked\r\n            )[0];\r\n            choice.increases = choice.increases.filter(increase => increase !== oldIncrease);\r\n        }\r\n        this.process_Skill(characterService, skillName, train, choice, locked);\r\n    }\r\n    process_Skill(characterService: CharacterService, skillName: string, train: boolean, choice: SkillChoice, locked: boolean) {\r\n        characterService.set_ToChange(\"Character\", \"individualskills\", skillName);\r\n        characterService.set_ToChange(\"Character\", \"skillchoices\", skillName);\r\n        if (train) {\r\n            //The skill that you increase with Skilled Heritage at level 1 automatically gets increased at level 5 as well.\r\n            let level = parseInt(choice.id.split(\"-\")[0]);\r\n            if (level == 1 && choice.source == \"Skilled Heritage\") {\r\n                let newChoice = this.add_SkillChoice(characterService.get_Level(5), Object.assign(new SkillChoice(), {\r\n                    available: 0,\r\n                    filter: [],\r\n                    increases: [],\r\n                    type: \"Skill\",\r\n                    maxRank: 8,\r\n                    source: \"Skilled Heritage\",\r\n                    id: \"\"\r\n                }));\r\n                this.increase_Skill(characterService, skillName, true, newChoice, true);\r\n            }\r\n            //The skill/save that you increase with Canny Acumen automatically gets increased at level 17 as well.\r\n            if (choice.source.includes(\"Feat: Canny Acumen\")) {\r\n                //First check if this has already been done: Is there a Skill Choice at level 17 with this source and this type?\r\n                //We are naming the type \"Automatic\" - it doesn't matter because it's a locked choice,\r\n                //but it allows us to distinguish this increase from the original if you take Canny Acumen at level 17\r\n                let existingChoices = characterService.get_Level(17).skillChoices.filter(skillChoice =>\r\n                    skillChoice.source == choice.source && skillChoice.type == \"Automatic\"\r\n                );\r\n                //If there isn't one, go ahead and create one, then immediately increase this skill in it.\r\n                if (existingChoices.length == 0) {\r\n                    let newChoice = this.add_SkillChoice(characterService.get_Level(17), Object.assign(new SkillChoice(), {\r\n                        available: 0,\r\n                        filter: [],\r\n                        increases: [],\r\n                        type: \"Automatic\",\r\n                        maxRank: 6,\r\n                        source: choice.source,\r\n                        id: \"\"\r\n                    }));\r\n                    this.increase_Skill(characterService, skillName, true, newChoice, true);\r\n                }\r\n            }\r\n            //The save that you increase with Path to Perfection is added to the filter of Third Path to Perfection\r\n            if (choice.source == \"Path to Perfection\" || choice.source == \"Second Path to Perfection\") {\r\n                let a = characterService.get_Level(15).skillChoices.filter(choice => choice.source == \"Third Path to Perfection\")[0];\r\n                if (a.filter.includes(\"none\")) {\r\n                    a.filter.splice(a.filter.indexOf(\"none\"), 1);\r\n                }\r\n                a.filter.push(skillName);\r\n            }\r\n            //If you are getting trained in a skill you don't already know, it's usually a weapon proficiency or a class/spell DC.\r\n            //We have to create that skill here then\r\n            if (characterService.get_Skills(this, skillName).length == 0) {\r\n                if (skillName.includes(\"Class DC\")) {\r\n                    switch (skillName) {\r\n                        case \"Alchemist Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Intelligence\");\r\n                            break;\r\n                        case \"Barbarian Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Strength\");\r\n                            break;\r\n                        case \"Bard Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Druid Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Wisdom\");\r\n                            break;\r\n                        default:\r\n                            //The Ability is the subtype of the taken feat.\r\n                            //The taken feat is found in the source as \"Feat: [name]\", so we remove the \"Feat: \" part with substr to find it and its subType.\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", characterService.get_Feats(choice.source.substr(6))[0].subType);\r\n                            break;\r\n                    }\r\n                } else if (skillName.includes(\"Spell DC\")) {\r\n                    switch (skillName.split(\" \")[0]) {\r\n                        case \"Bard\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Champion\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Cleric\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Wisdom\");\r\n                            break;\r\n                        case \"Druid\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Wisdom\");\r\n                            break;\r\n                        case \"Monk\":\r\n                            //For Monks, add the tradition to the Monk spellcasting abilities. The tradition is the second word of the skill name.\r\n                            characterService.get_Character().class.spellCasting.filter(casting => casting.className == \"Monk\").forEach(casting => {\r\n                                casting.tradition = skillName.split(\" \")[1] as \"Divine\" | \"Occult\";\r\n                            })\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Wisdom\");\r\n                            break;\r\n                        case \"Rogue\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Sorcerer\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Wizard\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Intelligence\");\r\n                            break;\r\n                        case \"Innate\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        default:\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"\");\r\n                    }\r\n                    //One background grants the \"Lore\" skill. We treat it as a Lore category skill, but don't generate any feats for it.\r\n                } else if (skillName == \"Lore\") {\r\n                    characterService.add_CustomSkill(skillName, \"Skill\", \"Intelligence\");\r\n                } else {\r\n                    characterService.add_CustomSkill(skillName, choice.type, \"\");\r\n                }\r\n            }\r\n            //Set components to update according to the skill type.\r\n            switch (characterService.get_Skills(characterService.get_Character(), skillName)[0]?.type) {\r\n                case \"Skill\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    break;\r\n                case \"Perception\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    break;\r\n                case \"Save\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Armor Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Specific Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Spell DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                    break;\r\n                case \"Class DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    break;\r\n            }\r\n            //Set components to update according to the skill name.\r\n            switch (skillName) {\r\n                case \"Crafting\":\r\n                    characterService.set_ToChange(\"Character\", \"crafting\");\r\n                    characterService.set_ToChange(\"Character\", \"inventory\");\r\n                    break;\r\n            }\r\n            //Some effects depend on skill levels, so we refresh effects when changing skills.\r\n            characterService.set_ToChange(\"Character\", \"effects\");\r\n        } else {\r\n            //If you are deselecting a skill that you increased with Skilled Heritage at level 1, you also lose the skill increase at level 5.\r\n            let level = parseInt(choice.id.split(\"-\")[0]);\r\n            if (level == 1 && choice.source == \"Skilled Heritage\") {\r\n                characterService.get_Level(5).skillChoices = characterService.get_Level(5).skillChoices.filter(choice => choice.source != \"Skilled Heritage\");\r\n            }\r\n            //If you are deselecting Canny Acumen, you also lose the skill increase at level 17.\r\n            if (choice.source.includes(\"Feat: Canny Acumen\")) {\r\n                let oldChoices = characterService.get_Level(17).skillChoices.filter(skillChoice => skillChoice.source == choice.source);\r\n                if (oldChoices.length) {\r\n                    this.remove_SkillChoice(oldChoices[0]);\r\n                }\r\n            }\r\n            //If you are deselecting Path to Perfection, the selected skill is removed from the filter of Third Path to Perfection.\r\n            //Also add a blank filter if nothing else is left.\r\n            if (choice.source == \"Path to Perfection\" || choice.source == \"Second Path to Perfection\") {\r\n                let a = characterService.get_Level(15).skillChoices.filter(choice => choice.source == \"Third Path to Perfection\")[0];\r\n                if (a.filter.includes(skillName)) {\r\n                    a.filter.splice(a.filter.indexOf(skillName), 1);\r\n                }\r\n                if (a.filter.length == 0) {\r\n                    a.filter.push(\"none\");\r\n                }\r\n            }\r\n            //Set components to update according to the skill type.\r\n            switch (characterService.get_Skills(characterService.get_Character(), skillName)[0]?.type) {\r\n                case \"Skill\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n                    break;\r\n                case \"Perception\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    break;\r\n                case \"Save\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Armor Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Specific Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Spell DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                    break;\r\n                case \"Class DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    break;\r\n            }\r\n            //Set components to update according to the skill name.\r\n            switch (skillName) {\r\n                case \"Crafting\":\r\n                    characterService.set_ToChange(\"Character\", \"crafting\");\r\n                    characterService.set_ToChange(\"Character\", \"inventory\");\r\n                    break;\r\n            }\r\n            //Some effects depend on skill levels, so we refresh effects when changing skills.\r\n            characterService.set_ToChange(\"Character\", \"effects\");\r\n            //Remove custom skill if previously created and this was the last increase of it\r\n            let customSkills = characterService.get_Character().customSkills.filter(skill => skill.name == skillName);\r\n            if (customSkills.length && this.get_SkillIncreases(characterService, 1, 20, skillName).length == 0) {\r\n                characterService.remove_CustomSkill(customSkills[0]);\r\n                //For Monks, remove the tradition from the Monk spellcasting abilities if you removed the Monk Divine/Occult Spell DC.\r\n                if (skillName.includes(\"Monk\") && skillName.includes(\"Spell DC\")) {\r\n                    characterService.get_Character().class.spellCasting.filter(casting => casting.className == \"Monk\").forEach(casting => {\r\n                        casting.tradition = \"\";\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get_FeatsTaken(minLevelNumber: number, maxLevelNumber: number, featName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, excludeTemporary: boolean = false, includeCountAs: boolean = false) {\r\n        if (this.class) {\r\n            let featsTaken: FeatTaken[] = [];\r\n            let levels = this.class.levels.filter(level => level.number >= minLevelNumber && level.number <= maxLevelNumber);\r\n            levels.forEach(level => {\r\n                level.featChoices.forEach(choice => {\r\n                    choice.feats.filter((feat: FeatTaken) =>\r\n                        (excludeTemporary ? !choice.showOnSheet : true) &&\r\n                        (\r\n                            (featName == \"\") || \r\n                            (feat.name.toLowerCase() == featName.toLowerCase()) ||\r\n                            (includeCountAs && (feat.countAsFeat?.toLowerCase() == featName.toLowerCase() || false))\r\n                        ) &&\r\n                        (feat.source.toLowerCase() == source.toLowerCase() || source == \"\") &&\r\n                        (feat.sourceId == sourceId || sourceId == \"\") &&\r\n                        (feat.locked == locked || locked == undefined)\r\n                    ).forEach(feat => {\r\n                        featsTaken.push(feat);\r\n                    })\r\n                })\r\n            })\r\n            return featsTaken;\r\n        }\r\n    }\r\n    take_Feat(creature: Character | Familiar, characterService: CharacterService, feat: Feat, featName: string, taken: boolean, choice: FeatChoice, locked: boolean) {\r\n        let level: Level = characterService.get_Level(parseInt(choice.id.split(\"-\")[0]));\r\n        if (taken) {\r\n            if (feat) {\r\n                featName = feat.name;\r\n            }\r\n            choice.feats.push({ name: (feat?.name || featName), source: choice.source, locked: locked, sourceId: choice.id, countAsFeat: (feat?.countAsFeat || feat?.superType || \"\") });\r\n            characterService.process_Feat(creature, feat, featName, choice, level, taken);\r\n        } else {\r\n            characterService.process_Feat(creature, feat, featName, choice, level, taken);\r\n            let a = choice.feats;\r\n            a.splice(a.indexOf(a.filter(existingFeat =>\r\n                existingFeat.name == featName &&\r\n                existingFeat.locked == locked\r\n            )[0]), 1)\r\n        }\r\n    }\r\n    get_SpellsTaken(characterService: CharacterService, minLevelNumber: number, maxLevelNumber: number, spellLevel: number = -1, spellName: string = \"\", spellCasting: SpellCasting = undefined, className: string = \"\", tradition: string = \"\", castingType: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, signatureAllowed: boolean = false, cantripAllowed: boolean = true) {\r\n        if (this.class) {\r\n            let spellsTaken: { choice: SpellChoice, gain: SpellGain }[] = [];\r\n            function get_DynamicLevel(choice: SpellChoice, casting: SpellCasting, characterService: CharacterService) {\r\n                return characterService.spellsService.get_DynamicSpellLevel(casting, choice, characterService);\r\n            }\r\n            this.class.spellCasting\r\n                .filter(casting => (spellCasting == undefined || casting === spellCasting) &&\r\n                    casting.charLevelAvailable >= minLevelNumber && casting.charLevelAvailable <= maxLevelNumber &&\r\n                    (casting.castingType == castingType || castingType == \"\"))\r\n                .forEach(casting => {\r\n                    casting.spellChoices.filter(choice => choice.charLevelAvailable >= minLevelNumber && choice.charLevelAvailable <= maxLevelNumber).forEach(choice => {\r\n                        if (\r\n                            (\r\n                                (\r\n                                    spellLevel == -1 ||\r\n                                    (\r\n                                        !choice.dynamicLevel &&\r\n                                        choice.level == spellLevel\r\n                                    ) ||\r\n                                    (\r\n                                        choice.dynamicLevel &&\r\n                                        get_DynamicLevel(choice, casting, characterService) == spellLevel\r\n                                    )\r\n                                )\r\n                            ) ||\r\n                            (\r\n                                signatureAllowed &&\r\n                                choice.spells.some(spell => spell.signatureSpell) &&\r\n                                spellLevel != 0 &&\r\n                                spellLevel != -1\r\n                            )\r\n                        ) {\r\n                            choice.spells.filter(gain =>\r\n                                (gain.name == spellName || spellName == \"\") &&\r\n                                (casting.className == className || className == \"\") &&\r\n                                (casting.tradition == tradition || tradition == \"\") &&\r\n                                (choice.source == source || source == \"\") &&\r\n                                (gain.sourceId == sourceId || sourceId == \"\") &&\r\n                                (gain.locked == locked || locked == undefined) &&\r\n                                ((signatureAllowed && gain.signatureSpell) ? (spellLevel >= characterService.spellsService.get_Spells(gain.name)[0]?.levelreq) : true) &&\r\n                                (cantripAllowed || (!characterService.spellsService.get_Spells(gain.name)[0]?.traits.includes(\"Cantrip\")))\r\n                            ).forEach(gain => {\r\n                                spellsTaken.push({ choice: choice, gain: gain });\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            return spellsTaken;\r\n        }\r\n    }\r\n    take_Spell(characterService: CharacterService, spellName: string, taken: boolean, choice: SpellChoice, locked: boolean, prepared: boolean = false) {\r\n        if (taken) {\r\n            choice.spells.push(Object.assign(new SpellGain(), { name: spellName, locked: locked, sourceId: choice.id, source: choice.source, cooldown: choice.cooldown, frequency: choice.frequency, prepared: prepared }));\r\n        } else {\r\n            let oldChoice = choice.spells.find(gain => gain.name == spellName);\r\n            choice.spells.splice(choice.spells.indexOf(oldChoice), 1);\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n    learn_Spell(spell: Spell, source: string) {\r\n        if (!this.class?.spellBook.find(learned => learned.name == spell.name)) {\r\n            let level: number = spell.traits.includes(\"Cantrip\") ? 0 : spell.levelreq;\r\n            this.class?.spellBook.push({ name: spell.name, source: source, level: level });\r\n        }\r\n    }\r\n    unlearn_Spell(spell: Spell) {\r\n        this.class.spellBook = this.class.spellBook.filter(existingSpell => existingSpell.name != spell.name);\r\n    }\r\n    get_SpellsLearned(name: string = \"\", source: string = \"\", level: number = -1) {\r\n        return this.class?.spellBook.filter(learned =>\r\n            (name ? learned.name == name : true) &&\r\n            (source ? learned.source == source : true) &&\r\n            (level > -1 ? learned.level == level : true)\r\n        );\r\n    }\r\n    add_SpellListSpell(spellName: string, source: string, levelNumber: number) {\r\n        this.class?.spellList.push({ name: spellName, source: source, level: levelNumber });\r\n    }\r\n    remove_SpellListSpell(spellName: string, source: string, levelNumber: number) {\r\n        this.class.spellList = this.class.spellList.filter(existingSpell => !(existingSpell.name == spellName && existingSpell.source == source && existingSpell.level == levelNumber));\r\n    }\r\n    get_SpellListSpell(name: string = \"\", source: string = \"\", level: number = 0) {\r\n        return this.class?.spellList.filter(learned =>\r\n            (name ? learned.name == name : true) &&\r\n            (source ? learned.source == source : true) &&\r\n            (level ? learned.level >= level : true)\r\n        );\r\n    }\r\n    learn_Formula(item: Item, source: string) {\r\n        if (!this.class?.formulaBook.find(learned => learned.id == item.id)) {\r\n            this.class?.formulaBook.push(Object.assign(new FormulaLearned(), { id: item.id, source: source }));\r\n        }\r\n    }\r\n    unlearn_Formula(item: Item) {\r\n        this.class.formulaBook = this.class.formulaBook.filter(learned => learned.id != item.id);\r\n    }\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.class?.formulaBook.filter(learned =>\r\n            (id ? learned.id == id : true) &&\r\n            (source ? learned.source == source : true)\r\n        );\r\n    }\r\n    remove_Lore(characterService: CharacterService, source: LoreChoice) {\r\n        //Remove the original Lore training\r\n        for (let increase = 0; increase < source.initialIncreases; increase++) {\r\n            characterService.get_Character().increase_Skill(characterService, 'Lore: ' + source.loreName, false, source, true)\r\n        }\r\n        //Go through all levels and remove skill increases for this lore from their respective sources\r\n        //Also remove all Skill Choices that were added for this lore (as happens with the Additional Lore Feat).\r\n        this.class.levels.forEach(level => {\r\n            level.skillChoices.forEach(choice => {\r\n                choice.increases = choice.increases.filter(increase => increase.name != 'Lore: ' + source.loreName);\r\n            })\r\n            level.skillChoices = level.skillChoices.filter(choice => choice.filter.filter(filter => filter == 'Lore: ' + source.loreName).length == 0);\r\n        });\r\n        let loreSkill: Skill = characterService.get_Character().customSkills.find(skill => skill.name == 'Lore: ' + source.loreName);\r\n        if (loreSkill) {\r\n            characterService.remove_CustomSkill(loreSkill);\r\n        }\r\n        this.remove_LoreFeats(characterService, source.loreName);\r\n    }\r\n    remove_LoreFeats(characterService: CharacterService, loreName: string) {\r\n        let loreFeats: Feat[] = [];\r\n        //If we find any custom feat that has lorebase == \"Lore: \"+lorename,\r\n        //  That feat was created when the lore was assigned, and can be removed.\r\n        //We build our own reference array first, because otherwise the forEach-index would get messed up while we remove feats.\r\n        loreFeats.push(...characterService.get_Character().customFeats.filter(feat => feat.lorebase == 'Lore: ' + loreName));\r\n        if (loreFeats.length) {\r\n            loreFeats.forEach(loreFeat => {\r\n                characterService.remove_CustomFeat(loreFeat);\r\n            })\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"skills\");\r\n        characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n    }\r\n    add_Lore(characterService: CharacterService, source: LoreChoice) {\r\n        //Create the skill on the character. Lore can be increased, so it's locked:false.\r\n        characterService.add_CustomSkill('Lore: ' + source.loreName, \"Skill\", \"Intelligence\", false);\r\n        //Create as many skill increases as the source's initialIncreases value\r\n        for (let increase = 0; increase < source.initialIncreases; increase++) {\r\n            characterService.get_Character().increase_Skill(characterService, 'Lore: ' + source.loreName, true, source, true)\r\n        }\r\n        //The Additional Lore feat grants a skill increase on Levels 3, 7 and 15 that can only be applied to this lore.\r\n        if (source.source == \"Feat: Additional Lore\") {\r\n            this.add_SkillChoice(characterService.get_Level(3), Object.assign(new SkillChoice(), { available: 1, increases: [], filter: ['Lore: ' + source.loreName], type: \"Skill\", maxRank: 4, source: \"Feat: Additional Lore\", id: \"\" }))\r\n            this.add_SkillChoice(characterService.get_Level(7), Object.assign(new SkillChoice(), { available: 1, increases: [], filter: ['Lore: ' + source.loreName], type: \"Skill\", maxRank: 6, source: \"Feat: Additional Lore\", id: \"\" }))\r\n            this.add_SkillChoice(characterService.get_Level(15), Object.assign(new SkillChoice(), { available: 1, increases: [], filter: ['Lore: ' + source.loreName], type: \"Skill\", maxRank: 8, source: \"Feat: Additional Lore\", id: \"\" }))\r\n        }\r\n        this.add_LoreFeats(characterService, source.loreName);\r\n    }\r\n    add_LoreFeats(characterService: CharacterService, loreName: string) {\r\n        //There are particular feats that need to be cloned for every individual lore skill (mainly Assurance). They are marked as lorebase==true.\r\n        characterService.get_Feats().filter(feat => feat.lorebase == \"Lore\").forEach(lorebaseFeat => {\r\n            let newLength = characterService.add_CustomFeat(lorebaseFeat);\r\n            let newFeat = characterService.get_Character().customFeats[newLength - 1];\r\n            newFeat.name = newFeat.name.replace('Lore', 'Lore: ' + loreName);\r\n            newFeat.subType = newFeat.subType.replace('Lore', 'Lore: ' + loreName);\r\n            newFeat.skillreq.forEach(requirement => {\r\n                requirement.skill = requirement.skill.replace('Lore', 'Lore: ' + loreName);\r\n            })\r\n            newFeat.hints.forEach(hint => {\r\n                hint.showon = hint.showon.replace('Lore', 'Lore: ' + loreName)\r\n            });\r\n            newFeat.featreq = newFeat.featreq.map(featreq => featreq.replace('Lore', 'Lore: ' + loreName));\r\n            newFeat.lorebase = \"Lore: \" + loreName;\r\n            newFeat.hide = false;\r\n            characterService.set_ToChange(\"Character\", \"skills\");\r\n            characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        })\r\n    }\r\n}","import { Rune } from './Rune';\r\n\r\nexport class WeaponRune extends Rune {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Weapon Runes should be type \"weaponrunes\" to be found in the database\r\n    readonly type = \"weaponrunes\";\r\n    //You are enfeebled 2 if your alignment contains this word.\r\n    public alignmentPenalty: string = \"\";\r\n    public critfailure: string = \"\";\r\n    public criticalHint: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    //Can only be applied to a weapon with this damage type (or modular)\r\n    public damagereq: string = \"\";\r\n    public extraDamage: string = \"\";\r\n    public failure: string = \"\";\r\n    //Can only be applied to a weapon with this name\r\n    public namereq: string = \"\";\r\n    //Can only be applied to a melee weapon, or to a ranged weapon\r\n    public rangereq: \"\"|\"melee\"|\"ranged\" = \"\";\r\n    //Cannot apply to a weapon with this rune\r\n    public runeblock: string = \"\";\r\n    public striking: number = 0;\r\n    public success: string = \"\";\r\n    //Can only be applied to a weapon with this trait\r\n    public traitreq: string = \"\";\r\n}","import core from './core.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    custom_kitsune\r\n};","export class OtherItem {\r\n    public readonly _className: string = this.constructor.name;\r\n    public name: string = \"\";\r\n    public bulk: string = \"\";\r\n    public readonly amount: number = 1;\r\n}\r\n","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Health {\r\n    public readonly _className: string = this.constructor.name;\r\n    public damage: number = 0;\r\n    public immunities: any[] = [];\r\n    public lessenedEffects: any[] = [];\r\n    public resistances: any[] = [];\r\n    public temporaryHP: { amount: number, source: string, sourceId: string }[] = [{ amount: 0, source: \"\", sourceId: \"\" }];\r\n    calculate(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n        let result = {\r\n            maxHP: this.maxHP(creature, characterService, effectsService),\r\n            currentHP: this.currentHP(creature, characterService, effectsService),\r\n            wounded: this.wounded(creature, characterService),\r\n            dying: this.dying(creature, characterService),\r\n            maxDying: this.maxDying(creature, effectsService)\r\n        }\r\n        return result;\r\n    }\r\n    maxHP(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n        let explain = \"\";\r\n        let classHP = 0;\r\n        let ancestryHP = 0;\r\n        let charLevel = characterService.get_Character().level\r\n        if (creature.type == \"Familiar\") {\r\n            //Your familiar has 5 Hit Points for each of your levels.\r\n            classHP = 5 * charLevel;\r\n            explain = \"Familiar base HP: \" + classHP;\r\n        } else {\r\n            let classCreature = creature as AnimalCompanion | Character;\r\n            if (classCreature.class.hitPoints) {\r\n                if (classCreature.class.ancestry.name) {\r\n                    ancestryHP = classCreature.class.ancestry.hitPoints;\r\n                    explain = \"Ancestry base HP: \" + ancestryHP;\r\n                }\r\n                let constitution = characterService.get_Abilities(\"Constitution\")[0].baseValue(classCreature, characterService, charLevel).result;\r\n                let CON: number = Math.floor((constitution - 10) / 2);\r\n                classHP = (classCreature.class.hitPoints + CON) * charLevel;\r\n                explain += \"\\nClass: \" + classCreature.class.hitPoints + \" + CON: \" + (classCreature.class.hitPoints + CON) + \" per Level: \" + classHP;\r\n            }\r\n        }\r\n        let baseHP = ancestryHP + classHP;\r\n        let effectsSum = 0\r\n        effectsService.get_AbsolutesOnThis(creature, \"Max HP\").forEach(effect => {\r\n            effectsSum = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        effectsService.get_RelativesOnThis(creature, \"Max HP\").forEach(effect => {\r\n            effectsSum += parseInt(effect.value);\r\n            explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n        });\r\n        let result = baseHP + effectsSum;\r\n        return { result: result, explain: explain.trim() }\r\n    }\r\n    currentHP(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n        let maxHP = this.maxHP(creature, characterService, effectsService)\r\n        let sum = maxHP.result + this.temporaryHP[0].amount - this.damage;\r\n        let explain = \"Max HP: \" + maxHP.result;\r\n        if (this.temporaryHP[0].amount) {\r\n            explain += \"\\nTemporary HP: \" + this.temporaryHP[0].amount;\r\n        }\r\n        explain += \"\\nDamage taken: \" + (this.damage);\r\n        //You can never get under 0 HP. If you do (because you just took damage), that gets corrected here,\r\n        // and the health component gets reloaded in case we need to process new conditions.\r\n        if (sum < 0) {\r\n            this.damage += sum;\r\n            sum = 0;\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n            characterService.process_ToChange();\r\n        }\r\n        return { result: sum, explain: explain };\r\n    }\r\n    wounded(creature: Creature, characterService: CharacterService) {\r\n        let woundeds = 0;\r\n        let conditions = characterService.get_AppliedConditions(creature, \"Wounded\");\r\n        if (conditions.length) {\r\n            woundeds = Math.max(...conditions.map(gain => gain.value));\r\n        }\r\n        return Math.max(woundeds, 0)\r\n    }\r\n    dying(creature: Creature, characterService: CharacterService) {\r\n        let dying = 0;\r\n        let conditions = characterService.get_AppliedConditions(creature, \"Dying\");\r\n        if (conditions.length) {\r\n            dying = Math.max(...conditions.map(gain => gain.value));\r\n        }\r\n        return Math.max(dying, 0)\r\n    }\r\n    maxDying(creature: Creature, effectsService: EffectsService) {\r\n        let defaultMaxDying: number = 4;\r\n        let effectsSum = 0;\r\n        effectsService.get_AbsolutesOnThis(creature, \"Max Dying\").forEach(effect => {\r\n            effectsSum = parseInt(effect.value);\r\n        });\r\n        effectsService.get_RelativesOnThis(creature, \"Max Dying\").forEach(effect => {\r\n            effectsSum += parseInt(effect.value);\r\n        });\r\n        return defaultMaxDying + effectsSum;\r\n    }\r\n    takeDamage(creature: Creature, characterService: CharacterService, effectsService: EffectsService, amount: number, nonlethal: boolean = false, wounded: number = undefined, dying: number = undefined) {\r\n        if (wounded == undefined) {\r\n            wounded = this.wounded(creature, characterService);\r\n        }\r\n        if (dying == undefined) {\r\n            dying = this.dying(creature, characterService);\r\n        }\r\n        //First, absorb damage with temporary HP and add the rest to this.damage.\r\n        //Reset temp HP if it has reached 0, and remove other options if you are starting to use up your first amount of temp HP.\r\n        let diff = Math.min(this.temporaryHP[0].amount, amount);\r\n        this.temporaryHP[0].amount -= diff;\r\n        this.temporaryHP.length = 1;\r\n        if (this.temporaryHP[0].amount <= 0) {\r\n            this.temporaryHP[0] = { amount: 0, source: \"\", sourceId: \"\" }\r\n        }\r\n        amount -= diff;\r\n        this.damage += amount;\r\n        let currentHP = this.currentHP(creature, characterService, effectsService).result;\r\n        //Then, if you have reached 0 HP with lethal damage, get dying 1+wounded\r\n        //Dying and maxDying are compared in the Conditions service when Dying is added\r\n        if (!nonlethal && currentHP == 0) {\r\n            if (dying == 0) {\r\n                characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Dying\", value: wounded + 1, source: \"0 Hit Points\" }), false)\r\n            }\r\n        }\r\n        if (nonlethal && currentHP == 0) {\r\n            if (characterService.get_AppliedConditions(creature, \"Unconscious\", \"0 Hit Points\").length == 0) {\r\n                characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Unconscious\", source: \"0 Hit Points\" }), false)\r\n            }\r\n        }\r\n        //Wake up if you are unconscious and take damage (without falling under 1 HP)\r\n        if (currentHP > 0) {\r\n            characterService.get_AppliedConditions(creature, \"Unconscious\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false);\r\n            });\r\n        }\r\n    }\r\n    heal(creature: Creature, characterService: CharacterService, effectsService: EffectsService, amount: number, wake: boolean = true, increaseWounded: boolean = true, dying: number = undefined) {\r\n        if (dying == undefined) {\r\n            dying = this.dying(creature, characterService);\r\n        }\r\n        this.damage = Math.max(0, this.damage - amount);\r\n        //Recover from Dying and get Wounded++\r\n        if (this.currentHP(creature, characterService, effectsService).result > 0 && dying > 0) {\r\n            characterService.get_AppliedConditions(creature, \"Dying\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false, increaseWounded);\r\n            });\r\n        }\r\n        //Wake up from Healing\r\n        if (wake) {\r\n            characterService.get_AppliedConditions(creature, \"Unconscious\", \"0 Hit Points\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain);\r\n            });\r\n            characterService.get_AppliedConditions(creature, \"Unconscious\", \"Dying\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false);\r\n            });\r\n        }\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","<ng-container *ngFor=\"let phrase of get_Phrases(); trackBy:trackByIndex;\">\r\n    <span class=\"actionIcon action1A\" *ngIf=\"phrase=='1A'\"></span>\r\n    <span class=\"actionIcon action2A\" *ngIf=\"phrase=='2A'\"></span>\r\n    <span class=\"actionIcon action3A\" *ngIf=\"phrase=='3A'\"></span>\r\n    <span class=\"actionIcon actionFree\" *ngIf=\"phrase=='Free'\"></span>\r\n    <span class=\"actionIcon actionReaction\" *ngIf=\"phrase=='Reaction'\"></span>\r\n    <span class=\"lower\" *ngIf=\"!['Free','Reaction','1A','2A','3A'].includes(phrase)\"> {{phrase}} </span>\r\n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-actionIcons',\r\n    templateUrl: './actionIcons.component.html',\r\n    styleUrls: ['./actionIcons.component.css']\r\n})\r\nexport class ActionIconsComponent implements OnInit {\r\n\r\n    @Input()\r\n    actionString: string = \"\"\r\n    \r\n    constructor() { }\r\n\r\n    get_Phrases() {\r\n        return this.actionString?.split(' ') || [];\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { SpellGain } from './SpellGain';\r\n\r\nexport class SpellCast {\r\n    public readonly _className: string = this.constructor.name;\r\n    public level: number = 1;\r\n    public name: string = \"\";\r\n    //This duration can override the spell's standard duration when applying conditions.\r\n    public duration: number = 0;\r\n    //This is used automatically for sustained spells cast by items. Activities store their spellGain on the ActivityGain;\r\n    public spellGain: SpellGain = new SpellGain();\r\n    public target: \"ally\"|\"self\"|\"\" = \"\";\r\n}\r\n","import { Consumable } from './Consumable';\r\n\r\nexport class AlchemicalPoison extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical Poisons should be type \"alchemicalpoisons\" to be found in the database\r\n    readonly type = \"alchemicalpoisons\";\r\n    public savingThrow: string = \"\";\r\n    public maxDuration: number = 0;\r\n    //Alchemical Poisons can have Stages. Describe them here, with the index being the stage number and [0] being the Onset stage.\r\n    public stages: string[] = [];\r\n}","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { FeatsService } from 'src/app/feats.service';\r\nimport { Feat } from 'src/app/Feat';\r\nimport { FeatChoice } from 'src/app/FeatChoice';\r\nimport { FamiliarsService } from 'src/app/familiars.service';\r\nimport { Familiar } from 'src/app/Familiar';\r\nimport { Character } from 'src/app/Character';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { EffectsService } from 'src/app/effects.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TextAttribute } from '@angular/compiler/src/render3/r3_ast';\r\n\r\n@Component({\r\n    selector: 'app-featchoice',\r\n    templateUrl: './featchoice.component.html',\r\n    styleUrls: ['./featchoice.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeatchoiceComponent implements OnInit {\r\n\r\n    @Input()\r\n    choice: FeatChoice\r\n    @Input()\r\n    showChoice: string = \"\";\r\n    @Input()\r\n    showFeat: string = \"\";\r\n    showSubFeat: string = \"\";\r\n    uncollapseSubFeat: string = \"\";\r\n    @Output()\r\n    showFeatChoiceMessage = new EventEmitter<{ name: string, levelNumber: number, choice: FeatChoice }>();\r\n    @Output()\r\n    showFeatMessage = new EventEmitter<string>();\r\n    @Input()\r\n    levelNumber: number;\r\n    @Input()\r\n    creature: string = \"Character\"\r\n    @Input()\r\n    unavailableFeats: boolean = true;\r\n    @Input()\r\n    lowerLevelFeats: boolean = true;\r\n    @Input()\r\n    higherLevelFeats: boolean = true;\r\n    @Input()\r\n    archetypeFeats: boolean = true;\r\n    @Input()\r\n    showTitle: boolean = true;\r\n    @Input()\r\n    showContent: boolean = true;\r\n    @Input()\r\n    tileMode: boolean = false;\r\n    //Separate from the character level that you on when you are making this choice, this is the level that feats can have in this choice.\r\n    // It can change with the character level or other factors and will be re-calculated when the component refreshes.\r\n    public featLevel: number = 0;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private featsService: FeatsService,\r\n        private familiarsService: FamiliarsService,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_Feat(name: string) {\r\n        if (this.showFeat == name) {\r\n            this.showFeat = \"\";\r\n        } else {\r\n            this.showFeat = name;\r\n        }\r\n        this.showFeatMessage.emit(this.showFeat);\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showChoice == name) {\r\n            this.showChoice = \"\";\r\n            this.showFeatChoiceMessage.emit({ name: this.showChoice, levelNumber: 0, choice: null });\r\n        } else {\r\n            this.showChoice = name;\r\n            this.showFeatChoiceMessage.emit({ name: this.showChoice, levelNumber: this.levelNumber, choice: this.choice });\r\n        }\r\n    }\r\n\r\n    toggle_SubFeat(name: string) {\r\n        if (this.showSubFeat == name) {\r\n            this.showSubFeat = \"\";\r\n            this.uncollapseSubFeat = \"\";\r\n        } else {\r\n            this.showSubFeat = name;\r\n        }\r\n    }\r\n\r\n    get_ShowFeat() {\r\n        return this.showFeat;\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    get_ShowSubFeat() {\r\n        return this.showSubFeat;\r\n    }\r\n\r\n    get_UncollapseSubFeat() {\r\n        return this.uncollapseSubFeat;\r\n    }\r\n\r\n    set_UncollapseSubFeat(name: string) {\r\n        //After the component finishes loading, trigger the un-collapsing of the currently shown subfeat.\r\n        //If we do it immediately, the un-collapsing will not be animated because the content is not loaded before it finishes.\r\n        if (this.get_UncollapseSubFeat() != name) {\r\n            this.uncollapseSubFeat = name;\r\n        }\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByFeat(index: number, featSet: { available: boolean, feat: Feat }) {\r\n        //Feat options are sorted by whether they are available or not. When you take one, you might no longer meet the prerequisites\r\n        // for another feat that gets pushed to the \"unavailable\" section and may change the order of options.\r\n        // This can lead to another option now being checked in the position of the taken option.\r\n        // By tracking by name instead of index, we make sure the correct feats get redrawn.\r\n        return featSet.feat.name;\r\n    }\r\n\r\n    trackBySubType(index: number, subfeatSet: { available: boolean, subfeat: Feat }) {\r\n        //Subfeat options are sorted by whether they are available or not. When you take one, you might now meet the prerequisites\r\n        // for another subfeat that gets pushed to the \"available\" section and may change the order of options.\r\n        // This can lead to another option now being checked in the position of the taken option.\r\n        // By tracking by subtype instead of index, we make sure the correct subfeats get redrawn.\r\n        return subfeatSet.subfeat.subType;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.tileMode;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Character | Familiar;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_ButtonTitle(availableFeats: number) {\r\n        let title: string = (this.featLevel != this.levelNumber) ? \"Level \" + this.featLevel + \" \" : \"\";\r\n        title += this.choice.type.split(\",\").join(\", \");\r\n        if (!this.choice.specialChoice) {\r\n            if (this.creature == \"Familiar\") {\r\n                title += availableFeats > 1 ? ' Abilities' : ' Ability';\r\n            } else {\r\n                title += availableFeats > 1 ? ' Feats' : ' Feat';\r\n            }\r\n        }\r\n        if (this.creature != \"Familiar\") {\r\n            title += \" (\" + this.choice.source + \")\";\r\n        }\r\n        if (availableFeats > 1) {\r\n            title += \": \" + this.choice.feats.length + \"/\" + availableFeats;\r\n        } else if (this.choice.feats.length) {\r\n            title += \": \" + this.choice.feats[0].name;\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_Available(choice: FeatChoice) {\r\n        if (this.creature == \"Familiar\") {\r\n            let available = choice.available;\r\n            this.effectsService.get_AbsolutesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n                available = parseInt(effect.setValue);\r\n            });\r\n            this.effectsService.get_RelativesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n                available += parseInt(effect.value);\r\n            });\r\n            return available;\r\n        }\r\n        return choice.available\r\n    }\r\n\r\n    get_Feats(name: string = \"\", type: string = \"\") {\r\n        if (this.creature == \"Character\") {\r\n            return this.featsService.get_Feats(this.get_Character().customFeats, name, type);\r\n        } else if (this.creature == \"Familiar\") {\r\n            return this.familiarsService.get_FamiliarAbilities(name);\r\n        }\r\n    }\r\n\r\n    get_FeatsAndFeatures(name: string = \"\", type: string = \"\") {\r\n        if (this.creature == \"Character\") {\r\n            return this.featsService.get_All(this.get_Character().customFeats, name, type);\r\n        } else if (this.creature == \"Familiar\") {\r\n            return this.familiarsService.get_FamiliarAbilities(name);\r\n        }\r\n    }\r\n\r\n    get_SubFeats(feat: Feat, choice: FeatChoice) {\r\n        if (feat.subTypes) {\r\n            let available = this.get_Available(choice)\r\n            let feats: Feat[] = this.get_Feats().filter((subFeat: Feat) => subFeat.superType == feat.name && !subFeat.hide);\r\n            if (choice.filter.length) {\r\n                feats = feats.filter(subFeat => choice.filter.includes(subFeat.name) || choice.filter.includes(subFeat.superType))\r\n            }\r\n            let showOtherOptions = true;\r\n            if (choice.feats.length >= available) {\r\n                showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n            }\r\n            return feats.map(feat => {\r\n                let available = (this.cannotTake(feat, choice).length == 0 || this.get_FeatTakenByChoice(feat, choice));\r\n                return { available: available, subfeat: feat }\r\n            }).filter(featSet => showOtherOptions || this.get_FeatTakenByChoice(featSet.subfeat, choice))\r\n                .sort(function (a, b) {\r\n                    if (a.subfeat.subType < b.subfeat.subType) {\r\n                        return -1;\r\n                    }\r\n                    if (a.subfeat.subType > b.subfeat.subType) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }).sort(function (a, b) {\r\n                    if (a.available && !b.available) {\r\n                        return -1;\r\n                    }\r\n                    if (!a.available && b.available) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_ChoiceLevel(choice: FeatChoice) {\r\n        let featLevel = 0;\r\n        //Use character level for Familiar Abilities or for choices that don't look at the choice level, but the current character level.\r\n        if (choice.source == \"Familiar\") {\r\n            featLevel = this.get_Character().level;\r\n        } else {\r\n            if (choice.level) {\r\n                featLevel = choice.level;\r\n            } else if (choice.dynamicLevel) {\r\n                try {\r\n                    //Prepare level for the dynamicLevel evaluation.\r\n                    let level = this.get_Character().class.levels[this.levelNumber];\r\n                    let Character = this.get_Character();\r\n                    //Eval the dynamicLevel string to convert things like \"level.number / 2\". \"1\" is still \"1\".\r\n                    featLevel = Math.floor(parseInt(eval(choice.dynamicLevel)));\r\n                } catch (e) {\r\n                    console.log(\"Error converting Feat level\");\r\n                }\r\n            } else {\r\n                featLevel = this.levelNumber;\r\n            }\r\n        }\r\n        return featLevel;\r\n    }\r\n\r\n    get_AvailableFeats(choice: FeatChoice) {\r\n        let character = this.get_Character()\r\n        let available = this.get_Available(choice);\r\n        //Get all feats, but no subtype Feats (those that have the supertype attribute set) - those get built within their supertype\r\n        let allFeats: Feat[] = this.get_Feats().filter(feat => !feat.superType && !feat.hide);\r\n        //Get subfeats for later use\r\n        let allSubFeats: Feat[] = this.get_Feats().filter(feat => feat.superType && !feat.hide);\r\n        if (choice.filter.length) {\r\n            allFeats = allFeats.filter(feat =>\r\n                choice.filter.includes(feat.name) ||\r\n                (\r\n                    feat.subTypes &&\r\n                    this.get_Feats().some(subFeat => !subFeat.hide && subFeat.superType == feat.name && choice.filter.includes(subFeat.name))\r\n                )\r\n            )\r\n        }\r\n        let feats: Feat[] = [];\r\n        if (choice.specialChoice) {\r\n            //For special choices, we don't really use true feats, but make choices that can best be represented by the extensive feat structure.\r\n            //In this case, we don't go looking for feats with a certain trait, but rely completely on the filter.\r\n            feats.push(...allFeats);\r\n        } else {\r\n            switch (choice.type) {\r\n                case \"Class\":\r\n                    feats.push(...allFeats.filter(feat => feat.traits.includes(character.class.name) || feat.traits.includes(\"Archetype\")));\r\n                    break;\r\n                case \"Ancestry\":\r\n                    character.class.ancestry.ancestries.concat([\"Ancestry\"]).forEach(trait => {\r\n                        feats.push(...allFeats.filter(feat => feat.traits.includes(trait)));\r\n                    })\r\n                    break;\r\n                case \"Familiar\":\r\n                    feats.push(...allFeats.filter(feat => feat.traits.includes(\"Familiar Ability\") || feat.traits.includes(\"Master Ability\")));\r\n                default:\r\n                    let traits: string[] = choice.type.split(\",\")\r\n                    feats.push(...allFeats.filter((feat: Feat) => traits.filter(trait => feat.traits.includes(trait)).length == traits.length));\r\n                    break;\r\n            }\r\n        }\r\n        if (feats.length) {\r\n            if (!this.lowerLevelFeats && !choice.showOnSheet) {\r\n                feats = feats.filter(feat => feat.levelreq >= this.featLevel || !feat.levelreq || this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice));\r\n            }\r\n            if (!this.higherLevelFeats && !choice.showOnSheet) {\r\n                feats = feats.filter(feat => feat.levelreq <= this.featLevel || !feat.levelreq || this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice))\r\n            }\r\n            if (!this.archetypeFeats) {\r\n                feats = feats.filter(feat => !feat.traits.includes(\"Archetype\") || this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice))\r\n            }\r\n            if (this.archetypeFeats) {\r\n                //Show archetype feats only if their dedication feat has been taken.\r\n                feats = feats.filter(feat =>\r\n                    !feat.archetype ||\r\n                    (\r\n                        feat.traits.includes(\"Dedication\") &&\r\n                        feat.archetype != character.class.name\r\n                    ) ||\r\n                    (\r\n                        feat.archetype && this.get_Feats()\r\n                            .find(superFeat =>\r\n                                superFeat.archetype == feat.archetype &&\r\n                                superFeat.traits.includes(\"Dedication\") &&\r\n                                superFeat.have(character, this.characterService, this.levelNumber)\r\n                            )\r\n                    )\r\n                );\r\n            }\r\n            let showOtherOptions = true;\r\n            if (choice.feats.length >= available) {\r\n                showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n            }\r\n            return feats.map(feat => {\r\n                let featAvailable = (this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice) || this.cannotTake(feat, choice).length == 0);\r\n                return { available: featAvailable, feat: feat };\r\n            }).filter(featSet => ((this.unavailableFeats || featSet.available) && showOtherOptions) || this.get_FeatTakenByChoice(featSet.feat, choice) || this.subFeatTakenByThis(allSubFeats, featSet.feat, choice))\r\n                .sort(function (a, b) {\r\n                    //Sort by level, then name. Divide level by 100 to create leading zeroes (and not sort 10 before 2), then cut it down to 3 digits. 0 will be 0.00.\r\n                    //For skill feat choices and general feat choices, sort by the associated skill (if exactly one), then level and name.\r\n                    //Feats with less or more required skills are sorted first.\r\n                    let sortLevel_a = ((a.feat.levelreq || 0.1) / 100).toString().substr(0, 4);\r\n                    let sortLevel_b = ((b.feat.levelreq || 0.1) / 100).toString().substr(0, 4);\r\n                    let sort_a = sortLevel_a + a.feat.name;\r\n                    let sort_b = sortLevel_b + b.feat.name;\r\n                    if ([\"General\", \"Skill\"].includes(choice.type)) {\r\n                        sort_a = (a.feat.skillreq.length == 1 ? a.feat.skillreq[0]?.skill : \"_\") + sort_a;\r\n                        sort_b = (b.feat.skillreq.length == 1 ? b.feat.skillreq[0]?.skill : \"_\") + sort_b;\r\n                    }\r\n                    if (sort_a < sort_b) {\r\n                        return -1;\r\n                    }\r\n                    if (sort_a > sort_b) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }).sort(function (a, b) {\r\n                    //Lastly, sort by availability.\r\n                    if (a.available && !b.available) {\r\n                        return -1;\r\n                    }\r\n                    if (!a.available && b.available) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_AvailableFeatsCount(featSets: { available: boolean, feat: Feat }[], available: boolean = true) {\r\n        return featSets.filter(featSet => featSet.available == available).length;\r\n    }\r\n\r\n    cannotTakeSome(choice: FeatChoice) {\r\n        let anytrue = 0;\r\n        let available = this.get_Available(choice);\r\n        choice.feats.forEach((feat, index) => {\r\n            let template: Feat = this.get_Feats(feat.name)[0];\r\n            if (template?.name) {\r\n                if (this.cannotTake(template, choice).length || index >= available) {\r\n                    if (!feat.locked) {\r\n                        this.get_Character().take_Feat(this.get_Creature(), this.characterService, template, feat.name, false, choice, feat.locked);\r\n                    } else {\r\n                        anytrue += 1;\r\n                    }\r\n                    this.characterService.process_ToChange();\r\n                }\r\n            }\r\n        });\r\n        return anytrue;\r\n    }\r\n\r\n    create_IgnoreRequirementList(feat: Feat, choice: FeatChoice) {\r\n        //Prepare character and characterService for eval.\r\n        let character = this.get_Character();\r\n        let characterService = this.characterService;\r\n        //Build the ignoreRequirements list from both the feat and the choice.\r\n        let ignoreRequirementsList: string[] = [];\r\n        feat.ignoreRequirements.concat((choice?.ignoreRequirements || [])).forEach(ignoreReq => {\r\n            try {\r\n                ignoreRequirementsList.push(eval(ignoreReq));\r\n            } catch (error) {\r\n                console.log(\"Failed evaluating feat requirement ignore list item (\" + ignoreReq + \"): \" + error)\r\n            }\r\n        })\r\n        return ignoreRequirementsList;\r\n    }\r\n\r\n    cannotTake(feat: Feat, choice: FeatChoice, skipLevel: boolean = false) {\r\n        //Don't run the test on a blank feat - does not go well.\r\n        if (feat?.name) {\r\n            let creature = this.get_Creature();\r\n            let levelNumber = this.levelNumber;\r\n            let takenByThis: number = this.get_FeatTakenByChoice(feat, choice) ? 1 : 0;\r\n            let ignoreRequirementsList: string[] = this.create_IgnoreRequirementList(feat, choice);\r\n            let reasons: { reason: string, explain: string }[] = [];\r\n            let traits: string[] = [];\r\n            switch (choice.type) {\r\n                case \"Class\":\r\n                    traits.push(this.get_Character().class?.name, \"Archetype\");\r\n                    break;\r\n                case \"Ancestry\":\r\n                    traits.push(...this.get_Character().class?.ancestry?.ancestries, \"Ancestry\");\r\n                    break;\r\n                case \"Familiar\":\r\n                    traits.push(\"Familiar Ability\", \"Master Ability\");\r\n                    break;\r\n                default:\r\n                    traits.push(...choice.type.split(\",\"));\r\n                    break;\r\n            }\r\n            //Does the type not match a trait? (Unless it's a special choice, where the type doesn't matter and is just the title.)\r\n            if (!choice.specialChoice && !feat.traits.find(trait => traits.includes(trait))) {\r\n                reasons.push({ reason: \"Invalid type\", explain: \"The feat's traits do not match the choice type.\" });\r\n            }\r\n            //Are the basic requirements (level, ability, feat etc) not met?\r\n            if (!feat.canChoose(this.characterService, this.featLevel, levelNumber, skipLevel, ignoreRequirementsList)) {\r\n                reasons.push({ reason: \"Requirements unmet\", explain: \"Not all requirements are met.\" });\r\n            }\r\n            //If the feat can be taken a limited number of times:\r\n            //  (Don't count temporary choices (showOnSheet == true) unless this is also temporary.)\r\n            let excludeTemporary = !choice.showOnSheet;\r\n            let haveUpToNow: number = feat.have(creature, this.characterService, levelNumber, excludeTemporary, true);\r\n            //Familiar abilities are independent of level. Don't check haveLater for them, because it will be the same result as haveUpToNow.\r\n            let haveLater: number = creature.type == \"Character\" ? feat.have(creature, this.characterService, 20, excludeTemporary, true, levelNumber + 1) : 0;\r\n            if (!feat.unlimited) {\r\n                if (feat.limited) {\r\n                    //Has it already been taken up to this level, excluding this FeatChoice, and more often than the limit?\r\n                    //  Don't count temporary choices (showOnSheet == true) unless this is also temporary.\r\n                    if (haveUpToNow - takenByThis >= feat.limited) {\r\n                        reasons.push({ reason: \"Already taken\", explain: \"This feat cannot be taken more than \" + feat.limited + \" times.\" });\r\n                    } else if (haveUpToNow - takenByThis + haveLater >= feat.limited) {\r\n                        //Has it been taken more often than the limits, including higher levels?\r\n                        reasons.push({ reason: \"Taken on higher levels\", explain: \"This feat has been selected all \" + feat.limited + \" times, including on higher levels.\" });\r\n                    }\r\n                } else {\r\n                    //Has it already been taken up to this level, excluding this FeatChoice?\r\n                    //  Don't count temporary choices (showOnSheet == true) unless this is also temporary.\r\n                    if (haveUpToNow - takenByThis > 0) {\r\n                        reasons.push({ reason: \"Already taken\", explain: \"This feat cannot be taken more than once.\" });\r\n                    }\r\n                    //Has it been taken on a higher level (that is, not up to now, but up to Level 20)?\r\n                    if (haveLater > 0) {\r\n                        reasons.push({ reason: \"Taken on higher level\", explain: \"This feat has been selected on a higher level.\" });\r\n                    }\r\n                }\r\n            }\r\n            //Dedication feats (unless the dedication limit is ignored)\r\n            if (feat.traits.includes(\"Dedication\") && !ignoreRequirementsList.includes(\"dedicationlimit\")) {\r\n                //Get all taken dedication feats that aren't this, then check if you have taken enough to allow a new archetype.\r\n                let takenFeats = this.get_FeatsAndFeatures().filter(feat => feat.have(creature, this.characterService, levelNumber, true));\r\n                takenFeats\r\n                    .filter(libraryfeat => libraryfeat?.name != feat.name && libraryfeat?.traits.includes(\"Dedication\")).forEach(takenfeat => {\r\n                        let archetypeFeats = takenFeats\r\n                            .filter(libraryfeat => libraryfeat?.name != takenfeat.name && libraryfeat?.traits.includes(\"Archetype\") && libraryfeat.archetype == takenfeat.archetype)\r\n                        if (archetypeFeats.length < 2) {\r\n                            reasons.push({ reason: \"Dedications blocked\", explain: \"You cannot select another dedication feat until you have gained two other feats from the \" + takenfeat.archetype + \" archetype.\" });\r\n                        }\r\n                    });\r\n            }\r\n            //If this feat has any subtypes, check if any of them can be taken. If not, this cannot be taken either.\r\n            if (feat.subTypes) {\r\n                let subfeats: Feat[] = this.get_Feats().filter(subfeat => subfeat.superType == feat.name && !subfeat.hide);\r\n                let availableSubfeats = subfeats.filter(subfeat =>\r\n                    this.get_FeatTakenByChoice(subfeat, choice) || this.cannotTake(subfeat, choice, skipLevel).length == 0\r\n                );\r\n                if (availableSubfeats.length == 0) {\r\n                    reasons.push({ reason: \"No option available\", explain: \"None of the options for this feat has its requirements met.\" });\r\n                }\r\n\r\n            }\r\n            //If a subtype has been taken and the feat is not limited, no other subfeat can be taken.\r\n            if (feat.superType) {\r\n                let superfeat: Feat = this.get_Feats().find(superfeat => superfeat.name == feat.superType && !superfeat.hide);\r\n                let takenSubfeats: Feat[] = this.get_Feats().filter(subfeat => subfeat.superType == feat.superType && subfeat.name != feat.name && !subfeat.hide && subfeat.have(creature, this.characterService, levelNumber));\r\n                //If another subtype has been taken, but not in this choice, and the feat is not unlimited, no other subfeat can be taken.\r\n                if (!superfeat.unlimited && !superfeat.limited && takenSubfeats.length) {\r\n                    reasons.push({ reason: \"Feat already taken\", explain: \"This feat cannot be taken more than once.\" });\r\n                }\r\n                if (superfeat.limited && takenSubfeats.length >= superfeat.limited) {\r\n                    reasons.push({ reason: \"Feat already taken\", explain: \"This feat cannot be taken more than \" + superfeat.limited + \" times.\" });\r\n                }\r\n            }\r\n            return reasons;\r\n        }\r\n    }\r\n\r\n    get_FeatTakenEver(feat: Feat) {\r\n        //Return whether this feat or a feat that counts as this feat has been taken at all up to this level - unless it's unlimited or its limit is not reached yet.\r\n        let taken = this.get_Character().get_FeatsTaken(1, this.levelNumber, feat.name, '', '', undefined, true, true);\r\n        return !feat.unlimited && taken.length && taken.length >= feat.limited;\r\n    }\r\n\r\n    get_FeatTakenByChoice(feat: Feat, choice: FeatChoice) {\r\n        return choice.feats.some(gain => gain.name == feat.name || gain.countAsFeat == feat.name);\r\n    }\r\n\r\n    subFeatTakenByThis(subfeats: Feat[] = this.get_Feats(), feat: Feat, choice: FeatChoice) {\r\n        return subfeats.some(subFeat => subFeat.superType == feat.name && choice.feats.some(gain => gain.name == subFeat.name));\r\n    }\r\n\r\n    get_FeatsTaken(minLevelNumber: number, maxLevelNumber: number, featName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        return this.get_Character().get_FeatsTaken(minLevelNumber, maxLevelNumber, featName, source, sourceId, locked);\r\n    }\r\n\r\n    get_FeatRequirements(choice: FeatChoice, feat: Feat, compare: Feat = undefined) {\r\n        let result: Array<{ met?: boolean, ignored?: boolean, desc?: string }> = [];\r\n        let ignoreRequirementsList: string[] = this.create_IgnoreRequirementList(feat, choice);\r\n        //For subtypes, the supertype feat to compare is given. Only those requirements that differ from the supertype will be returned.\r\n        if (compare) {\r\n            if (feat.levelreq != compare.levelreq ||\r\n                JSON.stringify(feat.abilityreq) != JSON.stringify(compare.abilityreq) ||\r\n                JSON.stringify(feat.skillreq) != JSON.stringify(compare.skillreq) ||\r\n                feat.featreq != compare.featreq ||\r\n                feat.specialreqdesc != compare.specialreqdesc\r\n            ) {\r\n                result.push({ met: true, ignored: false, desc: \"requires \" });\r\n                if (feat.levelreq && feat.levelreq != compare.levelreq) {\r\n                    result.push(feat.meetsLevelReq(this.characterService, this.levelNumber));\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('levelreq');\r\n                }\r\n                if (feat.abilityreq.length && JSON.stringify(feat.abilityreq) != JSON.stringify(compare.abilityreq)) {\r\n                    feat.meetsAbilityReq(this.characterService, this.levelNumber).forEach(req => {\r\n                        result.push({ met: true, desc: \", \" });\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('abilityreq');\r\n                    });\r\n                }\r\n                if (feat.skillreq.length && JSON.stringify(feat.skillreq) != JSON.stringify(compare.skillreq)) {\r\n                    feat.meetsSkillReq(this.characterService, this.levelNumber).forEach((req, index) => {\r\n                        if (index == 0) {\r\n                            result.push({ met: true, desc: \", \" });\r\n                        } else {\r\n                            result.push({ met: true, desc: \" or \" });\r\n                        }\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('skillreq');\r\n                    });\r\n                }\r\n                if (feat.featreq.length && JSON.stringify(feat.featreq) != JSON.stringify(compare.featreq)) {\r\n                    feat.meetsFeatReq(this.characterService, this.levelNumber).forEach(req => {\r\n                        result.push({ met: true, desc: \", \" });\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('featreq');\r\n                    });\r\n                }\r\n                if (feat.heritagereq.length && JSON.stringify(feat.heritagereq) != JSON.stringify(compare.heritagereq)) {\r\n                    feat.meetsHeritageReq(this.characterService, this.levelNumber).forEach(req => {\r\n                        result.push({ met: true, desc: \", \" });\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('heritagereq');\r\n                    });\r\n                }\r\n                if (feat.specialreqdesc && feat.specialreqdesc != compare.specialreqdesc) {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(feat.meetsSpecialReq(this.characterService, this.levelNumber));\r\n                }\r\n            }\r\n        } else {\r\n            if (feat.levelreq) {\r\n                result.push(feat.meetsLevelReq(this.characterService, this.featLevel));\r\n                result[result.length - 1].ignored = ignoreRequirementsList.includes('levelreq');\r\n            }\r\n            if (feat.abilityreq.length) {\r\n                feat.meetsAbilityReq(this.characterService, this.levelNumber).forEach(req => {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('abilityreq');\r\n                });\r\n            }\r\n            if (feat.skillreq.length) {\r\n                feat.meetsSkillReq(this.characterService, this.levelNumber).forEach((req, index) => {\r\n                    if (index == 0) {\r\n                        result.push({ met: true, desc: \", \" });\r\n                    } else {\r\n                        result.push({ met: true, desc: \" or \" });\r\n                    }\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('skillreq');\r\n                });\r\n            }\r\n            if (feat.featreq.length) {\r\n                feat.meetsFeatReq(this.characterService, this.levelNumber).forEach(req => {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('featreq');\r\n                });\r\n            }\r\n            if (feat.heritagereq) {\r\n                feat.meetsHeritageReq(this.characterService, this.levelNumber).forEach(req => {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('heritagereq');\r\n                });\r\n            }\r\n            if (feat.specialreqdesc) {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(feat.meetsSpecialReq(this.characterService, this.levelNumber));\r\n            }\r\n        }\r\n        if (result.length > 1) {\r\n            if (result[0].desc == \", \") {\r\n                result.shift();\r\n            }\r\n            if (result[0].desc == \"requires \" && result[1].desc == \", \") {\r\n                result.splice(1, 1);\r\n            }\r\n        } else if (result.length == 1 && result[0].desc == \"requires \") {\r\n            result.length = 0;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    on_FeatTaken(feat: Feat, taken: boolean, choice: FeatChoice, locked: boolean) {\r\n        if (taken && this.get_Character().settings.autoCloseChoices && (choice.feats.length == this.get_Available(choice) - 1)) { this.toggle_List(\"\"); }\r\n        this.get_Character().take_Feat(this.get_Creature(), this.characterService, feat, feat.name, taken, choice, locked);\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"featchoices\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.featLevel = this.get_ChoiceLevel(this.choice);\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"featchoices\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.featLevel = this.get_ChoiceLevel(this.choice);\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.featLevel = this.get_ChoiceLevel(this.choice);\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let listID of [choice.source+choice.id]; trackBy:trackByIndex\">\r\n    <ng-container *ngFor=\"let availableFeats of [get_Available(choice)]; trackBy:trackByIndex\">\r\n        <ng-container *ngFor=\"let buttonTitle of [get_ButtonTitle(availableFeats)]; trackBy:trackByIndex\">\r\n            <div *ngIf=\"availableFeats > 0\"\r\n                [ngClass]=\"{'list-item': showTitle && !get_TileMode(), 'problem':(cannotTakeSome(choice) || choice.feats.length > availableFeats), 'fullsize-only':(availableFeats == choice.feats.length)}\">\r\n                <!--Choice button shows in title mode-->\r\n                <!--List mode button-->\r\n                <button class=\"newrow left-aligned sublist-toggle\" *ngIf=\"showTitle && (!get_TileMode() || showContent)\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(availableFeats == choice.feats.length), 'featchoice':!choice.specialChoice && !choice.showOnSheet && (choice.type != 'Familiar'), 'specialchoice':choice.specialChoice && !choice.showOnSheet, 'activechoice':get_ShowChoice()==listID && (!choice.showOnSheet && (choice.type != 'Familiar'))}\"\r\n                    (click)=\"toggle_List(listID)\">\r\n                    {{buttonTitle}}\r\n                </button>\r\n                <!--Tile mode button-->\r\n                <button (click)=\"toggle_List(listID)\" *ngIf=\"showTitle && !showContent && get_TileMode()\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(availableFeats == choice.feats.length), 'featchoice':!choice.specialChoice, 'specialchoice':choice.specialChoice, 'activechoice':get_ShowChoice()==listID}\">\r\n                    <app-gridIcon [ngbTooltip]=\"buttonTitle\" [superTitle]=\"availableFeats.toString()\"\r\n                        [title]=\"(availableFeats == 1 && choice.feats.length) ? choice.feats[0].name : ((availableFeats > 1 && choice.feats.length > 0) ? choice.feats.length.toString() : '')\"\r\n                        [ngClass]=\"{'fancy-button':(availableFeats == choice.feats.length), 'featchoice':!choice.specialChoice, 'specialchoice':choice.specialChoice}\"\r\n                        [subTitle]=\"choice.feats.length ? '' : choice.type.split(' ')[0].substr(0,8)\">\r\n                    </app-gridIcon>\r\n                </button>\r\n                <!--Choice title shows above content in content only mode-->\r\n                <div class=\"newrow list-item padding-8 center-aligned\" *ngIf=\"!showTitle\">\r\n                    <header class=\"box-header sectionHeader\">\r\n                        {{buttonTitle}}\r\n                    </header>\r\n                </div>\r\n                <!--Choice content shows in content mode-->\r\n                <div id=\"{{!showTitle ? 'choiceArea' : ''}}\"\r\n                    [ngClass]=\"{'list-item sublist':showTitle, 'fancy-list':showTitle && (availableFeats == choice.feats.length), 'charactersheet-app':!showTitle, 'featchoice':!choice.specialChoice && !choice.showOnSheet && (choice.type != 'Familiar'), 'specialchoice':choice.specialChoice && !choice.showOnSheet}\"\r\n                    *ngIf=\"showContent && get_ShowChoice()==listID\">\r\n                    <!-- Filter -->\r\n                    <div class=\"list-item lower\">\r\n                        <strong>Filter</strong>\r\n                        <div class=\"list-item gridicon-fullsizebox\">\r\n                            <input class=\"character-choice\" id=\"unavailableFeats\" type=\"checkbox\"\r\n                                [(ngModel)]=\"unavailableFeats\">\r\n                            <label for=\"unavailableFeats\">\r\n                                <strong>\r\n                                    Show unavailable {{choice.specialChoice ? 'options' : 'feats'}}\r\n                                </strong>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\"\r\n                            *ngIf=\"!choice.specialChoice && choice.type != 'Familiar'\">\r\n                            <input class=\"character-choice\" id=\"lowerLevelFeats\" type=\"checkbox\"\r\n                                [(ngModel)]=\"lowerLevelFeats\">\r\n                            <label for=\"lowerLevelFeats\">\r\n                                <strong>\r\n                                    Show lower level feats\r\n                                </strong>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"fullwidth\" [ngbCollapse]=\"!unavailableFeats\"\r\n                            *ngIf=\"!choice.specialChoice && choice.type != 'Familiar'\">\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"higherLevelFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"higherLevelFeats\">\r\n                                <label for=\"higherLevelFeats\">\r\n                                    <strong>\r\n                                        Show higher level feats\r\n                                    </strong>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\"\r\n                            *ngIf=\"!choice.specialChoice && choice.type != 'Familiar'\">\r\n                            <input class=\"character-choice\" id=\"archetypeFeats\" type=\"checkbox\"\r\n                                [(ngModel)]=\"archetypeFeats\">\r\n                            <label for=\"archetypeFeats\">\r\n                                <strong>\r\n                                    Show archetype feats\r\n                                </strong>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <!-- End Filter -->\r\n                    <ng-container *ngFor=\"let featSets of [get_AvailableFeats(choice)]; trackBy:trackByIndex\">\r\n                        <div class=\"list-item\" *ngIf=\"get_AvailableFeatsCount(featSets) < availableFeats\">\r\n                            <span>There are fewer results available than you are allowed to take. This may be due to a\r\n                                choice with limited options, and it might be intended at this time.</span>\r\n                            <span *ngIf=\"!higherLevelFeats || !lowerLevelFeats\">More results may be found if you allow\r\n                                lower and higher level feats.</span>\r\n                            <span *ngIf=\"choice.showOnCurrentLevel\">This feat choice is always available on your current\r\n                                character level. This could change the number of available feats at a later time.</span>\r\n                        </div>\r\n                        <ng-container *ngFor=\"let featSet of featSets; trackBy:trackByFeat;\">\r\n                            <ng-container\r\n                                *ngFor=\"let taken of [get_FeatTakenByChoice(featSet.feat, choice)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [taken || (!featSet.available && get_FeatTakenEver(featSet.feat))]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [(availableFeats <= choice.feats.length) && !taken]; trackBy:trackByIndex\">\r\n                                        <ng-template #FeatChoiceDetailTemplate>\r\n                                            <div class=\"newrow\">\r\n                                                <header class=\"spellHeader\">{{featSet.feat.name}}</header>\r\n                                                <div class=\"button newrow no-animation\"\r\n                                                    *ngIf=\"!featSet.feat.subTypes && featSet.available\"\r\n                                                    [ngClass]=\"{'fancy-button':taken, 'disabled':disabled}\">\r\n                                                    <label>\r\n                                                        <input type=\"checkbox\"\r\n                                                            (change)=\"on_FeatTaken(featSet.feat, $event.target.checked, choice, false)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                        {{taken ? \"Remove\" : \"Choose\"}}\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\">\r\n                                                    <cite [ngbPopover]=\"reason.explain\" class=\"problem\"\r\n                                                        *ngFor=\"let reason of cannotTake(featSet.feat, choice, true); trackBy:trackByIndex;\">\r\n                                                        {{reason.reason}}\r\n                                                    </cite>\r\n                                                </div>\r\n                                                <app-feat [feat]=\"featSet.feat\" [choice]=\"choice\"\r\n                                                    [levelNumber]=\"levelNumber\" [featLevel]=\"featLevel\"></app-feat>\r\n                                                <!--Subfeats-->\r\n                                                <ng-container\r\n                                                    *ngFor=\"let subfeatSet of get_SubFeats(featSet.feat, choice); trackBy:trackBySubType;\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let subFeatTaken of [get_FeatTakenByChoice(subfeatSet.subfeat, choice)]; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let subFeatChecked of [subFeatTaken || (!subfeatSet.available && get_FeatTakenEver(subfeatSet.subfeat))]; trackBy:trackByIndex;\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let subFeatDisabled of [(availableFeats <= choice.feats.length && !subFeatTaken)]; trackBy:trackByIndex;\">\r\n                                                                <div class=\"newrow list-item\"\r\n                                                                    [ngClass]=\"{'selected':subFeatTaken, 'unavailable':(!subfeatSet.available)}\"\r\n                                                                    style=\"justify-content: flex-end;\">\r\n                                                                    <div class=\"newrow left-aligned\"\r\n                                                                        *ngFor=\"let subItemID of [choice.id+subfeatSet.subfeat.name+'desc']; trackBy:trackByIndex;\">\r\n                                                                        <span class=\"gridicon-fullsizebox\"\r\n                                                                            style=\"flex-grow: 1;\">\r\n                                                                            <input\r\n                                                                                id=\"{{choice.id+subfeatSet.subfeat.name}}\"\r\n                                                                                type=\"checkbox\" class=\"character-choice\"\r\n                                                                                (change)=\"on_FeatTaken(subfeatSet.subfeat, $event.target.checked, choice, false)\"\r\n                                                                                [checked]=\"subFeatChecked\"\r\n                                                                                [disabled]=\"subFeatDisabled\"\r\n                                                                                *ngIf=\"subfeatSet.available\">\r\n                                                                            <strong>{{subfeatSet.subfeat.subType}}</strong>\r\n                                                                        </span>\r\n                                                                        <button (click)=\"toggle_SubFeat(subItemID)\"\r\n                                                                            [ngClass]=\"{'fancy-button':get_ShowSubFeat()==subItemID}\">\r\n                                                                            {{get_ShowSubFeat()==subItemID ? \"Hide\" :\r\n                                                                            \"Show\"}} Description\r\n                                                                        </button>\r\n                                                                        <div\r\n                                                                            [ngbCollapse]=\"get_UncollapseSubFeat()!=subItemID\">\r\n                                                                            <div class=\"newrow\"\r\n                                                                                *ngIf=\"get_ShowSubFeat()==subItemID || get_UncollapseSubFeat()!=subItemID\">\r\n                                                                                <div class=\"button newrow no-animation\"\r\n                                                                                    *ngIf=\"subfeatSet.available\"\r\n                                                                                    [ngClass]=\"{'fancy-button':subFeatTaken, 'disabled':subFeatDisabled}\">\r\n                                                                                    <label>\r\n                                                                                        <input type=\"checkbox\"\r\n                                                                                            (change)=\"on_FeatTaken(subfeatSet.subfeat, $event.target.checked, choice, false)\"\r\n                                                                                            [checked]=\"subFeatChecked\"\r\n                                                                                            [disabled]=\"subFeatDisabled\"\r\n                                                                                            hidden>{{subFeatChecked ?\r\n                                                                                        \"Remove\" : \"Choose\"}}\r\n                                                                                    </label>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow left-aligned\">\r\n                                                                                    <cite class=\"problem\"\r\n                                                                                        [ngbPopover]=\"reason.explain\"\r\n                                                                                        *ngFor=\"let reason of cannotTake(subfeatSet.subfeat, choice, true); trackBy:trackByIndex;\">\r\n                                                                                        {{reason.reason}}\r\n                                                                                    </cite>\r\n                                                                                </div>\r\n                                                                                <app-feat [feat]=\"subfeatSet.subfeat\"\r\n                                                                                    [choice]=\"choice\"\r\n                                                                                    [levelNumber]=\"levelNumber\"\r\n                                                                                    [featLevel]=\"featLevel\">\r\n                                                                                </app-feat>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\"\r\n                                            [ngClass]=\"{'unavailable':(!featSet.available), 'selected':(taken || subFeatTakenByThis(undefined, featSet.feat, choice))}\">\r\n                                            <input *ngIf=\"!featSet.feat.subTypes\" class=\"character-choice\"\r\n                                                id=\"{{featSet.feat.name}}\" type=\"checkbox\"\r\n                                                (change)=\"on_FeatTaken(featSet.feat, $event.target.checked, choice, false)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled || !featSet.available\">\r\n                                            <button class=\"character-choice\" (click)=\"FeatChoiceDetailPopover.toggle()\"\r\n                                                [ngClass]=\"{'fancy-button':checked, 'inactive-button':(!checked && !featSet.available)}\"\r\n                                                *ngIf=\"featSet.feat.subTypes\">+</button>\r\n                                            <div class=\"gridicon-fullsizebox\" #FeatChoiceDetailPopover=\"ngbPopover\"\r\n                                                [ngbPopover]=\"FeatChoiceDetailTemplate\" triggers=\"click\">\r\n                                                <app-gridIcon [title]=\"featSet.feat.name\"\r\n                                                    [detail]=\"featSet.feat.traits.includes('Rare') ? 'Rare' : (featSet.feat.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span\r\n                                                        [ngbTooltip]=\"(!FeatChoiceDetailPopover.isOpen()) ? featSet.feat.shortdesc : ''\"\r\n                                                        triggers=\"hover\" openDelay=100>\r\n                                                        {{[\"General\", \"Skill\"].includes(choice.type) &&\r\n                                                        featSet.feat.skillreq.length == 1 ? \"(\" +\r\n                                                        featSet.feat.skillreq[0].skill + \") \" :\r\n                                                        \"\"}}{{featSet.feat.name}}&nbsp;\r\n                                                    </span>\r\n                                                    <cite *ngIf=\"featSet.feat.levelreq\">Level\r\n                                                        {{featSet.feat.levelreq}}</cite>\r\n                                                    <cite class=\"trait\" *ngIf=\"featSet.feat.traits.includes('Rare')\"\r\n                                                        [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                        openDelay=100>Rare</cite>\r\n                                                    <cite class=\"trait\" *ngIf=\"featSet.feat.traits.includes('Uncommon')\"\r\n                                                        [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                        openDelay=100>Uncommon</cite>\r\n                                                    <cite class=\"trait\"\r\n                                                        *ngIf=\"featSet.feat.traits.includes('Dedication')\"\r\n                                                        [ngbPopover]=\"get_Traits('Dedication')[0]?.desc\"\r\n                                                        openDelay=100>Dedication</cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n<ng-container *ngIf=\"set_UncollapseSubFeat(this.get_ShowSubFeat())\"></ng-container>","import { ItemActivity } from './ItemActivity';\r\nimport { Item } from './Item';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { Hint } from './Hint';\r\n\r\nexport class Rune extends Item {\r\n    public _className;\r\n    public activities: ItemActivity[] = [];\r\n    public desc: string = \"\";\r\n    //For weapon runes, the hints are shown directly on the weapon.\r\n    public hints: Hint[] = [];\r\n    //One rune trains a lore skill while equipped.\r\n    public loreChoices: LoreChoice[] = [];\r\n    public potency: number = 0;\r\n    public traits: string[] = [];\r\n    public usage: string = \"\";\r\n    readonly allowEquippable = false;\r\n    readonly equippable = false;\r\n}\r\n","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { WornItem } from './WornItem';\r\nimport { Equipment } from './Equipment';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { Specialization } from './Specialization';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Oil } from './Oil';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { ProficiencyChange } from './ProficiencyChange';\r\nimport { Effect } from './Effect';\r\nimport { Creature } from './Creature';\r\nimport { Skill } from './Skill';\r\n\r\nexport class Weapon extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Weapons should be type \"weapons\" to be found in the database\r\n    public type = \"weapons\";\r\n    //Weapons are usually moddable like a weapon. Weapons that cannot be modded should be set to \"-\"\r\n    moddable = \"weapon\" as \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\";\r\n    //What type of ammo is used? (Bolts, arrows...)\r\n    public ammunition: string = \"\";\r\n    //What happens on a critical hit with this weapon?\r\n    public criticalHint: string = \"\"\r\n    //Number of dice for Damage: usually 1 for an unmodified weapon. Use 0 to notate exactly <dicesize> damage (e.g. 1 damage = 0d1).\r\n    public dicenum: number = 1;\r\n    //Size of the damage dice: usually 4-12\r\n    public dicesize: number = 6;\r\n    //What is the damage type? Usually S, B or P, but may include combinations\"\r\n    public dmgType: string = \"\";\r\n    //Some weapons add additional damage like +1d4F. Use get_ExtraDamage() to read.\r\n    private extraDamage: string = \"\"\r\n    //The weapon group, needed for critical specialization effects\r\n    public group: string = \"\";\r\n    //How many hands are needed to wield this weapon?\r\n    public hands: string = \"\";\r\n    //Melee range in ft: 5 or 10 for weapons with Reach trait\r\n    public melee: number = 0;\r\n    //Store any poisons applied to this item. There should be only one poison at a time.\r\n    public poisonsApplied: AlchemicalPoison[] = [];\r\n    //What proficiency is used? \"Simple Weapons\", \"Unarmed Attacks\", etc.? Use get_Proficiency() to get the proficiency for numbers and effects.\r\n    public prof: \"Unarmed Attacks\" | \"Simple Weapons\" | \"Martial Weapons\" | \"Advanced Weapons\" = \"Simple Weapons\";\r\n    //Ranged range in ft - also add for thrown weapons\r\n    //Weapons can have a melee and a ranged value, e.g. Daggers that can thrown\r\n    public ranged: number = 0;\r\n    //How many actions to reload this ranged weapon?\r\n    public reload: string = \"\";\r\n    //What kind of weapon is this based on? Needed for weapon proficiencies for specific magical items.\r\n    public weaponBase: string = \"\";\r\n    //Giant Instinct Barbarians can wield larger weapons.\r\n    public large: boolean = false;\r\n    //Weapons with the Two-Hand trait can be wielded with two hands to increase their damage.\r\n    public twohanded: boolean = false;\r\n    //A Champion with the Divine Ally: Blade Ally Feat can designate one weapon or handwraps as his blade ally.\r\n    public bladeAlly: boolean = false;\r\n    //A Dwarf with the Battleforger feat can sharpen a weapon to grant the effect of a +1 potency rune.\r\n    public battleforged: boolean = false;\r\n    //Dexterity-based melee attacks force you to use dexterity for your attack modifier.\r\n    public dexterityBased: boolean = false;\r\n    //If useHighestAttackProficiency is true, the proficiency level will be copied from your highest unarmed or weapon proficiency.\r\n    public useHighestAttackProficiency: boolean = false;\r\n    get_RuneSource(creature: Creature, range: string) {\r\n        //Under certain circumstances, other items' runes are applied when calculating attack bonus or damage.\r\n        //[0] is the item whose fundamental runes will count, [1] is the item whose property runes will count, and [2] is the item that causes this change.\r\n        let runeSource: (Weapon | WornItem)[] = [this, this];\r\n        //For unarmed attacks, return Handwraps of Mighty Blows if invested;\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            let handwraps = creature.inventories[0].wornitems.filter(item => item.isHandwrapsOfMightyBlows && item.invested)\r\n            if (handwraps.length) {\r\n                runeSource = [handwraps[0], handwraps[0], handwraps[0]];\r\n            }\r\n        }\r\n        //Specific items (not moddable) don't profit from doubling rings.\r\n        if (!this.moddable || this.moddable == \"-\") {\r\n            return runeSource;\r\n        }\r\n        if (range == \"melee\" && this.moddable == \"weapon\") {\r\n            let doublingRings = creature.inventories[0].wornitems.filter(item => item.isDoublingRings && item.data[1].value == this.id && item.invested);\r\n            if (doublingRings.length) {\r\n                if (doublingRings[0].data[0].value) {\r\n                    let goldItem = creature.inventories[0].weapons.filter(weapon => weapon.id == doublingRings[0].data[0].value);\r\n                    if (goldItem.length) {\r\n                        if (doublingRings[0].isDoublingRings == \"Doubling Rings (Greater)\" && doublingRings[0].data[2]) {\r\n                            runeSource = [goldItem[0], goldItem[0], doublingRings[0]];\r\n                        } else {\r\n                            runeSource = [goldItem[0], this, doublingRings[0]];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return runeSource;\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //characterService is not needed for armors, but for other types of item.\r\n        //Test for certain feats that give traits to unarmed attacks.\r\n        let traits: string[] = JSON.parse(JSON.stringify(this.traits));\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            if (creature.type == \"Character\") {\r\n                if (!this.traits.includes(\"Forceful\") && (creature as Character).get_FeatsTaken(0, creature.level, \"Diamond Fists\").length) {\r\n                    traits = traits.concat(\"Forceful\");\r\n                }\r\n                if (!this.traits.includes(\"Deadly d12\") && (creature as Character).get_FeatsTaken(0, creature.level, \"Golden Body\").length) {\r\n                    traits = traits.concat(\"Deadly d12\");\r\n                }\r\n                if ((this.name == \"Razortooth Goblin Jaws\") && (creature as Character).get_FeatsTaken(0, creature.level, \"Fang Sharpener (Razortooth Goblin)\").length) {\r\n                    traits = traits.filter(trait => trait != \"Finesse\");\r\n                }\r\n                if (this.name == \"Lizardfolk Claw\") {\r\n                    //The Razor Claws feat adds Versatile P to the Lizardfolk Claw. This means we also have to change the dmgType (in a somewhat brute force way).\r\n                    if ((creature as Character).get_FeatsTaken(0, creature.level, \"Razor Claws\").length) {\r\n                        traits = traits.concat(\"Versatile P\");\r\n                        if (this.dmgType != \"S/P\") {\r\n                            this.dmgType = \"S/P\"\r\n                        }\r\n                    } else {\r\n                        if (this.dmgType != \"S\") {\r\n                            this.dmgType = \"S\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.melee) {\r\n            //Find and apply effects that give this weapon reach.\r\n            let effectsService = characterService.effectsService;\r\n            let reach = 5;\r\n            let reachTrait = traits.find(trait => trait.includes(\"Reach\"));\r\n            if (reachTrait) {\r\n                reach = reachTrait.includes(\" \") ? parseInt(reachTrait.split(\" \")[1]) : 10;\r\n            }\r\n            let newReach = reach;\r\n            let list = [\r\n                \"Reach\",\r\n                this.name + \" Reach\",\r\n                this.weaponBase + \" Reach\",\r\n                //\"Unarmed Attacks Reach\", \"Simple Weapon Reach\"\r\n                this.prof + \" Reach\"\r\n            ]\r\n            effectsService.get_AbsolutesOnThese(creature, list)\r\n                .forEach(effect => {\r\n                    newReach = parseInt(effect.setValue);\r\n                })\r\n            effectsService.get_RelativesOnThese(creature, list)\r\n                .forEach(effect => {\r\n                    newReach += parseInt(effect.value);\r\n                })\r\n            if (newReach != reach) {\r\n                if (newReach == 5 || newReach == 0) {\r\n                    traits = traits.filter(trait => !trait.includes(\"Reach\"));\r\n                } else {\r\n                    let reachString: string = traits.find(trait => trait.includes(\"Reach\"));\r\n                    if (reachString) {\r\n                        traits[traits.indexOf(reachString)] = \"Reach \" + newReach + \" feet\";\r\n                    } else {\r\n                        traits.push(\"Reach \" + newReach + \" feet\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return traits;\r\n    }\r\n    get_Proficiency(creature: Character | AnimalCompanion, characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        let proficiency = this.prof;\r\n        //Some feats allow you to apply another proficiency to certain weapons, e.g.:\r\n        // \"For the purpose of determining your proficiency, martial goblin weapons are simple weapons and advanced goblin weapons are martial weapons.\"\r\n        let proficiencyChanges: ProficiencyChange[] = [];\r\n        if (creature.type == \"Character\") {\r\n            let character = creature as Character;\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.changeProficiency.length && feat.have(character, characterService, charLevel, false))\r\n                .forEach(feat => {\r\n                    proficiencyChanges.push(...feat.changeProficiency.filter(change =>\r\n                        (change.name ? this.name.toLowerCase() == change.name.toLowerCase() : true) &&\r\n                        (change.trait ? this.traits.filter(trait => change.trait.includes(trait)).length : true) &&\r\n                        (change.proficiency ? (this.prof && change.proficiency == this.prof) : true) &&\r\n                        (change.group ? (this.group && change.group == this.group) : true)\r\n                    ))\r\n                });\r\n            let proficiencies: string[] = proficiencyChanges.map(change => change.result);\r\n            //Set the resulting proficiency to the best result by setting it in order of worst to best.\r\n            if (proficiencies.includes(\"Advanced Weapons\")) {\r\n                proficiency = \"Advanced Weapons\";\r\n            }\r\n            if (proficiencies.includes(\"Martial Weapons\")) {\r\n                proficiency = \"Martial Weapons\";\r\n            }\r\n            if (proficiencies.includes(\"Simple Weapons\")) {\r\n                proficiency = \"Simple Weapons\";\r\n            }\r\n            if (proficiencies.includes(\"Unarmed Attacks\")) {\r\n                proficiency = \"Unarmed Attacks\";\r\n            }\r\n        }\r\n        return proficiency;\r\n    }\r\n    profLevel(creature: Character | AnimalCompanion, characterService: CharacterService, runeSource: Weapon | WornItem, charLevel: number = characterService.get_Character().level) {\r\n        if (characterService.still_loading()) { return 0; }\r\n        let skillLevel: number = 0;\r\n        let prof = this.get_Proficiency(creature, characterService, charLevel);\r\n        //There are a lot of ways to be trained with a weapon.\r\n        //To determine the skill level, we have to find skills for the item's proficiency, its name, its weapon base and any of its traits.\r\n        let levels: number[] = [];\r\n        //If useHighestAttackProficiency is true, the proficiency level will be copied from your highest unarmed or weapon proficiency.\r\n        if (this.useHighestAttackProficiency) {\r\n            let highestProficiencySkill = new Skill(\"\", \"Highest Attack Proficiency\", \"Specific Weapon Proficiency\");\r\n            levels.push((characterService.get_Skills(creature, this.name)[0] || highestProficiencySkill).level(creature, characterService, charLevel) || 0);\r\n        }\r\n        //Weapon name, e.g. Demon Sword.\r\n        let nameSkill: Skill = new Skill(\"\", this.name, \"Specific Weapon Proficiency\");\r\n        levels.push((characterService.get_Skills(creature, this.name)[0] || nameSkill).level(creature, characterService, charLevel) || 0);\r\n        //Weapon base, e.g. Longsword.\r\n        let baseSkill: Skill = new Skill(\"\", this.weaponBase, \"Specific Weapon Proficiency\");\r\n        levels.push(this.weaponBase ? (characterService.get_Skills(creature, this.weaponBase)[0] || baseSkill).level(creature, characterService, charLevel) : 0);\r\n        //Proficiency and Group, e.g. Martial Sword.\r\n        //There are proficiencies for \"Simple Sword\" or \"Advanced Bow\" that we need to consider, so we build that phrase here.\r\n        let profAndGroup = prof.split(\" \")[0] + \" \" + this.group;\r\n        let profAndGroupSkill: Skill = new Skill(\"\", profAndGroup, \"Specific Weapon Proficiency\");\r\n        levels.push((characterService.get_Skills(creature, profAndGroup)[0] || profAndGroupSkill).level(creature, characterService, charLevel) || 0);\r\n        //Proficiency, e.g. Martial Weapons.\r\n        levels.push(characterService.get_Skills(creature, prof)[0]?.level(creature, characterService, charLevel) || 0);\r\n        //Any traits, e.g. Monk.\r\n        levels.push(...this.traits.map(trait => (characterService.get_Skills(creature, trait)[0] || new Skill(\"\", trait, \"Specific Weapon Proficiency\")).level(creature, characterService, charLevel) || 0))\r\n        //Get the skill level by applying the result with the most increases, but no higher than 8.\r\n        skillLevel = Math.min(Math.max(...levels.filter(level => level != undefined)), 8);\r\n        //If you have an Ancestral Echoing rune on this weapon, you get to raise the item's proficiency by one level, up to the highest proficiency you have.\r\n        let bestSkillLevel: number = skillLevel;\r\n        if (runeSource.propertyRunes.some(rune => rune.name == \"Ancestral Echoing\")) {\r\n            //First, we get all the weapon proficiencies...\r\n            let skills: number[] = characterService.get_Skills(creature, \"\", \"Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel));\r\n            skills.push(...characterService.get_Skills(creature, \"\", \"Specific Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel)));\r\n            //Then we set this skill level to either this level +2 or the highest of the found proficiencies - whichever is lower.\r\n            bestSkillLevel = Math.min(skillLevel + 2, Math.max(...skills));\r\n        }\r\n        //If you have an oil applied that emulates an Ancestral Echoing rune, apply the same rule (there is no such oil, but things can change)\r\n        if (this.oilsApplied.some(oil => oil.runeEffect && oil.runeEffect.name == \"Ancestral Echoing\")) {\r\n            //First, we get all the weapon proficiencies...\r\n            let skills: number[] = characterService.get_Skills(creature, \"\", \"Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel));\r\n            skills.push(...characterService.get_Skills(creature, \"\", \"Specific Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel)));\r\n            //Then we set this skill level to either this level +2 or the highest of the found proficiencies - whichever is lower.\r\n            bestSkillLevel = Math.min(skillLevel + 2, Math.max(...skills));\r\n        }\r\n        return bestSkillLevel;\r\n    }\r\n    attack(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, range: string) {\r\n        //Calculates the attack bonus for a melee or ranged attack with this weapon.\r\n        let explain: string = \"\";\r\n        let charLevel = characterService.get_Character().level;\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        let dex = characterService.get_Abilities(\"Dexterity\")[0].mod(creature, characterService, effectsService).result;\r\n        let runeSource: (Weapon | WornItem)[] = this.get_RuneSource(creature, range);\r\n        let skillLevel = this.profLevel(creature, characterService, runeSource[1]);\r\n        if (skillLevel) {\r\n            explain += \"\\nProficiency: \" + skillLevel;\r\n        }\r\n        //Add character level if the character is trained or better with either the weapon category or the weapon itself\r\n        let charLevelBonus = ((skillLevel > 0) ? charLevel : 0);\r\n        if (charLevelBonus) {\r\n            explain += \"\\nCharacter Level: \" + charLevelBonus;\r\n        }\r\n        let penalties: { value: number, setValue: string, source: string, penalty: boolean, type: string }[] = [];\r\n        let bonuses: { value: number, setValue: string, source: string, penalty: boolean, type: string }[] = [];\r\n        let absolutes: { value: number, setValue: string, source: string, penalty: boolean, type: string }[] = [];\r\n        //Calculate dexterity and strength penalties for the decision on which to use. They are not immediately applied.\r\n        //The Clumsy condition affects all Dexterity attacks.\r\n        let dexEffects = effectsService.get_RelativesOnThis(creature, \"Dexterity-based Checks and DCs\");\r\n        let dexPenalty: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let dexPenaltySum: number = 0;\r\n        dexEffects.forEach(effect => {\r\n            dexPenalty.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true });\r\n            dexPenaltySum += parseInt(effect.value);\r\n        });\r\n        //The Enfeebled condition affects all Strength attacks\r\n        let strEffects = effectsService.get_RelativesOnThis(creature, \"Strength-based Checks and DCs\");\r\n        let strPenalty: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let strPenaltySum: number = 0;\r\n        strEffects.forEach(effect => {\r\n            strPenalty.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true });\r\n            strPenaltySum += parseInt(effect.value);\r\n        });\r\n        let dexUsed: boolean = false;\r\n        let strUsed: boolean = false;\r\n        //Check if the weapon has any traits that affect its Ability bonus to attack, such as Finesse or Brutal, and run those calculations.\r\n        let abilityMod: number = 0;\r\n        if (range == \"ranged\") {\r\n            if (characterService.have_Trait(this, \"Brutal\")) {\r\n                abilityMod = str;\r\n                explain += \"\\nStrength Modifier (Brutal): \" + abilityMod;\r\n                strUsed = true;\r\n\r\n            } else {\r\n                abilityMod = dex;\r\n                explain += \"\\nDexterity Modifier: \" + abilityMod;\r\n                dexUsed = true;\r\n            }\r\n        } else {\r\n            if (characterService.have_Trait(this, \"Finesse\") && dex + dexPenaltySum > str + strPenaltySum) {\r\n                abilityMod = dex;\r\n                explain += \"\\nDexterity Modifier (Finesse): \" + abilityMod;\r\n                dexUsed = true;\r\n            } else if (this.dexterityBased) {\r\n                abilityMod = dex;\r\n                explain += \"\\nDexterity Modifier (Dexterity-based): \" + abilityMod;\r\n                dexUsed = true;\r\n            } else {\r\n                abilityMod = str;\r\n                explain += \"\\nStrength Modifier: \" + abilityMod;\r\n                strUsed = true;\r\n            }\r\n        }\r\n        //Add up all modifiers before effects and item bonus\r\n        let attackResult = charLevelBonus + skillLevel + abilityMod;\r\n        let abilityName: string = \"\";\r\n        if (strUsed) {\r\n            abilityName = \"Strength\";\r\n        }\r\n        if (dexUsed) {\r\n            abilityName = \"Dexterity\";\r\n        }\r\n        let prof = this.get_Proficiency(creature, characterService, charLevel);\r\n        //Create names list for effects\r\n        let namesList = [\r\n            this.name,\r\n            \"Attack Rolls\",\r\n            \"All Checks and DCs\",\r\n            //\"Sword Attack Rolls\", \"Club Attack Rolls\"\r\n            this.group + \" Attack Rolls\",\r\n            //\"Unarmed Attacks Attack Rolls\", \"Simple Weapons Attack Rolls\"\r\n            prof + \" Attack Rolls\",\r\n            //\"Unarmed Attack Rolls\", \"Simple Attack Rolls\"\r\n            prof.split(\" \")[0] + \" Attack Rolls\",\r\n            //\"Weapons Attack Rolls\", also \"Attacks Attack Rolls\", but that's unlikely to be needed\r\n            prof.split(\" \")[1] + \" Attack Rolls\",\r\n            //\"Simple Sword Attack Rolls\", \"Martial Club Attack Rolls\" etc.\r\n            prof.split(\" \")[0] + this.group + \" Attack Rolls\",\r\n            //\"Simple Longsword Attack Rolls\", \"Unarmed Fist Attack Rolls\" etc.\r\n            prof.split(\" \")[0] + this.weaponBase + \" Attack Rolls\",\r\n            //\"Melee Attack Rolls\", \"Ranged Attack Rolls\"\r\n            range + \" Attack Rolls\",\r\n            //\"Strength-based Checks and DCs\"\r\n            abilityName + \"-based Checks and DCs\"\r\n        ];\r\n        let traits = this.get_Traits(characterService, creature);\r\n        traits.forEach(trait => {\r\n            if (trait.includes(\" ft\")) {\r\n                namesList.push(trait.split(\" \")[0] + \" Attack Rolls\")\r\n            } else {\r\n                namesList.push(trait + \" Attack Rolls\");\r\n            }\r\n        })\r\n        if (!traits.includes(\"Agile\")) {\r\n            namesList.push(\"Non-Agile Attack Rolls\");\r\n        }\r\n        //Add absolute effects\r\n        effectsService.get_AbsolutesOnThese(creature, namesList)\r\n            .forEach(effect => {\r\n                if (effect.show) {\r\n                    absolutes.push({ value: 0, setValue: effect.setValue, source: effect.source, penalty: false, type: effect.type });\r\n                }\r\n                attackResult = parseInt(effect.setValue)\r\n                explain = effect.source + \": \" + effect.setValue;\r\n            });\r\n        let effectsSum: number = 0;\r\n        //Add relative effects, including potency bonus and shoddy penalty\r\n        //Generate potency bonus\r\n        let potencyRune: number = runeSource[0].get_PotencyRune();\r\n        let calculatedEffects: Effect[] = []\r\n        if (potencyRune) {\r\n            let source = \"Potency\"\r\n            //If you're getting the potency because of another item (like Doubling Rings), name it here\r\n            if (runeSource[2]) {\r\n                source = \"Potency (\" + runeSource[2].get_Name() + \")\";\r\n            }\r\n            calculatedEffects.push(new Effect(creature.type, \"item\", this.name, potencyRune.toString(), \"\", false, source, false, true, false, 0))\r\n        }\r\n        if (runeSource[0].battleforged) {\r\n            let source = \"Battleforged\"\r\n            //If you're getting the battleforged bonus because of another item (like Handwraps of Mighty Blows), name it here\r\n            if (runeSource[2]) {\r\n                source = \"Battleforged (\" + runeSource[2].get_Name() + \")\";\r\n            }\r\n            calculatedEffects.push(new Effect(creature.type, \"item\", this.name, \"+1\", \"\", false, source, false, true, false, 0))\r\n        }\r\n        //Powerful Fist ignores the nonlethal penalty on unarmed attacks.\r\n        let isPowerfulFist = false;\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            let character = characterService.get_Character();\r\n            if (character.get_FeatsTaken(0, character.level, \"Powerful Fist\").length) {\r\n                isPowerfulFist = true;\r\n            }\r\n        }\r\n        //Shoddy items have a -2 item penalty to attacks, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n        if (this.shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && this.crafted) {\r\n            explain += \"\\nShoddy (canceled by Junk Tinker): -0\";\r\n        } else if (this.shoddy) {\r\n            calculatedEffects.push(new Effect(creature.type, \"item\", this.name, \"-2\", \"\", false, \"Shoddy\", true, true, false, 0))\r\n        }\r\n        //Because of the Potency and Shoddy Effects, we need to filter the types a second time, even though get_RelativesOnThese comes pre-filtered.\r\n        effectsService.get_TypeFilteredEffects(\r\n            calculatedEffects\r\n                .concat(effectsService.get_RelativesOnThese(creature, namesList)\r\n                ), false)\r\n            .forEach(effect => {\r\n                //Powerful Fist ignores the nonlethal penalty on unarmed attacks.\r\n                if (isPowerfulFist && effect.source == \"conditional, Nonlethal\") {\r\n                    explain += \"\\nNonlethal (cancelled by Powerful Fist)\";\r\n                } else {\r\n                    if (effect.show) {\r\n                        if (parseInt(effect.value) < 0) {\r\n                            penalties.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true, type: effect.type });\r\n                        } else {\r\n                            bonuses.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: false, type: effect.type });\r\n                        }\r\n                    }\r\n                    effectsSum += parseInt(effect.value);\r\n                    explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n                }\r\n            });\r\n        //Add up all modifiers and return the attack bonus for this attack\r\n        attackResult += effectsSum;\r\n        explain = explain.trim();\r\n        return [range, attackResult, explain, penalties.concat(bonuses).concat(absolutes), penalties, bonuses, absolutes];\r\n    }\r\n    get_ExtraDamage(creature: Creature, characterService: CharacterService, range: string) {\r\n        let extraDamage: string = \"\";\r\n        if (this.extraDamage) {\r\n            extraDamage += \"\\n\" + this.extraDamage;\r\n        }\r\n        let runeSource = this.get_RuneSource(creature, range);\r\n        runeSource[1].propertyRunes\r\n            .filter((weaponRune: WeaponRune) => weaponRune.extraDamage)\r\n            .forEach((weaponRune: WeaponRune) => {\r\n                extraDamage += \"\\n\" + weaponRune.extraDamage;\r\n            });\r\n        this.oilsApplied\r\n            .filter((oil: Oil) => oil.runeEffect && oil.runeEffect.extraDamage)\r\n            .forEach((oil: Oil) => {\r\n                extraDamage += \"\\n\" + oil.runeEffect.extraDamage;\r\n            });\r\n        if (runeSource[1].bladeAlly) {\r\n            runeSource[1].bladeAllyRunes\r\n                .filter((weaponRune: WeaponRune) => weaponRune.extraDamage)\r\n                .forEach((weaponRune: WeaponRune) => {\r\n                    extraDamage += \"\\n\" + weaponRune.extraDamage;\r\n                });\r\n        }\r\n        return extraDamage;\r\n    }\r\n    damage(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, range: string) {\r\n        //Lists the damage dice and damage bonuses for a ranged or melee attack with this weapon.\r\n        //Returns a string in the form of \"1d6+5 B\\n+1d6 Fire\"\r\n        if (!this.dicenum && !this.dicesize && !this.extraDamage) {\r\n            return [\"0\", \"\", [], [], []];\r\n        }\r\n        let diceExplain: string = \"Base dice: \" + this.dicenum + \"d\" + this.dicesize;\r\n        let bonusExplain: string = \"\";\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        let dex = characterService.get_Abilities(\"Dexterity\")[0].mod(creature, characterService, effectsService).result;\r\n        let penalties: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let bonuses: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let absolutes: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let prof = this.get_Proficiency(creature, characterService);\r\n        let namesList: string[] = [];\r\n        //Apply any mechanism that copy runes from another item, like Handwraps of Mighty Blows or Doubling Rings.\r\n        //We set runeSource to the respective item and use it whenever runes are concerned.\r\n        let runeSource: (Weapon | WornItem)[] = this.get_RuneSource(creature, range);\r\n        //Determine the dice Number - Dice Number Multiplier first, then Dice Number (Striking included)\r\n        let dicenum = this.dicenum;\r\n        if (dicenum) {\r\n            let dicenumMultiplier = 1;\r\n            namesList = [\r\n                \"Damage Dice Number Multiplier\",\r\n                this.name + \" Dice Number Multiplier\",\r\n                //\"Longsword Dice Number Multiplier\", \"Fist Dice Number Multiplier\" etc.\r\n                this.weaponBase + \" Dice Number Multiplier\",\r\n                //\"Sword Dice Number Multiplier\", \"Club Dice Number Multiplier\"\r\n                this.group + \" Dice Number Multiplier\",\r\n                //\"Unarmed Attacks Dice Number Multiplier\", \"Simple Weapons Dice Number Multiplier\" etc.\r\n                prof + \" Dice Number Multiplier\",\r\n                //\"Unarmed Dice Number Multiplier\", \"Simple Dice Number Multiplier\" etc.\r\n                prof.split(\" \")[0] + \" Dice Number Multiplier\",\r\n                //\"Weapons Dice Number Multiplier\", also \"Attacks Dice Number Multiplier\", but that's unlikely to be needed\r\n                prof.split(\" \")[1] + \" Dice Number Multiplier\",\r\n                //\"Simple Sword Dice Number Multiplier\", \"Martial Club Dice Number Multiplier\" etc.\r\n                prof.split(\" \")[0] + this.group + \" Dice Number Multiplier\",\r\n                //\"Simple Longsword Dice Number Multiplier\", \"Unarmed Fist Dice Number Multiplier\" etc.\r\n                prof.split(\" \")[0] + this.weaponBase + \" Dice Number Multiplier\"\r\n            ]\r\n            effectsService.get_AbsolutesOnThese(creature, namesList).forEach(effect => {\r\n                dicenumMultiplier = parseInt(effect.setValue);\r\n                diceExplain += \"\\n\" + effect.source + \": Dice number multiplier \" + dicenumMultiplier;\r\n            })\r\n            effectsService.get_RelativesOnThese(creature, namesList).forEach(effect => {\r\n                dicenumMultiplier += parseInt(effect.value);\r\n                diceExplain += \"\\n\" + effect.source + \": Dice number multiplier \" + (parseInt(effect.value) >= 0 ? \"+\" : \"\") + parseInt(effect.value);\r\n            })\r\n            dicenum *= dicenumMultiplier;\r\n            let calculatedEffects: Effect[] = [];\r\n            namesList = [\r\n                \"Damage Dice Number\",\r\n                this.name + \" Dice Number\",\r\n                //\"Longsword Dice Number\", \"Fist Dice Number\" etc.\r\n                this.weaponBase + \" Dice Number\",\r\n                //\"Sword Dice Number\", \"Club Dice Number\"\r\n                this.group + \" Dice Number\",\r\n                //\"Unarmed Attacks Dice Number\", \"Simple Weapons Dice Number\" etc.\r\n                prof + \" Dice Number\",\r\n                //\"Unarmed Dice Number\", \"Simple Dice Number\" etc.\r\n                prof.split(\" \")[0] + \" Dice Number\",\r\n                //\"Weapons Dice Number\", also \"Attacks Dice Number\", but that's unlikely to be needed\r\n                prof.split(\" \")[1] + \" Dice Number\",\r\n                //\"Simple Sword Dice Number\", \"Martial Club Dice Number\" etc.\r\n                prof.split(\" \")[0] + this.group + \" Dice Number\",\r\n                //\"Simple Longsword Dice Number\", \"Unarmed Fist Dice Number\" etc.\r\n                prof.split(\" \")[0] + this.weaponBase + \" Dice Number\"\r\n            ]\r\n            //Add the striking rune or oil of potency effect of the runeSource.\r\n            //Only apply and explain Striking if it's actually better than your multiplied dice size.\r\n            if (runeSource[0].get_StrikingRune() + 1 > dicenum) {\r\n                let source = runeSource[0].get_Striking(runeSource[0].get_StrikingRune());\r\n                //If you're getting the striking effect because of another item (like Doubling Rings), name it here\r\n                if (runeSource[2]) {\r\n                    source += \" (\" + runeSource[2].get_Name() + \")\";\r\n                }\r\n                calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Number\", \"\", (1 + runeSource[0].get_StrikingRune()).toString(), false, source, false, true, false, 0))\r\n            }\r\n            effectsService.get_TypeFilteredEffects(\r\n                calculatedEffects\r\n                    .concat(effectsService.get_AbsolutesOnThese(creature, namesList)\r\n                    ), true)\r\n                .forEach(effect => {\r\n                    dicenum = parseInt(effect.setValue);\r\n                    diceExplain += \"\\n\" + effect.source + \": Dice number \" + dicenum;\r\n                })\r\n            calculatedEffects = [];\r\n            //Diamond Fists adds the forceful trait to your unarmed attacks, but if one already has the trait, it gains one damage die.\r\n            if (this.prof == \"Unarmed Attacks\") {\r\n                let character = characterService.get_Character();\r\n                if (character.get_FeatsTaken(0, character.level, \"Diamond Fists\").length && this.traits.includes(\"Forceful\")) {\r\n                    calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Number\", \"+1\", \"\", false, \"Diamond Fists\", false, true, false, 0))\r\n                }\r\n            }\r\n            effectsService.get_TypeFilteredEffects(\r\n                calculatedEffects\r\n                    .concat(effectsService.get_RelativesOnThese(creature, namesList)\r\n                    ), false)\r\n                .forEach(effect => {\r\n                    dicenum += parseInt(effect.value);\r\n                    diceExplain += \"\\n\" + effect.source + \": Dice number \" + (parseInt(effect.value) >= 0 ? \"+\" : \"\") + parseInt(effect.value);\r\n                })\r\n        }\r\n        //Determine the dice size.\r\n        let dicesize = this.dicesize;\r\n        if (dicesize) {\r\n            let calculatedEffects: Effect[] = [];\r\n            //Champions get increased dice size via Deific Weapon for unarmed attacks with d4 damage or simple weapons as long as they are their deity's favored weapon.\r\n            if (((dicesize == 4 && this.prof == \"Unarmed Attacks\") || this.prof == \"Simple Weapons\") &&\r\n                characterService.get_Features(\"Deific Weapon\")[0]?.have(creature, characterService)) {\r\n                let favoredWeapons: string[] = [];\r\n                if (creature.type == \"Character\" && (creature as Character).class.deity) {\r\n                    favoredWeapons = characterService.get_Deities((creature as Character).class.deity)[0]?.favoredWeapon || [];\r\n                }\r\n                if (favoredWeapons.includes(this.name) || favoredWeapons.includes(this.weaponBase)) {\r\n                    let newDicesize = Math.max(Math.min(dicesize + 2, 12), 6);\r\n                    if (newDicesize > dicesize) {\r\n                        calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Size\", \"\", newDicesize.toString(), false, \"Deific Weapon\", false, true, false, 0))\r\n                    }\r\n                }\r\n            }\r\n            //Weapons with the Two-Hand trait get to change their dice size if they are wielded with two hands.\r\n            if (this.twohanded) {\r\n                this.get_Traits(characterService, creature).filter(trait => trait.includes(\"Two-Hand\")).forEach(trait => {\r\n                    let twoHandedDiceSize = parseInt(trait.substr(10))\r\n                    if (twoHandedDiceSize) {\r\n                        if (twoHandedDiceSize > dicesize) {\r\n                            calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Size\", \"\", twoHandedDiceSize.toString(), false, \"Two-Hand\", false, true, false, 0))\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            //Apply dice size effects.\r\n            namesList = [\r\n                \"Dice Size\",\r\n                this.name + \" Dice Size\",\r\n                //\"Longsword Dice Size\", \"Fist Dice Size\" etc.\r\n                this.weaponBase + \" Dice Size\",\r\n                //\"Sword Dice Size\", \"Club Dice Size\"\r\n                this.group + \" Dice Size\",\r\n                //\"Unarmed Attacks Dice Size\", \"Simple Weapons Dice Size\" etc.\r\n                prof + \" Dice Size\",\r\n                //\"Unarmed Dice Size\", \"Simple Dice Size\" etc.\r\n                prof.split(\" \")[0] + \" Dice Size\",\r\n                //\"Weapons Dice Size\", also \"Attacks Dice Size\", but that's unlikely to be needed\r\n                prof.split(\" \")[1] + \" Dice Size\",\r\n                //\"Simple Sword Dice Size\", \"Martial Club Dice Size\" etc.\r\n                prof.split(\" \")[0] + this.group + \" Dice Size\",\r\n                //\"Simple Longsword Dice Size\", \"Unarmed Fist Dice Size\" etc.\r\n                prof.split(\" \")[0] + this.weaponBase + \" Dice Size\",\r\n            ]\r\n            effectsService.get_TypeFilteredEffects(\r\n                calculatedEffects\r\n                    .concat(effectsService.get_AbsolutesOnThese(creature, namesList)\r\n                    ), true)\r\n                .forEach(effect => {\r\n                    dicesize = parseInt(effect.setValue);\r\n                    diceExplain += \"\\n\" + effect.source + \": Dice size d\" + dicesize;\r\n                })\r\n            effectsService.get_RelativesOnThese(creature, namesList).forEach(effect => {\r\n                dicesize += parseInt(effect.value);\r\n                //Don't raise dice size over 12.\r\n                dicesize = Math.min(12, dicesize);\r\n                diceExplain += \"\\n\" + effect.source + \": Dice size d\" + dicesize;\r\n            })\r\n        }\r\n        //Get the basic \"#d#\" string from the weapon's dice values, unless dicenum is 0 or null (for instance some weapons deal exactly 1 base damage, which is represented by 0d1)\r\n        var baseDice = (dicenum ? dicenum + \"d\" : \"\") + dicesize;\r\n        //Get the +X value\r\n        let dmgBonus: number = 0;\r\n        //Decide whether this weapon uses strength or dexterity (modifier, bonuses and penalties).\r\n        //First, calculate dexterity and strength penalties to see which would be more beneficial. They are not immediately applied.\r\n        let calculatedEffects: Effect[] = [];\r\n        let strUsed: boolean = false;\r\n        let dexUsed: boolean = false;\r\n        let abilityReason: string = \"\";\r\n        //Check if the Weapon has any traits that affect its damage Bonus, such as Thrown or Propulsive, and run those calculations.\r\n        let abilityMod: number = 0;\r\n        if (range == \"ranged\") {\r\n            if (characterService.have_Trait(this, \"Propulsive\")) {\r\n                if (str > 0) {\r\n                    abilityMod = Math.floor(str / 2);\r\n                    abilityReason = \"Propulsive\";\r\n                    strUsed = true;\r\n                } else if (str < 0) {\r\n                    abilityMod = str;\r\n                    abilityReason = \"Propulsive\";\r\n                    strUsed = true;\r\n                }\r\n            } else if (characterService.have_Trait(this, \"Thrown\")) {\r\n                abilityMod = str;\r\n                abilityReason += \"Thrown\";\r\n                strUsed = true;\r\n            }\r\n        } else {\r\n            //If the weapon is Finesse and you have the Thief Racket, you apply your Dexterity modifier to damage if it is higher.\r\n            if (characterService.have_Trait(this, \"Finesse\") &&\r\n                creature.type == \"Character\" &&\r\n                (creature as Character).get_FeatsTaken(1, creature.level, \"Thief Racket\").length) {\r\n                //Check if dex or str would give you more damage by comparing your modifiers and any penalties and bonuses.\r\n                //The Enfeebled condition affects all Strength damage\r\n                let strEffects = effectsService.get_RelativesOnThis(creature, \"Strength-based Checks and DCs\");\r\n                let strPenaltySum: number = 0;\r\n                strEffects.forEach(effect => {\r\n                    strPenaltySum += parseInt(effect.value);\r\n                });\r\n                //The Clumsy condition affects all Dexterity damage\r\n                let dexEffects = effectsService.get_RelativesOnThis(creature, \"Dexterity-based Checks and DCs\");\r\n                let dexPenaltySum: number = 0;\r\n                dexEffects.forEach(effect => {\r\n                    dexPenaltySum += parseInt(effect.value);\r\n                });\r\n                if ((dex + dexPenaltySum) > (str + strPenaltySum)) {\r\n                    abilityMod = dex;\r\n                    abilityReason += \"Thief\";\r\n                    dexUsed = true;\r\n                } else {\r\n                    abilityMod = str;\r\n                    strUsed = true;\r\n                }\r\n            } else {\r\n                abilityMod = str;\r\n                strUsed = true;\r\n            }\r\n        }\r\n        if (abilityMod) {\r\n            let abilitySource: string = \"\"\r\n            if (strUsed) {\r\n                abilitySource = \"Strength Modifier\";\r\n            }\r\n            if (dexUsed) {\r\n                abilitySource = \"Dexterity Modifier\";\r\n            }\r\n            if (abilityReason) {\r\n                abilitySource += \"(\" + abilityReason + \")\"\r\n            }\r\n            calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Damage\", abilityMod.toString(), \"\", false, abilitySource, false, true, false, 0))\r\n        }\r\n        //Mature and Specialized Companions add extra Damage to their attacks.\r\n        if (creature.type == \"Companion\") {\r\n            creature.class.levels.filter(level => level.number <= creature.level).forEach(level => {\r\n                if (level.extraDamage) {\r\n                    let companionSource: string = \"\";\r\n                    let companionMod: number = level.extraDamage;\r\n                    companionSource = level.name + \" Animal Companion\";\r\n                    if (creature.class.specializations.length) {\r\n                        companionMod *= 2;\r\n                        companionSource = \"Specialized Animal Companion\";\r\n                    }\r\n                    calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Damage\", companionMod.toString(), \"\", false, companionSource, false, true, false, 0))\r\n                }\r\n            })\r\n        }\r\n        let profLevel = this.profLevel(creature, characterService, runeSource[1]);\r\n        let traits = this.get_Traits(characterService, creature);\r\n        let list = [\r\n            \"Damage Rolls\",\r\n            this.name + \" Damage\",\r\n            //\"Longsword Damage\", \"Fist Melee Damage\"\r\n            this.weaponBase + \" Damage\",\r\n            //\"Melee Damage\", \"Ranged Damage\"\r\n            range + \" Damage\"\r\n        ];\r\n        traits.forEach(trait => {\r\n            if (trait.includes(\" ft\")) {\r\n                list.push(trait.split(\" \")[0] + \" Damage\");\r\n            } else {\r\n                list.push(trait + \" Damage\");\r\n            }\r\n        })\r\n        if (traits.includes(\"Agile\")) {\r\n            //\"Agile Large Melee Weapon Damage\"\r\n            if (this.large) {\r\n                list.push(\"Agile Large \" + range + \" Weapon Damage\");\r\n            }\r\n            //\"Agile Melee Damage\"\r\n            list.push(\"Agile \" + range + \" Damage\");\r\n            if ((range == \"ranged\") && this.traits.some(trait => trait.includes(\"Thrown\"))) {\r\n                //\"Agile Thrown Large Weapon Damage\"\r\n                if (this.large) {\r\n                    list.push(\"Agile Thrown Large Weapon Damage\")\r\n                }\r\n                //\"Agile Thrown Weapon Damage\"\r\n                list.push(\"Agile Thrown Weapon Damage\");\r\n            }\r\n        } else {\r\n            //\"Non-Agile Large Melee Weapon Damage\"\r\n            if (this.large) {\r\n                list.push(\"Non-Agile Large \" + range + \" Weapon Damage\");\r\n            }\r\n            //\"Non-Agile Melee Damage\"\r\n            list.push(\"Non-Agile \" + range + \" Damage\");\r\n            if ((range == \"ranged\") && this.traits.some(trait => trait.includes(\"Thrown\"))) {\r\n                //\"Non-Agile Thrown Large Weapon Damage\"\r\n                if (this.large) {\r\n                    list.push(\"Non-Agile Thrown Large Weapon Damage\")\r\n                }\r\n                //\"Non-Agile Thrown Weapon Damage\"\r\n                list.push(\"Non-Agile Thrown Weapon Damage\");\r\n            }\r\n        }\r\n        effectsService.get_AbsolutesOnThese(creature, list)\r\n            .forEach(effect => {\r\n                if (effect.show) {\r\n                    absolutes.push({ value: 0, setValue: effect.setValue, source: effect.source, penalty: false })\r\n                }\r\n                dmgBonus = parseInt(effect.setValue);\r\n                bonusExplain = \"\\n\" + effect.source + \": Bonus damage \" + parseInt(effect.setValue);\r\n            })\r\n        let effectBonus = 0;\r\n        let abilityName: string = \"\";\r\n        if (strUsed) {\r\n            abilityName = \"Strength\";\r\n        }\r\n        if (dexUsed) {\r\n            abilityName = \"Dexterity\";\r\n        }\r\n        //\"Strength-based Checks and DCs\"\r\n        list.push(abilityName + \"-based Checks and DCs\");\r\n        switch (profLevel) {\r\n            case 2:\r\n                list.push(\"Trained Proficiency Attack Damage\")\r\n                list.push(\"Trained \" + this.name + \" Attack Damage\")\r\n                break;\r\n            case 4:\r\n                list.push(\"Expert Proficiency Attack Damage\")\r\n                list.push(\"Expert \" + this.name + \" Damage\")\r\n                break;\r\n            case 6:\r\n                list.push(\"Master Proficiency Attack Damage\")\r\n                list.push(\"Master \" + this.name + \" Damage\")\r\n                break;\r\n            case 8:\r\n                list.push(\"Legendary Proficiency Attack Damage\")\r\n                list.push(\"Legendary \" + this.name + \" Damage\")\r\n                break;\r\n        }\r\n        //Pre-create Effects based on \"Damage per Die\" effects.\r\n        let perDieList: string[] = [];\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            perDieList.push(\"Unarmed Damage per Die\");\r\n        } else {\r\n            perDieList.push(\"Weapon Damage per Die\");\r\n        }\r\n        traits.forEach(trait => {\r\n            if (trait.includes(\" ft\")) {\r\n                perDieList.push(trait.split(\" \")[0] + \" Damage per Die\");\r\n            } else {\r\n                perDieList.push(trait + \" Damage per Die\");\r\n            }\r\n        })\r\n        effectsService.get_RelativesOnThese(creature, perDieList).forEach(effect => {\r\n            let effectBonus = parseInt(effect.value) * dicenum;\r\n            let newEffect = Object.assign(new Effect(), JSON.parse(JSON.stringify(effect)));\r\n            newEffect.target = newEffect.target.replace(\" per Die\", \"\");\r\n            newEffect.value = effectBonus.toString();\r\n            calculatedEffects.push(newEffect);\r\n        })\r\n        //Now collect and apply the type-filtered effects on this weapon's damage, including the pregenerated ones.\r\n        effectsService.get_TypeFilteredEffects(\r\n            calculatedEffects\r\n                .concat(effectsService.get_RelativesOnThese(creature, list)\r\n                ), false)\r\n            .forEach(effect => {\r\n                if (effect.show) {\r\n                    if (parseInt(effect.value) < 0) {\r\n                        penalties.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true });\r\n                    } else {\r\n                        bonuses.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: false });\r\n                    }\r\n                }\r\n                if (effect.target.toLowerCase().includes(\"damage per die\")) {\r\n                    effectBonus += parseInt(effect.value) * dicenum;\r\n                    bonusExplain += \"\\n\" + effect.source + \": Damage \" + ((parseInt(effect.value) * dicenum) >= 0 ? \"+\" : \"\") + (parseInt(effect.value) * dicenum);\r\n                } else {\r\n                    effectBonus += parseInt(effect.value);\r\n                    bonusExplain += \"\\n\" + effect.source + \": Damage \" + (parseInt(effect.value) >= 0 ? \"+\" : \"\") + parseInt(effect.value);\r\n                }\r\n            })\r\n        dmgBonus += effectBonus;\r\n        //Make a nice \"+#\" string from the Ability bonus if there is one, or else make it empty\r\n        let dmgBonusTotal: string = (dmgBonus) ? ((dmgBonus >= 0) && \"+\") + dmgBonus : \"\";\r\n        //Concatenate the strings for a readable damage output\r\n        var dmgResult = baseDice + dmgBonusTotal + \" \" + this.dmgType + this.get_ExtraDamage(creature, characterService, range);\r\n        let explain = (diceExplain.trim() + \"\\n\" + bonusExplain.trim()).trim();\r\n        return [dmgResult, explain, bonuses, penalties, absolutes];\r\n    }\r\n    get_CritSpecialization(creature: Creature, characterService: CharacterService, range: string) {\r\n        let SpecializationGains: SpecializationGain[] = [];\r\n        let specializations: Specialization[] = [];\r\n        let prof = this.get_Proficiency((creature as AnimalCompanion | Character), characterService);\r\n        if (creature.type == \"Character\" && this.group) {\r\n            let character = creature as Character;\r\n            let runeSource: (Weapon | WornItem)[] = this.get_RuneSource(creature, range);\r\n            let skillLevel = this.profLevel((creature as AnimalCompanion | Character), characterService, runeSource[1]);\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.gainSpecialization.length && feat.have(character, characterService, character.level, false))\r\n                .forEach(feat => {\r\n                    SpecializationGains.push(...feat.gainSpecialization.filter(spec =>\r\n                        (spec.bladeAlly ? (this.bladeAlly || runeSource[1].bladeAlly) : true) &&\r\n                        (spec.group ? (this.group && spec.group.includes(this.group)) : true) &&\r\n                        (spec.range ? (range && spec.range.includes(range)) : true) &&\r\n                        (spec.name ? ((this.name && spec.name.includes(this.name)) || (this.weaponBase && spec.name.includes(this.weaponBase))) : true) &&\r\n                        (spec.trait ? this.traits.some(trait => spec.trait.includes(trait)) : true) &&\r\n                        (spec.proficiency ? (prof && spec.proficiency.includes(prof)) : true) &&\r\n                        (spec.skillLevel ? skillLevel >= spec.skillLevel : true) &&\r\n                        (spec.featreq ? characterService.get_FeatsAndFeatures(spec.featreq)[0]?.have(character, characterService) : true)\r\n                    ))\r\n                });\r\n            SpecializationGains.forEach(critSpec => {\r\n                let specs: Specialization[] = characterService.get_Specializations(this.group).map(spec => Object.assign(new Specialization(), spec));\r\n                specs.forEach(spec => {\r\n                    if (critSpec.condition) {\r\n                        spec.desc = \"(\" + critSpec.condition + \") \" + spec.desc;\r\n                    }\r\n                    if (!specializations.some(existingspec => JSON.stringify(existingspec) == JSON.stringify(spec))) {\r\n                        specializations.push(spec);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return specializations;\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Ancestry } from './Ancestry';\r\nimport { Heritage } from './Heritage';\r\nimport { Background } from './Background';\r\nimport { SavegameService } from './savegame.service';\r\nimport * as json_ancestries from '../assets/json/ancestries';\r\nimport * as json_backgrounds from '../assets/json/backgrounds';\r\nimport * as json_heritages from '../assets/json/heritages';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HistoryService {\r\n    private ancestries: Ancestry[] = [];\r\n    private heritages: Heritage[] = [];\r\n    private backgrounds: Background[] = [];\r\n    private loading_ancestries: boolean = false;\r\n    private loading_backgrounds: boolean = false;\r\n    private loading_heritages: boolean = false;\r\n    \r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    get_Ancestries(name: string = \"\") {\r\n        if (!this.loading_ancestries) {\r\n            return this.ancestries.filter(ancestry => (ancestry.name == name || name == \"\"));\r\n        } else { return [new Ancestry()] }\r\n    }\r\n\r\n    get_Heritages(name: string = \"\", ancestryName: string = \"\") {\r\n        if (!this.loading_heritages) {\r\n            return this.heritages.filter(heritage => (heritage.name == name || name == \"\" )\r\n             && (ancestryName == \"\" || this.get_Ancestries(ancestryName)[0].heritages.includes(heritage.name)) );\r\n        } else { return [new Heritage()] }\r\n    }\r\n\r\n    get_HeritagesAndSubtypes(name: string = \"\") {\r\n        if (!this.loading_heritages) {\r\n            let heritages: Heritage[] = [];\r\n            heritages.push(...this.heritages);\r\n            heritages.forEach(heritage => {\r\n                heritages.push(...heritage.subTypes);\r\n            })\r\n            return heritages.filter(heritage => (heritage.name == name || name == \"\" ));\r\n        } else { return [new Heritage()] }\r\n    }\r\n    \r\n    get_Backgrounds(name: string = \"\") {\r\n        if (!this.loading_backgrounds) {\r\n            return this.backgrounds.filter(background => (background.name == name || name == \"\"));\r\n        } else { return [new Background()] }\r\n    }\r\n\r\n    restore_AncestryFromSave(ancestry: Ancestry, savegameService: SavegameService) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_Ancestries(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    ancestry = savegameService.merge(libraryObject, ancestry);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    clean_AncestryForSave(ancestry: Ancestry) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_Ancestries(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(ancestry).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading from the refId.\r\n                        if (JSON.stringify(ancestry[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete ancestry[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    restore_HeritageFromSave(heritage: Heritage, savegameService: SavegameService) {\r\n        if (heritage.name) {\r\n            let libraryObject = this.get_HeritagesAndSubtypes(heritage.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    heritage = savegameService.merge(libraryObject, heritage);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return heritage;\r\n    }\r\n\r\n    clean_HeritageForSave(heritage: Heritage) {\r\n        if (heritage.name) {\r\n            let libraryObject = this.get_HeritagesAndSubtypes(heritage.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(heritage).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading from the refId.\r\n                        if (JSON.stringify(heritage[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete heritage[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return heritage;\r\n    }\r\n\r\n    restore_BackgroundFromSave(background: Background, savegameService: SavegameService) {\r\n        if (background.name) {\r\n            let libraryObject = this.get_Backgrounds(background.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    background = savegameService.merge(libraryObject, background);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return background;\r\n    }\r\n\r\n    clean_BackgroundForSave(background: Background) {\r\n        if (background.name) {\r\n            let libraryObject = this.get_Backgrounds(background.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(background).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading from the refId.\r\n                        if (JSON.stringify(background[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete background[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return background;\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading_ancestries || this.loading_backgrounds || this.loading_heritages)\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.ancestries.length) {\r\n            this.loading_ancestries = true;\r\n            this.load(json_ancestries, \"ancestries\", Ancestry);\r\n            this.loading_ancestries = false;\r\n        }\r\n        if (!this.backgrounds.length) {\r\n            this.loading_backgrounds = true;\r\n            this.load(json_backgrounds, \"backgrounds\", Background);\r\n            this.loading_backgrounds = false;\r\n        }\r\n        if (!this.heritages.length) {\r\n            this.loading_heritages = true;\r\n            this.load(json_heritages, \"heritages\", Heritage);\r\n            this.loading_heritages = false;\r\n        }\r\n    }\r\n\r\n    load(source, target: string, type) {\r\n        this[target] = [];\r\n        Object.keys(source).forEach(key => {\r\n            this[target].push(...source[key].map(obj => Object.assign(new type(), obj)));\r\n        });\r\n        this[target].forEach(obj => {\r\n            obj = this.savegameService.reassign(obj)\r\n        });\r\n    }\r\n\r\n}","<div id=\"top-bar\" class=\"newrow\">\r\n    <header class=\"mainHeader\" [ngbTooltip]=\"'Pathfinder Excessive Character Sheet'\">P.E.C.S.</header>\r\n    <button class=\"fancy-button loading\" *ngIf=\"still_loading()\">Loading</button>\r\n    <button [ngClass]=\"{'fancy-button':get_CharacterMenuState()=='out'}\" (click)=\"toggle_Menu('character')\" *ngIf=\"!still_loading()\">{{get_Character().name ? get_Character().name : \"Character\"}}</button>\r\n    <button [ngClass]=\"{'fancy-button':get_CompanionMenuState()=='out'}\" (click)=\"toggle_Menu('companion')\" *ngIf=\"!still_loading() && get_CompanionAvailable()\">{{get_Companion().name ? get_Companion().name : \"Animal Companion\"}}</button>\r\n    <button [ngClass]=\"{'fancy-button':get_FamiliarMenuState()=='out'}\" (click)=\"toggle_Menu('familiar')\" *ngIf=\"!still_loading() && get_FamiliarAvailable()\">{{get_Familiar().name ? get_Familiar().name : \"Familiar\"}}</button>\r\n    <button [ngClass]=\"{'fancy-button':get_ItemsMenuState()=='out'}\" (click)=\"toggle_Menu('items')\" *ngIf=\"!still_loading()\">Items</button>\r\n    <button [ngClass]=\"{'fancy-button':get_CraftingMenuState()=='out'}\" (click)=\"toggle_Menu('crafting')\" *ngIf=\"!still_loading()\">Crafting</button>\r\n    <button [ngClass]=\"{'fancy-button':get_SpellsMenuState()=='out'}\" (click)=\"toggle_Menu('spells')\" *ngIf=\"!still_loading()\">Spellbook</button>\r\n    <button [ngClass]=\"{'fancy-button':get_SpellLibraryMenuState()=='out'}\" (click)=\"toggle_Menu('spelllibrary')\" *ngIf=\"!still_loading()\">Spell Library</button>\r\n    <button [ngClass]=\"{'fancy-button':get_ConditionsMenuState()=='out'}\" (click)=\"toggle_Menu('conditions')\" *ngIf=\"!still_loading()\">Conditions</button>\r\n    <button [ngClass]=\"{'fancy-button':get_DiceMenuState()=='out'}\" [ngbTooltip]=\"'Dice'\" (click)=\"toggle_Menu('dice')\" *ngIf=\"!still_loading()\"><app-diceIcons_D20></app-diceIcons_D20></button>\r\n    <span style=\"flex-grow: initial\" [ngbTooltip]=\"!get_Savegames() ? 'Database connection failed.' : (get_IsBlankCharacter() ? 'No changes to character yet.' : 'Save Character')\"><button class=\"fancy-button\" (click)=\"save()\" *ngIf=\"!still_loading()\" [disabled]=\"!get_Savegames() || get_IsBlankCharacter()\"><i class=\"bi-file-earmark-arrow-up\"></i></button></span>\r\n    <span style=\"flex-grow: initial\" [ngbTooltip]=\"'Refresh all'\"><button class=\"fancy-button\" (click)=\"set_Changed()\" *ngIf=\"!still_loading()\"><i class=\"ra ra-cycle\"></i></button></span>\r\n</div>","import { Component, OnInit, HostBinding, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { SavegameService } from '../savegame.service';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-top-bar',\r\n    templateUrl: './top-bar.component.html',\r\n    styleUrls: ['./top-bar.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private savegameService: SavegameService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    get_Savegames() {\r\n        return this.savegameService.get_Savegames();\r\n    }\r\n\r\n    set_Changed() {\r\n        this.characterService.set_Changed();\r\n    }\r\n\r\n    get_Darkmode() {\r\n        return this.characterService.get_Darkmode();\r\n    }\r\n\r\n    toggle_Menu(menu: string) {\r\n        this.characterService.toggle_Menu(menu);\r\n        this.characterService.set_ToChange(\"Character\", \"items\");\r\n        this.characterService.set_ToChange(\"Character\", \"character-sheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.characterService.get_ItemsMenuState();\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.characterService.get_CraftingMenuState();\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterService.get_CharacterMenuState();\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.characterService.get_CompanionMenuState();\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.characterService.get_FamiliarMenuState();\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.characterService.get_SpellsMenuState();\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.characterService.get_SpellLibraryMenuState();\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.characterService.get_ConditionsMenuState();\r\n    }\r\n\r\n    get_DiceMenuState() {\r\n        return this.characterService.get_DiceMenuState();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Companion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    get_IsBlankCharacter() {\r\n        let character = this.get_Character();\r\n        return (\r\n            !character.class?.name &&\r\n            !character.name &&\r\n            !character.partyName &&\r\n            !character.experiencePoints &&\r\n            !character.alignment &&\r\n            !character.baseValues.length &&\r\n            character.inventories.length == 1 &&\r\n            character.inventories[0].allItems().length <= 2\r\n        )\r\n    }\r\n\r\n    save() {\r\n        this.characterService.save_Character();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"top-bar\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"top-bar\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.characterService.initialize(\"\");\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","export class Effect {\r\n    constructor(\r\n        public creature: string = \"\",\r\n        public type: string = \"\",\r\n        public target: string = \"\",\r\n        public value: string = \"\",\r\n        public setValue: string = \"\",\r\n        public toggle: boolean = false,\r\n        public source: string = \"\",\r\n        public penalty: boolean = false,\r\n        public apply: boolean = undefined,\r\n        public show: boolean = undefined,\r\n        public duration: number = 0,\r\n        public maxDuration: number = 0,\r\n        //If the effect is typed, cumulative lists all effect sources (of the same type) that it is cumulative with.\r\n        public cumulative: string[] = []\r\n    ) {}\r\n}","import { Consumable } from './Consumable';\r\n\r\nexport class Potion extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Potions should be type \"potions\" to be found in the database\r\n    readonly type = \"potions\";\r\n}","import { Injectable } from '@angular/core';\r\nimport { Deity } from './Deity';\r\nimport { SpellCast } from './SpellCast';\r\nimport * as json_deities from '../assets/json/deities';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DeitiesService {\r\n\r\n    private deities: Deity[] = [];\r\n    private loading: boolean = false;\r\n    \r\n    constructor() { }\r\n\r\n    get_Deities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.deities.filter(deity => deity.name.toLowerCase() == name.toLowerCase() || name == \"\")\r\n        } else { return [new Deity()] }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n  \r\n    initialize() {\r\n        if (!this.deities.length) {\r\n            this.loading = true;\r\n            this.load_Deities();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Deities() {\r\n        this.deities = [];\r\n        Object.keys(json_deities).forEach(key => {\r\n            this.deities.push(...json_deities[key].map(obj => Object.assign(new Deity(), obj)));\r\n        });\r\n        //Don't call reassign() because cleric spells are really the only thing we need to assign.\r\n        this.deities.forEach(deity => {\r\n            deity.clericSpells = deity.clericSpells.map(spell => Object.assign(new SpellCast(), spell));\r\n        })\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Class } from './Class';\r\nimport { SavegameService } from './savegame.service';\r\nimport * as json_classes from '../assets/json/classes';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClassesService {\r\n\r\n    classes: Class[] = [];\r\n    private loading: boolean = false;\r\n    \r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    get_Classes(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.classes.filter($class => $class.name == name || name == \"\")\r\n        } else { return [new Class()] }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n  \r\n    restore_ClassFromSave($class: Class, savegameService: SavegameService) {\r\n        if ($class.name) {\r\n            let libraryObject = this.get_Classes($class.name)[0];\r\n            if (libraryObject) {\r\n                //Make a safe copy of the library object.\r\n                //Then map the restored object onto the copy and keep that.\r\n                try {\r\n                    $class = savegameService.merge(libraryObject, $class)\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    clean_ClassForSave($class: Class) {\r\n        if ($class.name) {\r\n            let libraryObject = this.get_Classes($class.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys($class).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading via the name.\r\n                        if (JSON.stringify($class[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete $class[key];\r\n                        }\r\n                    }\r\n                })\r\n                //Perform the same step for each level.\r\n                if ($class.levels) {\r\n                    for (let index = 0; index < $class.levels.length; index++) {\r\n                        Object.keys($class.levels[index]).forEach(key => {\r\n                            if (![\"number\", \"_className\"].includes(key)) {\r\n                                if (JSON.stringify($class.levels[index][key]) == JSON.stringify(libraryObject.levels[index][key])) {\r\n                                    delete $class.levels[index][key];\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.classes.length) {\r\n            this.loading = true;\r\n            this.load_Classes();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Classes() {\r\n        this.classes = [];\r\n        Object.keys(json_classes).forEach(key => {\r\n            this.classes.push(...json_classes[key].map(obj => Object.assign(new Class(), obj)));\r\n        });\r\n        this.classes.forEach(obj => {\r\n            obj = this.savegameService.reassign(obj)\r\n        });\r\n    }\r\n\r\n}\r\n","import { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Hint } from './Hint';\r\n\r\nexport class AnimalCompanionSpecialization {\r\n    //A boost to damage dice and additional damage is hardcoded in the Weapon class.\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public desc: string = \"\";\r\n    public effects: EffectGain[] = [];\r\n    public hints: Hint[] = [];\r\n    public level: number = 0;\r\n    public name: string = \"\";\r\n    public skillChoices: SkillChoice[] = [];\r\n    reassign() {\r\n        this.abilityChoices = this.abilityChoices.map(choice => Object.assign(new AbilityChoice(), choice));\r\n        this.skillChoices = this.skillChoices.map(choice => Object.assign(new SkillChoice(), choice));\r\n    }\r\n}","import { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { FeatChoice } from './FeatChoice';\r\n\r\nexport class Level {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public featChoices: FeatChoice[] = [];\r\n    public loreChoices: LoreChoice[] = [];\r\n    public number: number = 0;\r\n    public skillChoices: SkillChoice[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\n\r\n@Component({\r\n    selector: 'app-familiarabilities',\r\n    templateUrl: './familiarabilities.component.html',\r\n    styleUrls: ['./familiarabilities.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FamiliarabilitiesComponent implements OnInit {\r\n\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService\r\n    ) { }\r\n\r\n    still_loading() {\r\n        return (this.characterService.still_loading());\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"familiarabilities\", \"all\", \"Familiar\"].includes(target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature == \"Familiar\" && [\"familiarabilities\", \"all\"].includes(view.target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div id=\"familiarabilities-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Familiar Abilities</header>\r\n    <!--Feat choices-->\r\n    <app-featchoice class=\"newrow\" [creature]=\"'Familiar'\" [choice]=\"get_Familiar().abilities\"\r\n        [levelNumber]=\"get_Character().level\" [showTitle]=\"true\" [showContent]=\"true\" [showChoice]=\"''\" [showFeat]=\"''\">\r\n    </app-featchoice>\r\n</div>","import { Consumable } from './Consumable';\r\n\r\nexport class AlchemicalTool extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical tools should be type \"alchemicaltools\" to be found in the database\r\n    readonly type = \"alchemicaltools\";\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Consumable } from './Consumable';\r\n\r\nexport class Talisman extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Other Consumables should be type \"talismans\" to be found in the database\r\n    readonly type = \"talismans\";\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public failure: string = \"\";\r\n    public success: string = \"\";\r\n    public requirements: string = \"\";\r\n    public showActivities: string[] = [];\r\n    //You can only choose this talisman for an item if its type is in the targets list (with a hardcoded exception for \"melee weapons\")\r\n    public targets: string[] = [];\r\n    public trigger: string = \"\";\r\n}","import { Weapon } from './Weapon';\r\nimport { Armor } from './Armor';\r\nimport { Shield } from './Shield';\r\nimport { WornItem } from './WornItem';\r\nimport { AlchemicalElixir } from './AlchemicalElixir';\r\nimport { Consumable } from './Consumable';\r\nimport { OtherConsumable } from './OtherConsumable';\r\nimport { HeldItem } from './HeldItem';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { Equipment } from './Equipment';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { Rune } from './Rune';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Potion } from './Potion';\r\nimport { OtherItem } from './OtherItem';\r\nimport { ItemsService } from './items.service';\r\nimport { Item } from './Item';\r\nimport { Ammunition } from './Ammunition';\r\nimport { Scroll } from './Scroll';\r\nimport { CharacterService } from './character.service';\r\nimport { Oil } from './Oil';\r\nimport { Talisman } from './Talisman';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { AlchemicalTool } from './AlchemicalTool';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { Snare } from './Snare';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { Wand } from './Wand';\r\n\r\nexport class ItemCollection {\r\n    public readonly _className: string = this.constructor.name;\r\n    public adventuringgear: AdventuringGear[] = [];\r\n    public ammunition: Ammunition[] = [];\r\n    public alchemicalelixirs: AlchemicalElixir[] = [];\r\n    public armorrunes: ArmorRune[] = [];\r\n    public armors: Armor[] = [];\r\n    //You cannot add any items to an inventory that would break its bulk limit.\r\n    public bulkLimit: number = 0;\r\n    //This is the amount of bulk that can be ignored when weighing this inventory.\r\n    public bulkReduction: number = 0;\r\n    public helditems: HeldItem[] = [];\r\n    //If an item grants an inventory, this is the item's ID.\r\n    public itemId: string = \"\";\r\n    public otherconsumables: OtherConsumable[] = [];\r\n    public otherconsumablesbombs: OtherConsumableBomb[] = [];\r\n    public otheritems: OtherItem[] = [];\r\n    public potions: Potion[] = [];\r\n    public shields: Shield[] = [];\r\n    public weaponrunes: WeaponRune[] = [];\r\n    public weapons: Weapon[] = [];\r\n    public wornitems: WornItem[] = [];\r\n    public scrolls: Scroll[] = [];\r\n    public oils: Oil[] = [];\r\n    public talismans: Talisman[] = [];\r\n    public alchemicalbombs: AlchemicalBomb[] = [];\r\n    public alchemicaltools: AlchemicalTool[] = [];\r\n    public alchemicalpoisons: AlchemicalPoison[] = [];\r\n    public snares: Snare[] = [];\r\n    public wands: Wand[] = [];\r\n    public readonly names: {name: string, key: string}[] = [\r\n        {name:\"Weapons\",key:\"weapons\"},\r\n        {name:\"Armors\",key:\"armors\"},\r\n        {name:\"Shields\",key:\"shields\"},\r\n        {name:\"Alchemical Bombs\",key:\"alchemicalbombs\"},\r\n        {name:\"Worn Items\",key:\"wornitems\"},\r\n        {name:\"Held Items\",key:\"helditems\"},\r\n        {name:\"Adventuring Gear\",key:\"adventuringgear\"},\r\n        {name:\"Alchemical Tools\",key:\"alchemicaltools\"},\r\n        {name:\"Weapon Runes\",key:\"weaponrunes\"},\r\n        {name:\"Armor Runes\",key:\"armorrunes\"},\r\n        {name:\"Scrolls\",key:\"scrolls\"},\r\n        {name:\"Alchemical Elixirs\",key:\"alchemicalelixirs\"},\r\n        {name:\"Potions\",key:\"potions\"},\r\n        {name:\"Alchemical Poisons\",key:\"alchemicalpoisons\"},\r\n        {name:\"Oils\",key:\"oils\"},\r\n        {name:\"Talismans\",key:\"talismans\"},\r\n        {name:\"Snares\",key:\"snares\"},\r\n        {name:\"Ammunition\",key:\"ammunition\"},\r\n        {name:\"Other Consumables\",key:\"otherconsumables\"},\r\n        {name:\"Other Consumables (Bombs)\",key:\"otherconsumablesbombs\"},\r\n        {name:\"Wands\", key:\"wands\"}\r\n    ]\r\n    allEquipment() {\r\n        let items: Equipment[] = [];\r\n        items.push(...this.adventuringgear);\r\n        items.push(...this.alchemicalbombs);\r\n        items.push(...this.otherconsumablesbombs);\r\n        items.push(...this.armors);\r\n        items.push(...this.helditems);\r\n        items.push(...this.shields);\r\n        items.push(...this.weapons);\r\n        items.push(...this.wornitems);\r\n        items.push(...this.wands);\r\n        return items;\r\n    }\r\n    allConsumables() {\r\n        let items: Consumable[] = [];\r\n        items.push(...this.alchemicalelixirs);\r\n        items.push(...this.alchemicaltools);\r\n        items.push(...this.ammunition);\r\n        items.push(...this.oils);\r\n        items.push(...this.otherconsumables);\r\n        items.push(...this.potions);\r\n        items.push(...this.scrolls);\r\n        items.push(...this.talismans);\r\n        items.push(...this.snares);\r\n        items.push(...this.alchemicalpoisons);\r\n        return items;\r\n    }\r\n    allRunes() {\r\n        let items: Rune[] = [];\r\n        items.push(...this.armorrunes);\r\n        items.push(...this.weaponrunes);\r\n        return items;\r\n    }\r\n    allItems() {\r\n        let items: Item[] = [];\r\n        items.push(...this.allConsumables());\r\n        items.push(...this.allEquipment());\r\n        items.push(...this.allRunes());\r\n        return items;\r\n    }\r\n    get_Bulk(rounded: boolean = true) {\r\n        //All bulk gets calculated at *10 to avoid rounding issues with decimals,\r\n        //Then returned at /10\r\n        let sum: number = 0;\r\n        function addup(item: Item|OtherItem) {\r\n            let bulk = item.constructor == OtherItem ? item.bulk : (item as Item).get_Bulk();\r\n            if ((item as Equipment).carryingBulk && !(item as Equipment).equipped) {\r\n                bulk = (item as Equipment).carryingBulk;\r\n            }\r\n            switch (bulk) {\r\n                case \"\":\r\n                    break;\r\n                case \"-\":\r\n                    break;\r\n                case \"L\":\r\n                    if (item.amount) {\r\n                        sum += Math.floor(item.amount / ((item as Consumable).stack ? (item as Consumable).stack : 1)) ;\r\n                    } else {\r\n                        sum += 1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (item.amount) {\r\n                        sum += parseInt(bulk) * 10 * Math.floor(item.amount / ((item as Consumable).stack ? (item as Consumable).stack : 1));\r\n                    } else {\r\n                        sum += parseInt(bulk) * 10;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        this.allItems().forEach(item => {\r\n            addup(item);\r\n        })\r\n        this.otheritems.forEach(item => {\r\n            addup(item);\r\n        })\r\n        sum = Math.max(0, sum);\r\n        //Either round to int, or else to 1 decimal\r\n        if (rounded) {\r\n            sum = Math.floor(sum / 10);\r\n        } else {\r\n            sum = Math.floor(sum) / 10;\r\n        }\r\n        return sum;\r\n    }\r\n    get_Name(characterService: CharacterService) {\r\n        let name: string = \"\"\r\n        if (!this.itemId) {\r\n            characterService.get_Creatures().forEach(creature => {\r\n                if (creature.type != \"Familiar\") {\r\n                    if (creature.inventories.some(inventory => inventory === this)) {\r\n                        name = creature.name || creature.type;\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            characterService.get_Creatures().forEach(creature => {\r\n                if (creature.type != \"Familiar\") {\r\n                    if (creature.inventories.some(inventory => inventory === this)) {\r\n                        creature.inventories.forEach(creatureInventory => {\r\n                            let items = creatureInventory.allEquipment().filter(item => item.id == this.itemId);\r\n                            if (items.length) {\r\n                                name = items[0].get_Name();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return name;\r\n    }\r\n}\r\n","import { AbilitiesService } from './abilities.service';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Effect } from './Effect';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Character } from './Character';\r\nimport { Creature } from './Creature';\r\nimport { ProficiencyCopy } from './ProficiencyCopy';\r\n\r\nexport class Skill {\r\n    public readonly _className: string = this.constructor.name;\r\n    public notes: string = \"\";\r\n    public showNotes: boolean = false;\r\n    constructor(\r\n        public ability: string = \"\",\r\n        public name: string = \"\",\r\n        public type: string = \"\",\r\n        //Locked skills don't show up in skill increase choices.\r\n        public locked: boolean = false,\r\n        public recallKnowledge: boolean = false\r\n    ) { }\r\n    calculate(creature: Creature, characterService: CharacterService, abilitiesService: AbilitiesService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level, isDC: boolean = false) {\r\n        let level: number = (creature.type == \"Familiar\" ? 0 : this.level((creature as AnimalCompanion | Character), characterService, charLevel));\r\n        let ability: string = this.get_Ability(creature, characterService);\r\n        let baseValue: { result: number, explain: string, skillLevel: number, ability: string } = this.baseValue(creature, characterService, abilitiesService, effectsService, charLevel, level);\r\n\r\n        let result = {\r\n            level: level,\r\n            ability: ability,\r\n            baseValue: baseValue,\r\n            absolutes: this.absolutes(creature, effectsService, isDC, level, ability) as Effect[],\r\n            relatives: this.relatives(creature, effectsService, isDC, level, ability) as Effect[],\r\n            bonuses: this.bonuses(creature, effectsService, isDC, level, ability) as boolean,\r\n            penalties: this.penalties(creature, effectsService, isDC, level, ability) as boolean,\r\n            value: this.value(creature, characterService, abilitiesService, effectsService, charLevel, isDC, baseValue) as { result: number, explain: string }\r\n        }\r\n        return result;\r\n    }\r\n    canIncrease(creature: Character, characterService: CharacterService, levelNumber: number, maxRank: number = 8) {\r\n        if (levelNumber >= 15) {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(8, maxRank))\r\n        } else if (levelNumber >= 7) {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(6, maxRank))\r\n        } else if (levelNumber >= 2) {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(4, maxRank))\r\n        } else {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(2, maxRank))\r\n        }\r\n    }\r\n    isLegal(creature: Character, characterService: CharacterService, levelNumber: number, maxRank: number = 8) {\r\n        if (levelNumber >= 15) {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(8, maxRank))\r\n        } else if (levelNumber >= 7) {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(6, maxRank))\r\n        } else if (levelNumber >= 2) {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(4, maxRank))\r\n        } else {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(2, maxRank))\r\n        }\r\n    }\r\n    get_NamesList(creature: Creature, isDC: boolean = false, skillLevel: number = 0, ability: string = \"\") {\r\n        let levelNames = [\"Untrained\", \"Untrained\", \"Trained\", \"Trained\", \"Expert\", \"Expert\", \"Master\", \"Master\", \"Legendary\"];\r\n        let list: string[] = [\r\n            this.name,\r\n            \"All Checks and DCs\",\r\n        ];\r\n        if (ability) {\r\n            list.push(ability + \"-based Checks and DCs\");\r\n        }\r\n        if (this.type == \"Skill\") {\r\n            list.push(\"Skill Checks\");\r\n            if (creature.type != \"Familiar\") {\r\n                list.push(levelNames[skillLevel] + \" Skill Checks\");\r\n            }\r\n        }\r\n        if (this.type == \"Save\") { list.push(\"Saving Throws\") }\r\n        if (this.name.includes(\"Lore\")) { list.push(\"Lore\") }\r\n        if (this.name.includes(\"Spell DC\") && !isDC) { list.push(\"Attack Rolls\"); list.push(\"Spell Attack Rolls\") }\r\n        if (this.name.includes(\"Spell DC\") && isDC) { list.push(\"Spell DCs\") }\r\n        if (this.recallKnowledge) {\r\n            list.push(\"Recall Knowledge Checks\")\r\n            if (creature.type != \"Familiar\") {\r\n                list.push(levelNames[skillLevel] + \" Recall Knowledge Checks\");\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    absolutes(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.get_AbsolutesOnThese(creature, namesList);\r\n    }\r\n    relatives(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.get_RelativesOnThese(creature, namesList);\r\n    }\r\n    bonuses(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.show_BonusesOnThese(creature, namesList);\r\n    }\r\n    penalties(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.show_PenaltiesOnThese(creature, namesList);\r\n    }\r\n    get_Ability(creature: Creature, characterService: CharacterService) {\r\n        if (creature.type == \"Familiar\") {\r\n            let character = characterService.get_Character();\r\n            //Get the correct ability by identifying the non-innate spellcasting with the same class name as the Familiar's originClass and retrieving its key ability.\r\n            return character.class.spellCasting.find(spellcasting => spellcasting.className == (creature as Familiar).originClass && spellcasting.castingType != \"Innate\").ability || \"Charisma\";\r\n        } else {\r\n            if (this.ability) {\r\n                return this.ability;\r\n            } else {\r\n                //Get the correct ability by finding the first key ability boost for the main class or the archetype class.\r\n                // Some effects ask for your Unarmed Attacks modifier without any weapon, so we need to apply your strength modifier. But Unarmed Attacks is not a real skill and does not have an ability.\r\n                if (this.name == \"Unarmed Attacks\") {\r\n                    return \"Strength\"\r\n                }\r\n                if (this.name == characterService.get_Character().class.name + \" Class DC\") {\r\n                    return characterService.get_Character().get_AbilityBoosts(1, 1, \"\", \"\", \"Class Key Ability\")[0]?.name;\r\n                } else if (this.name.includes(\" Class DC\") && !this.name.includes(characterService.get_Character().class.name)) {\r\n                    return characterService.get_Character().get_AbilityBoosts(1, characterService.get_Character().level, \"\", \"\", this.name.split(\" \")[0] + \" Key Ability\")[0]?.name;\r\n                }\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    level(creature: Character | AnimalCompanion, characterService: CharacterService, charLevel: number = characterService.get_Character().level, excludeTemporary: boolean = false) {\r\n        if (characterService.still_loading()) { return 0; }\r\n        let effectsService = characterService.effectsService;\r\n        let skillLevel: number = 0;\r\n        //If the skill is set by an effect, we can skip every other calculation.\r\n        let list: string[] = [];\r\n        list.push(this.name + \" Proficiency Level\");\r\n        switch (this.type) {\r\n            case \"Skill\":\r\n                list.push(\"All Skill Proficiency Levels\")\r\n                break;\r\n            case \"Save\":\r\n                list.push(\"All Saving Throw Proficiency Levels\")\r\n                break;\r\n            case \"Weapon Proficiency\":\r\n                list.push(\"All Weapon Proficiency Levels\")\r\n                break;\r\n            case \"Specific Weapon Proficiency\":\r\n                list.push(\"All Weapon Proficiency Levels\")\r\n                break;\r\n            case \"Armor Proficiency\":\r\n                list.push(\"All Armor Proficiency Levels\")\r\n                break;\r\n        }\r\n        let skillLevelEffects = effectsService.get_AbsolutesOnThese(creature, list);\r\n        if (skillLevelEffects.length) {\r\n            skillLevelEffects.forEach(effect => {\r\n                skillLevel = parseInt(effect.setValue);\r\n            })\r\n        } else {\r\n            let increases = creature.get_SkillIncreases(characterService, 0, charLevel, this.name, \"\", \"\", undefined, excludeTemporary);\r\n            // Add 2 for each increase, but keep them to their max Rank\r\n            increases = increases.sort((a, b) => (a.maxRank > b.maxRank) ? 1 : -1)\r\n            increases.forEach(increase => {\r\n                skillLevel = Math.min(skillLevel + 2, increase.maxRank);\r\n            })\r\n            //If your proficiency in any non-innate spell attack rolls or spell DCs is expert or better, apply the best of these proficiencies to your innate spells, too.\r\n            if (this.name.includes(\"Innate\") && this.name.includes(\"Spell DC\")) {\r\n                let spellDCs = characterService.get_Skills(creature).filter(skill => skill !== this && skill.name.includes(\"Spell DC\") && !skill.name.includes(\"Innate\"));\r\n                skillLevel = Math.max(skillLevel, ...spellDCs.map(skill => skill.level(creature, characterService, charLevel, excludeTemporary)));\r\n            }\r\n            let proficiencyCopies: ProficiencyCopy[] = [];\r\n            //Collect all the available proficiency copy instructions,\r\n            // (i.e. \"Whenever you gain a class feature that grants you expert or greater proficiency in a given weapon or weapons, you also gain that proficiency in...\").\r\n            //We check whether you meet the minimum proficiency level by comparing if your skillLevel up to this point.\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.copyProficiency.length && feat.have(creature, characterService, charLevel, false))\r\n                .forEach(feat => {\r\n                    proficiencyCopies.push(...feat.copyProficiency.filter(copy =>\r\n                        (this.name.toLowerCase() == copy.name.toLowerCase()) &&\r\n                        (copy.minLevel ? skillLevel >= copy.minLevel : true)\r\n                    ))\r\n                });\r\n            //If the skill name is \"Highest Attack Proficiency\", add an extra proficiency copy instruction that should return the highest weapon or unarmed procifiency that you have.\r\n            if (this.name == \"Highest Attack Proficiency\") {\r\n                proficiencyCopies.push(Object.assign(new ProficiencyCopy(), {name: \"Highest Attack Proficiency\", type: \"Weapon Proficiency\", featuresOnly: false}));\r\n            }\r\n            //For each proficiency copy instruction, collect the desired skill increases, then keep the highest.\r\n            let copyLevels: number[] = [];\r\n            proficiencyCopies.forEach(copy => {\r\n                (creature as Character).class.levels.filter(level => level.number <= creature.level).forEach(level => {\r\n                    copyLevels.push(...\r\n                        level.skillChoices.filter(choice =>\r\n                            //Use .includes so \"Specific Weapon Proficiency\" matches \"Weapon Proficiency\".\r\n                            (choice.type.toLowerCase().includes(copy.type.toLowerCase())) &&\r\n                            (copy.featuresOnly ? !choice.source.toLowerCase().includes(\"feat:\") : true)\r\n                        ).map(choice => choice.maxRank))\r\n                })\r\n            })\r\n            skillLevel = Math.max(...copyLevels, skillLevel);\r\n        }\r\n        //Add any relative proficiency level bonuses.\r\n        skillLevelEffects = effectsService.get_RelativesOnThese(creature, list);\r\n        skillLevelEffects.forEach(effect => {\r\n            if ([-8, -6, -4, -2, 2, 4, 6].includes(parseInt(effect.value))) {\r\n                skillLevel += parseInt(effect.value);\r\n            }\r\n        })\r\n        skillLevel = Math.max(Math.min(skillLevel, 8), 0);\r\n        return skillLevel;\r\n    }\r\n    baseValue(creature: Creature, characterService: CharacterService, abilitiesService: AbilitiesService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level, skillLevel: number = undefined) {\r\n        let result: number = 0;\r\n        let explain: string = \"\";\r\n        let index = 0;\r\n        let ability = \"\";\r\n        switch (creature.type) {\r\n            case \"Companion\":\r\n                index = 1;\r\n                break;\r\n            case \"Familiar\":\r\n                index = 2;\r\n                break;\r\n        }\r\n        if (!characterService.still_loading()) {\r\n            if (creature.type == \"Familiar\") {\r\n                //Familiars have special rules:\r\n                //- Saves are equal to the character's before applying circumstance or status effects.\r\n                //- Perception, Acrobatics and Stealth are equal to the character level plus spellcasting modifier (or Charisma).\r\n                //- All others (including attacks) are equal to the character level.\r\n                let character = characterService.get_Character();\r\n                if ([\"Fortitude\", \"Reflex\", \"Will\"].includes(this.name)) {\r\n                    let charBaseValue = this.baseValue(character, characterService, abilitiesService, effectsService, charLevel)\r\n                    result = charBaseValue.result;\r\n                    explain = charBaseValue.explain;\r\n                } else if ([\"Perception\", \"Acrobatics\", \"Stealth\"].includes(this.name)) {\r\n                    result = character.level;\r\n                    explain = \"Character Level: \" + character.level;\r\n                    ability = \"Charisma\";\r\n                    //Get the correct ability by identifying the non-innate spellcasting with the same class name as the Familiar's originClass and retrieving its key ability.\r\n                    ability = this.get_Ability(creature, characterService);\r\n                    let value = abilitiesService.get_Abilities(ability)[0].mod(character, characterService, effectsService);\r\n                    if (value) {\r\n                        result += value.result;\r\n                        explain += \"\\nCharacter Spellcasting Ability: \" + value.result;\r\n                    }\r\n                } else {\r\n                    result = character.level;\r\n                    explain = \"Character Level: \" + character.level;\r\n                }\r\n            } else {\r\n                //Add character level if the character is trained or better with the Skill\r\n                //Add half the level if the skill is unlearned and the character has the Untrained Improvisation feat (full level from 7 on).\r\n                //Gets applied to saves and perception, but they are never untrained\r\n                if (skillLevel == undefined) {\r\n                    skillLevel = this.level((creature as AnimalCompanion | Character), characterService, charLevel);\r\n                }\r\n                var charLevelBonus = 0;\r\n                if (skillLevel) {\r\n                    charLevelBonus = charLevel;\r\n                    explain += \"\\nProficiency Rank: \" + skillLevel;\r\n                    explain += \"\\nCharacter Level: \" + charLevelBonus;\r\n                }\r\n                //Add the Ability modifier identified by the skill's ability property\r\n                var abilityMod = 0;\r\n                ability = this.get_Ability(creature, characterService)\r\n                if (ability) {\r\n                    abilityMod = abilitiesService.get_Abilities(ability)[0].mod((creature as AnimalCompanion | Character), characterService, effectsService).result;\r\n                }\r\n                if (abilityMod) {\r\n                    explain += \"\\n\" + ability + \" Modifier: \" + abilityMod;\r\n                }\r\n                explain = explain.trim();\r\n                //Add up all modifiers, the skill proficiency and all active effects and return the sum\r\n                result = charLevelBonus + skillLevel + abilityMod;\r\n            }\r\n        }\r\n        return { result: result, explain: explain, skillLevel: skillLevel, ability: ability };\r\n    }\r\n    value(creature: Creature, characterService: CharacterService, abilitiesService: AbilitiesService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level, isDC: boolean = false, baseValue: { result: number, explain: string, skillLevel: number, ability: string } = undefined) {\r\n        //Calculates the effective bonus of the given Skill\r\n        let result: number = 0;\r\n        let explain: string = \"\";\r\n        if (!characterService.still_loading()) {\r\n            if (baseValue == undefined) {\r\n                baseValue = this.baseValue(creature, characterService, abilitiesService, effectsService, charLevel)\r\n            }\r\n            result = baseValue.result;\r\n            explain = baseValue.explain;\r\n            let skillLevel = baseValue.skillLevel;\r\n            let ability = baseValue.ability;\r\n            //Applying assurance prevents any other bonuses, penalties or modifiers.\r\n            let noRelatives: boolean = false;\r\n            //Absolutes completely replace the baseValue. They are sorted so that the highest value counts last.\r\n            this.absolutes(creature, effectsService, isDC, skillLevel, ability).forEach(effect => {\r\n                result = parseInt(effect.setValue)\r\n                explain = effect.source + \": \" + effect.setValue;\r\n                if (effect.source.includes(\"Assurance\")) {\r\n                    noRelatives = true;\r\n                }\r\n            });\r\n            let relatives: Effect[] = [];\r\n            //Familiars apply the characters skill value (before circumstance and status effects) on saves\r\n            //We get this by calculating the skill's baseValue and adding effects that aren't circumstance or status effects.\r\n            if (creature.type == \"Familiar\") {\r\n                let character = characterService.get_Character();\r\n                if ([\"Fortitude\", \"Reflex\", \"Will\"].includes(this.name)) {\r\n                    if (baseValue == undefined) {\r\n                        baseValue = this.baseValue(character, characterService, abilitiesService, effectsService, charLevel)\r\n                    }\r\n                    this.absolutes(character, effectsService, isDC, baseValue.skillLevel, baseValue.ability).forEach(effect => {\r\n                        baseValue.result = parseInt(effect.setValue)\r\n                        baseValue.explain = effect.source + \": \" + effect.setValue;\r\n                    });\r\n                    relatives.push(...this.relatives(character, effectsService, isDC, baseValue.skillLevel, baseValue.ability).filter(effect => effect.type != \"circumstance\" && effect.type != \"status\"));\r\n                }\r\n            }\r\n            //Get all active relative effects on this and sum them up\r\n            if (!noRelatives) {\r\n                relatives.push(...this.relatives(creature, effectsService, isDC, baseValue.skillLevel, baseValue.ability));\r\n                relatives.forEach(effect => {\r\n\r\n                    result += parseInt(effect.value);\r\n                    explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n                });\r\n            }\r\n        }\r\n        return { result: result, explain: explain.trim() };\r\n    }\r\n}","export class FormulaChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { SkillChoice } from 'src/app/SkillChoice';\r\nimport { Level } from 'src/app/Level';\r\nimport { Skill } from 'src/app/Skill';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-skillchoice',\r\n    templateUrl: './skillchoice.component.html',\r\n    styleUrls: ['./skillchoice.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SkillchoiceComponent implements OnInit {\r\n\r\n    @Input()\r\n    choice: SkillChoice\r\n    @Input()\r\n    showChoice: string = \"\";\r\n    @Output()\r\n    showSkillChoiceMessage = new EventEmitter<{ name: string, levelNumber: number, choice: SkillChoice }>();\r\n    @Input()\r\n    levelNumber: number = 0;\r\n    @Input()\r\n    excludeTemporary: boolean = false;\r\n    @Input()\r\n    showTitle: boolean = true;\r\n    @Input()\r\n    showContent: boolean = true;\r\n    @Input()\r\n    tileMode: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showChoice == name) {\r\n            this.showChoice = \"\";\r\n            this.showSkillChoiceMessage.emit({ name: this.showChoice, levelNumber: 0, choice: null });\r\n        } else {\r\n            this.showChoice = name;\r\n            this.showSkillChoiceMessage.emit({ name: this.showChoice, levelNumber: this.levelNumber, choice: this.choice });\r\n        }\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.tileMode;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_ButtonTitle(maxAvailable: number) {\r\n        let title: string = \"Skill \";\r\n        if (this.choice.maxRank == 2) {\r\n            title += \"Training\";\r\n        } else {\r\n            title += \"Increase\";\r\n        }\r\n        title += \" (\" + this.choice.source + \")\";\r\n        if (maxAvailable > 1) {\r\n            title += \": \" + this.choice.increases.length + \"/\" + (maxAvailable);\r\n        } else {\r\n            if (this.choice.increases.length) {\r\n                title += \": \" + this.choice.increases[0].name;\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_Abilities(name: string = \"\") {\r\n        return this.characterService.get_Abilities(name)\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        return this.characterService.get_Skills(this.get_Character(), name, type, locked)\r\n    }\r\n\r\n    get_SkillLevel(skill: Skill) {\r\n        return skill.level(this.get_Character(), this.characterService, this.levelNumber, true);\r\n    }\r\n\r\n    get_SkillLevelName(skillLevel: number, short: boolean = false) {\r\n        return this.characterService.get_SkillLevelName(skillLevel, short);\r\n    }\r\n\r\n    get_INT(levelNumber: number) {\r\n        if (!levelNumber) {\r\n            return 0;\r\n        }\r\n        //We have to calculate the modifier instead of getting .mod() because we don't want any effects in the character building interface.\r\n        let intelligence: number = this.get_Abilities(\"Intelligence\")[0].baseValue(this.get_Character(), this.characterService, levelNumber).result;\r\n        let INT: number = Math.floor((intelligence - 10) / 2);\r\n        return INT;\r\n    }\r\n\r\n    get_SkillINTBonus() {\r\n        //Allow INT more skills if INT has been raised since the last level.\r\n        let levelNumber = parseInt(this.choice.id.split(\"-\")[0]);\r\n        if (this.choice.source == \"Intelligence\") {\r\n            return this.get_INT(levelNumber) - this.get_INT(levelNumber - 1);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_Available() {\r\n        return this.choice.available + this.get_SkillINTBonus();\r\n    }\r\n\r\n    get_AvailableSkills(choice: SkillChoice, levelNumber: number, maxAvailable: number) {\r\n        let skills = this.get_Skills('', choice.type, false);\r\n        if (choice.filter.length) {\r\n            //Only filter the choice if enough of the filtered skills can be raised.\r\n            if (choice.filter.map(skillName => this.get_Skills(skillName)[0]).filter(skill => skill && !this.cannotIncrease(skill, levelNumber, choice).length).length >= maxAvailable) {\r\n                skills = skills.filter(skill => choice.filter.includes(skill.name))\r\n            }\r\n        }\r\n        if (choice.minRank) {\r\n            let character = this.get_Character();\r\n            skills = skills.filter(skill => skill.level(character, this.characterService, levelNumber) >= choice.minRank);\r\n        }\r\n        if (skills.length) {\r\n            let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n            return skills\r\n                .filter(skill => (\r\n                    this.skillIncreasedByThis(skill, choice) ||\r\n                    (\r\n                        (\r\n                            showOtherOptions ||\r\n                            choice.increases.length < maxAvailable\r\n                        ) &&\r\n                        //Don't show unavailable skills if this choice is visible on the character sheet.\r\n                        (choice.showOnSheet ? !this.cannotIncrease(skill, levelNumber, choice).length : true)\r\n                    )\r\n                ))\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        }\r\n    }\r\n\r\n    someIllegal(choice: SkillChoice) {\r\n        let anytrue = 0;\r\n        choice.increases.forEach(increase => {\r\n            let levelNumber = parseInt(choice.id.split(\"-\")[0]);\r\n            //Temporary choices are compared to the character level, not their own.\r\n            if (choice.showOnSheet) {\r\n                levelNumber = this.get_Character().level;\r\n            }\r\n            if (!this.get_Skills(increase.name)[0].isLegal(this.get_Character(), this.characterService, levelNumber, choice.maxRank)) {\r\n                if (!increase.locked) {\r\n                    this.get_Character().increase_Skill(this.characterService, increase.name, false, choice, increase.locked);\r\n                    this.characterService.process_ToChange();\r\n                } else {\r\n                    anytrue += 1;\r\n                }\r\n            }\r\n        });\r\n        return anytrue;\r\n    }\r\n\r\n    cannotIncrease(skill: Skill, levelNumber: number, choice: SkillChoice) {\r\n        //Returns a string of reasons why the skill cannot be increased, or []. Test the length of the return if you need a boolean.\r\n        let maxRank: number = choice.maxRank;\r\n        let reasons: string[] = [];\r\n        //The skill may have been increased by the same source, but as a fixed rule.\r\n        if (choice.increases.some(increase => increase.name == skill.name && increase.locked)) {\r\n            let locked = \"Fixed increase.\";\r\n            reasons.push(locked);\r\n        }\r\n        //If this skill was trained by a feat on a higher level, it can't be raised on this level.\r\n        //This prevents losing the feat bonus or raising the skill too high.\r\n        //An exception is made for Additional Lore, which can be raised on Level 3, 7 and 15 no matter when you learned it\r\n        let allIncreases = this.get_SkillIncreases(levelNumber + 1, 20, skill.name, \"\", \"\", undefined, true);\r\n        if (allIncreases.length > 0) {\r\n            if (allIncreases[0].locked && allIncreases[0].source.includes(\"Feat: \") && allIncreases[0].source != \"Feat: Additional Lore\") {\r\n                let trainedOnHigherLevelByFeat = \"Trained on a higher level by \" + allIncreases[0].source + \".\";\r\n                reasons.push(trainedOnHigherLevelByFeat);\r\n            }\r\n            //If this is a temporary choice, and the character has raised the skill higher than the temporary choice allows, the choice is illegal.\r\n            if (choice.showOnSheet && allIncreases.length * 2 > choice.maxRank) {\r\n                let trainedOnHigherLevel = \"Trained on a higher level.\";\r\n                reasons.push(trainedOnHigherLevel);\r\n            }\r\n        }\r\n        //Check if this skill cannot be raised higher at this level, or if this method only allows a certain rank\r\n        // (e.g. for Feats that TRAIN a skill)\r\n        //This is only relevant if you haven't raised the skill on this level yet.\r\n        //If you have, we don't want to hear that it couldn't be raised again right away\r\n        let cannotIncreaseHigher = \"\";\r\n        //You can never raise a skill higher than Legendary (8)\r\n        if (skill.level(this.get_Character(), this.characterService, levelNumber, true) == 8 && !this.skillIncreasedByThis(skill, choice)) {\r\n            cannotIncreaseHigher = \"Cannot increase any higher.\";\r\n            reasons.push(cannotIncreaseHigher);\r\n        } else if (!skill.canIncrease(this.get_Character(), this.characterService, levelNumber, maxRank) && !this.skillIncreasedByThis(skill, choice)) {\r\n            if (!skill.canIncrease(this.get_Character(), this.characterService, levelNumber)) {\r\n                cannotIncreaseHigher = \"Highest rank at this level.\";\r\n            } else {\r\n                if (choice.maxRank == 2) {\r\n                    cannotIncreaseHigher = \"Already trained.\";\r\n                } else {\r\n                    cannotIncreaseHigher = \"Highest rank for this increase.\";\r\n                }\r\n            }\r\n            reasons.push(cannotIncreaseHigher);\r\n        }\r\n        //You can never raise Bardic Lore\r\n        if (skill.name == \"Lore: Bardic\") {\r\n            reasons.push(\"Cannot increase with skill training.\")\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    skillIncreasedByThis(skill: Skill, choice: SkillChoice) {\r\n        return choice.increases.filter(increase => increase.name == skill.name).length\r\n    }\r\n\r\n    skillLockedByThis(skill: Skill, choice: SkillChoice) {\r\n        return choice.increases.filter(increase => increase.name == skill.name && increase.locked).length\r\n    }\r\n\r\n    get_SkillIncreases(minLevelNumber: number, maxLevelNumber: number, skillName: string, source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, excludeTemporary: boolean = false) {\r\n        return this.get_Character().get_SkillIncreases(this.characterService, minLevelNumber, maxLevelNumber, skillName, source, sourceId, locked, excludeTemporary);\r\n    }\r\n\r\n    on_SkillIncrease(skillName: string, boost: boolean, choice: SkillChoice, locked: boolean = false, maxAvailable: number) {\r\n        if (boost && this.get_Character().settings.autoCloseChoices && (choice.increases.length == maxAvailable - 1)) { this.toggle_List(\"\"); }\r\n        this.get_Character().increase_Skill(this.characterService, skillName, boost, choice, locked);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"skillchoices\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"skillchoices\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.levelNumber) {\r\n            this.levelNumber = this.get_Character().level;\r\n        }\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let listID of [choice.id]; trackBy:trackByIndex;\">\r\n    <ng-container *ngFor=\"let maxAvailable of [get_Available()]; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let buttonTitle of [get_ButtonTitle(maxAvailable)]; trackBy:trackByIndex;\">\r\n            <div *ngIf=\"maxAvailable\"\r\n                [ngClass]=\"{'list-item': showTitle && !get_TileMode(), 'problem':(choice.increases.length > maxAvailable || someIllegal(choice)), 'fullsize-only':(choice.increases.length == maxAvailable)}\">\r\n                <!--Choice button shows in title mode-->\r\n                <!--List mode button-->\r\n                <button class=\"newrow left-aligned sublist-toggle skillincrease\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(choice.increases.length == maxAvailable), 'activechoice':get_ShowChoice()==listID && !choice.showOnSheet}\"\r\n                    (click)=\"toggle_List(listID)\" *ngIf=\"showTitle && (!get_TileMode() || choice.showOnSheet)\">\r\n                    {{buttonTitle}}\r\n                </button>\r\n                <!--Tile mode button-->\r\n                <button class=\"skillincrease\" (click)=\"toggle_List(listID)\"\r\n                    *ngIf=\"showTitle && get_TileMode() && !choice.showOnSheet\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(choice.increases.length == maxAvailable), 'activechoice':get_ShowChoice()==listID && !choice.showOnSheet}\">\r\n                    <app-gridIcon class=\"skillincrease\" [ngbTooltip]=\"buttonTitle\"\r\n                        [superTitle]=\"maxAvailable.toString()\"\r\n                        [title]=\"(maxAvailable == 1 && choice.increases.length) ? choice.increases[0].name : ((maxAvailable > 1 && choice.increases.length > 0) ? choice.increases.length.toString() : '')\"\r\n                        [ngClass]=\"{'fancy-button':(choice.increases.length == maxAvailable)}\">\r\n                    </app-gridIcon>\r\n                </button>\r\n                <!--Choice title shows above content in content only mode-->\r\n                <div class=\"newrow list-item padding-8 center-aligned\" *ngIf=\"!showTitle\">\r\n                    <header class=\"box-header sectionHeader\">\r\n                        {{buttonTitle}}\r\n                    </header>\r\n                </div>\r\n                <!--Choice content shows in content mode-->\r\n                <div id=\"{{!showTitle ? 'choiceArea' : ''}}\" class=\"list-item sublist skillincrease\"\r\n                    [ngClass]=\"{'list-item sublist':showTitle, 'fancy-list':showTitle && (choice.increases.length == maxAvailable), 'charactersheet-app':!showTitle}\"\r\n                    *ngIf=\"showContent && get_ShowChoice()==listID\">\r\n                    <ng-container\r\n                        *ngFor=\"let skill of get_AvailableSkills(choice, levelNumber, maxAvailable); trackBy:trackByIndex;\">\r\n                        <ng-container\r\n                            *ngFor=\"let increased of [skillIncreasedByThis(skill, choice)]; trackBy:trackByIndex;\">\r\n                            <ng-container *ngFor=\"let skillLevel of [get_SkillLevel(skill)]; trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [increased || skillLevel >= choice.maxRank]; trackBy:trackByIndex;\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [skillLockedByThis(skill, choice) || (((choice.increases.length >= maxAvailable) || cannotIncrease(skill, levelNumber, choice).length) && !increased)]\">\r\n                                        <div class=\"list-item gridicon-fullsizebox\" triggers=\"click\"\r\n                                            [ngClass]=\"{'selected':increased}\">\r\n                                            <input class=\"character-choice\" id=\"{{skill.name}}\" type=\"checkbox\"\r\n                                                (change)=\"on_SkillIncrease(skill.name, $event.target.checked, choice, false, maxAvailable)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\">\r\n                                                <app-gridIcon [title]=\"skill.name\"\r\n                                                    [ngbPopover]=\"get_SkillLevelName(skillLevel, false)\"\r\n                                                    [superTitle]=\"get_SkillLevelName(skillLevel, true)\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>\r\n                                                        {{skill.name}}{{skill.ability ? \" (\" +\r\n                                                        skill.ability.substr(0,3) + \")\" : \"\"}}&nbsp;\r\n                                                    </span>\r\n                                                    <cite class=\"problem\"\r\n                                                        *ngFor=\"let reason of cannotIncrease(skill, levelNumber, choice); trackBy:trackByIndex;\">\r\n                                                        {{reason}}\r\n                                                    </cite>\r\n                                                    <cite class=\"problem\"\r\n                                                        [ngbPopover]=\"'This skill was raised higher than allowed.'\"\r\n                                                        openDelay=100\r\n                                                        *ngIf=\"!skill.isLegal(get_Character(), this.characterService, levelNumber) || (!skill.isLegal(get_Character(), this.characterService, levelNumber, choice.maxRank) && skillIncreasedByThis(skill, choice))\">\r\n                                                        Too high\r\n                                                    </cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { Health } from '../Health';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { TimeService } from '../time.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-health',\r\n    templateUrl: './health.component.html',\r\n    styleUrls: ['./health.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HealthComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public showMinimizeButton: boolean = true;\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n\r\n    public damage: number = 0;\r\n    public nonlethal: boolean = false;\r\n    public healing: number = 0;\r\n    public setTempHP: number = 0;\r\n    public selectedTempHP: { amount: number, source: string, sourceId: string };\r\n    public Math = Math;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private spellsService: SpellsService,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        private conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.healthMinimized = !this.characterService.get_Character().settings.healthMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.healthMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Waiting(duration: number) {\r\n        let result: string = \"\";\r\n        this.characterService.get_Creatures().forEach(creature => {\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.nextStage < duration && gain.nextStage > 0) || gain.nextStage == -1)) {\r\n                result = \"One or more conditions\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need your attention before you can rest.\";\r\n            }\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.duration == 1))) {\r\n                result = \"One or more instant effects\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need to be resolved before you can rest.\";\r\n            }\r\n            if (this.characterService.get_Health(creature).temporaryHP.length > 1) {\r\n                result = \"You need to select one set of temporary Hit Points\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" before you can rest.\";\r\n            }\r\n            if (this.effectsService.get_EffectsOnThis(creature, \"Resting Blocked\").length) {\r\n                result = \"An effect\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" is keeping you from resting.\"\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    rest() {\r\n        this.timeService.rest(this.characterService, this.conditionsService, this.itemsService, this.spellsService);\r\n    }\r\n\r\n    die(reason: string) {\r\n        if (this.characterService.get_AppliedConditions(this.get_Creature(), \"Dead\").length == 0) {\r\n            this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Dead\", source: reason }), false)\r\n            this.characterService.get_AppliedConditions(this.get_Creature(), \"Doomed\").forEach(gain => {\r\n                this.characterService.remove_Condition(this.get_Creature(), gain, false);\r\n            })\r\n        }\r\n    }\r\n\r\n    get_Health() {\r\n        return this.characterService.get_Health(this.get_Creature());\r\n    }\r\n\r\n    calculate_Health(health: Health) {\r\n        let calculatedHealth = health.calculate(this.get_Creature(), this.characterService, this.effectsService);\r\n        if (calculatedHealth.dying >= calculatedHealth.maxDying) {\r\n            if (this.characterService.get_AppliedConditions(this.get_Creature(), \"Doomed\").length) {\r\n                this.die(\"Doomed\");\r\n            } else {\r\n                this.die(\"Dying value too high\");\r\n            }\r\n        }\r\n        return calculatedHealth;\r\n    }\r\n\r\n    on_DyingSave(success, maxDying: number) {\r\n        if (success) {\r\n            //Reduce all dying conditions by 1\r\n            //Conditions with Value 0 get cleaned up in the conditions Service\r\n            //Wounded is added automatically when Dying is removed\r\n            this.characterService.get_AppliedConditions(this.get_Creature(), \"Dying\").forEach(gain => {\r\n                gain.value = Math.max(gain.value - 1, 0);\r\n            })\r\n        } else {\r\n            this.characterService.get_AppliedConditions(this.get_Creature(), \"Dying\").forEach(gain => {\r\n                gain.value = Math.min(gain.value + 1, maxDying);\r\n            })\r\n            if (this.get_Health().dying(this.get_Creature(), this.characterService) >= maxDying) {\r\n                this.die(\"Failed Dying Save\");\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_HeroPointRecover() {\r\n        this.characterService.get_AppliedConditions(this.get_Creature(), \"Dying\").forEach(gain => {\r\n            this.characterService.remove_Condition(this.get_Creature(), gain, false, false, false);\r\n        });\r\n        this.get_Character().heroPoints = 0;\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.set_ToChange(this.creature, \"general\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_HealWounded() {\r\n        this.characterService.get_AppliedConditions(this.get_Creature(), \"Wounded\").forEach(gain => {\r\n            this.characterService.remove_Condition(this.get_Creature(), gain, false);\r\n        })\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_NumbToDeath() {\r\n        if (this.get_Creature().type == \"Character\") {\r\n            return this.get_Character().get_FeatsTaken(0, this.get_Character().level, \"Numb to Death\").length;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    on_Heal(health: Health, dying: number) {\r\n        health.heal(this.get_Creature(), this.characterService, this.effectsService, this.healing, true, true, dying);\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_NumbToDeath(health: Health, dying: number) {\r\n        health.heal(this.get_Creature(), this.characterService, this.effectsService, this.get_Character().level, true, false, dying);\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TakeDamage(health: Health, wounded: number, dying: number) {\r\n        health.takeDamage(this.get_Creature(), this.characterService, this.effectsService, this.damage, this.nonlethal, wounded, dying);\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_TempHP(amount: number) {\r\n        this.get_Health().temporaryHP[0] = { amount: amount, source: \"Manual\", sourceId: \"\" };\r\n        this.get_Health().temporaryHP.length = 1;\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TempHPSelected(tempSet: { amount: number, source: string, sourceId: string }) {\r\n        this.get_Health().temporaryHP[0] = tempSet;\r\n        this.get_Health().temporaryHP.length = 1;\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        //Update Health and Time because having multiple temporary HP keeps you from ticking time and resting.\r\n        this.characterService.set_ToChange(\"Character\", \"health\");\r\n        this.characterService.set_ToChange(\"Character\", \"time\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Resistances() {\r\n        //There should be no absolutes in resistances. If there are, they will be treated as relatives here.\r\n        let effects = this.effectsService.get_Effects(this.creature).all.filter(effect =>\r\n            effect.creature == this.get_Creature().id && (effect.target.toLowerCase().includes(\"resistance\") ||\r\n                effect.target.toLowerCase().includes(\"hardness\")) && effect.apply);\r\n        let resistances: { target: string, value: number, source: string }[] = [];\r\n        effects.forEach(effect => {\r\n            let value = effect.value || effect.setValue;\r\n            let resistance = resistances.find(res => res.target == effect.target);\r\n            if (resistance) {\r\n                resistance.value += parseInt(value);\r\n                resistance.source += \"\\n\" + effect.source;\r\n            } else {\r\n                resistances.push({ target: effect.target, value: parseInt(value), source: effect.source });\r\n            }\r\n        });\r\n        resistances.forEach((res: { target: string, value: number, source: string }) => {\r\n            if (res.value < 0) {\r\n                res.target = res.target.toLowerCase().replace(\"resistance\", \"weakness\");\r\n            }\r\n            res.target = res.target.split(\" \").map(word => word[0].toUpperCase() + word.substr(1).toLowerCase()).join(\" \");\r\n            if (res.source.includes(\"\\n\")) {\r\n                res.source = \"\\n\" + res.source;\r\n            }\r\n        });\r\n        return resistances;\r\n    }\r\n\r\n    get_Immunities() {\r\n        let effects = this.effectsService.get_Effects(this.creature).all.filter(effect =>\r\n            effect.creature == this.get_Creature().id && (effect.target.toLowerCase().includes(\"immunity\")));\r\n        let immunities: any[] = [];\r\n        effects.forEach(effect => {\r\n            if (!immunities.some(res => res.target == effect.target)) {\r\n                immunities.push({ target: effect.target, source: effect.source });\r\n            }\r\n        });\r\n        immunities.forEach((res: { value: number, target: string }) => {\r\n            res.target = res.target.split(\" \").map(word => word[0].toUpperCase() + word.substr(1).toLowerCase()).join(\" \");\r\n        });\r\n        return immunities;\r\n    }\r\n\r\n    get_AbsolutesOnThis(name: string) {\r\n        return this.effectsService.get_AbsolutesOnThis(this.get_Creature(), name);\r\n    }\r\n\r\n    show_BonusesOnThis(name: string) {\r\n        return this.effectsService.show_BonusesOnThis(this.get_Creature(), name);\r\n    }\r\n\r\n    show_PenaltiesOnThis(name: string) {\r\n        return this.effectsService.show_PenaltiesOnThis(this.get_Creature(), name);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"health\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"health\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\"\r\n    *ngIf=\"creature=='Character' && showMinimizeButton\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-health-height\" class=\"attributeBox\">\r\n    <ng-container *ngFor=\"let health of [get_Health()]; trackBy:trackByIndex\">\r\n        <ng-container *ngFor=\"let calculatedHealth of [calculate_Health(health)]; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader box-header\">Health:\r\n                <span\r\n                    [ngClass]=\"{'penalty':(calculatedHealth.currentHP.result <= 0), 'bonus':(calculatedHealth.currentHP.result > calculatedHealth.maxHP.result)}\"\r\n                    [ngbPopover]=\"calculatedHealth.currentHP.explain\">{{calculatedHealth.currentHP.result}}</span> Hit\r\n                Points\r\n            </header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Health'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n            <ng-container *ngIf=\"!still_loading()\">\r\n                <div [ngbTooltip]=\"get_Waiting(48000) || 'Rest for 8 hours and make your daily preparations.'\">\r\n                    <button class=\"list-item center-aligned\" (click)=\"rest()\" [disabled]=\"get_Waiting(48000).length\"\r\n                        *ngIf=\"creature=='Character'\">Rest</button>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Rest'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                <div class=\"fullsize-only list-item\">\r\n                    <div class=\"newrow\">\r\n                        <strong>Max HP</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedHealth.maxHP.explain\"\r\n                                [ngClass]=\"{'penalty':show_PenaltiesOnThis('Max HP'), 'bonus':show_BonusesOnThis('Max HP'), 'absolute':get_AbsolutesOnThis('Max HP').length}\">\r\n                                {{calculatedHealth.maxHP.result}}\r\n                            </div>\r\n                        </span>\r\n                        <strong>Temp HP</strong>\r\n                        <span *ngIf=\"health.temporaryHP.length > 1\">\r\n                            <select [(ngModel)]=\"selectedTempHP\" (change)=\"on_TempHPSelected(selectedTempHP)\">\r\n                                <option *ngFor=\"let tempHPSet of health.temporaryHP; trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"tempHPSet\">\r\n                                    {{tempHPSet.amount + (tempHPSet.source ? \" (\" + tempHPSet.source + \")\" : \"\")}}\r\n                                </option>\r\n                            </select>\r\n                        </span>\r\n                        <span *ngIf=\"health.temporaryHP.length == 1\">\r\n                            <div class=\"value\"\r\n                                [ngbPopover]=\"health.temporaryHP[0].source ? 'Source: ' + health.temporaryHP[0].source : ''\"\r\n                                [ngClass]=\"{'bonus':(health.temporaryHP[0].amount > 0)}\">\r\n                                {{health.temporaryHP[0].amount}}\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"newrow\">\r\n                        <app-tags [creature]=\"creature\" [objectName]=\"'Max HP'\" [showTraits]=true [showFeats]=true\r\n                            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                    </div>\r\n                </div>\r\n                <div class=\"list-item\" [ngClass]=\"{'fullsize-only':(calculatedHealth.dying <= 0)}\">\r\n                    <div class=\"newrow\">\r\n                        <strong>Dying</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngClass]=\"{'penalty':(calculatedHealth.dying > 0)}\">\r\n                                {{calculatedHealth.dying}}\r\n                            </div>\r\n                        </span>\r\n                        <strong>Max Dying</strong>\r\n                        <span>\r\n                            <div class=\"value\"\r\n                                [ngClass]=\"{'penalty':show_PenaltiesOnThis('Max Dying'), 'bonus':show_BonusesOnThis('Max Dying'), 'absolute':get_AbsolutesOnThis('Max Dying').length}\">\r\n                                {{calculatedHealth.maxDying}}\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"newrow\" *ngIf=\"calculatedHealth.dying > 0\">\r\n                        <span>\r\n                            <button (click)=\"on_DyingSave(true, calculatedHealth.maxDying)\">Save\r\n                            </button>\r\n                        </span>\r\n                        <span>\r\n                            <button (click)=\"on_DyingSave(false, calculatedHealth.maxDying)\">Fail Save\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"newrow\" *ngIf=\"calculatedHealth.dying > 0 && creature == 'Character'\">\r\n                        <button (click)=\"on_HeroPointRecover()\" [disabled]=\"!get_Character().heroPoints\">Use all hero\r\n                            points\r\n                            to recover\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"newrow\">\r\n                        <app-tags [creature]=\"creature\" [objectName]=\"'Max Dying'\" [showTraits]=true [showFeats]=true\r\n                            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                    </div>\r\n                </div>\r\n                <div class=\"newrow list-item\" [ngClass]=\"{'fullsize-only':(calculatedHealth.wounded <= 0)}\">\r\n                    <strong>Wounded</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngClass]=\"{'penalty':(calculatedHealth.wounded > 0)}\">\r\n                            {{calculatedHealth.wounded}}\r\n                        </div>\r\n                    </span>\r\n                    <span *ngIf=\"calculatedHealth.wounded > 0\">\r\n                        <button (click)=\"on_HealWounded()\">Heal</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"list-item newrow\">\r\n                    <span>\r\n                        <strong>Take Damage</strong>\r\n                    </span>\r\n                    <span>\r\n                        <input id=\"nonlethal\" type=\"checkbox\" [(ngModel)]=\"nonlethal\"><label\r\n                            for=\"nonlethal\">&nbsp;nonlethal</label>\r\n                    </span>\r\n                    <span>\r\n                        <input class=\"number4\" type=\"number\" [(ngModel)]=\"damage\" maxLength=\"3\">\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"damage <= 0\"\r\n                            (click)=\"on_TakeDamage(health, calculatedHealth.wounded, calculatedHealth.dying)\">Ouch!</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"list-item newrow\">\r\n                    <span>\r\n                        <strong>Heal Damage</strong>\r\n                    </span>\r\n                    <span>&nbsp;</span>\r\n                    <span>\r\n                        <input class=\"number4\" type=\"number\" [(ngModel)]=\"healing\" maxLength=\"3\">\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"healing <= 0\"\r\n                            (click)=\"on_Heal(health, calculatedHealth.dying)\">Heal</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"list-item newrow\" *ngIf=\"get_NumbToDeath()\"\r\n                    [ngClass]=\"{'fullsize-only':(calculatedHealth.dying <= 0)}\">\r\n                    <span>\r\n                        <strong>Numb to Death</strong>\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"calculatedHealth.dying <= 0\"\r\n                            (click)=\"on_NumbToDeath(health, calculatedHealth.dying)\">Heal\r\n                            and recover</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"fullsize-only list-item newrow\">\r\n                    <span>\r\n                        <strong>Temp HP</strong>\r\n                    </span>\r\n                    <span>&nbsp;</span>\r\n                    <span>\r\n                        <input class=\"number4\" type=\"number\" [(ngModel)]=\"setTempHP\" maxLength=\"3\">\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"setTempHP < 0\" (click)=\"set_TempHP(setTempHP)\">Set</button>\r\n                    </span>\r\n                </div>\r\n                <header class=\"subsectionHeader\">Resistances</header>\r\n                <ng-container *ngFor=\"let resistances of [get_Resistances()]; let index = index; trackBy:trackByIndex;\">\r\n                    <div class=\"list-item\" *ngIf=\"resistances.length\">\r\n                        <div class=\"newrow\" *ngFor=\"let resistance of resistances; trackBy:trackByIndex;\">\r\n                            <span>\r\n                                <ng-template #ResistanceSourceTemplate>\r\n                                    <strong>Source{{resistance.source.includes('\\n') ? 's' : ''}}</strong>\r\n                                    {{resistance.source}}\r\n                                </ng-template>\r\n                                <span [ngbPopover]=\"ResistanceSourceTemplate\"\r\n                                    [ngClass]=\"(resistance.value < 0) ? 'penalty' : 'bonus'\">{{resistance.target}}:\r\n                                    {{Math.abs(resistance.value)}}</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <app-tags [creature]=\"creature\" [objectName]=\"'Resistances'\" [showTraits]=true [showFeats]=true\r\n                        [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let immunities of [get_Immunities()]; trackBy:trackByIndex;\">\r\n                    <header class=\"subsectionHeader\" *ngIf=\"immunities.length\">Immunities</header>\r\n                    <div class=\"list-item\" *ngIf=\"immunities.length\">\r\n                        <div class=\"newrow\" *ngFor=\"let immunity of immunities; trackBy:trackByIndex;\">\r\n                            <span [ngbPopover]=\"'Source: ' + immunity.source\" class=\"bonus\">{{immunity.target}}</span>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { AbilityChoice } from './AbilityChoice';\r\nimport { ItemGain } from './ItemGain';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { HeritageGain } from './HeritageGain';\r\n\r\nexport class Ancestry {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public ancestries: string[] = [];\r\n    public baseLanguages: number = 0;\r\n    public desc: {name:string, value:string}[] = [];\r\n    public featChoices: FeatChoice[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public heritages: string[] = [];\r\n    public hitPoints: number = 0;\r\n    public languages: string[] = [];\r\n    public name: string = \"\";\r\n    public recommendedLanguages: string[] = [];\r\n    public senses: string[] = [];\r\n    public sourceBook: string = \"\";\r\n    public size: number = 0;\r\n    public speeds: {name:string, value:number}[] = [];\r\n    public traits: string[] = [];\r\n}","import core from './core.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    custom_kitsune\r\n};","import { SpellDesc } from './SpellDesc';\r\nimport { CharacterService } from './character.service';\r\nimport { SpellGain } from './SpellGain';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SpellCast } from './SpellCast';\r\nimport { EffectsService } from './effects.service';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Spell {\r\n    public actions: string = \"1A\";\r\n    public allowReturnFocusPoint: boolean = false;\r\n    public area: string = \"\";\r\n    public castType: string = \"\";\r\n    public cost: string = \"\";\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public desc10: SpellDesc[] = [];\r\n    public desc1: SpellDesc[] = [];\r\n    public desc2: SpellDesc[] = [];\r\n    public desc3: SpellDesc[] = [];\r\n    public desc4: SpellDesc[] = [];\r\n    public desc5: SpellDesc[] = [];\r\n    public desc6: SpellDesc[] = [];\r\n    public desc7: SpellDesc[] = [];\r\n    public desc8: SpellDesc[] = [];\r\n    public desc9: SpellDesc[] = [];\r\n    public desc: string = \"\";\r\n    public duration: string = \"\";\r\n    public failure: string = \"\";\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public heightened: {variable:string, value:string}[] = [];\r\n    public inputRequired: string = \"\";\r\n    public levelreq: number = 1;\r\n    public name: string = \"\";\r\n    public PFSnote: string = \"\";\r\n    public range: string = \"\";\r\n    public savingThrow: string = \"\";\r\n    public shortDesc: string = \"\";\r\n    public showSpells: SpellCast[] = [];\r\n    public sourceBook: string = \"\";\r\n    public success: string = \"\";\r\n    //Sustained spells are deactivated after this time (or permanent with -1, or when resting with -2)\r\n    public sustained: number = 0;\r\n    //target is used internally to determine whether you can cast this spell on yourself or your companion/familiar\r\n    //Should be \"\", \"self\", \"companion\" or \"ally\"\r\n    //For \"companion\", it can only be cast on the companion, for \"self\" only on yourself\r\n    //For \"ally\", it can be cast on companion, self and others\r\n    //For \"\", the spell button will just say \"Cast\"\r\n    public target: string = \"\";\r\n    public targets: string = \"\";\r\n    public singleTarget: boolean = false;\r\n    public traditions: string[] = [];\r\n    public traits: string[] = [];\r\n    public trigger: string = \"\";\r\n    get_DescriptionSet(levelNumber: number) {\r\n        //This descends from levelnumber downwards and returns the first available description.\r\n        switch (levelNumber) {\r\n            case 10: \r\n                if (this.desc10.length) { return this.desc10; }\r\n            case 9: \r\n                if (this.desc9.length) { return this.desc9; }\r\n            case 8: \r\n                if (this.desc8.length) { return this.desc8; }\r\n            case 7: \r\n                if (this.desc7.length) { return this.desc7; }\r\n            case 6: \r\n                if (this.desc6.length) { return this.desc6; }\r\n            case 5: \r\n                if (this.desc5.length) { return this.desc5; }\r\n            case 4: \r\n                if (this.desc4.length) { return this.desc4; }\r\n            case 3: \r\n                if (this.desc3.length) { return this.desc3; }\r\n            case 2: \r\n                if (this.desc2.length) { return this.desc2; }\r\n            case 1:\r\n                if (this.desc1.length) { return this.desc1; }\r\n            default:\r\n                return [];\r\n            }\r\n    }\r\n    get_Heightened(text: string, levelNumber: number) {\r\n        this.get_DescriptionSet(levelNumber).forEach((descVar: SpellDesc) => {\r\n            let regex = new RegExp(descVar.variable,\"g\")\r\n            text = text.replace(regex, (descVar.value || \"\"));\r\n        })\r\n        return text;\r\n    }\r\n    get_HeightenedConditions(levelNumber: number) {\r\n        //This descends through the level numbers, starting with levelNumber and returning the first set of ConditionGains found with a matching heightenedfilter.\r\n        //If a heightenedFilter is found, the unheightened ConditionGains are returned as well.\r\n        //If there are no ConditionGains with a heightenedFilter, return all.\r\n        if (!this.gainConditions.length || !this.gainConditions.find(gain => gain.heightenedFilter)) {\r\n            return this.gainConditions;\r\n        } else if (this.gainConditions.length) {\r\n            switch (levelNumber) {\r\n                case 10: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 10)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 10); }\r\n                case 9: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 9)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 9); }\r\n                case 8: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 8)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 8); }\r\n                case 7: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 7)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 7); }\r\n                case 6: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 6)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 6); }\r\n                case 5: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 5)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 5); }\r\n                case 4: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 4)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 4); }\r\n                case 3: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 3)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 3); }\r\n                case 2: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 2)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 2); }\r\n                case 1:\r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 1)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 1); }\r\n                default:\r\n                    return [];\r\n                }\r\n        }\r\n    }\r\n    meetsLevelReq(characterService: CharacterService, spellLevel: number = Math.ceil(characterService.get_Character().level / 2)) {\r\n        //If the spell has a levelreq, check if the level beats that.\r\n        //Returns [requirement met, requirement description]\r\n        let result: {met:boolean, desc:string};\r\n        if (this.levelreq && !this.traits.includes(\"Cantrip\")) {\r\n            if (spellLevel >= this.levelreq) {\r\n                result = {met:true, desc:\"Level \"+this.levelreq};\r\n                } else {\r\n                result = {met:false, desc:\"Level \"+this.levelreq};\r\n            }\r\n        } else {\r\n            result = {met:true, desc:\"\"};\r\n        }\r\n        return result;\r\n    }\r\n    canChoose(characterService: CharacterService, spellLevel: number = Math.ceil(characterService.get_Character().level / 2)) {\r\n        if (characterService.still_loading()) { return false }\r\n        if (spellLevel == -1) {\r\n            spellLevel = Math.ceil(characterService.get_Character().level / 2);\r\n        }\r\n        let levelreq: boolean = this.meetsLevelReq(characterService, spellLevel).met;\r\n        return levelreq;\r\n    }\r\n    have(characterService: CharacterService, casting: SpellCasting = undefined, spellLevel = this.levelreq, className: string = \"\", locked: boolean = undefined) {\r\n        if (characterService.still_loading()) { return false }\r\n        let character = characterService.get_Character();\r\n        let spellsTaken = character.get_SpellsTaken(characterService, 1, 20, spellLevel, this.name, undefined, className, \"\", \"\", \"\", \"\", locked);\r\n        return spellsTaken.length;\r\n    }\r\n    get_EffectiveSpellLevel(creature: Creature, baseLevel: number, characterService: CharacterService, effectsService: EffectsService) {\r\n        //Cantrips and Focus spells are automatically heightened to your maximum available spell level.\r\n        if (!baseLevel || baseLevel == -1) {\r\n            baseLevel = characterService.get_Character().get_SpellLevel();\r\n        }\r\n\r\n        //Apply all effects that might change the effective spell level of this spell.\r\n        let list = [\r\n            \"Spell Levels\",\r\n            this.name + \" Spell Level\"\r\n        ]\r\n        if (this.traditions.includes(\"Focus\")) {\r\n            list.push(\"Focus Spell Levels\");\r\n        }\r\n        if (this.traits.includes(\"Cantrip\")) {\r\n            list.push(\"Cantrip Spell Levels\");\r\n        }\r\n        characterService.effectsService.get_AbsolutesOnThese(creature, list).forEach(effect => {\r\n            if (parseInt(effect.setValue)) {\r\n                baseLevel = parseInt(effect.setValue);\r\n            }\r\n        })\r\n        characterService.effectsService.get_RelativesOnThese(creature, list).forEach(effect => {\r\n            if (parseInt(effect.value)) {\r\n                baseLevel += parseInt(effect.value);\r\n            }\r\n        })\r\n        \r\n        //If a spell is cast with a lower level than its minimum, the level is raised to the minimum.\r\n        return Math.max(baseLevel, (this.levelreq || 0))\r\n    }\r\n}","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Equipment } from './Equipment';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Character } from './Character';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { Specialization } from './Specialization';\r\nimport { ArmorMaterial } from './ArmorMaterial';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Armor extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Armor should be type \"armors\" to be found in the database\r\n    readonly type = \"armors\";\r\n    //For certain medium and light armors, set 1 if an \"Armored Skirt\" is equipped; For certain heavy armors, set -1 instead\r\n    //This value influences acbonus, skillpenalty, dexcap and strength\r\n    public $affectedByArmoredSkirt: -1 | 0 | 1 = 0;\r\n    //Shoddy armors give a penalty of -2 unless you have the Junk Tinker feat.\r\n    public $shoddy: -2 | 0 = 0;\r\n    //The armor's inherent bonus to AC\r\n    private acbonus: number = 0;\r\n    //What kind of armor is this based on? Needed for armor proficiencies for specific magical items.\r\n    public armorBase: string = \"\"\r\n    //The highest dex bonus to AC you can get while wearing this armor.\r\n    //-1 is unlimited.\r\n    public dexcap: number = -1;\r\n    //The armor group, needed for critical specialization effects\r\n    public group: string = \"\";\r\n    //Armor are usually moddable like armor. Armor that cannot be modded should be set to \"-\"\r\n    moddable = \"armor\" as \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\";\r\n    //What proficiency is used? \"Light Armor\", \"Medium Armor\"?\r\n    private prof: string = \"Light Armor\";\r\n    //The penalty to certain skills if your strength is lower than the armors requirement\r\n    //Should be a negative number\r\n    private skillpenalty: number = 0;\r\n    //The penalty to all speeds if your strength is lower than the armors requirement\r\n    //Should be a negative number and a multiple of -5\r\n    public speedpenalty: number = 0;\r\n    //The strength requirement (strength, not STR) to overcome skill and speed penalties\r\n    private strength: number = 0;\r\n    //A Dwarf with the Battleforger feat can polish armor to grant the effect of a +1 potency rune.\r\n    public battleforged: boolean = false;\r\n    get_Bulk() {\r\n        //Return either the bulk set by an oil, or else the actual bulk of the item.\r\n        let oilBulk: string = \"\";\r\n        this.oilsApplied.forEach(oil => {\r\n            if (oil.bulkEffect) {\r\n                oilBulk = oil.bulkEffect;\r\n            }\r\n        });\r\n        //Fortification Runes raise the required strength\r\n        let fortification = this.propertyRunes.filter(rune => rune.name.includes(\"Fortification\")).length ? 1 : 0;\r\n        if (parseInt(this.bulk)) {\r\n            return oilBulk || (parseInt(this.bulk) + fortification).toString();\r\n        } else {\r\n            return oilBulk || fortification ? fortification.toString() : this.bulk;\r\n        }\r\n\r\n    }\r\n    get_ArmoredSkirt(creature: Creature, characterService: CharacterService) {\r\n        if ([\"Breastplate\", \"Chain Shirt\", \"Chain Mail\", \"Scale Mail\"].includes(this.name)) {\r\n            let armoredSkirt = characterService.get_Inventories(creature).map(inventory => inventory.adventuringgear).find(gear => gear.find(item => item.isArmoredSkirt && item.equipped));\r\n            if (armoredSkirt?.length) {\r\n                this.$affectedByArmoredSkirt = 1;\r\n                return armoredSkirt[0];\r\n            } else {\r\n                this.$affectedByArmoredSkirt = 0;\r\n                return null;\r\n            }\r\n        } else if ([\"Half Plate\", \"Full Plate\", \"Hellknight Plate\"].includes(this.name)) {\r\n            let armoredSkirt = characterService.get_Inventories(creature).map(inventory => inventory.adventuringgear).find(gear => gear.find(item => item.isArmoredSkirt && item.equipped));\r\n            if (armoredSkirt?.length) {\r\n                this.$affectedByArmoredSkirt = -1;\r\n                return armoredSkirt[0];\r\n            } else {\r\n                this.$affectedByArmoredSkirt = 0;\r\n                return null;\r\n            }\r\n        } else {\r\n            this.$affectedByArmoredSkirt = 0;\r\n            return null;\r\n        }\r\n    }\r\n    get_Shoddy(creature: Creature, characterService: CharacterService) {\r\n        //Shoddy items have a -2 penalty to AC, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n        if (this.shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && this.crafted) {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        } else if (this.shoddy) {\r\n            this.$shoddy = -2;\r\n            return -2;\r\n        } else {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        }\r\n    }\r\n    get_ACBonus() {\r\n        return this.acbonus + this.$affectedByArmoredSkirt + this.$shoddy;\r\n    }\r\n    get_SkillPenalty() {\r\n        return this.skillpenalty - this.$affectedByArmoredSkirt + this.$shoddy;\r\n    }\r\n    get_DexCap() {\r\n        if (this.dexcap != -1) {\r\n            return this.dexcap - this.$affectedByArmoredSkirt;\r\n        } else {\r\n            return this.dexcap;\r\n        }\r\n\r\n    }\r\n    get_Strength() {\r\n        //Fortification Runes raise the required strength\r\n        let fortification = this.propertyRunes.filter(rune => rune.name.includes(\"Fortification\")).length ? 2 : 0;\r\n        return this.strength + (this.$affectedByArmoredSkirt * 2) + fortification;\r\n    }\r\n    get_Proficiency(creature: Creature = null, characterService: CharacterService = null) {\r\n        //creature and characterService are not needed for armors, but for weapons.\r\n        if (this.$affectedByArmoredSkirt == 1) {\r\n            switch (this.prof) {\r\n                case \"Light Armor\":\r\n                    return \"Medium Armor\";\r\n                case \"Medium Armor\":\r\n                    return \"Heavy Armor\";\r\n            }\r\n        } else {\r\n            return this.prof;\r\n        }\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //characterService and creature are not needed for armors, but for other types of item.\r\n        if (this.$affectedByArmoredSkirt != 0) {\r\n            if (this.traits.includes(\"Noisy\")) {\r\n                return this.traits.concat(\"Noisy\");\r\n            } else {\r\n                return this.traits;\r\n            }\r\n        } else {\r\n            return this.traits;\r\n        }\r\n    }\r\n    profLevel(creature: Character | AnimalCompanion, characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        if (characterService.still_loading()) { return 0; }\r\n        this.get_ArmoredSkirt(creature, characterService);\r\n        let skillLevel: number = 0;\r\n        let armorIncreases = creature.get_SkillIncreases(characterService, 0, charLevel, this.name);\r\n        let profIncreases = creature.get_SkillIncreases(characterService, 0, charLevel, this.get_Proficiency());\r\n        //Add either the armor category proficiency or the armor proficiency, whichever is better\r\n        skillLevel = Math.min(Math.max(armorIncreases.length * 2, profIncreases.length * 2), 8)\r\n        return skillLevel;\r\n    }\r\n    get_ArmorSpecialization(creature: Creature, characterService: CharacterService) {\r\n        let SpecializationGains: SpecializationGain[] = [];\r\n        let specializations: Specialization[] = [];\r\n        let prof = this.get_Proficiency();\r\n        if (creature.type == \"Character\" && this.group) {\r\n            let character = creature as Character;\r\n            let skillLevel = this.profLevel(character, characterService);\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.gainSpecialization.length && feat.have(character, characterService, character.level))\r\n                .forEach(feat => {\r\n                    SpecializationGains.push(...feat.gainSpecialization.filter(spec =>\r\n                        (spec.group ? (this.group && spec.group.includes(this.group)) : true) &&\r\n                        (spec.name ? ((this.name && spec.name.includes(this.name)) || (this.armorBase && spec.name.includes(this.armorBase))) : true) &&\r\n                        (spec.trait ? this.traits.filter(trait => trait && spec.trait.includes(trait)).length : true) &&\r\n                        (spec.proficiency ? (prof && spec.proficiency.includes(prof)) : true) &&\r\n                        (spec.skillLevel ? skillLevel >= spec.skillLevel : true) &&\r\n                        (spec.featreq ? characterService.get_FeatsAndFeatures(spec.featreq)[0]?.have(character, characterService) : true)\r\n                    ))\r\n                });\r\n            SpecializationGains.forEach(critSpec => {\r\n                let specs: Specialization[] = characterService.get_Specializations(this.group).map(spec => Object.assign(new Specialization(), spec));\r\n                specs.forEach(spec => {\r\n                    if (critSpec.condition) {\r\n                        spec.desc = \"(\" + critSpec.condition + \") \" + spec.desc;\r\n                    }\r\n                    if (!specializations.some(existingspec => JSON.stringify(existingspec) == JSON.stringify(spec))) {\r\n                        specializations.push(spec);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return specializations;\r\n    }\r\n}","import { ConditionGain } from './ConditionGain';\r\nimport { EffectGain } from './EffectGain';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { AttackRestriction } from './AttackRestriction';\r\nimport { SenseGain } from './SenseGain';\r\nimport { Hint } from './Hint';\r\nimport { Creature } from './Creature';\r\nimport { Character } from './Character';\r\nimport { ConditionChoice } from './ConditionChoice';\r\nimport { CharacterService } from './character.service';\r\nimport { Familiar } from './Familiar';\r\nimport { Feat } from './Feat';\r\n\r\nexport class Condition {\r\n    public name: string = \"\";\r\n    public type: string = \"\";\r\n    public buff: boolean = false;\r\n    public minLevel: number = 0;\r\n    public hasValue: boolean = false;\r\n    public decreasingValue: boolean = false;\r\n    public value: number = 0;\r\n    public desc: string = \"\";\r\n    public hints: Hint[] = [];\r\n    public inputRequired: string = \"\";\r\n    public onceEffects: EffectGain[] = [];\r\n    public endEffects: EffectGain[] = [];\r\n    public effects: EffectGain[] = [];\r\n    public gainActivities: ActivityGain[] = [];\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public overrideConditions: string[] = [];\r\n    public endConditions: string[] = [];\r\n    //Remove this condition if any of the endsWithConditions is removed.\r\n    public endsWithConditions: string[] = [];\r\n    public attackRestrictions: AttackRestriction[] = [];\r\n    public source: string = \"\";\r\n    public senses: SenseGain[] = [];\r\n    public nextCondition: ConditionGain = null;\r\n    public fixedDuration: number = 0;\r\n    public persistent: boolean = false;\r\n    public restricted: boolean = false;\r\n    public radius: number = 0;\r\n    public allowRadiusChange: boolean = false;\r\n    public traits: string[] = [];\r\n    //If a condition has notes (like the HP of a summoned object), they get copied on the conditionGain.\r\n    public notes: string = \"\";\r\n    //List choices you can make for this condition. The first choice must never have a featreq.\r\n    public choices: ConditionChoice[] = [];\r\n    //$choices is a temporary value that stores the filtered name list produced by get_Choices();\r\n    public $choices: string[] = [];\r\n    //This property is only used to select a default choice before adding the condition. It is not read when evaluating the condition.\r\n    public choice: string = \"\";\r\n    public unlimited: boolean = false;\r\n    get_Choices(characterService: CharacterService, filtered: boolean = false, spellLevel: number = 0) {\r\n        //If this.choice is not one of the available choices, set it to the first.\r\n        if (this.choices.length && !this.choices.map(choice => choice.name).includes(this.choice)) {\r\n            this.choice == this.choices[0].name;\r\n        }\r\n        if (!filtered) {\r\n            return this.choices.map(choice => choice.name);\r\n        }\r\n        let choices: string[] = [];\r\n        this.choices.forEach(choice => {\r\n            //The default choice is never tested. This ensures a fallback if no choices are available.\r\n            if (choice.name == this.choice) {\r\n                choices.push(choice.name)\r\n            } else {\r\n                let character = characterService.get_Character();\r\n                //If the choice has a featreq, check if you meet that (or a feat that has this supertype).\r\n                //Requirements like \"Aggressive Block or Brutish Shove\" are split in get_FeatsAndFeatures().\r\n                if (!choice.spelllevelreq || spellLevel >= choice.spelllevelreq) {\r\n                    if (choice.featreq?.length) {\r\n                        let featNotFound: boolean = false;\r\n                        choice.featreq.forEach(featreq => {\r\n                            //Allow to check for the Familiar's feats\r\n                            let requiredFeat: Feat[]\r\n                            let testcreature: Character | Familiar;\r\n                            let testfeat = featreq;\r\n                            if (featreq.includes(\"Familiar:\")) {\r\n                                testcreature = characterService.get_Familiar();\r\n                                testfeat = featreq.split(\"Familiar:\")[1].trim();\r\n                                requiredFeat = characterService.familiarsService.get_FamiliarAbilities(testfeat);\r\n                            } else {\r\n                                testcreature = character;\r\n                                requiredFeat = characterService.get_FeatsAndFeatures(testfeat, \"\", true);\r\n                            }\r\n                            if (requiredFeat.length) {\r\n                                if (!requiredFeat.find(feat => feat.have(testcreature, characterService, character.level))) {\r\n                                    featNotFound = true;\r\n                                }\r\n                            } else {\r\n                                featNotFound = true;\r\n                            }\r\n                        })\r\n                        if (!featNotFound) {\r\n                            choices.push(choice.name);\r\n                        }\r\n                    } else {\r\n                        choices.push(choice.name);\r\n                    }\r\n                }\r\n            };\r\n        })\r\n        this.$choices = choices;\r\n        return this.$choices;\r\n    }\r\n    get_ChoiceNextStage(choiceName: string) {\r\n        return this.choices.find(choice => choice.name == choiceName)?.nextStage || 0;\r\n    }\r\n    get_HeightenedItems(levelNumber: number) {\r\n        //This descends through the level numbers, starting with levelNumber and returning the first set of ItemGains found with a matching heightenedfilter.\r\n        //It also returns all items that have no heightenedFilter.\r\n        //If there are no ItemGains with a heightenedFilter, return all.\r\n        let items: ItemGain[] = [];\r\n        if (!this.gainItems.length) {\r\n            return this.gainItems;\r\n        }\r\n        items.push(...this.gainItems.filter(gain => !gain.heightenedFilter))\r\n        if (this.gainItems.some(gain => gain.heightenedFilter)) {\r\n            switch (levelNumber) {\r\n                case 10:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 10)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 10));\r\n                        break;\r\n                    }\r\n                case 9:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 9)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 9));\r\n                        break;\r\n                    }\r\n                case 8:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 8)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 8));\r\n                        break;\r\n                    }\r\n                case 7:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 7)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 7));\r\n                        break;\r\n                    }\r\n                case 6:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 6)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 6));\r\n                        break;\r\n                    }\r\n                case 5:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 5)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 5));\r\n                        break;\r\n                    }\r\n                case 4:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 4)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 4));\r\n                        break;\r\n                    }\r\n                case 3:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 3)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 3));\r\n                        break;\r\n                    }\r\n                case 2:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 2)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 2));\r\n                        break;\r\n                    }\r\n                case 1:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 1)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 1));\r\n                        break;\r\n                    }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n}","import { Material } from './Material';\r\n\r\nexport class ArmorMaterial extends Material {\r\n    public readonly _className: string = this.constructor.name;\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { CharacterSheetComponent } from './character-sheet/character-sheet.component';\r\n\r\n\r\nconst routes: Routes = [\r\n   { path: '', component: CharacterSheetComponent },\r\n];\r\n\r\n@NgModule({\r\n   imports: [\r\n      RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\r\n   ],\r\n   exports: [\r\n      RouterModule\r\n   ],\r\n   declarations: [\r\n   ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Feat } from './Feat';\r\nimport * as json_abilities from '../assets/json/familiarabilities';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FamiliarsService {\r\n\r\n    private familiarAbilities: Feat[] = [];\r\n    private loading_familiarAbilities: boolean = false;\r\n    \r\n    constructor() { }\r\n\r\n    still_loading() {\r\n        return (this.loading_familiarAbilities);\r\n    }\r\n\r\n    get_FamiliarAbilities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.familiarAbilities.filter(ability => ability.name.toLowerCase() == name.toLowerCase() || name == \"\")\r\n        } else { return [new Feat()] }\r\n    }\r\n    \r\n    initialize() {\r\n        if (!this.familiarAbilities.length) {\r\n            this.loading_familiarAbilities = true;\r\n            this.load_Abilities();\r\n            this.loading_familiarAbilities = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.familiarAbilities.forEach(ability => {\r\n                ability.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Abilities() {\r\n        this.familiarAbilities = [];\r\n        Object.keys(json_abilities).forEach(key => {\r\n            this.familiarAbilities.push(...json_abilities[key].map(obj => Object.assign(new Feat(), obj)));\r\n        });\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Material } from './Material';\r\n\r\nexport class WeaponMaterial extends Material {\r\n    public readonly _className: string = this.constructor.name;\r\n}","import { Consumable } from './Consumable';\r\nimport { Hint } from './Hint';\r\nimport { SpellCast } from './SpellCast';\r\nimport { WeaponRune } from './WeaponRune';\r\n\r\nexport class Oil extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Ammunition should be type \"ammunition\" to be found in the database\r\n    readonly type = \"oils\";\r\n    public castSpells: SpellCast[] = [];\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    //Can only be applied to a weapon with this damage type (or modular)\r\n    public damagereq: string = \"\";\r\n    //Duration is in turns * 10. The Oil is removed after the duration expires.\r\n    public duration: number = 0;\r\n    public failure: string = \"\";\r\n    public hints: Hint[] = [];\r\n    public bulkEffect: string = \"\";\r\n    public potencyEffect: number = 0;\r\n    public strikingEffect: number = 0;\r\n    public resilientEffect: number = 0;\r\n    //If this is \"melee\" or \"ranged\", you can only apply it to a weapon that has a value in that property.\r\n    public rangereq: string = \"\";\r\n    //The rune with this name will be loaded into the oil at initialization, and its effects will be applied on a weapon to which the oil is applied.\r\n    public runeEffect: WeaponRune = null;\r\n    public success: string = \"\";\r\n    //You can only choose this oil for an item if its type or \"items\" is in the targets list\r\n    public targets: string[] = [];\r\n    public weightLimit: number = 0;\r\n}","import { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Equipment } from './Equipment';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Wand extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Wands should be type \"wands\" to be found in the database\r\n    readonly type = \"wands\";\r\n    readonly equippable = false;\r\n    public actions: string = \"\";\r\n    public frequency: string = \"one per day, plus overcharge\";\r\n    public effect: string = \"You Cast the Spell at the indicated level.\"\r\n    public overcharged: boolean = false;\r\n    public cooldown: number = 0;\r\n    public inputRequired = \"After the spell is cast from the wand for the day, you can use it one more time, but the wand is immediately broken. Roll a DC 10 flat check. On a failure, drop the wand as it is destroyed. If you overcharge the wand when it's already been overcharged that day, the wand is automatically destroyed and dropped (even if it had been repaired) and no spell is cast.\"\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName;\r\n        } else if (this.storedSpells.length && this.storedSpells[0].spells.length) {\r\n            if (this.name.includes(\"Magic Wand (\")) {\r\n                return \"Wand of \"+this.storedSpells[0].spells[0].name;\r\n            } else {\r\n                return this.name.split(\"(\")[0] + \"(\" + this.storedSpells[0].spells[0].name + \")\";\r\n            }\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //creature is not needed for wands, but for other types of item.\r\n        if (this.storedSpells[0]?.spells.length) {\r\n            let spell = characterService.spellsService.get_Spells(this.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return Array.from(new Set(this.traits.concat(spell.traits))).sort(function(a,b) {\r\n                    if (a > b) {\r\n                        return 1;\r\n                    }\r\n                    if (a < b) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n            } else {\r\n                return this.traits;\r\n            }\r\n        } else {\r\n            return this.traits;\r\n        }\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","export class EffectGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public affected: string = \"\";\r\n    //Add this number to the target value.\r\n    //Gets eval()-ed to determine the actual value.\r\n    //Gets applied if parseInt(value) != 0\r\n    public value: string = \"0\";\r\n    //Set the target value to this number and ignore item, proficiency and untyped effects.\r\n    //Gets eval()-ed to determine the actual value.\r\n    //Gets applied if (setValue);\r\n    //(eval(setValue) == null) will throw out the effect - this can be used for effects that only give a value under a certain condition.\r\n    // Hint: \"you gain an X Speed\" effects do not stack and should use setValue.\r\n    public setValue: string = \"\";\r\n    //Set if the effect does not need a value, but still needs to be applied.\r\n    public toggle: boolean = false;\r\n    //Effects will be shown if show = true, not shown if show = false, or otherwise shown if they match a certain list of effects that should always show.\r\n    public show: boolean = undefined;\r\n    public type: string = \"\";\r\n    public duration: number = 0;\r\n    public maxDuration: number = 0;\r\n    //source and sourceId are copied from conditions and currently only used to track temporary HP.\r\n    public source: string = \"\";\r\n    public sourceId: string = \"\";\r\n    //spellSource is copied from conditions and used in value eval()s. Also only used to calculate temporary HP so far.\r\n    public spellSource: string = \"\";\r\n    //If the effect is typed, cumulative lists all effect sources (of the same type) that it is cumulative with.\r\n    public cumulative: string[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { CharacterService } from './character.service';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Effect } from './Effect';\r\nimport { SpellsService } from './spells.service';\r\nimport { ItemsService } from './items.service';\r\nimport { Character } from './Character';\r\nimport { EffectGain } from './EffectGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TimeService {\r\n\r\n    //yourTurn is 5 if it is your turn or 0 if not.\r\n    private yourTurn: number = 0;\r\n\r\n    constructor(\r\n        private activitiesService: ActivitiesService,\r\n        private effectsService: EffectsService\r\n    ) { }\r\n\r\n    get_YourTurn() {\r\n        return this.yourTurn;\r\n    }\r\n\r\n    set_YourTurn(yourTurn: number) {\r\n        //Only used when loading a character\r\n        this.yourTurn = yourTurn;\r\n    }\r\n\r\n    start_Turn(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, effectsService: EffectsService) {\r\n\r\n        //Fast Healing\r\n        let fastHealing: number = 0;\r\n        characterService.get_Creatures().forEach(creature => {\r\n            effectsService.get_AbsolutesOnThis(creature, \"Fast Healing\").forEach((effect: Effect) => {\r\n                fastHealing = parseInt(effect.setValue);\r\n            })\r\n            effectsService.get_RelativesOnThis(creature, \"Fast Healing\").forEach((effect: Effect) => {\r\n                fastHealing += parseInt(effect.value);\r\n            })\r\n            if (fastHealing && creature.health.currentHP(creature, characterService, effectsService).result > 0) {\r\n                creature.health.heal(creature, characterService, effectsService, fastHealing);\r\n            }\r\n        })\r\n\r\n        this.tick(characterService, conditionsService, itemsService, spellsService, 5);\r\n    }\r\n\r\n    end_Turn(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService) {\r\n        this.tick(characterService, conditionsService, itemsService, spellsService, 5);\r\n    }\r\n\r\n    rest(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService,) {\r\n        let charLevel: number = characterService.get_Character().level;\r\n        this.tick(characterService, conditionsService, itemsService, spellsService, 48000, false);\r\n        characterService.get_Creatures().forEach(creature => {\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n            let con = 1;\r\n            if (creature.type != \"Familiar\") {\r\n                con = Math.max(characterService.abilitiesService.get_Abilities(\"Constitution\")[0].mod((creature as AnimalCompanion | Character), characterService, characterService.effectsService).result, 1);\r\n            }\r\n            let heal: number = con * charLevel;\r\n            this.effectsService.get_AbsolutesOnThis(creature, \"Resting HP Gain\").forEach(effect => {\r\n                heal = parseInt(effect.setValue);\r\n            })\r\n            this.effectsService.get_RelativesOnThis(creature, \"Resting HP Gain\").forEach(effect => {\r\n                heal += parseInt(effect.value);\r\n            })\r\n            let multiplier = 1;\r\n            this.effectsService.get_AbsolutesOnThis(creature, \"Resting HP Multiplier\").forEach(effect => {\r\n                multiplier = parseInt(effect.setValue);\r\n            })\r\n            this.effectsService.get_RelativesOnThis(creature, \"Resting HP Multiplier\").forEach(effect => {\r\n                multiplier += parseInt(effect.value);\r\n            })\r\n            multiplier = Math.max(1, multiplier);\r\n            characterService.get_Health(creature).heal(creature, characterService, characterService.effectsService, heal * multiplier, true, true);\r\n            //Reset all \"once per day\" activity cooldowns.\r\n            this.activitiesService.rest(creature, characterService);\r\n            //Reset all conditions that are \"until the next time you make your daily preparations\".\r\n            conditionsService.rest(creature, characterService);\r\n            //Remove all items that expire when you make your daily preparations.\r\n            if (creature.type != \"Familiar\") {\r\n                itemsService.rest((creature as AnimalCompanion | Character), characterService);\r\n            }\r\n            //For the Character, reset all \"once per day\" spells, and regenerate spell slots, prepared formulas and bonded item charges.\r\n            if (creature.type == \"Character\") {\r\n                let character = creature as Character;\r\n                //Reset all \"once per day\" spell cooldowns and re-prepare spells.\r\n                spellsService.rest(character, characterService);\r\n                //Regenerate spell slots.\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellSlotsUsed = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                });\r\n                //Refocus and reset all \"until you refocus\" spell cooldowns.\r\n                this.refocus(characterService, conditionsService, itemsService, spellsService, 3, false, false);\r\n                //Regenerate Snare Specialist formulas.\r\n                character.class.formulaBook.filter(learned => learned.snareSpecialistPrepared).forEach(learned => {\r\n                    learned.snareSpecialistAvailable = learned.snareSpecialistPrepared;\r\n                });\r\n                characterService.set_ToChange(\"Character\", \"inventory\");\r\n                //Regenerate bonded item charges.\r\n                character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\").forEach(casting => {\r\n                    let superiorBond = character.get_FeatsTaken(1, character.level, \"Superior Bond\").length;\r\n                    if (character.get_FeatsTaken(1, character.level, \"Universalist Wizard\").length) {\r\n                        casting.bondedItemCharges = [superiorBond, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n                    } else {\r\n                        casting.bondedItemCharges = [1 + superiorBond, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        characterService.process_ToChange();\r\n    }\r\n\r\n    refocus(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, recoverPoints: number = 1, reload: boolean = true, tick: boolean = true) {\r\n        if (tick) {\r\n            this.tick(characterService, conditionsService, itemsService, spellsService, 1000, false);\r\n        }\r\n        let character = characterService.get_Character();\r\n\r\n        //Reset all \"until you refocus\" activity cooldowns.\r\n        this.activitiesService.refocus(character, characterService);\r\n        //Reset all conditions that are \"until you refocus\".\r\n        conditionsService.refocus(character, characterService);\r\n        //Remove all items that expire when you refocus.\r\n        itemsService.refocus(character, characterService);\r\n        //Reset all \"once per day\" spell cooldowns and re-prepare spells.\r\n        spellsService.refocus(character, characterService);\r\n\r\n        let focusPoints = character.class.focusPoints;\r\n        let focusPointsLast = character.class.focusPointsLast;\r\n        if (recoverPoints < 3) {\r\n            //Several feats recover more focus points if you spent at least that amount since the last time refocusing. Those feats all have an effect setting \"Refocus Bonus Points\" to the amount you get.\r\n            characterService.effectsService.get_AbsolutesOnThis(character, \"Refocus Bonus Points\").forEach(effect => {\r\n                let points = parseInt(effect.setValue);\r\n                if (focusPointsLast - focusPoints >= points) {\r\n                    recoverPoints = Math.max(recoverPoints, points);\r\n                }\r\n            })\r\n        }\r\n\r\n        //Regenerate Focus Points by calling a onceEffect (so we don't have the code twice).\r\n        characterService.process_OnceEffect(character, Object.assign(new EffectGain(), { affected: \"Focus Points\", value: \"+\" + recoverPoints }));\r\n\r\n        character.class.focusPointsLast = character.class.focusPoints;\r\n        if (reload) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    tick(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, turns: number = 10, reload: boolean = true) {\r\n        characterService.get_Creatures().forEach(creature => {\r\n            //Tick activities before conditions because activities can end conditions, which might go wrong if the condition has already ended (particularly where cooldowns are concerned).\r\n            this.activitiesService.tick_Activities(creature, characterService, conditionsService, itemsService, spellsService, turns)\r\n            if (creature.conditions.length) {\r\n                if (creature.conditions.filter(gain => gain.nextStage > 0)) {\r\n                    characterService.set_ToChange(creature.type, \"time\");\r\n                    characterService.set_ToChange(creature.type, \"health\");\r\n                }\r\n                conditionsService.tick_Conditions(creature, turns, this.yourTurn);\r\n                characterService.set_ToChange(creature.type, \"effects\")\r\n            }\r\n            this.effectsService.tick_CustomEffects(creature, characterService, turns);\r\n            if (creature.type != \"Familiar\") {\r\n                itemsService.tick_Items((creature as AnimalCompanion | Character), characterService, turns);\r\n            }\r\n            if (creature.type == \"Character\") {\r\n                spellsService.tick_Spells((creature as Character), characterService, itemsService, conditionsService, turns);\r\n            }\r\n            //If you are at full health and rest for 10 minutes, you lose the wounded condition.\r\n            if (turns >= 1000 && characterService.get_Health(creature).damage == 0) {\r\n                characterService.get_AppliedConditions(creature, \"Wounded\").forEach(gain => characterService.remove_Condition(creature, gain, false));\r\n            }\r\n        })\r\n        this.yourTurn = (this.yourTurn + turns) % 10;\r\n        if (reload) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    get_Duration(duration: number, includeTurnState: boolean = true, inASentence: boolean = false) {\r\n        if (duration == -3) {\r\n            return inASentence ? \"until you refocus\" : \"Until you refocus\";\r\n        } else if (duration == -2) {\r\n            return inASentence ? \"until the next time you make your daily preparations\" : \"Until the next time you make your daily preparations\";\r\n        } else if (duration == -1) {\r\n            return inASentence ? \"permanently\" : \"Permanent\";\r\n        } else if (duration == 1) {\r\n            return inASentence ? \"instantly\" : \"Instant effect\";\r\n        } else {\r\n            let returnString: string = \"\"\r\n            if (duration == 5) {\r\n                if (this.get_YourTurn() == 5) {\r\n                    return inASentence ? \"for rest of turn\" : \"Rest of turn\";\r\n                }\r\n                if (this.get_YourTurn() == 0) {\r\n                    return inASentence ? \"until start of next turn\" : \"To start of next turn\";\r\n                }\r\n            }\r\n            returnString += inASentence ? \"for \" : \"\";\r\n            if (duration >= 144000) {\r\n                returnString += Math.floor(duration / 144000) + \" Day\";\r\n                if (duration / 144000 >= 2) { returnString += \"s\"; }\r\n                duration %= 144000;\r\n            }\r\n            if (duration >= 6000) {\r\n                returnString += \" \" + Math.floor(duration / 6000) + \" Hour\";\r\n                if (duration / 6000 >= 2) { returnString += \"s\"; }\r\n                duration %= 6000;\r\n            }\r\n            if (duration >= 100) {\r\n                returnString += \" \" + Math.floor(duration / 100) + \" Minute\";\r\n                if (duration / 100 >= 2) { returnString += \"s\"; }\r\n                duration %= 100;\r\n            }\r\n            if (duration >= 10) {\r\n                returnString += \" \" + Math.floor(duration / 10) + \" Turn\";\r\n                if (duration / 10 >= 2) { returnString += \"s\"; }\r\n                duration %= 10;\r\n            }\r\n            if (includeTurnState && duration == 5 && this.get_YourTurn() == 5) {\r\n                returnString += \" to end of turn\";\r\n            }\r\n            if (!returnString) {\r\n                returnString = \"0 Turns\";\r\n            }\r\n            return returnString.trim();\r\n        }\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\" *ngIf=\"showTime && showTurn\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all buttons.' : 'Click to hide time buttons.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"time\">\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <div *ngIf=\"showTurn\" class=\"list-item center-aligned\">\r\n            <div [ngbTooltip]=\"get_Waiting(5)\">\r\n                <button (click)=\"start_Turn()\" [disabled]=\"get_YourTurn()==5 || get_Waiting(5).length\">Start\r\n                    Turn</button>\r\n            </div>\r\n            <div class=\"turn-indicator\">\r\n                <strong *ngIf=\"get_YourTurn() == 0\">Not your Turn</strong>\r\n                <strong class=\"yourTurn\" *ngIf=\"get_YourTurn() == 5\">Your Turn</strong>\r\n            </div>\r\n            <div [ngbTooltip]=\"get_Waiting(5)\">\r\n                <button (click)=\"end_Turn()\" [disabled]=\"get_YourTurn()==0 || get_Waiting(5).length\">End Turn</button>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"showTime\" class=\"list-item\" [ngClass]=\"{'fullsize-only':showTime && showTurn}\">\r\n            <div *ngFor=\"let duration of [10, 50, 100, 500, 1000, 6000, 48000, 144000]; trackBy:trackByIndex;\"\r\n                [ngbTooltip]=\"get_Waiting(duration)\">\r\n                <button class=\"fancybutton\" (click)=\"tick(duration)\" [disabled]=\"get_Waiting(duration).length\">\r\n                    Pass {{get_Duration(duration, false)}}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { TimeService } from '../time.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-time',\r\n    templateUrl: './time.component.html',\r\n    styleUrls: ['./time.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimeComponent implements OnInit {\r\n\r\n    @Input()\r\n    public showTurn: boolean = true;\r\n    @Input()\r\n    public showTime: boolean = true;\r\n    @Input()\r\n    public sheetSide: string = \"center\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private spellsService: SpellsService,\r\n        private effectsService: EffectsService,\r\n        private conditionsService: ConditionsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.timeMinimized = !this.characterService.get_Character().settings.timeMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.timeMinimized;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Duration(duration: number, includeTurnState: boolean = true) {\r\n        return this.timeService.get_Duration(duration, includeTurnState);\r\n    }\r\n\r\n    get_Waiting(duration: number) {\r\n        let result: string = \"\";\r\n        this.characterService.get_Creatures().forEach(creature => {\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.nextStage < duration && gain.nextStage > 0) || gain.nextStage == -1)) {\r\n                result = \"One or more conditions\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need your attention before this time.\";\r\n            }\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.duration == 1))) {\r\n                result = \"One or more instant effects\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need to be resolved before you can continue.\";\r\n            }\r\n            if (this.characterService.get_Health(creature).temporaryHP.length > 1) {\r\n                result = \"You need to select one set of temporary Hit Points\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" before you can continue.\";\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    get_YourTurn() {\r\n        return this.timeService.get_YourTurn();\r\n    }\r\n\r\n    start_Turn() {\r\n        this.timeService.start_Turn(this.characterService, this.conditionsService, this.itemsService, this.spellsService, this.effectsService);\r\n    }\r\n\r\n    end_Turn() {\r\n        this.timeService.end_Turn(this.characterService, this.conditionsService, this.itemsService, this.spellsService);\r\n    }\r\n\r\n    tick(amount: number) {\r\n        this.timeService.tick(this.characterService, this.conditionsService, this.itemsService, this.spellsService, amount);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"time\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"time\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","<ng-container *ngIf=\"feat\">\r\n    <div class=\"newrow left-aligned\">\r\n        <cite class=\"trait\" *ngFor=\"let trait of feat.traits; trackBy:trackByIndex;\"\r\n            [ngbPopover]=\"get_Traits(trait)[0].desc\">\r\n            {{trait}}\r\n        </cite>\r\n    </div>\r\n    <div class=\"newrow left-aligned\">\r\n        <div class=\"newrow left-aligned\" *ngIf=\"feat.sourceBook\">\r\n            <strong>Source</strong><i>&nbsp;{{feat.sourceBook}}</i>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"feat.access\">\r\n            <strong>Access</strong>&nbsp;{{feat.access}}\r\n        </div>\r\n        <ng-container *ngFor=\"let reqs of [get_FeatRequirements(choice, feat)]; trackBy:trackByIndex;\">\r\n            <p *ngIf=\"reqs.length\">\r\n                <strong>Requirements&nbsp;</strong>\r\n                <span [ngClass]=\"{'problem':(!req.met), 'disabled':(req.ignored)}\" [ngbPopover]=\"req.ignored ? 'This requirement is ignored.' : ''\" *ngFor=\"let req of reqs; trackBy:trackByIndex;\">{{req.ignored ? \"(\" : ''}}{{req.desc}}{{req.ignored ? \")\" : ''}}</span>\r\n            </p>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let desc of feat.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n            <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n            </ul>\r\n        </ng-container>\r\n        <p *ngIf=\"feat.specialdesc.length\">\r\n            <strong>Special</strong> {{feat.specialdesc}}\r\n        </p>\r\n        <p *ngIf=\"feat.usageNote.length\">\r\n            <strong>Usage note</strong>&nbsp;\r\n            <span class=\"problem\">{{feat.usageNote}}</span>\r\n        </p>\r\n    </div>\r\n    <ng-container *ngFor=\"let name of feat.gainActivities; trackBy:trackByIndex;\">\r\n        <div class=\"newrow left-aligned\" *ngFor=\"let activity of get_Activities(name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader left-aligned\">{{activity.name}}\r\n                <app-actionIcons [actionString]=\"activity.actions\"></app-actionIcons>\r\n                {{(activity.activationType) ? activity.activationType : \"\"}}\r\n            </header>\r\n            <app-activity class=\"newrow\" [activity]=activity [allowActivate]=false>\r\n            </app-activity>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let spellChoice of feat.gainSpellChoice; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let spellGain of spellChoice.spells; trackBy:trackByIndex;\">\r\n            <ng-container *ngFor=\"let spell of get_Spells(spellGain.name); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader left-aligned\">{{spell.name}}\r\n                    <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons>\r\n                    {{(spell.castType) ? spell.castType : \"\"}}\r\n                </header>\r\n                <app-spell class=\"newrow\" [spell]=spell [spellLevel]=\"get_SpellLevel(levelNumber)\">\r\n                </app-spell>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let spellName of feat.gainSpellListSpells; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let spell of get_Spells(spellName); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader left-aligned\">{{spell.name}}\r\n                <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons>\r\n                {{(spell.castType) ? spell.castType : \"\"}}\r\n            </header>\r\n            <app-spell class=\"newrow\" [spell]=spell [spellLevel]=\"get_SpellLevel(levelNumber)\">\r\n            </app-spell>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Feat } from 'src/app/Feat';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { FeatChoice } from 'src/app/FeatChoice';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TraitsService } from 'src/app/traits.service';\r\n\r\n@Component({\r\n    selector: 'app-feat',\r\n    templateUrl: './feat.component.html',\r\n    styleUrls: ['./feat.component.css']\r\n})\r\nexport class FeatComponent implements OnInit {\r\n\r\n    @Input()\r\n    feat: Feat\r\n    @Input()\r\n    choice: FeatChoice\r\n    @Input()\r\n    levelNumber: number\r\n    @Input()\r\n    featLevel: number\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private spellsService: SpellsService,\r\n        private activitiesService: ActivitiesService,\r\n        private traitsService: TraitsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    create_IgnoreRequirementList(feat: Feat, choice: FeatChoice) {\r\n        //Prepare character and characterService for eval.\r\n        let character = this.characterService.get_Character();\r\n        let characterService = this.characterService;\r\n        //Build the ignoreRequirements list from both the feat and the choice.\r\n        let ignoreRequirementsList: string[] = [];\r\n        feat.ignoreRequirements.concat((choice?.ignoreRequirements || [])).forEach(ignoreReq => {\r\n            try {\r\n                ignoreRequirementsList.push(eval(ignoreReq));\r\n            } catch (error) {\r\n                console.log(\"Failed evaluating feat requirement ignore list item (\" + ignoreReq + \"): \" + error)\r\n            }\r\n        })\r\n        return ignoreRequirementsList;\r\n    }\r\n\r\n    get_FeatRequirements(choice: FeatChoice, feat: Feat) {\r\n        let ignoreRequirementsList: string[] = this.create_IgnoreRequirementList(feat, choice);\r\n        let result: Array<{met?:boolean, ignored?:boolean, desc?:string}> = [];\r\n        if (feat.levelreq) {\r\n            result.push(feat.meetsLevelReq(this.characterService, this.featLevel));\r\n            result[result.length-1].ignored = ignoreRequirementsList.includes('levelreq');\r\n        }\r\n        if (feat.abilityreq.length) {\r\n            feat.meetsAbilityReq(this.characterService, this.levelNumber).forEach(req => {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('abilityreq');\r\n            });\r\n        }\r\n        if (feat.skillreq.length) {\r\n            feat.meetsSkillReq(this.characterService, this.levelNumber).forEach((req, index) => {\r\n                if (index == 0) {\r\n                    result.push({ met: true, desc: \", \" });\r\n                } else {\r\n                    result.push({ met: true, desc: \" or \" });\r\n                }\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('skillreq');\r\n            });\r\n        }\r\n        if (feat.featreq.length) {\r\n            feat.meetsFeatReq(this.characterService, this.levelNumber).forEach(req => {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('featreq');\r\n            });\r\n        }\r\n        if (feat.heritagereq) {\r\n            feat.meetsHeritageReq(this.characterService, this.levelNumber).forEach(req => {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('heritagereq');\r\n            });\r\n        }\r\n        if (feat.specialreqdesc) {\r\n            result.push({ met: true, desc: \", \" });\r\n            result.push(feat.meetsSpecialReq(this.characterService, this.levelNumber));\r\n        }\r\n        if (result.length > 1) {\r\n            if (result[0].desc == \", \") {\r\n                result.shift();\r\n            }\r\n            if (result[0].desc == \"requires \" && result[1].desc == \", \") {\r\n                result.splice(1,1);\r\n            }\r\n        } else if (result.length == 1 && result[0].desc == \"requires \") {\r\n            result.length = 0;\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\") {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellLevel(levelNumber: number) {\r\n        return Math.ceil(levelNumber / 2);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n"]}