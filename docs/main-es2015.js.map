{"version":3,"sources":["./src/app/animal-companion/animal-companion.component.html","./src/app/animal-companion/animal-companion.component.ts","./src/app/dice/diceIcons_D12/diceIcons_D12.component.ts","./src/app/dice/diceIcons_D12/D12.svg","./src/app/spellbook/spellbook.component.ts","./src/app/spellbook/spellbook.component.html","./src/app/familiar/familiar.component.html","./src/app/familiar/familiar.component.ts","./src/app/Familiar.ts","./src/app/items.service.ts","./src/app/SkillChoice.ts","./src/app/activity/activity.component.ts","./src/app/activity/activity.component.html","./src/app/savegame.service.ts","./src/assets/json/effectproperties/index.ts","./src/app/Equipment.ts","./src/app/defense.service.ts","./src/app/EffectCollection.ts","./src/assets/json/items/weaponrunes/index.ts","./src/assets/json/items/armorrunes/index.ts","./src/app/conditions.service.ts","./src/app/AbilityChoice.ts","./src/app/spell/spell.component.html","./src/app/spell/spell.component.ts","./src/app/crafting/crafting.component.html","./src/app/crafting/crafting.component.ts","./src/app/FeatChoice.ts","./src/app/gridIcon/gridIcon.component.ts","./src/app/gridIcon/gridIcon.component.html","./src/app/Settings.ts","./src/app/dice/diceIcons_D10/diceIcons_D10.component.ts","./src/app/dice/diceIcons_D10/D10.svg","./src/app/abilities.service.ts","./src/app/ShieldMaterial.ts","./src/assets/json/classes/index.ts","./src/app/OtherConsumableBomb.ts","./src/app/Bulk.ts","./src/app/dice/diceIcons_D8/diceIcons_D8.component.ts","./src/app/dice/diceIcons_D8/D8.svg","./src/app/AnimalCompanionLevel.ts","./src/assets/json/items/wornitems/index.ts","./src/app/character.service.ts","./src/assets/json/animalcompanionspecializations/index.ts","./src/app/SpellCasting.ts","./src/assets/json/backgrounds/index.ts","./src/assets/json/activities/index.ts","./src/environments/environment.ts","./src/app/abilities/abilities.component.html","./src/app/abilities/abilities.component.ts","./src/app/skill/skill.component.html","./src/app/skill/skill.component.ts","./src/app/item/itemAeonStones/itemAeonStones.component.ts","./src/app/item/itemAeonStones/itemAeonStones.component.html","./src/app/ItemProperty.ts","./src/app/InventoryGain.ts","./src/app/SpecializationGain.ts","./src/app/proficiency-form/proficiency-form.component.html","./src/app/proficiency-form/proficiency-form.component.ts","./src/app/conditions/conditions.component.ts","./src/app/conditions/conditions.component.html","./src/app/Consumable.ts","./src/app/feats.service.ts","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/assets/json/items/talismans/index.ts","./src/app/item/itemTalismans/itemTalismans.component.ts","./src/app/item/itemTalismans/itemTalismans.component.html","./src/app/AnimalCompanion.ts","./src/app/ConditionGain.ts","./src/app/AlchemicalBomb.ts","./src/app/WornItem.ts","./src/assets/json/spells/index.ts","./src/app/defense/defense.component.ts","./src/app/defense/defense.component.html","./src/assets/json/abilities/index.ts","./src/app/items/newItemProperty/newItemProperty.component.ts","./src/app/items/newItemProperty/newItemProperty.component.html","./src/app/item/itemOils/itemOils.component.ts","./src/app/item/itemOils/itemOils.component.html","./src/app/Heritage.ts","./src/app/dice/diceIcons_D4/diceIcons_D4.component.ts","./src/app/dice/diceIcons_D4/D4.svg","./src/assets/json/items/armors/index.ts","./src/app/AC.ts","./src/app/character-sheet/character-sheet.component.ts","./src/app/character-sheet/character-sheet.component.html","./src/app/Feat.ts","./src/app/spells/spells.component.html","./src/app/spells/spells.component.ts","./src/assets/json/skills/index.ts","./src/app/LanguageGain.ts","./src/app/attacks/attacks.component.ts","./src/app/attacks/attacks.component.html","./src/app/AnimalCompanionAncestry.ts","./src/assets/json/items/alchemicaltools/index.ts","./src/assets/json/items/scrolls/index.ts","./src/app/item/itemBladeAlly/itemBladeAlly.component.ts","./src/app/item/itemBladeAlly/itemBladeAlly.component.html","./src/app/Ability.ts","./src/app/spells/spellchoice/spellchoice.component.ts","./src/app/spells/spellchoice/spellchoice.component.html","./src/app/Creature.ts","./src/app/Trait.ts","./src/app/Material.ts","./src/app/AdventuringGear.ts","./src/app/Hint.ts","./src/app/Specialization.ts","./src/app/ItemActivity.ts","./src/assets/json/items/alchemicalelixirs/index.ts","./src/assets/json/items/snares/index.ts","./src/assets/json/specializations/index.ts","./src/app/items/items.component.ts","./src/app/items/items.component.html","./src/app/SpellGain.ts","./src/app/ProficiencyCopy.ts","./src/app/tags/hint/hint.component.html","./src/app/tags/hint/hint.component.ts","./src/app/LoreChoice.ts","./src/assets/json/itemproperties/index.ts","./src/app/Speed.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/ActivityGain.ts","./src/app/Shield.ts","./src/app/Background.ts","./src/app/effects/effects.component.ts","./src/app/effects/effects.component.html","./src/app/ArmorRune.ts","./src/assets/json/animalcompanions/index.ts","./src/app/character/character.component.ts","./src/app/character/character.component.html","./src/app/FormulaLearned.ts","./src/app/OtherConsumable.ts","./src/app/dice/dice.component.html","./src/app/dice/dice.component.ts","./src/assets/json/items/potions/index.ts","./src/assets/json/items/wands/index.ts","./src/assets/json/items/otherconsumablesbombs/index.ts","./src/app/skills.service.ts","./src/assets/json/items/weapons/index.ts","./src/app/Class.ts","./src/app/traits.service.ts","./src/app/Savegame.ts","./src/app/Activity.ts","./src/app/HeldItem.ts","./src/assets/json/deities/index.ts","./src/app/spells.service.ts","./src/app/item/itemMaterial/itemMaterial.component.ts","./src/app/item/itemMaterial/itemMaterial.component.html","./src/app/Ammunition.ts","./src/app/dice/diceIcons_D20/diceIcons_D20.component.ts","./src/app/dice/diceIcons_D20/D20.svg","./src/app/app.module.ts","./src/app/dice/diceIcons_D6/diceIcons_D6.component.ts","./src/app/dice/diceIcons_D6/D6.svg","./src/app/item/item.component.ts","./src/app/item/item.component.html","./src/assets/json/familiarabilities/index.ts","./src/app/ItemGain.ts","./src/assets/json/feats/index.ts","./src/app/tags/tags.component.html","./src/app/tags/tags.component.ts","./src/assets/json/weaponmaterials/index.ts","./src/app/effects/condition/condition.component.ts","./src/app/effects/condition/condition.component.html","./src/app/AnimalCompanionClass.ts","./src/assets/json/items/otherconsumables/index.ts","./src/app/AlchemicalElixir.ts","./src/app/activities.service.ts","./src/app/item/itemRunes/itemRunes.component.ts","./src/app/item/itemRunes/itemRunes.component.html","./src/app/spellLibrary/spellLibrary.component.ts","./src/app/spellLibrary/spellLibrary.component.html","./src/app/animalcompanions.service.ts","./src/assets/json/items/oils/index.ts","./src/app/item/itemPoisons/itemPoisons.component.ts","./src/app/item/itemPoisons/itemPoisons.component.html","./src/app/Deity.ts","./src/app/Snare.ts","./src/app/general/general.component.html","./src/app/general/general.component.ts","./src/app/SpellChoice.ts","./src/assets/json/conditions/index.ts","./src/app/skills/skills.component.ts","./src/app/skills/skills.component.html","./src/app/activities/activities.component.ts","./src/app/activities/activities.component.html","./src/app/effects.service.ts","./src/assets/json/items/alchemicalbombs/index.ts","./src/app/Scroll.ts","./src/app/Item.ts","./src/app/Character.ts","./src/app/WeaponRune.ts","./src/assets/json/ancestries/index.ts","./src/app/OtherItem.ts","./src/app/Health.ts","./src/assets/json/items/adventuringgear/index.ts","./src/app/actionIcons/actionIcons.component.html","./src/app/actionIcons/actionIcons.component.ts","./src/app/SpellCast.ts","./src/app/AlchemicalPoison.ts","./src/app/character/featchoice/featchoice.component.ts","./src/app/character/featchoice/featchoice.component.html","./src/app/Rune.ts","./src/app/Weapon.ts","./src/assets/json/traits/index.ts","./src/app/history.service.ts","./src/app/top-bar/top-bar.component.html","./src/app/top-bar/top-bar.component.ts","./src/app/Effect.ts","./src/app/Potion.ts","./src/app/deities.service.ts","./src/app/classes.service.ts","./src/app/AnimalCompanionSpecialization.ts","./src/app/Level.ts","./src/assets/json/items/ammunition/index.ts","./src/app/familiar/familiarabilities/familiarabilities.component.ts","./src/app/familiar/familiarabilities/familiarabilities.component.html","./src/app/AlchemicalTool.ts","./src/assets/json/features/index.ts","./src/app/Talisman.ts","./src/app/ItemCollection.ts","./src/app/Skill.ts","./src/app/FormulaChoice.ts","./src/app/character/skillchoice/skillchoice.component.ts","./src/app/character/skillchoice/skillchoice.component.html","./src/app/health/health.component.ts","./src/app/health/health.component.html","./src/app/Ancestry.ts","./src/assets/json/heritages/index.ts","./src/app/Spell.ts","./src/app/Armor.ts","./src/app/Condition.ts","./src/app/ArmorMaterial.ts","./src/app/app-routing.module.ts","./src/app/familiars.service.ts","./src/assets/json/items/helditems/index.ts","./src/app/WeaponMaterial.ts","./src/app/Oil.ts","./src/app/Wand.ts","./src/assets/json/animalcompanionlevels/index.ts","./src/assets/json/items/shields/index.ts","./src/app/EffectGain.ts","./src/app/time.service.ts","./src/app/time/time.component.html","./src/app/time/time.component.ts","./src/assets/json/items/alchemicalpoisons/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/character/feat/feat.component.html","./src/app/character/feat/feat.component.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"animal-companion-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleCompanionMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <div class=\"animalcompanion-box\"\r\n        *ngIf=\"!still_loading() && get_Character().class && get_CompanionAvailable() && get_CompanionMenuState() == 'in'\">\r\n        <app-effects [creature]=\"'Companion'\" id=\"Companion-effects\" class=\"charactersheet-app charactersheet-row\"\r\n            [sheetSide]=\"'center'\"></app-effects>\r\n        <div class=\"charactersheet-column-container\">\r\n            <div class=\"charactersheet-column\">\r\n                <app-general [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-general\"\r\n                    class=\"charactersheet-app\"></app-general>\r\n                <app-health [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-health\"\r\n                    class=\"charactersheet-app\"></app-health>\r\n                <app-skills [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-skills\"\r\n                    class=\"charactersheet-app\"></app-skills>\r\n                <app-activities [creature]=\"'Companion'\" [sheetSide]=\"'left'\" id=\"Companion-activities\"\r\n                    class=\"charactersheet-app\"></app-activities>\r\n            </div>\r\n            <div class=\"charactersheet-column\">\r\n                <app-abilities [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-abilities\"\r\n                    class=\"charactersheet-app\"></app-abilities>\r\n                <app-defense [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-defense\"\r\n                    class=\"charactersheet-app\"></app-defense>\r\n                <app-attacks [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-attacks\"\r\n                    class=\"charactersheet-app\"></app-attacks>\r\n                <app-inventory [creature]=\"'Companion'\" [sheetSide]=\"'right'\" id=\"Companion-inventory\"\r\n                    class=\"charactersheet-app\"></app-inventory>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { AnimalCompanionsService } from '../animalcompanions.service';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-animal-companion',\r\n    templateUrl: './animal-companion.component.html',\r\n    styleUrls: ['./animal-companion.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AnimalCompanionComponent implements OnInit {\r\n\r\n    public hover: string = '';\r\n\r\n    constructor(\r\n        private changeDetector:ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private animalCompanionsService: AnimalCompanionsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.companionMinimized = !this.characterService.get_Character().settings.companionMinimized;\r\n        this.characterService.set_ToChange(\"Companion\", \"companion\");\r\n        this.characterService.set_ToChange(\"Companion\", \"abilities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.companionMinimized;\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.characterService.still_loading() || this.animalCompanionsService.still_loading());\r\n    }\r\n\r\n    toggleCompanionMenu() {\r\n        this.characterService.toggle_Menu(\"companion\");\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.characterService.get_CompanionMenuState();\r\n    }\r\n\r\n    set_Changed(target: string) {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    //If you don't use trackByIndex on certain inputs, you lose focus everytime the value changes. I don't get that, but I'm using it now.\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"companion\", \"all\"].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == \"companion\" && [\"companion\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D12',\r\n  templateUrl: './D12.svg',\r\n  styleUrls: ['./diceIcons_D12.component.css']\r\n})\r\nexport class DiceIcons_D12Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D12\"\r\n        d=\"M 2.00,22.00\r\n           C 2.00,22.00 14.00,7.00 14.00,7.00\r\n             14.00,7.00 32.00,1.00 32.00,1.00\r\n             32.00,1.00 50.00,7.00 50.00,7.00\r\n             50.00,7.00 62.00,22.00 62.00,22.00\r\n             62.00,22.00 62.00,42.00 62.00,42.00\r\n             62.00,42.00 50.00,57.00 50.00,57.00\r\n             50.00,57.00 32.00,63.00 32.00,63.00\r\n             32.00,63.00 14.00,57.00 14.00,57.00\r\n             14.00,57.00 2.00,42.00 2.00,42.00\r\n             2.00,42.00 2.00,22.00 2.00,22.00 Z\r\n           M 32.00,14.00\r\n           C 32.00,14.00 49.00,26.00 49.00,26.00\r\n             49.00,26.00 42.00,45.00 42.00,45.00\r\n             42.00,45.00 22.00,45.00 22.00,45.00\r\n             22.00,45.00 15.00,26.00 15.00,26.00\r\n             15.00,26.00 32.00,14.00 32.00,14.00 Z\r\n           M 32.00,14.00\r\n           C 32.00,14.00 32.00,1.00 32.00,1.00M 49.00,26.00\r\n           C 49.00,26.00 62.00,22.00 62.00,22.00M 42.00,45.00\r\n           C 42.00,45.00 50.00,57.00 50.00,57.00M 22.00,45.00\r\n           C 22.00,45.00 14.00,57.00 14.00,57.00M 15.00,26.00\r\n           C 15.00,26.00 2.00,22.00 2.00,22.00\" />\r\n   </g>\r\n</svg>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { Spell } from '../Spell';\r\nimport { TraitsService } from '../traits.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { ItemsService } from '../items.service';\r\nimport { TimeService } from '../time.service';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { EffectsService } from '../effects.service';\r\nimport { SpellChoice } from '../SpellChoice';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { EffectGain } from '../EffectGain';\r\nimport { Condition } from '../Condition';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Feat } from '../Feat';\r\n\r\n@Component({\r\n    selector: 'app-spellbook',\r\n    templateUrl: './spellbook.component.html',\r\n    styleUrls: ['./spellbook.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellbookComponent implements OnInit {\r\n\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private showSpell: number = 0;\r\n    private id: number = 0;\r\n    public hover: number = 0;\r\n    public Math = Math;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private spellsService: SpellsService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private effectsService: EffectsService,\r\n        private conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.spellbookMinimized = !this.characterService.get_Character().settings.spellbookMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.spellbookMinimized;\r\n    }\r\n\r\n    toggle_Spell(id: number) {\r\n        if (this.showSpell == id) {\r\n            this.showSpell = 0;\r\n        } else {\r\n            this.showSpell = id;\r\n        }\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n            this.showSpell = 0;\r\n        }\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SpellChoice, casting: SpellCasting }) {\r\n        this.toggle_List(message.name);\r\n    }\r\n\r\n    receive_SpellMessage(name: string) {\r\n        this.toggle_Spell(0);\r\n    }\r\n\r\n    get_ShowSpell() {\r\n        return this.showSpell;\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    toggleSpellsMenu() {\r\n        this.characterService.toggle_Menu('spells');\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_SpellDCs() {\r\n        return this.characterService.get_Skills(this.get_Character(), \"\", \"Spell DC\").filter(skill => skill.level(this.get_Character(), this.characterService) > 0);\r\n    }\r\n\r\n    get_SpellCastings() {\r\n        let character = this.get_Character();\r\n        return character.class.spellCasting.filter(casting => casting.charLevelAvailable && casting.charLevelAvailable <= character.level)\r\n            .sort(function (a, b) {\r\n                if (a.tradition > b.tradition) {\r\n                    return 1;\r\n                }\r\n                if (a.tradition < b.tradition) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.className > b.className) {\r\n                    return 1;\r\n                }\r\n                if (a.className < b.className) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.castingType > b.castingType || (b.castingType == \"Innate\" ? a.castingType != \"Innate\" : false)) {\r\n                    return 1;\r\n                }\r\n                if (a.castingType < b.castingType || (a.castingType == \"Innate\" ? b.castingType != \"Innate\" : false)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    get_MaxSpellLevel(casting: SpellCasting) {\r\n        //Get the available spell level of this casting. This is the highest spell level of the spell choices that are available at your character level.\r\n        //Focus spells are heightened to half your level rounded up.\r\n        //Dynamic spell levels need to be evaluated.\r\n        if (casting.castingType == \"Focus\") {\r\n            return this.get_Character().get_SpellLevel();\r\n        }\r\n        return Math.max(...casting.spellChoices.filter(spellChoice => spellChoice.charLevelAvailable <= this.get_Character().level).map(spellChoice => spellChoice.dynamicLevel ? this.get_DynamicLevel(casting, spellChoice) : spellChoice.level), 0);\r\n    }\r\n\r\n    get_DynamicLevel(casting: SpellCasting, choice: SpellChoice) {\r\n        return this.spellsService.get_DynamicSpellLevel(casting, choice, this.characterService);\r\n    }\r\n\r\n    get_SignatureSpellsAllowed(casting: SpellCasting) {\r\n        return this.characterService.get_FeatsAndFeatures()\r\n            .some(feat => feat.allowSignatureSpells.some(gain => gain.className == casting.className) && feat.have(this.get_Character(), this.characterService))\r\n    }\r\n\r\n    get_SpellsByLevel(levelNumber: number, casting: SpellCasting) {\r\n        function spellSort(list: { choice: SpellChoice, gain: SpellGain }[]) {\r\n            return list.sort(function (a, b) {\r\n                if (a.gain.name > b.gain.name) {\r\n                    return 1;\r\n                }\r\n\r\n                if (a.gain.name < b.gain.name) {\r\n                    return -1;\r\n                }\r\n\r\n                return 0;\r\n            });\r\n        }\r\n        this.id = levelNumber * 1000;\r\n        let character = this.get_Character();\r\n        if (levelNumber == -1) {\r\n            if (casting.castingType == \"Focus\") {\r\n                return spellSort(character.get_SpellsTaken(this.characterService, 1, character.level, levelNumber, \"\", casting, \"\", \"\", \"\", \"\", \"\", undefined, this.get_SignatureSpellsAllowed(casting), false));\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return spellSort(character.get_SpellsTaken(this.characterService, 1, character.level, levelNumber, \"\", casting, \"\", \"\", \"\", \"\", \"\", undefined, this.get_SignatureSpellsAllowed(casting)));\r\n        }\r\n    }\r\n\r\n    get_Spells(name: string) {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellConditions(spell: Spell, levelNumber: number, gain: SpellGain) {\r\n        //For all conditions that are included with this spell on this level and has choices unlocked, create an effectChoice on the gain and set it to the default choice.\r\n        let conditions: Condition[] = [];\r\n        let spellLevel: number = this.get_EffectiveSpellLevel(spell, levelNumber);\r\n        spell.get_HeightenedConditions(spellLevel)\r\n            .filter(conditionGain => !conditionGain.hideChoices)\r\n            .map(conditionGain => { return { gain: conditionGain, condition: this.conditionsService.get_Conditions(conditionGain.name)[0] } })\r\n            .filter(conditionSet => conditionSet.condition?.get_Choices(this.characterService, true, (conditionSet.gain.heightened ? conditionSet.gain.heightened : spellLevel))?.length > 1)\r\n            .map(conditionSet => conditionSet.condition)\r\n            .forEach((condition, index) => {\r\n                //Add the condition to the list of conditions that need to display a choice,\r\n                // then if the gain doesn't have a choice at that index or the choice isn't among the condition's choices, insert or replace that choice on the gain.\r\n                conditions.push(condition);\r\n                while (!gain.choices.length || gain.choices.length < index - 1) {\r\n                    gain.choices.push(condition.choice);\r\n                }\r\n                if (!condition.$choices.includes(gain.choices?.[index])) {\r\n                    gain.choices[index] = condition.choice;\r\n                }\r\n            })\r\n        return conditions;\r\n    }\r\n\r\n    get_EffectiveSpellLevel(spell: Spell, levelNumber: number) {\r\n        return spell.get_EffectiveSpellLevel(this.get_Character(), levelNumber, this.characterService, this.effectsService);\r\n    }\r\n\r\n    get_FocusPoints() {\r\n        return Math.min(this.get_Character().class.focusPoints, this.get_MaxFocusPoints());\r\n    }\r\n\r\n    get_MaxFocusPoints() {\r\n        return this.characterService.get_MaxFocusPoints();\r\n    }\r\n\r\n    get_UsedSpellSlots(spellLevel: number, casting: SpellCasting) {\r\n        if (casting.castingType == \"Spontaneous\") {\r\n            return casting.spellSlotsUsed[spellLevel];\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_MaxSpellSlots(spellLevel: number, casting: SpellCasting) {\r\n        if (casting.castingType == \"Spontaneous\") {\r\n            let spellslots: number = 0;\r\n            //You have as many spontaneous spell slots as you have original spells (e.g. spells with source \"*Sorcerer Spellcasting\" for Sorcerers),\r\n            //  except for Level 10, where you have 1 (before effects).\r\n            if (spellLevel == 10) {\r\n                spellslots = 1;\r\n            } else if ([11, 12].includes(spellLevel) && casting.className == \"Sorcerer\" && this.have_Feat(\"Greater Vital Evolution\")) {\r\n                spellslots = 1;\r\n            } else if (spellLevel == 0 && casting.className == \"Bard\" && this.have_Feat(\"Studious Capacity\")) {\r\n                spellslots = 1;\r\n            } else if (spellLevel > 0 && spellLevel < 11) {\r\n                casting.spellChoices.filter(choice =>\r\n                    choice.level == spellLevel &&\r\n                    choice.charLevelAvailable <= this.get_Character().level &&\r\n                    choice.source.includes(casting.className + \" Spellcasting\")\r\n                ).forEach(choice => {\r\n                    spellslots += choice.available;\r\n                });\r\n                if (spellLevel <= this.get_MaxSpellLevel(casting) - 2 && (casting.className == \"Bard\" && this.have_Feat(\"Occult Breadth\"))) {\r\n                    spellslots += 1;\r\n                }\r\n                if (spellLevel <= this.get_MaxSpellLevel(casting) - 2 && (casting.className == \"Sorcerer\" && this.have_Feat(\"Bloodline Breadth\"))) {\r\n                    spellslots += 1;\r\n                }\r\n            }\r\n            if (casting.className)\r\n                this.effectsService.get_RelativesOnThis(this.get_Character(), casting.className + \" \" + casting.castingType + \" Level \" + spellLevel + \" Spell Slots\").forEach(effect => {\r\n                    spellslots += parseInt(effect.value);\r\n                });\r\n            return spellslots;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        let character = this.get_Character();\r\n        return character.get_FeatsTaken(0, character.level, name).length\r\n    }\r\n\r\n    refocus() {\r\n        this.timeService.refocus(this.characterService, this.conditionsService, this.itemsService, this.spellsService);\r\n    }\r\n\r\n    on_RestoreFocusPoint() {\r\n        this.characterService.process_OnceEffect(this.get_Character(), Object.assign(new EffectGain(), { affected: \"Focus Points\", value: \"+1\" }));\r\n    }\r\n\r\n    get_Duration(turns: number, includeTurnState: boolean = true, inASentence: boolean = false) {\r\n        return this.timeService.get_Duration(turns, includeTurnState, inASentence);\r\n    }\r\n\r\n    get_ExternallyDisabled(spell: Spell) {\r\n        return this.effectsService.get_EffectsOnThis(this.get_Character(), spell.name + \" Disabled\").length;\r\n    }\r\n\r\n    cannot_Cast(spell: Spell, levelNumber: number, casting: SpellCasting, choice: SpellChoice, gain: SpellGain, maxSpellSlots: number, externallyDisabled: number) {\r\n        if ((gain.activeCooldown || choice.spells.find(spellGain => spellGain.activeCooldown)) && !gain.active) {\r\n            return \"Cannot cast \" + this.get_Duration(gain.activeCooldown, true, true);\r\n        }\r\n        if (externallyDisabled) {\r\n            return \"Disabled by effect.\"\r\n        }\r\n        switch (casting.castingType) {\r\n            case \"Focus\":\r\n                if (choice.level == -1) {\r\n                    if (this.get_Character().class.focusPoints <= 0) {\r\n                        return \"No focus points left to cast.\"\r\n                    }\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"Spontaneous\":\r\n                if (\r\n                    levelNumber > 0 &&\r\n                    maxSpellSlots &&\r\n                    this.get_UsedSpellSlots(levelNumber, casting) >= maxSpellSlots &&\r\n                    !(\r\n                        //For spontanous spells, allow casting a spell if you don't have spell slots of that level left,\r\n                        //  but you have an extra studious capacity spell slot left. You can't use the studious capacity spell slot for your highest spell level.\r\n                        casting.className == \"Bard\" &&\r\n                        this.have_Feat(\"Studious Capacity\") &&\r\n                        this.get_UsedSpellSlots(0, casting) < this.get_MaxSpellSlots(0, casting) &&\r\n                        levelNumber != this.get_MaxSpellLevel(casting)\r\n                    ) &&\r\n                    !(\r\n                        //For spontanous spells, allow casting a spell if you don't have spell slots of that level left,\r\n                        //  but you have an extra greater vital evolution spell slot left and haven't used one for this level yet.\r\n                        casting.className == \"Sorcerer\" &&\r\n                        this.have_Feat(\"Greater Vital Evolution\") &&\r\n                        this.get_UsedSpellSlots(11, casting) != levelNumber &&\r\n                        this.get_UsedSpellSlots(12, casting) != levelNumber &&\r\n                        (\r\n                            this.get_UsedSpellSlots(11, casting) == 0 ||\r\n                            this.get_UsedSpellSlots(12, casting) == 0\r\n                        )\r\n                    )\r\n                ) {\r\n                    return \"No spell slots left to cast.\"\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"Prepared\":\r\n                if (choice.level > 0 && !gain.prepared) {\r\n                    return \"Already cast today.\"\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            case \"Innate\":\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    get_BloodMagicFeats() {\r\n        let character = this.get_Character();\r\n        return this.characterService.get_Feats().filter(feat => feat.bloodMagic.length && feat.have(character, this.characterService, character.level));\r\n    }\r\n\r\n    get_IsBloodMagicTrigger(spell: Spell, bloodMagicFeats: Feat[]) {\r\n        return bloodMagicFeats.some(feat => feat.bloodMagic.some(bloodMagic => bloodMagic.trigger.includes(spell.name)));\r\n    }\r\n\r\n    can_Activate(spell: Spell, bloodMagicFeats: Feat[]) {\r\n        return spell.gainConditions?.length || this.get_IsBloodMagicTrigger(spell, bloodMagicFeats);\r\n    }\r\n\r\n    on_Cast(levelNumber: number, gain: SpellGain, casting: SpellCasting, choice: SpellChoice, creature: string = \"\", spell: Spell, activated: boolean, bloodMagicFeats: Feat[]) {\r\n        let character = this.get_Character();\r\n        //Spells with a cooldown can start their cooldown, but not use any resources.\r\n        if (gain.cooldown) {\r\n            gain.activeCooldown = gain.cooldown;\r\n        } else {\r\n            //Focus spells cost Focus points.\r\n            if (casting.castingType == \"Focus\" && activated && choice.level == -1) {\r\n                this.get_Character().class.focusPoints = Math.min(character.class.focusPoints, this.get_MaxFocusPoints());\r\n                this.get_Character().class.focusPoints -= 1;\r\n            };\r\n            //Spontaneous spells use up spell slots. If you don't have spell slots of this level left, use a Studious Capacity one as a bard (0th level) or a Greater Vital Evolution one as a Sorcerer (11th and 12th level).\r\n            if (casting.castingType == \"Spontaneous\" && !spell.traits.includes(\"Cantrip\") && activated) {\r\n\r\n                //With Bloodline Conduit active, prepared spells without a duration up to 5th level do not get expended.\r\n                if (!(levelNumber <= 5 && !spell.duration && this.conditionsService.get_AppliedConditions(character, this.characterService, character.conditions, true).some(gain => gain.name == \"Bloodline Conduit\"))) {\r\n                    if (this.get_UsedSpellSlots(levelNumber, casting) < this.get_MaxSpellSlots(levelNumber, casting)) {\r\n                        casting.spellSlotsUsed[levelNumber] += 1;\r\n                    } else if (casting.className == \"Bard\") {\r\n                        casting.spellSlotsUsed[0] += 1;\r\n                    } else if (casting.className == \"Sorcerer\") {\r\n                        if (casting.spellSlotsUsed[11] == 0) {\r\n                            casting.spellSlotsUsed[11] = levelNumber;\r\n                        } else if (casting.spellSlotsUsed[12] == 0) {\r\n                            casting.spellSlotsUsed[12] = levelNumber;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //Prepared spells get locked until the next preparation.\r\n            if (casting.castingType == \"Prepared\" && !spell.traits.includes(\"Cantrip\") && activated) {\r\n                //With Leyline Conduit active, prepared spells without a duration up to 5th level do not get expended.\r\n                if (!(levelNumber <= 5 && !spell.duration && this.conditionsService.get_AppliedConditions(character, this.characterService, character.conditions, true).some(gain => gain.name == \"Leyline Conduit\"))) {\r\n                    gain.prepared = false;\r\n                }\r\n            }\r\n        }\r\n        //Trigger bloodline powers for sorcerers if your main class is Sorcerer.\r\n        bloodMagicFeats.forEach(feat => {\r\n            feat.bloodMagic.forEach(bloodMagic => {\r\n                if (bloodMagic.trigger.includes(spell.name)) {\r\n                    let conditionGain = new ConditionGain();\r\n                    conditionGain.name = bloodMagic.condition;\r\n                    conditionGain.duration = bloodMagic.duration;\r\n                    conditionGain.source = feat.name;\r\n                    conditionGain.heightened = spell.get_EffectiveSpellLevel(this.get_Character(), choice.level, this.characterService, this.effectsService);\r\n                    if (conditionGain.name) {\r\n                        this.characterService.add_Condition(this.get_Character(), conditionGain, false);\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        this.spellsService.process_Spell(character, creature, this.characterService, this.itemsService, this.conditionsService, casting, gain, spell, levelNumber, activated, true);\r\n        if (gain.combinationSpellName) {\r\n            let secondSpell = this.get_Spells(gain.combinationSpellName)[0];\r\n            if (secondSpell) {\r\n                this.spellsService.process_Spell(character, creature, this.characterService, this.itemsService, this.conditionsService, casting, gain, secondSpell, levelNumber, activated, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    can_Counterspell(casting: SpellCasting) {\r\n        let character = this.get_Character();\r\n        if ([\"Prepared\", \"Spontaneous\"].includes(casting.castingType)) {\r\n            return character.get_FeatsTaken(1, character.level, \"Counterspell (\" + casting.castingType + \")\").length;\r\n        }\r\n    }\r\n\r\n    on_Counterspell(gain: SpellGain, casting: SpellCasting, choice: SpellChoice, spell: Spell, levelNumber: number = 0) {\r\n        //Focus spells cost Focus points.\r\n        if (casting.castingType == \"Focus\" && choice.level == -1) {\r\n            this.get_Character().class.focusPoints = Math.min(this.get_Character().class.focusPoints, this.get_MaxFocusPoints());\r\n            this.get_Character().class.focusPoints -= 1;\r\n        };\r\n        //Spontaneous spells use up spell slots.\r\n        if (casting.castingType == \"Spontaneous\" && !spell.traits.includes(\"Cantrip\")) {\r\n            casting.spellSlotsUsed[levelNumber] += 1;\r\n        }\r\n        //Prepared spells get locked until the next preparation.\r\n        if (casting.castingType == \"Prepared\" && !spell.traits.includes(\"Cantrip\")) {\r\n            gain.prepared = false;\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    can_Restore(casting: SpellCasting, level: number) {\r\n        //True if you have the \"Free Bonded Item Charge\" effect (usually from Bond Conversation)\r\n        if (this.effectsService.get_EffectsOnThis(this.get_Character(), \"Free Bonded Item Charge\").length) {\r\n            return true;\r\n        }\r\n        //True if there is a charge available for this level\r\n        if (casting.bondedItemCharges[level]) {\r\n            return true;\r\n        }\r\n        //True if there is more than one general charge available - it means we have Superior Bond, and the first charge can be applied to every level.\r\n        if (casting.bondedItemCharges[0] > 1) {\r\n            return true;\r\n        }\r\n        //If there is only one charge, we need to check if this came from the Superior Bond feat.\r\n        //If we have that feat, the last charge is the Superior Bond charge and can only be applied to a spell 2 or more levels lower than the highest-level spell.\r\n        if (casting.bondedItemCharges[0] > 0) {\r\n            if (level <= this.get_MaxSpellLevel(casting) - 2) {\r\n                return true;\r\n            } else {\r\n                if (this.have_Feat(\"Superior Bond\")) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_Restore(gain: SpellGain, casting: SpellCasting, level: number) {\r\n        let character = this.get_Character();\r\n        if (this.have_Feat(\"Linked Focus\")) {\r\n            this.characterService.process_OnceEffect(character, Object.assign(new EffectGain(), { affected: \"Focus Points\", value: \"+1\" }))\r\n        }\r\n        let bondedItemCharges = this.effectsService.get_EffectsOnThis(character, \"Free Bonded Item Charge\");\r\n        if (bondedItemCharges.length) {\r\n            bondedItemCharges.forEach(effect => {\r\n                this.characterService.get_AppliedConditions(character, effect.source).forEach(gain => {\r\n                    this.characterService.remove_Condition(character, gain, false, false);\r\n                });\r\n            });\r\n        } else {\r\n            if ((casting.bondedItemCharges[level] || casting.bondedItemCharges[0]) && !gain.prepared) {\r\n                if (casting.bondedItemCharges[level]) {\r\n                    casting.bondedItemCharges[level] -= 1;\r\n                } else if (casting.bondedItemCharges[0]) {\r\n                    casting.bondedItemCharges[0] -= 1;\r\n                }\r\n            }\r\n        }\r\n        gain.prepared = true;\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    can_Reprepare(level: number, spell: Spell) {\r\n        return level <= 4 &&\r\n            !spell.duration &&\r\n            this.have_Feat(\"Reprepare Spell\") &&\r\n            !this.have_Feat(\"Spell Substitution\")\r\n    }\r\n\r\n    on_Reprepare(gain: SpellGain) {\r\n        gain.prepared = true;\r\n    }\r\n\r\n    is_SignatureSpell(casting: SpellCasting, taken: SpellGain) {\r\n        return this.get_SignatureSpellsAllowed(casting) && taken.signatureSpell;\r\n    }\r\n\r\n    is_InfinitePossibilitiesSpell(choice: SpellChoice) {\r\n        return choice.source == \"Feat: Infinite Possibilities\";\r\n    }\r\n\r\n    is_SpellMasterySpell(choice: SpellChoice) {\r\n        return choice.source == \"Feat: Spell Mastery\";\r\n    }\r\n\r\n    get_TemporarySpellChoices(casting: SpellCasting, level: number) {\r\n        return casting.spellChoices.filter(choice =>\r\n            choice.showOnSheet &&\r\n            (\r\n                (!choice.dynamicLevel && choice.level == level) ||\r\n                (choice.dynamicLevel && this.get_DynamicLevel(casting, choice) == level)\r\n            ) &&\r\n            this.get_TemporarySpellChoiceUnlocked(casting, choice, level));\r\n    }\r\n\r\n    get_TemporarySpellChoiceUnlocked(casting: SpellCasting, choice: SpellChoice, level: number = 0) {\r\n        //This function is so far only used to unlock the Infinite Possibilities bonus spell slot.\r\n        if (choice.source == \"Infinite Possibilities\") {\r\n            //Check if the spell slot on this level has been unlocked.\r\n            return casting.spellChoices.find(choice => choice.level == level + 2 && choice.infinitePossibilities) ? 1 : 0;\r\n        } else {\r\n            //If the spell slot doesn't need to be unlocked, just return a positive value.\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spellbook\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"spellbook\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"spellbook-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Spells</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <app-tags [creature]=\"'Character'\" [objectName]=\"'Spellbook'\" [showTraits]=true [showFeats]=true\r\n            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <button class=\"fullsize-only center-aligned list-item\" (click)=\"toggleSpellsMenu()\">Prepare Spells</button>\r\n        <ng-container *ngFor=\"let skill of get_SpellDCs(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader fullsize-only\" *ngIf=\"index == 0\">Spell Attacks & DCs</header>\r\n            <app-skill [skill]=skill [isDC]=false></app-skill>\r\n            <app-skill [skill]=skill [isDC]=true></app-skill>\r\n        </ng-container>\r\n        <app-tags [creature]=\"'Character'\" [objectName]=\"'Spell DC'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <ng-container *ngFor=\"let bloodMagicFeats of [get_BloodMagicFeats()]; trackBy:trackByIndex\">\r\n            <ng-container *ngFor=\"let casting of get_SpellCastings(); trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let studiouscapacityslots of [get_MaxSpellSlots(0, casting)]\">\r\n                    <ng-container *ngFor=\"let firstgreatervitalevolutionslot of [get_MaxSpellSlots(11, casting)]\">\r\n                        <ng-container *ngFor=\"let secondgreatervitalevolutionslot of [get_MaxSpellSlots(12, casting)]\">\r\n                            <header class=\"sectionHeader\">\r\n                                {{(casting.className + (casting.tradition != \"Innate\" ? \" \" + casting.tradition : \"\") +\r\n                                ((casting.castingType == \"Focus\") ? (\" \" + casting.source) : \" Spells\")).trim()}}\r\n                                <span class=\"lower\" *ngIf=\"['Prepared', 'Spontaneous'].includes(casting.castingType)\">\r\n                                    <span class=\"lower\">\r\n                                        {{casting.castingType}}\r\n                                    </span>\r\n                                </span>\r\n                                <ng-container *ngFor=\"let superiorBond of [have_Feat('Superior Bond')]\">\r\n                                    <div class=\"newrow lower\" *ngIf=\"casting.bondedItemCharges[0]\"\r\n                                        [ngbPopover]=\"superiorBond ? 'You can use Drain Bonded Item one additional time per day, but only to cast a spell 2 or more levels lower than your highest-level spell.' : ''\">\r\n                                        {{casting.bondedItemCharges[0]}}{{superiorBond ? \"*\" : \"\"}}\r\n                                        charge{{casting.bondedItemCharges[0] != 1 ? \"s\" : \"\"}} available\r\n                                    </div>\r\n                                </ng-container>\r\n                                <div class=\"newrow lower\" *ngIf=\"studiouscapacityslots\"\r\n                                    [ngbPopover]=\"'You can cast one spell each day even after you\\'ve run out of spell slots of the appropriate spell level, but you can\\'t use this ability to cast a spell of your highest spell level.'\">\r\n                                    {{studiouscapacityslots - get_UsedSpellSlots(0, casting)}} extra spell\r\n                                    casting{{studiouscapacityslots - get_UsedSpellSlots(0, casting) != 1 ? \"s\" : \"\"}}\r\n                                    available\r\n                                </div>\r\n                                <div class=\"newrow lower\"\r\n                                    *ngIf=\"firstgreatervitalevolutionslot || secondgreatervitalevolutionslot\"\r\n                                    [ngbPopover]=\"'Twice per day, you can cast a spell after you\\'ve run out of spell slots of the appropriate spell level; the two spells you cast with this feat must be of different spell levels.'\">\r\n                                    {{(get_UsedSpellSlots(11, casting) == 0 ? 1 : 0) + (get_UsedSpellSlots(12, casting)\r\n                                    == 0\r\n                                    ? 1 : 0)}} extra spell casting{{(get_UsedSpellSlots(11, casting) == 0 ? 1 : 0) +\r\n                                    (get_UsedSpellSlots(12, casting) == 0 ? 1 : 0) != 1 ? \"s\" : \"\"}} available\r\n                                </div>\r\n                            </header>\r\n                            <ng-container *ngFor=\"let maxFocusPoints of [get_MaxFocusPoints()]; trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let level of [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; trackBy:trackByIndex;\">\r\n                                    <ng-container *ngIf=\"level <= get_MaxSpellLevel(casting)\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let spellTakenList of [get_SpellsByLevel(level, casting)]; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let choiceList of [get_TemporarySpellChoices(casting, level)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let maxspellslots of [get_MaxSpellSlots(level, casting)]; let index = index; trackBy:trackByIndex;\">\r\n                                                    <div class=\"list-item newrow\" style=\"background-color:transparent\"\r\n                                                        *ngIf=\"index == 0 && (spellTakenList.length || choiceList.length)\">\r\n                                                        <strong>\r\n                                                            {{level == -1 ? \"Focus Spells\" : (level == 0 ? \"Cantrips\" :\r\n                                                            \"Level \"+level)}}\r\n                                                        </strong>\r\n                                                        <strong *ngIf=\"maxspellslots && level != 0\">\r\n                                                            {{(maxspellslots - get_UsedSpellSlots(level,\r\n                                                            casting))}}{{level\r\n                                                            < get_MaxSpellLevel(casting) && studiouscapacityslots -\r\n                                                                get_UsedSpellSlots(0, casting)> 0 ? \"+\" +\r\n                                                                (studiouscapacityslots - get_UsedSpellSlots(0, casting))\r\n                                                                :\r\n                                                                \"\"}}{{(firstgreatervitalevolutionslot ||\r\n                                                                secondgreatervitalevolutionslot) &&\r\n                                                                (get_UsedSpellSlots(11,\r\n                                                                casting) == 0 || get_UsedSpellSlots(12, casting) == 0)\r\n                                                                &&\r\n                                                                (get_UsedSpellSlots(11, casting) != level &&\r\n                                                                get_UsedSpellSlots(12, casting) != level) ? \"+\" + 1 :\r\n                                                                \"\"}} /\r\n                                                                {{maxspellslots}}\r\n                                                        </strong>\r\n                                                        <strong *ngIf=\"casting.bondedItemCharges[level] && level != 0\">\r\n                                                            {{casting.bondedItemCharges[level]}} charge available\r\n                                                        </strong>\r\n                                                    </div>\r\n                                                    <div class=\"list-item\"\r\n                                                        [ngClass]=\"{'problem':(get_FocusPoints() > maxFocusPoints)}\"\r\n                                                        *ngIf=\"casting.castingType == 'Focus' && level == -1 && (spellTakenList.length || maxFocusPoints)\">\r\n                                                        <strong>Focus Points</strong>\r\n                                                        <div class=\"value\">\r\n                                                            {{get_FocusPoints()}}\r\n                                                        </div>\r\n                                                        <strong>Focus Pool</strong>\r\n                                                        <div class=\"value\">\r\n                                                            {{maxFocusPoints}}\r\n                                                        </div>\r\n                                                        <button class=\"newrow center-aligned\" (click)=\"refocus()\"\r\n                                                            [disabled]=\"get_FocusPoints() >= maxFocusPoints\">\r\n                                                            Refocus\r\n                                                        </button>\r\n                                                        <app-tags [creature]=\"'Character'\" [objectName]=\"'Focus'\"\r\n                                                            [showTraits]=true [showFeats]=true [showItems]=true\r\n                                                            [showActivities]=true [showConditions]=true\r\n                                                            [showEffects]=true>\r\n                                                        </app-tags>\r\n                                                    </div>\r\n                                                    <div class=\"list-item\"\r\n                                                        *ngFor=\"let choice of choiceList; let choicesIndex = index; trackBy:trackByIndex;\">\r\n                                                        <header class=\"subsectionHeader box-header\"\r\n                                                            *ngIf=\"choicesIndex == 0\">Level {{level}} Temporary Spell\r\n                                                            Selections\r\n                                                        </header>\r\n                                                        <app-spellchoice\r\n                                                            (showChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                            (showSpellMessage)=\"receive_SpellMessage($event)\"\r\n                                                            [spellCasting]=\"casting\" [choice]=\"choice\"\r\n                                                            [allowHeightened]=\"true\" [allowBorrow]=\"false\"\r\n                                                            [showChoice]=\"get_ShowList()\" [showSpell]=\"get_ShowItem()\"\r\n                                                            [level]=\"choice.level\"\r\n                                                            [prepared]=\"choice.source == 'Infinite Possibilities'\"\r\n                                                            [spellbook]=\"true\">\r\n                                                        </app-spellchoice>\r\n                                                    </div>\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let spellTaken of spellTakenList; let spellIndex = index; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let spell of get_Spells(spellTaken.gain.name); trackBy:trackByIndex;\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let externallyDisabled of [get_ExternallyDisabled(spell)]; trackBy:trackByIndex;\">\r\n                                                                <ng-container\r\n                                                                    *ngFor=\"let effectiveSpellLevel of [get_EffectiveSpellLevel(spell, level)]; trackBy:trackByIndex;\">\r\n                                                                    <ng-container\r\n                                                                        *ngFor=\"let cannotCast of [cannot_Cast(spell, level, casting, spellTaken.choice, spellTaken.gain, maxspellslots, externallyDisabled)]; trackBy:trackByIndex;\">\r\n                                                                        <div class=\"list-item\"\r\n                                                                            *ngFor=\"let spellID of [get_ID()]; trackBy:trackByIndex;\">\r\n                                                                            <button\r\n                                                                                class=\"newrow sublist-toggle left-aligned\"\r\n                                                                                (click)=\"toggle_Spell(casting.castingType+casting.class+spellTaken.gain.name+spellID)\"\r\n                                                                                [ngClass]=\"{'inactive-button': cannotCast}\">\r\n                                                                                <span [ngbTooltip]=\"'Signature spell'\"\r\n                                                                                    *ngIf=\"is_SignatureSpell(casting, spellTaken.gain)\"><i\r\n                                                                                        class='bi-stars'></i>&nbsp;</span>\r\n                                                                                <span [ngbTooltip]=\"'Combination spell'\"\r\n                                                                                    *ngIf=\"spellTaken.choice.spellCombination\"><i\r\n                                                                                        class='ra ra-frostfire'></i>&nbsp;</span>\r\n                                                                                <span\r\n                                                                                    [ngbTooltip]=\"'Infinite Possibilities spell'\"\r\n                                                                                    *ngIf=\"is_InfinitePossibilitiesSpell(spellTaken.choice)\"><i\r\n                                                                                        class='ra ra-kaleidoscope'></i>&nbsp;</span>\r\n                                                                                <span\r\n                                                                                    [ngbTooltip]=\"'Spell Mastery spell'\"\r\n                                                                                    *ngIf=\"is_SpellMasterySpell(spellTaken.choice)\"><i\r\n                                                                                        class='ra ra-crown'></i>&nbsp;</span>\r\n                                                                                <span\r\n                                                                                    [ngbTooltip]=\"'Crossblooded Evolution spell'\"\r\n                                                                                    *ngIf=\"spellTaken.choice.crossbloodedEvolution\"><i\r\n                                                                                        class='ra ra-zigzag-leaf'></i>&nbsp;</span>\r\n                                                                                {{spell.name}}\r\n                                                                                {{spellTaken.gain.combinationSpellName ?\r\n                                                                                \" & \" +\r\n                                                                                spellTaken.gain.combinationSpellName :\r\n                                                                                \"\"}}\r\n                                                                                <span\r\n                                                                                    *ngIf=\"!spellTaken.gain.combinationSpellName\">\r\n                                                                                    <app-actionIcons\r\n                                                                                        [actionString]=\"spell.actions\">\r\n                                                                                    </app-actionIcons>{{spell.castType}}\r\n                                                                                </span>\r\n                                                                                &nbsp;{{spellTaken.gain.frequency ?\r\n                                                                                spellTaken.gain.frequency : \"\"}}\r\n                                                                            </button>\r\n                                                                            <div class=\"list-item sublist lower\"\r\n                                                                                [ngClass]=\"{'inactive-list': cannotCast}\"\r\n                                                                                *ngIf=\"get_ShowSpell()==casting.castingType+casting.class+spellTaken.gain.name+spellID\">\r\n                                                                                <div class=\"newrow list-item left-aligned\"\r\n                                                                                    *ngIf=\"effectiveSpellLevel != level\">\r\n                                                                                    Effective spell level:\r\n                                                                                    {{effectiveSpellLevel}}</div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"casting.castingType == 'Focus' && spell.allowReturnFocusPoint\"\r\n                                                                                    [ngbTooltip]=\"get_FocusPoints() >= get_MaxFocusPoints() ? 'Focus points are full.' : ''\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_RestoreFocusPoint()\"\r\n                                                                                        [disabled]=\"get_FocusPoints() >= get_MaxFocusPoints()\">\r\n                                                                                        <span\r\n                                                                                            class=\"center-aligned\">Return\r\n                                                                                            Focus Point</span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"casting.castingType == 'Prepared' && casting.className == 'Wizard' && !spellTaken.gain.prepared && level > 0 && !spellTaken.gain.duration\"\r\n                                                                                    [ngbTooltip]=\"!can_Restore(casting, level) ? 'No bonded item charges remaining.' : ''\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Restore(spellTaken.gain, casting, level)\"\r\n                                                                                        [disabled]=\"!can_Restore(casting, level)\">\r\n                                                                                        <span\r\n                                                                                            class=\"center-aligned\">Restore\r\n                                                                                            with bonded item\r\n                                                                                            <app-actionIcons\r\n                                                                                                [actionString]=\"'Free'\">\r\n                                                                                            </app-actionIcons>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"casting.castingType == 'Prepared' && casting.className == 'Wizard' && !spellTaken.gain.prepared && level > 0 && can_Reprepare(level, spell)\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Reprepare(spellTaken.gain)\">\r\n                                                                                        <span\r\n                                                                                            class=\"center-aligned\">Rerepare\r\n                                                                                            <app-actionIcons\r\n                                                                                                [actionString]=\"'10 minutes'\">\r\n                                                                                            </app-actionIcons>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"['self', 'ally'].includes(spell.target) && !spellTaken.gain.active\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, 'Character', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            {{spell.target == 'ally' ?\r\n                                                                                            \"Cast on yourself\" :\r\n                                                                                            \"Cast\"}} <i class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"['companion', 'ally'].includes(spell.target) && !spellTaken.gain.active && get_CompanionAvailable()\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, 'Companion', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast on your animal\r\n                                                                                            companion <i\r\n                                                                                                class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"['companion', 'ally'].includes(spell.target) && !spellTaken.gain.active && get_FamiliarAvailable()\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, 'Familiar', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast on your familiar <i\r\n                                                                                                class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"spell.target == 'ally' && !spellTaken.gain.active\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, '', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast on other targets <i\r\n                                                                                                class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"!spell.target && !spellTaken.gain.active\"\r\n                                                                                    [ngbTooltip]=\"cannotCast\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, '', spell, true, bloodMagicFeats)\"\r\n                                                                                        [disabled]=\"cannotCast\"\r\n                                                                                        [ngbTooltip]=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats) ? 'Casting this spell will trigger your blood magic power' : (!can_Activate(spell, bloodMagicFeats) ? 'The spell has no automatic effects.' : '')\">\r\n                                                                                        <span>\r\n                                                                                            Cast <i class='bi-peace'\r\n                                                                                                *ngIf=\"!can_Activate(spell, bloodMagicFeats)\"></i>\r\n                                                                                            <i class='ra ra-droplet-splash'\r\n                                                                                                *ngIf=\"get_IsBloodMagicTrigger(spell, bloodMagicFeats)\"></i>\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"spellTaken.gain.active\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Cast(level, spellTaken.gain, casting, spellTaken.choice, spellTaken.gain.target, spell, false, bloodMagicFeats)\">\r\n                                                                                        <span>Dismiss <span\r\n                                                                                                class=\"actionIcon action1A\"></span>\r\n                                                                                            or Stop Sustaining\r\n                                                                                            {{spellTaken.gain.duration ?\r\n                                                                                            \"(Duration: \" +\r\n                                                                                            get_Duration(spellTaken.gain.duration)\r\n                                                                                            + \")\" : \"\"}}\r\n                                                                                        </span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow\"\r\n                                                                                    *ngIf=\"can_Counterspell(casting) && !spellTaken.gain.active && level > 0\"\r\n                                                                                    [ngbTooltip]=\"cannot_Cast(spell, level, casting, spellTaken.choice, spellTaken.gain, maxspellslots, 0)\">\r\n                                                                                    <button\r\n                                                                                        class=\"newrow center-aligned\"\r\n                                                                                        (click)=\"on_Counterspell(spellTaken.gain, casting, spellTaken.choice, spell, level)\"\r\n                                                                                        [disabled]=\"cannot_Cast(spell, level, casting, spellTaken.choice, spellTaken.gain, maxspellslots, 0)\">\r\n                                                                                        Expend to counter spell\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                                <ng-container\r\n                                                                                    *ngFor=\"let condition of get_SpellConditions(spell, effectiveSpellLevel, spellTaken.gain); let conditionIndex = index; trackBy:trackByIndex\">\r\n                                                                                    <div class=\"newrow list-item left-aligned\"\r\n                                                                                        *ngIf=\"condition.choices.length\">\r\n                                                                                        <span>{{condition.name}} effect\r\n                                                                                            selection:\r\n                                                                                            <select\r\n                                                                                                [(ngModel)]=\"spellTaken.gain.choices[conditionIndex]\">\r\n                                                                                                <option\r\n                                                                                                    *ngFor=\"let choice of condition.$choices; trackBy:trackByIndex;\"\r\n                                                                                                    [ngValue]=\"choice\">\r\n                                                                                                    {{choice}}\r\n                                                                                                </option>\r\n                                                                                            </select>\r\n                                                                                        </span>\r\n                                                                                    </div>\r\n                                                                                </ng-container>\r\n                                                                                <ng-container\r\n                                                                                    *ngIf=\"!spellTaken.gain.combinationSpellName\">\r\n                                                                                    <app-spell class=\"list-item\"\r\n                                                                                        [spell]=\"spell\"\r\n                                                                                        [spellLevel]=\"effectiveSpellLevel\">\r\n                                                                                    </app-spell>\r\n                                                                                </ng-container>\r\n                                                                                <ng-container\r\n                                                                                    *ngIf=\"spellTaken.gain.combinationSpellName\">\r\n                                                                                    <header\r\n                                                                                        class=\"spellHeader left-aligned\">\r\n                                                                                        {{spell.name}}\r\n                                                                                        <app-actionIcons\r\n                                                                                            [actionString]=\"spell.actions\">\r\n                                                                                        </app-actionIcons>\r\n                                                                                        {{(spell.castType) ?\r\n                                                                                        spell.castType\r\n                                                                                        : \"\"}}\r\n                                                                                    </header>\r\n                                                                                    <app-spell class=\"list-item\"\r\n                                                                                        [spell]=\"spell\"\r\n                                                                                        [spellLevel]=\"effectiveSpellLevel\">\r\n                                                                                    </app-spell>\r\n                                                                                    <ng-container\r\n                                                                                        *ngFor=\"let secondSpell of get_Spells(spellTaken.gain.combinationSpellName)\">\r\n                                                                                        <header\r\n                                                                                            class=\"spellHeader left-aligned\">\r\n                                                                                            {{secondSpell.name}}\r\n                                                                                            <app-actionIcons\r\n                                                                                                [actionString]=\"secondSpell.actions\">\r\n                                                                                            </app-actionIcons>\r\n                                                                                            {{(secondSpell.castType) ?\r\n                                                                                            secondSpell.castType : \"\"}}\r\n                                                                                        </header>\r\n                                                                                        <app-spell class=\"list-item\"\r\n                                                                                            [spell]=\"secondSpell\"\r\n                                                                                            [spellLevel]=\"effectiveSpellLevel\">\r\n                                                                                        </app-spell>\r\n                                                                                    </ng-container>\r\n                                                                                </ng-container>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </ng-container>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"familiar-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleFamiliarMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <div class=\"familiar-box\"\r\n        *ngIf=\"!still_loading() && get_Character().class && get_FamiliarAvailable() && get_FamiliarMenuState()=='in'\">\r\n        <app-effects [creature]=\"'Familiar'\" [sheetSide]=\"'center'\" id=\"Familiar-effects\" class=\"charactersheet-app\">\r\n        </app-effects>\r\n        <div class=\"charactersheet-column-container\">\r\n            <div class=\"charactersheet-column\">\r\n                <app-general [creature]=\"'Familiar'\" [sheetSide]=\"'left'\" id=\"Familiar-general\"\r\n                    class=\"charactersheet-app\"></app-general>\r\n                <app-familiarabilities id=\"familiarabilities\" [sheetSide]=\"'left'\" class=\"charactersheet-app\" [ngClass]=\"{'fullsize-only':get_FamiliarAbilitiesFinished()}\">\r\n                </app-familiarabilities>\r\n                <app-health [creature]=\"'Familiar'\" [sheetSide]=\"'left'\" id=\"Familiar-health\"\r\n                    class=\"charactersheet-app\"></app-health>\r\n            </div>\r\n            <div class=\"charactersheet-column\">\r\n                <app-defense [creature]=\"'Familiar'\" [sheetSide]=\"'right'\" id=\"Familiar-defense\"\r\n                    class=\"charactersheet-app\"></app-defense>\r\n                <app-skills [creature]=\"'Familiar'\" [sheetSide]=\"'right'\" id=\"Familiar-skills\"\r\n                    class=\"charactersheet-app\"></app-skills>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { FamiliarsService } from '../familiars.service';\r\n\r\n@Component({\r\n    selector: 'app-familiar',\r\n    templateUrl: './familiar.component.html',\r\n    styleUrls: ['./familiar.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FamiliarComponent implements OnInit {\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private familiarsService: FamiliarsService,\r\n        private effectsService: EffectsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.familiarMinimized = !this.characterService.get_Character().settings.familiarMinimized;\r\n        this.set_Changed(\"Familiar\");\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.familiarMinimized;\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.characterService.still_loading() || this.familiarsService.still_loading());\r\n    }\r\n\r\n    toggleFamiliarMenu() {\r\n        this.characterService.toggle_Menu(\"familiar\");\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.characterService.get_FamiliarMenuState();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    set_Changed(target: string) {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    get_FamiliarAbilitiesFinished() {\r\n        let choice = this.get_Familiar().abilities;\r\n        let available = choice.available;\r\n        this.effectsService.get_AbsolutesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n            available = parseInt(effect.setValue);\r\n        });\r\n        this.effectsService.get_RelativesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n            available += parseInt(effect.value);\r\n        });\r\n        return choice.feats.length >= available;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"familiar\", \"all\"].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == \"familiar\" && [\"familiar\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","import { Creature } from './Creature';\r\nimport { EffectsService } from './effects.service';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { FeatTaken } from './FeatTaken';\r\nimport { Skill } from './Skill';\r\n\r\nexport class Familiar extends Creature {\r\n    public readonly _className: string = this.constructor.name;\r\n    public readonly type = \"Familiar\";\r\n    public abilities: FeatChoice = Object.assign(new FeatChoice, {\r\n        available: 2,\r\n        id: \"0-Feat-Familiar-0\",\r\n        source: \"Familiar\",\r\n        type: \"Familiar\"\r\n    });\r\n    public customSkills: Skill[] = [\r\n        Object.assign(new Skill(), { name:\"Attack Rolls\", type:\"Familiar Proficiency\" })\r\n    ];\r\n    public originClass: string = \"\";\r\n    public senses: string[] = [\"Low-Light Vision\"];\r\n    public species: string = \"\";\r\n    public traits: string[] = [\"Minion\"];\r\n    get_BaseSize() {\r\n        return -2;\r\n    }\r\n    get_Size(effectsService: EffectsService) {\r\n        let size: number = this.get_BaseSize();\r\n        \r\n        let setSizeEffects = effectsService.get_AbsolutesOnThis(this, \"Size\");\r\n        if (setSizeEffects.length) {\r\n            size = Math.max(...setSizeEffects.map(effect => parseInt(effect.setValue)));\r\n        }\r\n                \r\n        let sizeEffects = effectsService.get_RelativesOnThis(this, \"Size\");\r\n        sizeEffects.forEach(effect => {\r\n            size += parseInt(effect.value)\r\n        })\r\n\r\n        switch (size) {\r\n            case -2:\r\n                return \"Tiny\";\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\"\r\n            case 1:\r\n                return \"Large\"\r\n            case 2:\r\n                return \"Huge\"\r\n            case 3:\r\n                return \"Gargantuan\"\r\n        }\r\n    }\r\n    get_FeatsTaken(featName: string = \"\") {\r\n        let featsTaken: string[] = [];\r\n        this.abilities.feats.filter((feat: FeatTaken) => feat.name.toLowerCase() == featName.toLowerCase() || featName == \"\")\r\n            .forEach(feat => {\r\n            featsTaken.push(feat.name);\r\n        })\r\n        return featsTaken;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Weapon } from './Weapon';\r\nimport { Armor } from './Armor';\r\nimport { Shield } from './Shield';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemCollection } from './ItemCollection';\r\nimport { WornItem } from './WornItem';\r\nimport { AlchemicalElixir } from './AlchemicalElixir';\r\nimport { Consumable } from './Consumable';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { OtherConsumable } from './OtherConsumable';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ItemProperty } from './ItemProperty';\r\nimport { Item } from './Item';\r\nimport { HeldItem } from './HeldItem';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Potion } from './Potion';\r\nimport { Specialization } from './Specialization';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\nimport { SavegameService } from './savegame.service';\r\nimport { Ammunition } from './Ammunition';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { Equipment } from './Equipment';\r\nimport { Scroll } from './Scroll';\r\nimport { Oil } from './Oil';\r\nimport { Talisman } from './Talisman';\r\nimport { Familiar } from './Familiar';\r\nimport { SpellsService } from './spells.service';\r\nimport { SpellCast } from './SpellCast';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { AlchemicalTool } from './AlchemicalTool';\r\nimport { Snare } from './Snare';\r\nimport { WeaponMaterial } from './WeaponMaterial';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { Wand } from './Wand';\r\nimport { ConditionsService } from './conditions.service';\r\nimport * as json_itemproperties from '../assets/json/itemproperties';\r\nimport * as json_weaponmaterials from '../assets/json/weaponmaterials';\r\nimport * as json_specializations from '../assets/json/specializations';\r\nimport * as json_adventuringgear from '../assets/json/items/adventuringgear';\r\nimport * as json_alchemicalbombs from '../assets/json/items/alchemicalbombs';\r\nimport * as json_alchemicalelixirs from '../assets/json/items/alchemicalelixirs';\r\nimport * as json_alchemicaltools from '../assets/json/items/alchemicaltools';\r\nimport * as json_alchemicalpoisons from '../assets/json/items/alchemicalpoisons';\r\nimport * as json_ammunition from '../assets/json/items/ammunition';\r\nimport * as json_armorrunes from '../assets/json/items/armorrunes';\r\nimport * as json_armors from '../assets/json/items/armors';\r\nimport * as json_helditems from '../assets/json/items/helditems';\r\nimport * as json_oils from '../assets/json/items/oils';\r\nimport * as json_otherconsumables from '../assets/json/items/otherconsumables';\r\nimport * as json_otherconsumablesbombs from '../assets/json/items/otherconsumablesbombs';\r\nimport * as json_potions from '../assets/json/items/potions';\r\nimport * as json_scrolls from '../assets/json/items/scrolls';\r\nimport * as json_shields from '../assets/json/items/shields';\r\nimport * as json_snares from '../assets/json/items/snares';\r\nimport * as json_talismans from '../assets/json/items/talismans';\r\nimport * as json_wands from '../assets/json/items/wands';\r\nimport * as json_weaponrunes from '../assets/json/items/weaponrunes';\r\nimport * as json_weapons from '../assets/json/items/weapons';\r\nimport * as json_wornitems from '../assets/json/items/wornitems';\r\nimport { Creature } from './Creature';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ItemsService {\r\n\r\n    private items: ItemCollection;\r\n    private cleanItems: ItemCollection;\r\n    private craftingItems: ItemCollection;\r\n    private itemProperties: ItemProperty[] = [];\r\n    private weaponMaterials: WeaponMaterial[] = [];\r\n    private specializations: Specialization[] = [];\r\n\r\n    private loading_itemProperties: boolean = false;\r\n    private loading_weaponMaterials: boolean = false;\r\n    private loading_specializations: boolean = false;\r\n    private loading_adventuringgear: boolean = false;\r\n    private loading_alchemicalbombs: boolean = false;\r\n    private loading_alchemicalelixirs: boolean = false;\r\n    private loading_alchemicaltools: boolean = false;\r\n    private loading_alchemicalpoisons: boolean = false;\r\n    private loading_ammunition: boolean = false;\r\n    private loading_armorrunes: boolean = false;\r\n    private loading_armors: boolean = false;\r\n    private loading_helditems: boolean = false;\r\n    private loading_oils: boolean = false;\r\n    private loading_otherconsumables: boolean = false;\r\n    private loading_otherconsumablesbombs: boolean = false;\r\n    private loading_potions: boolean = false;\r\n    private loading_scrolls: boolean = false;\r\n    private loading_shields: boolean = false;\r\n    private loading_snares: boolean = false;\r\n    private loading_talismans: boolean = false;\r\n    private loading_wands: boolean = false;\r\n    private loading_weaponrunes: boolean = false;\r\n    private loading_weapons: boolean = false;\r\n    private loading_wornitems: boolean = false;\r\n    /*\r\n    private loading_REPLACE1s: boolean = false;\r\n    */\r\n\r\n    itemsMenuState: string = 'out';\r\n\r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    toggleItemsMenu(position: string = \"\") {\r\n        if (position) {\r\n            this.itemsMenuState = position;\r\n        } else {\r\n            this.itemsMenuState = (this.itemsMenuState == 'out') ? 'in' : 'out';\r\n        }\r\n    }\r\n\r\n    get_itemsMenuState() {\r\n        return this.itemsMenuState;\r\n    }\r\n\r\n    get_Items() {\r\n        if (!this.still_loading()) {\r\n            return this.items;\r\n        } else { return new ItemCollection }\r\n    }\r\n\r\n    get_CleanItems() {\r\n        if (!this.still_loading()) {\r\n            return this.cleanItems;\r\n        } else { return new ItemCollection }\r\n    }\r\n\r\n    get_CraftingItems() {\r\n        if (!this.still_loading()) {\r\n            return this.craftingItems;\r\n        } else { return new ItemCollection }\r\n    }\r\n\r\n    get_ItemByID(id: string) {\r\n        if (!this.still_loading()) {\r\n            return this.items.allItems().find(item => item.id == id);\r\n        } else { return null }\r\n    }\r\n\r\n    get_CleanItemByID(id: string) {\r\n        if (!this.still_loading()) {\r\n            return this.cleanItems.allItems().find(item => item.id == id);\r\n        } else { return null }\r\n    }\r\n\r\n    get_CraftingItemByID(id: string) {\r\n        if (!this.still_loading()) {\r\n            return this.craftingItems.allItems().find(item => item.id == id);\r\n        } else { return null }\r\n    }\r\n\r\n    get_ItemProperties() {\r\n        if (!this.still_loading()) {\r\n            return this.itemProperties;\r\n        } else { return [new ItemProperty] }\r\n    }\r\n\r\n    get_WeaponMaterials() {\r\n        if (!this.still_loading()) {\r\n            return this.weaponMaterials;\r\n        } else { return [new WeaponMaterial] }\r\n    }\r\n\r\n    get_Specializations(group: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.specializations.filter(spec => spec.name.toLowerCase() == group.toLowerCase() || group == \"\");\r\n        } else { return [new Specialization] }\r\n    }\r\n\r\n    get_ItemsOfType(type: string, name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.cleanItems[type].filter(item => item.name.toLowerCase() == name.toLowerCase() || name == \"\");\r\n        } else { return [] }\r\n    }\r\n\r\n    get_CleanItemsOfType(type: string, name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.items[type].filter(item => item.name.toLowerCase() == name.toLowerCase() || name == \"\");\r\n        } else { return [] }\r\n    }\r\n\r\n    cast_ItemByType(item: Item, type: string = item.type) {\r\n        if (type) {\r\n            switch (type) {\r\n                case \"weapons\":\r\n                    return Object.assign(new Weapon(), item);\r\n                case \"armors\":\r\n                    return Object.assign(new Armor(), item);\r\n                case \"shields\":\r\n                    return Object.assign(new Shield(), item);\r\n                case \"wornitems\":\r\n                    return Object.assign(new WornItem(), item);\r\n                case \"helditems\":\r\n                    return Object.assign(new HeldItem(), item);\r\n                case \"alchemicalelixirs\":\r\n                    return Object.assign(new AlchemicalElixir(), item);\r\n                case \"alchemicalbombs\":\r\n                    return Object.assign(new AlchemicalBomb(), item);\r\n                case \"alchemicalpoisons\":\r\n                    return Object.assign(new AlchemicalPoison(), item);\r\n                case \"alchemicaltools\":\r\n                    return Object.assign(new AlchemicalTool(), item);\r\n                case \"potions\":\r\n                    return Object.assign(new Potion(), item);\r\n                case \"otherconsumables\":\r\n                    return Object.assign(new OtherConsumable(), item);\r\n                case \"otherconsumablesbombs\":\r\n                    return Object.assign(new OtherConsumableBomb(), item);\r\n                case \"adventuringgear\":\r\n                    return Object.assign(new AdventuringGear(), item);\r\n                case \"ammunition\":\r\n                    return Object.assign(new Ammunition(), item);\r\n                case \"armorrunes\":\r\n                    return Object.assign(new ArmorRune(), item);\r\n                case \"weaponrunes\":\r\n                    return Object.assign(new WeaponRune(), item);\r\n                case \"scrolls\":\r\n                    return Object.assign(new Scroll(), item);\r\n                case \"oils\":\r\n                    return Object.assign(new Oil(), item);\r\n                case \"talismans\":\r\n                    return Object.assign(new Talisman(), item);\r\n                case \"snares\":\r\n                    return Object.assign(new Snare(), item);\r\n                case \"wands\":\r\n                    return Object.assign(new Snare(), item);\r\n            }\r\n        } else if (item._className) {\r\n            return this.cast_ItemByClassName(item)\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    cast_ItemByClassName(item: Item, className = item._className) {\r\n        if (className) {\r\n            switch (className) {\r\n                case \"Weapon\":\r\n                    return Object.assign(new Weapon(), item);\r\n                case \"Armor\":\r\n                    return Object.assign(new Armor(), item);\r\n                case \"Shield\":\r\n                    return Object.assign(new Shield(), item);\r\n                case \"WornItem\":\r\n                    return Object.assign(new WornItem(), item);\r\n                case \"HeldItem\":\r\n                    return Object.assign(new HeldItem(), item);\r\n                case \"AlchemicalElixir\":\r\n                    return Object.assign(new AlchemicalElixir(), item);\r\n                case \"AlchemicalBomb\":\r\n                    return Object.assign(new AlchemicalBomb(), item);\r\n                case \"AlchemicalPoison\":\r\n                    return Object.assign(new AlchemicalPoison(), item);\r\n                case \"AlchemicalTool\":\r\n                    return Object.assign(new AlchemicalTool(), item);\r\n                case \"Potion\":\r\n                    return Object.assign(new Potion(), item);\r\n                case \"OtherConsumable\":\r\n                    return Object.assign(new OtherConsumable(), item);\r\n                case \"OtherConsumableBomb\":\r\n                    return Object.assign(new OtherConsumableBomb(), item);\r\n                case \"AdventuringGear\":\r\n                    return Object.assign(new AdventuringGear(), item);\r\n                case \"Ammunition\":\r\n                    return Object.assign(new Ammunition(), item);\r\n                case \"ArmorRune\":\r\n                    return Object.assign(new ArmorRune(), item);\r\n                case \"WeaponRune\":\r\n                    return Object.assign(new WeaponRune(), item);\r\n                case \"Scroll\":\r\n                    return Object.assign(new Scroll(), item);\r\n                case \"Oil\":\r\n                    return Object.assign(new Oil(), item);\r\n                case \"Talisman\":\r\n                    return Object.assign(new Talisman(), item);\r\n                case \"Snare\":\r\n                    return Object.assign(new Snare(), item);\r\n                case \"Wand\":\r\n                    return Object.assign(new Wand(), item);\r\n            }\r\n        } else if (item.type) {\r\n            return this.cast_ItemByType(item)\r\n        } else {\r\n            return item;\r\n        }\r\n\r\n    }\r\n\r\n    initialize_Item(item: any, preassigned: boolean = false, newId: boolean = true, resetPropertyRunes: boolean = false) {\r\n        //Every new item has to be re-assigned its class and iterate over all its objects to reassign them as well.\r\n        //Typescript does not seem to have the option to keep object properties' classes when assigning.\r\n        let newItem: any;\r\n        //Set preassigned if you have already given the item a Class. Otherwise it will be determined by the item's type.\r\n        if (preassigned) {\r\n            newItem = Object.assign(new item.constructor(), JSON.parse(JSON.stringify(item)));\r\n        } else {\r\n            newItem = this.cast_ItemByType(JSON.parse(JSON.stringify(item)));\r\n        }\r\n        if (newId) {\r\n            newItem.id = uuidv1();\r\n            newItem.activities?.forEach((activity: ItemActivity) => {\r\n                activity.castSpells?.forEach(cast => {\r\n                    if (cast.spellGain) {\r\n                        cast.spellGain.id = uuidv1();\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        newItem = this.savegameService.reassign(newItem, \"\", this);\r\n        if (newItem.gainActivities) {\r\n            (newItem as Equipment).gainActivities.forEach((gain: ActivityGain) => {\r\n                gain.source = newItem.id;\r\n            });\r\n        }\r\n        if (newItem.activities) {\r\n            (newItem as Equipment).activities.forEach((activity: ItemActivity) => {\r\n                activity.source = newItem.id;\r\n            });\r\n        }\r\n        if (newItem.storedSpells) {\r\n            (newItem as Item).storedSpells.forEach((choice: SpellChoice, index) => {\r\n                choice.source = newItem.id;\r\n                choice.id = \"0-Spell-\" + newItem.id + index;\r\n            });\r\n        }\r\n        //For items (oils) that apply the same effect as a rune, load the rune into the item here.\r\n        if (newItem.runeEffect && newItem.runeEffect.name) {\r\n            let rune = this.cleanItems.weaponrunes.find(rune => rune.name == newItem.runeEffect.name);\r\n            if (rune) {\r\n                newItem.runeEffect = Object.assign(new WeaponRune(), JSON.parse(JSON.stringify(rune)));\r\n                this.savegameService.reassign(newItem.runeEffect, \"\", this);\r\n                newItem.runeEffect.activities.forEach((activity: ItemActivity) => { activity.name += \" (\" + newItem.name + \")\" });\r\n            }\r\n        }\r\n        //For base items that come with property Runes with name only, load the rune into the item here.\r\n        if (resetPropertyRunes && (newItem.type == \"weapons\" || newItem.moddable == \"weapon\") && newItem.propertyRunes?.length) {\r\n            let newRunes: WeaponRune[] = [];\r\n            newItem.propertyRunes.forEach((rune: WeaponRune) => {\r\n                let libraryItem = this.cleanItems.weaponrunes.find(newrune => newrune.name == rune.name)\r\n                if (libraryItem) {\r\n                    newRunes.push(this.savegameService.merge(libraryItem, rune))\r\n                }\r\n            })\r\n            newItem.propertyRunes = newRunes;\r\n        }\r\n        if (resetPropertyRunes && (newItem.type == \"armors\" || newItem.moddable == \"armor\") && newItem.propertyRunes?.length) {\r\n            let newRunes: ArmorRune[] = [];\r\n            newItem.propertyRunes.forEach((rune: ArmorRune) => {\r\n                let libraryItem = this.cleanItems.armorrunes.find(newrune => newrune.name == rune.name)\r\n                if (libraryItem) {\r\n                    newRunes.push(this.savegameService.merge(libraryItem, rune))\r\n                }\r\n            })\r\n            newItem.propertyRunes = newRunes;\r\n        }\r\n        //Disable any active hint effects when loading an item.\r\n        (item as Equipment).hints?.forEach(hint => {\r\n            hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n        })\r\n\r\n        return newItem;\r\n    }\r\n\r\n    move_InventoryItem(creature: Character | AnimalCompanion, item: Item, targetInventory: ItemCollection, inventory: ItemCollection, characterService: CharacterService) {\r\n        if (targetInventory && targetInventory != inventory) {\r\n            let fromCreature = characterService.get_Creatures().find(creature => creature.inventories.find(inv => inv === inventory)) as Character | AnimalCompanion;\r\n            let toCreature = characterService.get_Creatures().find(creature => creature.inventories.find(inv => inv === targetInventory)) as Character | AnimalCompanion;\r\n            if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length && fromCreature == toCreature) {\r\n                //If this item is a container and is moved between inventories of the same creature, you don't need to drop it explicitly.\r\n                //Just push it to the new inventory and remove it from the old, but unequip it either way.\r\n                let movedItem = JSON.parse(JSON.stringify(item));\r\n                movedItem = characterService.reassign(movedItem);\r\n                targetInventory[item.type].push(movedItem);\r\n                inventory[item.type] = inventory[item.type].filter((inventoryItem: Item) => inventoryItem !== item)\r\n                if ((movedItem as Equipment).equipped) {\r\n                    characterService.onEquip(creature, inventory, movedItem as Equipment, false)\r\n                }\r\n                if ((movedItem as Equipment).invested) {\r\n                    characterService.on_Invest(creature, inventory, movedItem as Equipment, false)\r\n                }\r\n            } else {\r\n                let movedItem = JSON.parse(JSON.stringify(item));\r\n                let movedInventories: ItemCollection[]\r\n                //If this item is a container and is moved between creatures, the attached inventories need to be moved as well.\r\n                //Because we lose the inventory when we drop the item, but automatically gain one when we grant the item to the other creature,\r\n                // we need to first save the inventory, then recreate it and remove the new ones after moving the item.\r\n                //Here, we save the inventories and take care of any containers within the container.\r\n                if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                    //First, move all inventory items within this inventory item to the same target. They get \r\n                    fromCreature.inventories.filter(inv => inv.itemId == item.id).forEach(inv => {\r\n                        inv.allItems().filter(invItem => (invItem as Equipment).gainInventory && (invItem as Equipment).gainInventory.length).forEach(invItem => {\r\n                            this.move_InventoryItem(creature, invItem, targetInventory, inv, characterService);\r\n                        });\r\n                    });\r\n                    movedInventories = fromCreature.inventories.filter(inv => inv.itemId == item.id).map(inv => JSON.parse(JSON.stringify(inv)))\r\n                    movedInventories = movedInventories.map(inv => characterService.reassign(inv));\r\n                }\r\n                let newItem = characterService.grant_InventoryItem(toCreature, targetInventory, movedItem, false, false, false, movedItem.amount, false);\r\n                characterService.drop_InventoryItem(fromCreature, inventory, item, false, true, true, item.amount);\r\n                //Below, we reinsert the saved inventories and remove any newly created ones.\r\n                if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                    toCreature.inventories = toCreature.inventories.filter(inv => inv.itemId != newItem.id);\r\n                    let newLength = toCreature.inventories.push(...movedInventories);\r\n                    toCreature.inventories.slice(newLength - movedInventories.length, newLength).forEach(inv => {\r\n                        inv.itemId = newItem.id;\r\n                    })\r\n                }\r\n                if ((newItem as Equipment).equipped) {\r\n                    characterService.onEquip(creature, targetInventory, newItem as Equipment, false)\r\n                }\r\n                if ((newItem as Equipment).invested) {\r\n                    characterService.on_Invest(creature, targetInventory, newItem as Equipment, false)\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    process_Consumable(creature: Creature, characterService: CharacterService, itemsService: ItemsService, conditionsService: ConditionsService, spellsService: SpellsService, item: Consumable) {\r\n\r\n        //One time effects\r\n        if (item.onceEffects) {\r\n            item.onceEffects.forEach(effect => {\r\n                characterService.process_OnceEffect(creature, effect);\r\n            })\r\n        }\r\n\r\n        //Apply conditions\r\n        if (item[\"gainConditions\"]) {\r\n            item[\"gainConditions\"].forEach(gain => {\r\n                let newConditionGain = Object.assign(new ConditionGain(), gain);\r\n                characterService.add_Condition(creature, newConditionGain, false);\r\n            });\r\n        }\r\n\r\n        //Cast Spells\r\n        if (item[\"castSpells\"]) {\r\n            item[\"castSpells\"].forEach((cast: SpellCast) => {\r\n                cast.spellGain.duration = cast.duration;\r\n                let librarySpell = spellsService.get_Spells(cast.name)[0];\r\n                if (librarySpell) {\r\n                    spellsService.process_Spell(creature, creature.type, characterService, itemsService, conditionsService, null, cast.spellGain, librarySpell, cast.level, true, true, false);\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        //Gain Items on Activation\r\n        if (item.gainItems.length && creature.type != \"Familiar\") {\r\n            item.gainItems.forEach(gainItem => {\r\n                let newItem: Item = itemsService.get_CleanItems()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n                if (newItem) {\r\n                    let grantedItem = characterService.grant_InventoryItem(creature as Character | AnimalCompanion, creature.inventories[0], newItem, false, false, true);\r\n                    gainItem.id = grantedItem.id;\r\n                    grantedItem.expiration = gainItem.expiration;\r\n                    if (grantedItem.get_Name) {\r\n                        grantedItem.grantedBy = \"(Granted by \" + item.name + \")\";\r\n                    };\r\n                } else {\r\n                    console.log(\"Failed granting \" + gainItem.type + \" \" + gainItem.name + \" - item not found.\")\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    rest(creature: Character | AnimalCompanion, characterService: CharacterService) {\r\n        creature.inventories.forEach(inv => {\r\n            inv.allItems().filter(item => item.expiration == -2).forEach(item => {\r\n                item.name = \"DELETE\";\r\n            })\r\n            //Removing an item brings the index out of order, and some items may be skipped. We just keep deleting items named DELETE until none are left.\r\n            while (inv.allItems().some(item => item.name == \"DELETE\")) {\r\n                inv.allItems().filter(item => item.name == \"DELETE\").forEach(item => {\r\n                    characterService.drop_InventoryItem(creature, inv, item, false, true, true, item.amount);\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n        })\r\n        if (creature.type == \"Character\") {\r\n            let character = creature as Character;\r\n            //If you have Scroll Savant, get a copy of each prepared scroll that lasts until the next rest.\r\n            if (character.get_FeatsTaken(1, character.level, \"Scroll Savant\").length) {\r\n                character.class.spellCasting.filter(casting => casting.scrollSavant.length).forEach(casting => {\r\n                    casting.scrollSavant.forEach(scroll => {\r\n                        characterService.grant_InventoryItem(character, character.inventories[0], scroll, false, false, false);\r\n                    });\r\n                });\r\n            }\r\n\r\n            //If you have Battleforger, all your battleforged items are reset.\r\n            if (character.get_FeatsTaken(1, character.level, \"Battleforger\").length) {\r\n                let attacksChanged: boolean = false;\r\n                let defenseChanged: boolean = false;\r\n                character.inventories.forEach(inv => {\r\n                    inv.weapons.forEach(weapon => {\r\n                        if (weapon.battleforged) {\r\n                            attacksChanged = true;\r\n                        }\r\n                        weapon.battleforged = false;\r\n                    })\r\n                    inv.armors.forEach(armor => {\r\n                        if (armor.battleforged) {\r\n                            defenseChanged = true;\r\n                        }\r\n                        armor.battleforged = false;\r\n                    })\r\n                    inv.wornitems.forEach(wornitem => {\r\n                        if (wornitem.battleforged) {\r\n                            attacksChanged = true;\r\n                        }\r\n                        wornitem.battleforged = false;\r\n                    })\r\n                })\r\n                if (attacksChanged) {\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                }\r\n                if (defenseChanged) {\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                }\r\n            }\r\n\r\n            //For feats that grant you an item on rest, grant these here and set an expiration until the next rest.\r\n            characterService.featsService.get_All(creature.customFeats)\r\n                .filter(feat => feat.gainItems.find(gain => gain.on == \"rest\") && feat.have(creature, characterService, creature.level))\r\n                .forEach(feat => {\r\n                    feat.gainItems.filter(gain => gain.on == \"rest\").forEach(gainItem => {\r\n                        let newItem: Item = this.get_CleanItemsOfType(gainItem.type, gainItem.name)[0];\r\n                        let grantedItem: Item;\r\n                        if (newItem && newItem.can_Stack() && (gainItem.amount + (gainItem.amountPerLevel * creature.level))) {\r\n                            grantedItem = characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, true, false, false, (gainItem.amount + (gainItem.amountPerLevel * creature.level)), undefined, -2);\r\n                        } else if (newItem) {\r\n                            grantedItem = characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, true, false, true, 1, undefined, -2);\r\n                        }\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    refocus(creature: Character | AnimalCompanion, characterService: CharacterService) {\r\n        creature.inventories.forEach(inv => {\r\n            inv.allItems().filter(item => item.expiration == -3).forEach(item => {\r\n                item.name = \"DELETE\";\r\n            })\r\n            //Removing an item brings the index out of order, and some items may be skipped. We just keep deleting items named DELETE until none are left.\r\n            while (inv.allItems().some(item => item.name == \"DELETE\")) {\r\n                inv.allItems().filter(item => item.name == \"DELETE\").forEach(item => {\r\n                    characterService.drop_InventoryItem(creature, inv, item, false, true, true, item.amount);\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n        })\r\n    }\r\n\r\n    tick_Items(creature: Character | AnimalCompanion, characterService: CharacterService, turns: number) {\r\n        creature.inventories.forEach(inv => {\r\n            //Tick down and remove all items that expire.\r\n            inv.allItems().filter(item => item.expiration > 0).forEach(item => {\r\n                item.expiration -= turns;\r\n                if (item.expiration <= 0) {\r\n                    item.name = \"DELETE\";\r\n                    if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                        //If a temporary container is destroyed, return all contained items to the main inventory.\r\n                        creature.inventories.filter(inv => inv.itemId == item.id).forEach(inv => {\r\n                            inv.allItems().forEach(invItem => {\r\n                                this.move_InventoryItem(creature, invItem, creature.inventories[0], inv, characterService);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n                if (item.type == \"weapons\" && (item as Equipment).equipped) {\r\n                    characterService.set_ToChange(creature.type, \"attacks\");\r\n                }\r\n                if ([\"armors\", \"shields\"].includes(item.type) && (item as Equipment).equipped) {\r\n                    characterService.set_ToChange(creature.type, \"defense\");\r\n                }\r\n            })\r\n            inv.wands.filter(wand => wand.cooldown > 0).forEach(wand => {\r\n                wand.cooldown = Math.max(wand.cooldown - turns, 0);\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            })\r\n            //Removing an item brings the index out of order, and some items may be skipped. We just keep deleting items named DELETE until none are left.\r\n            while (inv.allItems().some(item => item.name == \"DELETE\")) {\r\n                inv.allItems().filter(item => item.name == \"DELETE\").forEach(item => {\r\n                    characterService.drop_InventoryItem(creature, inv, item, false, true, true, item.amount);\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n            inv.allItems().filter(item => item.oilsApplied && item.oilsApplied.length).forEach(item => {\r\n                item.oilsApplied.filter(oil => oil.duration != -1).forEach(oil => {\r\n                    oil.duration -= turns;\r\n                    if (oil.duration <= 0) {\r\n                        oil.name = \"DELETE\";\r\n                    }\r\n                    characterService.set_ToChange(creature.type, \"inventory\");\r\n                    if (item.type == \"weapons\" && (item as Equipment).equipped) {\r\n                        characterService.set_ToChange(creature.type, \"attacks\");\r\n                    }\r\n                    if ([\"armors\", \"shields\"].includes(item.type) && (item as Equipment).equipped) {\r\n                        characterService.set_ToChange(creature.type, \"defense\");\r\n                    }\r\n                })\r\n                item.oilsApplied = item.oilsApplied.filter(oil => oil.name != \"DELETE\");\r\n            });\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (\r\n            this.loading_itemProperties ||\r\n            this.loading_weaponMaterials ||\r\n            this.loading_specializations ||\r\n            this.loading_adventuringgear ||\r\n            this.loading_alchemicalbombs ||\r\n            this.loading_alchemicalelixirs ||\r\n            this.loading_alchemicaltools ||\r\n            this.loading_alchemicalpoisons ||\r\n            this.loading_ammunition ||\r\n            this.loading_armorrunes ||\r\n            this.loading_armors ||\r\n            this.loading_helditems ||\r\n            this.loading_oils ||\r\n            this.loading_otherconsumables ||\r\n            this.loading_otherconsumablesbombs ||\r\n            this.loading_potions ||\r\n            this.loading_scrolls ||\r\n            this.loading_shields ||\r\n            this.loading_snares ||\r\n            this.loading_talismans ||\r\n            this.loading_wands ||\r\n            this.loading_weaponrunes ||\r\n            this.loading_weapons ||\r\n            this.loading_wornitems\r\n        );\r\n    }\r\n\r\n    initialize(reset: boolean = true) {\r\n        if (!this.items || reset) {\r\n            this.loading_itemProperties = true;\r\n            this.load(json_itemproperties, \"itemProperties\", ItemProperty, \"meta\");\r\n            this.loading_itemProperties = false;\r\n\r\n            this.loading_weaponMaterials = true;\r\n            this.load(json_weaponmaterials, \"weaponMaterials\", WeaponMaterial, \"meta\");\r\n            this.loading_weaponMaterials = false;\r\n\r\n            this.loading_specializations = true;\r\n            this.load(json_specializations, \"specializations\", Specialization, \"meta\");\r\n            this.loading_specializations = false;\r\n\r\n            this.items = new ItemCollection();\r\n            this.cleanItems = new ItemCollection();\r\n            this.craftingItems = new ItemCollection();\r\n\r\n            this.loading_weapons = true;\r\n            this.load(json_weapons, \"weapons\", Weapon, \"item\");\r\n            this.loading_weapons = false;\r\n\r\n            this.loading_armors = true;\r\n            this.load(json_armors, \"armors\", Armor, \"item\");\r\n            this.loading_armors = false;\r\n\r\n            this.loading_shields = true;\r\n            this.load(json_shields, \"shields\", Shield, \"item\");\r\n            this.loading_shields = false;\r\n\r\n            this.loading_wornitems = true;\r\n            this.load(json_wornitems, \"wornitems\", WornItem, \"item\");\r\n            this.loading_wornitems = false;\r\n\r\n            this.loading_helditems = true;\r\n            this.load(json_helditems, \"helditems\", HeldItem, \"item\");\r\n            this.loading_helditems = false;\r\n\r\n            this.loading_ammunition = true;\r\n            this.load(json_ammunition, \"ammunition\", Ammunition, \"item\");\r\n            this.loading_ammunition = false;\r\n\r\n            this.loading_alchemicalelixirs = true;\r\n            this.load(json_alchemicalelixirs, \"alchemicalelixirs\", AlchemicalElixir, \"item\");\r\n            this.loading_alchemicalelixirs = false;\r\n\r\n            this.loading_potions = true;\r\n            this.load(json_potions, \"potions\", Potion, \"item\");\r\n            this.loading_potions = false;\r\n\r\n            this.loading_otherconsumables = true;\r\n            this.load(json_otherconsumables, \"otherconsumables\", OtherConsumable, \"item\");\r\n            this.loading_otherconsumables = false;\r\n\r\n            this.loading_otherconsumablesbombs = true;\r\n            this.load(json_otherconsumablesbombs, \"otherconsumablesbombs\", OtherConsumableBomb, \"item\");\r\n            this.loading_otherconsumablesbombs = false;\r\n\r\n            this.loading_adventuringgear = true;\r\n            this.load(json_adventuringgear, \"adventuringgear\", AdventuringGear, \"item\");\r\n            this.loading_adventuringgear = false;\r\n\r\n            this.loading_armorrunes = true;\r\n            this.load(json_armorrunes, \"armorrunes\", ArmorRune, \"item\");\r\n            this.loading_armorrunes = false;\r\n\r\n            this.loading_weaponrunes = true;\r\n            this.load(json_weaponrunes, \"weaponrunes\", WeaponRune, \"item\");\r\n            this.loading_weaponrunes = false;\r\n\r\n            //Oils need to load after WeaponRunes, because they have to copy some of them.\r\n            this.loading_oils = true;\r\n            this.load(json_oils, \"oils\", Oil, \"item\");\r\n            this.loading_oils = false;\r\n\r\n            this.loading_scrolls = true;\r\n            this.load(json_scrolls, \"scrolls\", Scroll, \"item\");\r\n            this.loading_scrolls = false;\r\n\r\n            this.loading_talismans = true;\r\n            this.load(json_talismans, \"talismans\", Talisman, \"item\");\r\n            this.loading_talismans = false;\r\n\r\n            this.loading_alchemicalbombs = true;\r\n            this.load(json_alchemicalbombs, \"alchemicalbombs\", AlchemicalBomb, \"item\");\r\n            this.loading_alchemicalbombs = false;\r\n\r\n            this.loading_alchemicaltools = true;\r\n            this.load(json_alchemicaltools, \"alchemicaltools\", AlchemicalTool, \"item\");\r\n            this.loading_alchemicaltools = false;\r\n\r\n            this.loading_snares = true;\r\n            this.load(json_snares, \"snares\", Snare, \"item\");\r\n            this.loading_snares = false;\r\n\r\n            this.loading_alchemicalpoisons = true;\r\n            this.load(json_alchemicalpoisons, \"alchemicalpoisons\", AlchemicalPoison, \"item\");\r\n            this.loading_alchemicalpoisons = false;\r\n\r\n            this.loading_wands = true;\r\n            this.load(json_wands, \"wands\", Wand, \"item\");\r\n            this.loading_wands = false;\r\n\r\n            /*\r\n            this.loading_REPLACE0 = true;\r\n            this.load(json_REPLACE0, \"REPLACE0\", REPLACE1, \"item\");\r\n            this.loading_REPLACE0 = false;\r\n            */\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.specializations.forEach(spec => {\r\n                spec.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load(source, target: string, type, category: \"item\" | \"meta\") {\r\n        switch (category) {\r\n            case \"item\":\r\n                this.items[target] = [];\r\n                this.cleanItems[target] = [];\r\n                this.craftingItems[target] = [];\r\n                Object.keys(source).forEach(key => {\r\n                    this.items[target].push(...source[key].map(obj => this.initialize_Item(Object.assign(new type(), obj), true, false, true)));\r\n                    this.cleanItems[target].push(...source[key].map(obj => this.initialize_Item(Object.assign(new type(), obj), true, false, true)));\r\n                    this.craftingItems[target].push(...source[key].map(obj => this.initialize_Item(Object.assign(new type(), obj), true, false, true)));\r\n                });\r\n\r\n                let duplicates: string[] = Array.from(new Set(\r\n                    this.items[target]\r\n                        .filter((item: Item) => \r\n                        this.items[target].filter((otherItem: Item) =>\r\n                                otherItem.id == item.id\r\n                            ).length > 1\r\n                        ).map((item: Item) => item.id)\r\n                    ));\r\n                duplicates.forEach((itemID) => {\r\n                    let highestPriority = Math.max(\r\n                        ...this.items[target]\r\n                            .filter((item: Item) => item.id == itemID)\r\n                            .map((item: Item) => item.overridePriority)\r\n                        );\r\n                    let highestItem = this.items[target].find((item: Item) => item.id == itemID && item.overridePriority == highestPriority);\r\n                    this.items[target] = this.items[target].filter((item: Item) => !(item.id == itemID && item !== highestItem));\r\n                    let highestCleanItem = this.cleanItems[target].find((item: Item) => item.id == itemID && item.overridePriority == highestPriority);\r\n                    this.cleanItems[target] = this.cleanItems[target].filter((item: Item) => !(item.id == itemID && item !== highestCleanItem));\r\n                    let highestCraftingItem = this.craftingItems[target].find((item: Item) => item.id == itemID && item.overridePriority == highestPriority);\r\n                    this.craftingItems[target] = this.craftingItems[target].filter((item: Item) => !(item.id == itemID && item !== highestCraftingItem));\r\n                })\r\n                break;\r\n            case \"meta\":\r\n                this[target] = [];\r\n                Object.keys(source).forEach(key => {\r\n                    this[target].push(...source[key].map(obj => Object.assign(new type(), obj)));\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n}","import { SkillIncrease } from './SkillIncrease';\r\n\r\nexport class SkillChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    public filter: string[] = [];\r\n    public id: string = \"\";\r\n    public increases: SkillIncrease[] = [];\r\n    //If insertLevel is set, this SkillChoice is placed at the designated class level when granted by a feat.\r\n    // I.e. if a feat contains a SkillChoice with insertLevel = 5, the choice is added to level 5 regardless of when the feat was taken.\r\n    public insertLevel: number = 0;\r\n    //If insertClass is set, this SkillChoice is only granted by a feat if the character class name matches this name.\r\n    // This is especially useful for class choices (hunter's edge, rogue racket, bloodline etc.) that don't give certain benefits when multiclassing.\r\n    public insertClass: string = \"\";\r\n    //minRank: you may only increase skills that already have at least this level.\r\n    // If a skill increase doesn't come from at least one choice with minRank == 0, it isn't counted at all.\r\n    // This allows to upgrade, but not learn skills (like spell DCs for traditions you haven't chosen).\r\n    public minRank: number = 0;\r\n    //maxRank: the highest rank you are allowed to achieve with this choice.\r\n    //This means that only skills are allowed which currently have maxRank-2 !\r\n    public maxRank: number = 8;\r\n    //If showOnSheet is set, this choice is intended to be made on the character sheet instead of while building the character.\r\n    //  This is relevant for feats like Ancestral Longevity.\r\n    public showOnSheet: boolean = false;\r\n    public source: string = \"\";\r\n    public type: string = \"\";\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Activity } from '../Activity';\r\nimport { TraitsService } from '../traits.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { TimeService } from '../time.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { ActivityGain } from '../ActivityGain';\r\nimport { ItemActivity } from '../ItemActivity';\r\nimport { Feat } from '../Feat';\r\nimport { Character } from '../Character';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { Condition } from '../Condition';\r\nimport { SpellCast } from '../SpellCast';\r\nimport { Creature } from '../Creature';\r\nimport { EffectsService } from '../effects.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-activity',\r\n    templateUrl: './activity.component.html',\r\n    styleUrls: ['./activity.component.css']\r\n})\r\nexport class ActivityComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    activity: Activity | ItemActivity;\r\n    @Input()\r\n    gain: ActivityGain | ItemActivity;\r\n    @Input()\r\n    allowActivate: boolean = false;\r\n    @Input()\r\n    isSubItem: boolean = false;\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private spellsService: SpellsService,\r\n        private activitiesService: ActivitiesService,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private conditionsService: ConditionsService,\r\n        private effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature(creature: string = this.creature) {\r\n        return this.characterService.get_Creature(creature) as Creature;\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_ActivationTraits(activity: Activity) {\r\n        switch (activity.activationType) {\r\n            case \"Command\":\r\n                return [\"Auditory\", \"Concentrate\"];\r\n            case \"Envision\":\r\n                return [\"Concentrate\"];\r\n            case \"Interact\":\r\n                return [\"Manipulate\"];\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    get_Resonant() {\r\n        if ((this.activity as ItemActivity).resonant) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get_Duration(duration: number, includeTurnState: boolean = true, inASentence: boolean = false) {\r\n        return this.timeService.get_Duration(duration, includeTurnState, inASentence);\r\n    }\r\n\r\n    on_Activate(gain: ActivityGain | ItemActivity, activity: Activity | ItemActivity, activated: boolean, target: string) {\r\n        this.activitiesService.activate_Activity(this.get_Creature(), target, this.characterService, this.conditionsService, this.itemsService, this.spellsService, gain, activity, activated);\r\n    }\r\n\r\n    on_ActivateFuseStance(activated: boolean) {\r\n        this.gain.active = activated;\r\n        this.get_FusedStances().forEach(gain => {\r\n            let activity = (gain[\"can_Activate\"] ? gain as ItemActivity : this.get_Activities(gain.name)[0])\r\n            if (activated != gain.active) {\r\n                this.activitiesService.activate_Activity(this.get_Creature(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, gain, activity, activated);\r\n            }\r\n        })\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_FeatsShowingOn(activityName: string) {\r\n        if (activityName) {\r\n            return this.characterService.get_FeatsShowingOn(activityName)\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });;\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n\r\n    get_ConditionsShowingOn(activityName: string) {\r\n        if (activityName) {\r\n            return this.characterService.get_ConditionsShowingOn(this.get_Creature(), activityName)\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });;\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    get_ActivityGainsShowingOn(objectName: string) {\r\n        if (objectName) {\r\n            return this.characterService.get_OwnedActivities(this.get_Creature())\r\n                .filter((gain: ItemActivity | ActivityGain) =>\r\n                    (gain._className == \"ItemActivity\" ? [gain as ItemActivity] : this.get_Activities(gain.name))\r\n                        .find((activity: ItemActivity | Activity) =>\r\n                            activity.hints\r\n                                .find(hint =>\r\n                                    hint.showon.split(\",\")\r\n                                        .find(showon =>\r\n                                            showon.trim().toLowerCase() == objectName.toLowerCase()\r\n                                        )\r\n                                )\r\n                        )\r\n                )\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    get_ActivitiesFromGain(gain: ActivityGain | ItemActivity) {\r\n        return gain.constructor == ItemActivity ? [gain] : this.get_Activities(gain.name)\r\n    }\r\n\r\n    get_FuseStanceFeat() {\r\n        if (this.get_Creature().type == \"Character\") {\r\n            let character = this.get_Creature() as Character;\r\n            if (character.get_FeatsTaken(0, character.level, \"Fuse Stance\").length) {\r\n                return character.customFeats.filter(feat => feat.name == \"Fuse Stance\")[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get_FusedStances() {\r\n        let feat: Feat = this.get_FuseStanceFeat();\r\n        if (feat) {\r\n            return this.characterService.get_OwnedActivities(this.get_Creature())\r\n                .filter((gain: ItemActivity | ActivityGain) => feat.data[\"stances\"].includes(gain.name))\r\n        }\r\n    }\r\n\r\n    get_Activities(name: string) {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_ExternallyDisabled() {\r\n        return this.effectsService.get_EffectsOnThis(this.get_Creature(), this.activity.name + \" Disabled\").length;\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    get_SpellTarget() {\r\n        if (this.activity.castSpells.length) {\r\n            //The SpellCast may limit the spell targets. If not, get the available targets from the Spell, or return \"\" for non-allies.\r\n            return this.activity.castSpells[0].target || this.get_Spells(this.activity.castSpells[0].name)[0]?.target || \"\";\r\n        } else {\r\n            return \"no spell\";\r\n        }\r\n    }\r\n\r\n    get_SpellCasts() {\r\n        if (this.gain) {\r\n            while (this.gain.spellEffectChoices.length < this.activity.castSpells.length) {\r\n                this.gain.spellEffectChoices.push([]);\r\n            }\r\n        }\r\n        return this.activity.castSpells;\r\n    }\r\n\r\n    get_ActivityConditions() {\r\n        //For all conditions that are included with this activity and has choices unlocked, create an effectChoice on the gain and set it to the default choice.\r\n        let conditions: Condition[] = [];\r\n        if (this.gain && !this.activity.hideChoices) {\r\n            this.activity.gainConditions\r\n                .map(conditionGain => { return { gain: conditionGain, condition: this.conditionsService.get_Conditions(conditionGain.name)[0] } })\r\n                .filter(conditionSet => conditionSet.condition?.get_Choices(this.characterService, true, conditionSet.gain.heightened).length > 1)\r\n                .map(conditionSet => conditionSet.condition)\r\n                .forEach((condition, index) => {\r\n                    //Add the condition to the list of conditions that need to display a choice,\r\n                    // then if the gain doesn't have a choice at that index or the choice isn't among the condition's choices, insert or replace that choice on the gain.\r\n                    conditions.push(condition);\r\n                    while (!this.gain.effectChoices.length || this.gain.effectChoices.length < index - 1) {\r\n                        this.gain.effectChoices.push(condition.choice);\r\n                    }\r\n                    if (!condition?.$choices?.includes(this.gain.effectChoices[index])) {\r\n                        this.gain.effectChoices[index] = condition.choice;\r\n                    }\r\n                })\r\n        }\r\n        return conditions;\r\n    }\r\n\r\n    get_SpellConditions(spellCast: SpellCast, spellCastIndex: number) {\r\n        //For all conditions that are included with this spell on this level and has choices unlocked, create an effectChoice on the gain and set it to the default choice.\r\n        let conditions: Condition[] = [];\r\n        if (this.gain) {\r\n            let spell = this.spellsService.get_Spells(spellCast.name)[0];\r\n            if (spell?.gainConditions.length) {\r\n                spell.get_HeightenedConditions(spellCast.level)\r\n                    .filter(conditionGain => !conditionGain.hideChoices)\r\n                    .map(conditionGain => this.conditionsService.get_Conditions(conditionGain.name)[0])\r\n                    .filter(condition => condition?.get_Choices(this.characterService, true)?.length > 1)\r\n                    .forEach((condition, index) => {\r\n                        //Add the condition to the list of conditions that need to display a choice,\r\n                        // then if the gain doesn't have a choice at that index or the choice isn't among the condition's choices, insert or replace that choice on the gain.\r\n                        conditions.push(condition);\r\n                        while (!this.gain.spellEffectChoices[spellCastIndex].length || this.gain.spellEffectChoices[spellCastIndex].length < index - 1) {\r\n                            this.gain.spellEffectChoices[spellCastIndex].push(condition.choice);\r\n                        }\r\n                        if (!condition.$choices.includes(this.gain.spellEffectChoices[spellCastIndex][index])) {\r\n                            this.gain.spellEffectChoices[spellCastIndex][index] = condition.choice;\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n        return conditions;\r\n    }\r\n\r\n    on_EffectChoiceChange() {\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.set_ToChange(this.creature, \"activities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.activity.displayOnly) {\r\n            this.allowActivate = false;\r\n        }\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let maxCharges of [activity.maxCharges(get_Creature(), characterService)]\">\r\n    <ng-container *ngFor=\"let cooldown of [activity.get_Cooldown(get_Creature(), characterService)]\">\r\n        <div class=\"newrow\" *ngIf=\"allowActivate && !get_ExternallyDisabled()\">\r\n            <ng-container\r\n                *ngIf=\"gain.name != 'Fused Stance' && activity.can_Activate() && (gain.activeCooldown ? (maxCharges > gain.chargesUsed) : true)\">\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && ['self', 'ally'].includes(get_SpellTarget())\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, creature)\">\r\n                        Activate {{get_SpellTarget() == 'ally' ? \"(Cast spell on yourself)\" : \"\"}} {{maxCharges ? \"(\" +\r\n                        (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && ['companion', 'ally'].includes(get_SpellTarget()) && get_CompanionAvailable()\">\r\n                    <button class=\"newrow center-aligned\"\r\n                        (click)=\"on_Activate(gain, activity, true, (creature=='Character' ? 'Companion' : 'Character'))\">\r\n                        Activate (Cast spell on {{creature == \"Character\" ? \"your animal companion\" : \"your master\"}})\r\n                        {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && ['companion', 'ally'].includes(get_SpellTarget()) && get_FamiliarAvailable()\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, 'Familiar')\">\r\n                        Activate (Cast spell on your familiar) {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \"\r\n                        of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && get_SpellTarget() == 'ally'\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, '')\">\r\n                        Activate (Cast spell on other targets) {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \"\r\n                        of \" + maxCharges + \" charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && get_SpellTarget() == ''\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, '')\">\r\n                        Activate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active && get_SpellTarget() == 'no spell'\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, true, creature)\">\r\n                        Activate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n        <ng-container *ngIf=\"allowActivate\">\r\n            <div class=\"newrow\"\r\n                [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                *ngIf=\"gain.name != 'Fused Stance' && activity.can_Activate() && gain.active\">\r\n                <button class=\"newrow center-aligned\" (click)=\"on_Activate(gain, activity, false, creature)\">\r\n                    {{gain.duration==1 ? \"Done (instant effect)\" : \"\" }} {{gain.duration !=1 ? (activity.sustained\r\n                    ? \"Stop Sustaining\" : \"Deactivate\" ) : \"\" }} {{(gain.duration && gain.duration !=1) ? \"(\" +\r\n                    get_Duration(gain.duration) + \" remaining)\" : \"\" }} {{maxCharges ? \"(\" + (maxCharges -\r\n                    gain.chargesUsed) + \" of \" + maxCharges + \" charges)\" : \"\" }} </button>\r\n            </div>\r\n            <ng-container\r\n                *ngIf=\"gain.name == 'Fused Stance' && (gain.activeCooldown ? (maxCharges > gain.chargesUsed) : true)\">\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"!gain.active\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_ActivateFuseStance(true)\"\r\n                        [disabled]=\"!get_FuseStanceFeat() || !get_FuseStanceFeat().data\">\r\n                        Activate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n                <div class=\"newrow\"\r\n                    [ngbTooltip]=\"gain.activeCooldown ? (maxCharges ? 'Recharged in: ' : 'Cooldown: ') + get_Duration(gain.activeCooldown, true, false) : ''\"\r\n                    *ngIf=\"gain.active\">\r\n                    <button class=\"newrow center-aligned\" (click)=\"on_ActivateFuseStance(false)\"\r\n                        [disabled]=\"!get_FuseStanceFeat() || !get_FuseStanceFeat().data\">\r\n                        Deactivate {{maxCharges ? \"(\" + (maxCharges - gain.chargesUsed) + \" of \" + maxCharges + \"\r\n                        charges)\" : \"\"}}\r\n                    </button>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!activity.can_Activate()\">\r\n                <button class=\"newrow center-aligned\"\r\n                    [ngbTooltip]=\"'The results of this activation cannot be applied automatically. Pressing this button has no effect.'\">\r\n                    <span>Activate <i class='bi-peace'></i></span>\r\n                </button>\r\n            </ng-container>\r\n            <div class=\"newrow\" *ngIf=\"get_Resonant() && !isSubItem\">\r\n                <strong>Slot this item into a Wayfinder to unlock its resonant power.</strong>\r\n            </div>\r\n            <div class=\"newrow\"\r\n                *ngIf=\"gain && (gain.activeCooldown ? (maxCharges == gain.chargesUsed) : false) && !gain.active\">\r\n                <button class=\"newrow center-aligned\" disabled>\r\n                    Cannot activate {{get_Duration(gain.activeCooldown, true, true)}}\r\n                </button>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"get_ExternallyDisabled()\">\r\n                <button class=\"newrow center-aligned\" disabled>\r\n                    Cannot activate (disabled by effect)\r\n                </button>\r\n            </div>\r\n        </ng-container>\r\n        <div class=\"newrow left-aligned\">\r\n            <cite class=\"trait\" *ngFor=\"let trait of activity.traits; trackBy:trackByIndex;\"\r\n                [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            <cite class=\"trait\" *ngFor=\"let trait of get_ActivationTraits(activity); trackBy:trackByIndex;\"\r\n                [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"activity.name\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        </div>\r\n        <div class=\"newrow left-aligned\"\r\n            *ngFor=\"let condition of get_ActivityConditions(); let conditionIndex = index; trackBy:trackByIndex\">\r\n            <div class=\"newrow list-item\" *ngIf=\"condition && condition.choices.length\">\r\n                <span>{{condition.name}} Effect selection:\r\n                    <select [(ngModel)]=\"gain.effectChoices[conditionIndex]\" (ngModelChange)=\"on_EffectChoiceChange()\">\r\n                        <option *ngFor=\"let choice of condition.$choices; trackBy:trackByIndex;\" [ngValue]=\"choice\">\r\n                            {{choice}}\r\n                        </option>\r\n                    </select>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item lower newrow problem\" *ngIf=\"activity.inputRequired\">\r\n            <strong>Player input required:</strong>\r\n            <div class=\"newrow left-aligned\">\r\n                <p *ngFor=\"let inputRequired of activity.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                    {{inputRequired}}\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned\"\r\n            *ngIf=\"activity.frequency || ((cooldown != activity.cooldown) && !activity.cooldownAfterEnd)\">\r\n            <span>\r\n                <strong>Frequency</strong>\r\n                <span *ngIf=\"cooldown == activity.cooldown\">&nbsp;{{activity.frequency}}</span>\r\n                <span class=\"absolute\" *ngIf=\"cooldown != activity.cooldown\">&nbsp;{{maxCharges ? maxCharges + \"\r\n                    times every \" : \"once every \"}}{{get_Duration(cooldown, false, false)}}</span>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"cooldown && activity.cooldownAfterEnd\">\r\n            <span>\r\n                <strong>Cooldown after use</strong>\r\n                <span [ngClass]=\"{'absolute':cooldown != activity.cooldown}\">&nbsp;{{get_Duration(cooldown, false,\r\n                    false)}}</span>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.cost\">\r\n            <span>\r\n                <strong>Cost</strong>\r\n                {{activity.cost}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.trigger\">\r\n            <span>\r\n                <strong>Trigger</strong>\r\n                {{activity.trigger}}\r\n            </span>\r\n        </div>\r\n        <ng-container *ngIf=\"allowActivate && gain?.data\">\r\n            <div class=\"newrow left-aligned\" *ngFor=\"let data of gain.data; trackBy:trackByIndex\">\r\n                <strong>{{data.name}}</strong>\r\n                <input class=\"newrow\" type=\"text\" [(ngModel)]=\"data.value\">\r\n            </div>\r\n        </ng-container>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.requirements\">\r\n            <span>\r\n                <strong>Requirements</strong>\r\n                {{activity.requirements}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngFor=\"let desc of activity.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n            <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.critsuccess\">\r\n            <span>\r\n                <strong>Critical Success</strong>\r\n                {{activity.critsuccess}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.success\">\r\n            <span>\r\n                <strong>Success</strong>\r\n                {{activity.success}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.failure\">\r\n            <span>\r\n                <strong>Failure</strong>\r\n                {{activity.failure}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.critfailure\">\r\n            <span>\r\n                <strong>Critical Failure</strong>\r\n                {{activity.critfailure}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"activity.specialdesc\">\r\n            <span>\r\n                <strong>Special</strong>\r\n                {{activity.specialdesc}}\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item left-aligned\"\r\n            *ngFor=\"let shownActivityName of activity.showActivities; trackBy:trackByIndex;\">\r\n            <div *ngFor=\"let shownActivity of get_Activities(shownActivityName); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader\">{{shownActivity.name}}\r\n                    <app-actionIcons [actionString]=\"shownActivity.actions\">\r\n                    </app-actionIcons> {{shownActivity.activationType.toString()}}\r\n                </header>\r\n                <app-activity [activity]=shownActivity [allowActivate]=\"false\"></app-activity>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item newrow left-aligned\"\r\n            *ngFor=\"let cast of get_SpellCasts(); let spellCastIndex = index; trackBy:trackByIndex;\">\r\n            <div *ngFor=\"let spell of get_Spells(cast.name); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader\">{{spell.name}}\r\n                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                    </app-actionIcons>{{spell.castType.toString()}}\r\n                </header>\r\n                <ng-container\r\n                    *ngFor=\"let condition of get_SpellConditions(cast, spellCastIndex); let conditionIndex = index; trackBy:trackByIndex\">\r\n                    <div class=\"newrow list-item\" *ngIf=\"condition && condition.choices.length\">\r\n                        <span>{{condition.name}} Effect selection:\r\n                            <select [(ngModel)]=\"gain.spellEffectChoices[spellCastIndex][conditionIndex]\"\r\n                                (ngModelChange)=\"on_EffectChoiceChange()\">\r\n                                <option *ngFor=\"let choice of condition.$choices; trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"choice\">\r\n                                    {{choice}}\r\n                                </option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                </ng-container>\r\n                <app-spell [spell]=spell [spellLevel]=\"(cast.level) ? cast.level : 0\"></app-spell>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item left-aligned\" *ngFor=\"let shownSpellSet of activity.showSpells; trackBy:trackByIndex;\">\r\n            <div *ngFor=\"let shownSpell of get_Spells(shownSpellSet.name); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader\">{{shownSpell.name}}\r\n                    <app-actionIcons [actionString]=\"shownSpell.actions\">\r\n                    </app-actionIcons> {{shownSpell.castType.toString()}}\r\n                </header>\r\n                <app-spell [spell]=shownSpell [spellLevel]=\"shownSpellSet.level || 0\"></app-spell>\r\n            </div>\r\n        </div>\r\n        <div class=\"list-item newrow left-aligned\"\r\n            *ngFor=\"let feat of get_FeatsShowingOn(activity.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader\">{{feat.name}}</header>\r\n            <div class=\"newrow left-aligned\">\r\n                <cite class=\"trait\" *ngFor=\"let trait of feat.traits; trackBy:trackByIndex;\"\r\n                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            </div>\r\n            <div class=\"newrow left-aligned\" *ngFor=\"let desc of feat.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned\"\r\n            *ngFor=\"let condition of get_ConditionsShowingOn(activity.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader\">{{condition.name}}</header>\r\n            <div class=\"newrow left-aligned\" *ngFor=\"let desc of condition.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngIf=\"allowActivate\">\r\n            <ng-container *ngFor=\"let related_gain of get_ActivityGainsShowingOn(activity.name); trackBy:trackByIndex;\">\r\n                <div class=\"list-item newrow left-aligned\"\r\n                    *ngFor=\"let related_activity of get_ActivitiesFromGain(related_gain); trackBy:trackByIndex;\">\r\n                    <header class=\"spellHeader\">{{related_activity.name}}\r\n                        <app-actionIcons [actionString]=\"related_activity.actions\">\r\n                        </app-actionIcons>{{(related_activity.activationType) ? related_activity.activationType :\r\n                        \"\"}}\r\n                    </header>\r\n                    <app-activity [creature]=\"creature\" [activity]=related_activity [gain]=related_gain\r\n                        [allowActivate]=true></app-activity>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"gain.name == 'Fused Stance'\">\r\n                <ng-container *ngFor=\"let gain of get_FusedStances(); trackBy:trackByIndex;\">\r\n                    <div class=\"list-item newrow left-aligned\"\r\n                        *ngFor=\"let related_activity of get_ActivitiesFromGain(gain); trackBy:trackByIndex;\">\r\n                        <header class=\"spellHeader\">{{related_activity.name}}\r\n                            <app-actionIcons [actionString]=\"related_activity.actions\">\r\n                            </app-actionIcons>{{(related_activity.activationType) ? related_activity.activationType\r\n                            : \"\"}}\r\n                        </header>\r\n                        <app-activity [creature]=\"creature\" [activity]=related_activity [gain]=gain\r\n                            [allowActivate]=false>\r\n                        </app-activity>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Injectable } from '@angular/core';\r\nimport { Character } from './Character';\r\nimport { Ancestry } from './Ancestry';\r\nimport { Class } from './Class';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { ItemGain } from './ItemGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { Level } from './Level';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { EffectGain } from './EffectGain';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\nimport { Skill } from './Skill';\r\nimport { WornItem } from './WornItem';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { AlchemicalElixir } from './AlchemicalElixir';\r\nimport { Armor } from './Armor';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Background } from './Background';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Consumable } from './Consumable';\r\nimport { Feat } from './Feat';\r\nimport { FormulaChoice } from './FormulaChoice';\r\nimport { Health } from './Health';\r\nimport { HeldItem } from './HeldItem';\r\nimport { Heritage } from './Heritage';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { OtherConsumable } from './OtherConsumable';\r\nimport { OtherItem } from './OtherItem';\r\nimport { Potion } from './Potion';\r\nimport { Settings } from './Settings';\r\nimport { Shield } from './Shield';\r\nimport { SpellCast } from './SpellCast';\r\nimport { SpellGain } from './SpellGain';\r\nimport { Weapon } from './Weapon';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { ItemCollection } from './ItemCollection';\r\nimport { Speed } from './Speed';\r\nimport { Bulk } from './Bulk';\r\nimport { ItemsService } from './items.service';\r\nimport { Ammunition } from './Ammunition';\r\nimport { Item } from './Item';\r\nimport { Scroll } from './Scroll';\r\nimport { InventoryGain } from './InventoryGain';\r\nimport { Oil } from './Oil';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Savegame } from './Savegame';\r\nimport { CharacterService } from './character.service';\r\nimport { AnimalCompanionsService } from './animalcompanions.service';\r\nimport { ClassesService } from './classes.service';\r\nimport { HistoryService } from './history.service';\r\nimport { Talisman } from './Talisman';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { AlchemicalTool } from './AlchemicalTool';\r\nimport { Snare } from './Snare';\r\nimport { WeaponMaterial } from './WeaponMaterial';\r\nimport { ArmorMaterial } from './ArmorMaterial';\r\nimport { ShieldMaterial } from './ShieldMaterial';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { Wand } from './Wand';\r\nimport { Equipment } from './Equipment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SavegameService {\r\n\r\n    private savegames: Savegame[] = [];\r\n    private loading: boolean = false;\r\n    private loader;\r\n    //private server: string = \"http://arne:8080\"\r\n    private server: string = \"http://qjhkot3fbwyyxcvn.myfritz.net:23480\"\r\n\r\n    //All these attributes may be needed by the reassign function, so they are explicitly defined here.\r\n    private AbilityChoice = AbilityChoice;\r\n    private ActivityGain = ActivityGain;\r\n    private AdventuringGear = AdventuringGear;\r\n    private AlchemicalBomb = AlchemicalBomb;\r\n    private AlchemicalElixir = AlchemicalElixir;\r\n    private AlchemicalPoison = AlchemicalPoison;\r\n    private AlchemicalTool = AlchemicalTool;\r\n    private Ammunition = Ammunition;\r\n    private Ancestry = Ancestry;\r\n    private AnimalCompanion = AnimalCompanion;\r\n    private AnimalCompanionAncestry = AnimalCompanionAncestry;\r\n    private AnimalCompanionClass = AnimalCompanionClass;\r\n    private AnimalCompanionLevel = AnimalCompanionLevel;\r\n    private AnimalCompanionSpecialization = AnimalCompanionSpecialization;\r\n    private Armor = Armor;\r\n    private ArmorMaterial = ArmorMaterial;\r\n    private ArmorRune = ArmorRune;\r\n    private Background = Background;\r\n    private Bulk = Bulk;\r\n    private Character = Character;\r\n    private Class = Class;\r\n    private ConditionGain = ConditionGain;\r\n    private Consumable = Consumable;\r\n    private EffectGain = EffectGain;\r\n    private Familiar = Familiar;\r\n    private Feat = Feat;\r\n    private FeatChoice = FeatChoice;\r\n    private FormulaChoice = FormulaChoice;\r\n    private Health = Health;\r\n    private HeldItem = HeldItem;\r\n    private Heritage = Heritage;\r\n    private InventoryGain = InventoryGain;\r\n    private Item = Item;\r\n    private ItemActivity = ItemActivity;\r\n    private ItemCollection = ItemCollection;\r\n    private ItemGain = ItemGain;\r\n    private Level = Level;\r\n    private LoreChoice = LoreChoice;\r\n    private Oil = Oil;\r\n    private OtherConsumable = OtherConsumable;\r\n    private OtherConsumableBomb = OtherConsumableBomb;\r\n    private OtherItem = OtherItem;\r\n    private Potion = Potion;\r\n    private Scroll = Scroll;\r\n    private Settings = Settings;\r\n    private Shield = Shield;\r\n    private Shieldmaterial = ShieldMaterial;\r\n    private Skill = Skill;\r\n    private SkillChoice = SkillChoice;\r\n    private Snare = Snare;\r\n    private Speed = Speed;\r\n    private SpellCast = SpellCast;\r\n    private SpellCasting = SpellCasting;\r\n    private SpellChoice = SpellChoice;\r\n    private SpellGain = SpellGain;\r\n    private Talisman = Talisman;\r\n    private Weapon = Weapon;\r\n    private WeaponMaterial = WeaponMaterial;\r\n    private WeaponRune = WeaponRune;\r\n    private WornItem = WornItem;\r\n    private Wand = Wand;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    get_Savegames() {\r\n        return this.savegames;\r\n    }\r\n\r\n    load_Character(character: Character, itemsService: ItemsService, classesService: ClassesService, historyService: HistoryService, animalCompanionsService: AnimalCompanionsService) {\r\n        //Restore a lot of data from reference objects.\r\n        //This allows us to save a lot of data at saving by removing all data from certain objects that is the same as in their original template.\r\n        character.inventories = character.inventories.map(inventory => Object.assign(new ItemCollection(), inventory));\r\n\r\n        if (character.class.name) {\r\n            if (character.class.ancestry && character.class.ancestry.name) {\r\n                character.class.ancestry = historyService.restore_AncestryFromSave(character.class.ancestry, this);\r\n            }\r\n            if (character.class.heritage && character.class.heritage.name) {\r\n                character.class.heritage = historyService.restore_HeritageFromSave(character.class.heritage, this);\r\n            }\r\n            if (character.class.background && character.class.background.name) {\r\n                character.class.background = historyService.restore_BackgroundFromSave(character.class.background, this);\r\n            }\r\n            if (character.class.animalCompanion) {\r\n                if (character.class.animalCompanion.inventories) {\r\n                    character.class.animalCompanion.inventories = character.class.animalCompanion.inventories\r\n                        .map(inventory => Object.assign(new ItemCollection(), inventory));\r\n                }\r\n                if (character.class.animalCompanion?.class?.ancestry) {\r\n                    character.class.animalCompanion.class.ancestry = animalCompanionsService.restore_AncestryFromSave(character.class.animalCompanion.class.ancestry, this);\r\n                }\r\n                if (character.class.animalCompanion?.class?.levels) {\r\n                    character.class.animalCompanion.class = animalCompanionsService.restore_LevelsFromSave(character.class.animalCompanion.class, this);\r\n                }\r\n                if (character.class.animalCompanion.class?.specializations) {\r\n                    character.class.animalCompanion.class.specializations = character.class.animalCompanion.class.specializations\r\n                        .map(spec => animalCompanionsService.restore_SpecializationFromSave(spec, this));\r\n                }\r\n            }\r\n            //Restore the class last, so we don't null its components (ancestry, animal companion etc.)\r\n            character.class = classesService.restore_ClassFromSave(character.class, this);\r\n        }\r\n\r\n        character = this.reassign(character, \"\", itemsService);\r\n        if (character['_id']) {\r\n            delete character['_id'];\r\n        }\r\n        return character;\r\n    }\r\n\r\n    merge(target: any, source: any) {\r\n        if (typeof source == \"object\" && source) {\r\n            let output = Object.assign(new target.constructor, JSON.parse(JSON.stringify(target)))\r\n            if (Array.isArray(source)) {\r\n                source.forEach((obj: any, index) => {\r\n                    if (!output[index]) {\r\n                        Object.assign(output, { [index]: JSON.parse(JSON.stringify(source[index])) });\r\n                    } else {\r\n                        output[index] = this.merge(target[index], source[index]);\r\n                    }\r\n                });\r\n            } else {\r\n                Object.keys(source).forEach(key => {\r\n                    if (typeof source === 'object') {\r\n                        if (!(key in target))\r\n                            Object.assign(output, { [key]: JSON.parse(JSON.stringify(source[key])) });\r\n                        else\r\n                            output[key] = this.merge(target[key], source[key]);\r\n                    } else {\r\n                        Object.assign(output, { [key]: JSON.parse(JSON.stringify(source[key])) });\r\n                    }\r\n                });\r\n            }\r\n            return output;\r\n        } else {\r\n            return source;\r\n        }\r\n\r\n    }\r\n\r\n    clean(object: any, itemsService: ItemsService) {\r\n        //Only cleanup objects that have Classes (= aren't object Object)\r\n        if (typeof object == \"object\" && object.constructor !== Object) {\r\n            //If the object is an array, iterate over its elements\r\n            if (Array.isArray(object)) {\r\n                object.forEach((obj: any) => {\r\n                    obj = this.clean(obj, itemsService);\r\n                });\r\n            } else {\r\n                let blank;\r\n                //For items with a refId, don't compare them with blank items, but with their reference item if it exists.\r\n                //If none can be found, the reference item is a blank item of the same class.\r\n                if (object[\"refId\"]) {\r\n                    blank = itemsService.get_CleanItemByID(object.refId);\r\n                }\r\n                if (!blank) {\r\n                    blank = new object.constructor();\r\n                }\r\n                Object.keys(object).forEach(key => {\r\n                    //Delete attributes that are in the \"neversave\" list, if it exists.\r\n                    if (object[\"neversave\"] && object[\"neversave\"].includes(key)) {\r\n                        delete object[key];\r\n                        //Don't cleanup the \"_className\" or any attributes that are in the \"save\" list.\r\n                    } else if (!object[\"save\"]?.includes(key) && (key != \"_className\") && (key.substr(0, 1) != \"$\")) {\r\n                        //If the attribute has the same value as the default, delete it from the object.\r\n                        if (JSON.stringify(object[key]) == JSON.stringify(blank[key])) {\r\n                            delete object[key];\r\n                        } else {\r\n                            object[key] = this.clean(object[key], itemsService)\r\n                        }\r\n                        //Cleanup attributes that start with $.\r\n                    } else if (key.substr(0, 1) == \"$\") {\r\n                        delete object[key];\r\n                    }\r\n                })\r\n                //Delete the \"save\" list last so it can be referenced during the cleanup, but still updated when loading.\r\n                if (object[\"save\"]) {\r\n                    delete object[\"save\"];\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    reassign(object: any, keyName: string = \"\", itemsService: ItemsService = null) {\r\n        //Only objects get reassigned - if they have a _className attribute and aren't null/undefined/empty\r\n        if (typeof object == \"object\" && object) {\r\n            //If the object is an array, iterate over its elements\r\n            if (Array.isArray(object)) {\r\n                object.forEach((obj: any, index) => {\r\n                    object[index] = this.reassign(obj, keyName + \"[\" + index + \"]\", itemsService);\r\n                });\r\n            } else {\r\n                //For items with a refId, merge them with their reference item if it exists.\r\n                if (object.refId && itemsService) {\r\n                    let libraryItem = itemsService.get_CleanItemByID(object.refId);\r\n                    if (libraryItem) {\r\n                        //Map the restored object onto the library object and keep the result.\r\n                        try {\r\n                            object = this.merge(libraryItem, object);\r\n                            object = itemsService.cast_ItemByClassName(object, libraryItem.constructor.name);\r\n                            //Disable any active hint effects when loading an item.\r\n                            if (object.hints?.length) {\r\n                                (object as Equipment).hints?.forEach(hint => {\r\n                                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                                })\r\n                            }\r\n                        } catch (e) {\r\n                            console.log(\"Failed reassigning item \" + object.id + \": \" + e)\r\n                        }\r\n                    }\r\n                }\r\n                //If the object is not cast yet, try casting it object as its _className.\r\n                if (object._className && object.constructor.name != object._ClassName) {\r\n                    try {\r\n                        object = Object.assign(eval(\"new this.\" + object._className + \"()\"), object)\r\n                    } catch (e) {\r\n                        console.log(\"Failed reassigning \" + keyName + \": \" + e)\r\n                    }\r\n                }\r\n                Object.keys(object).forEach(key => {\r\n                    object[key] = this.reassign(object[key], key, itemsService)\r\n                })\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    save_Character(character: Character, itemsService: ItemsService, classesService: ClassesService, historyService: HistoryService, animalCompanionsService: AnimalCompanionsService) {\r\n\r\n        let savegame: Character = JSON.parse(JSON.stringify(character));\r\n\r\n        //After copying the character into the savegame, we go through all its elements and make sure that they have the correct class.\r\n\r\n        savegame = this.reassign(savegame, \"\", itemsService);\r\n\r\n        //Go through all the items, class, ancestry, heritage, background and compare every element to its library equivalent, skipping the properties listed in .save\r\n        //Everything that is the same as the library item gets deleted.\r\n        if (savegame.class.name) {\r\n            savegame.class = classesService.clean_ClassForSave(savegame.class);\r\n            if (savegame.class.ancestry?.name) {\r\n                savegame.class.ancestry = historyService.clean_AncestryForSave(savegame.class.ancestry);\r\n            }\r\n            if (savegame.class.heritage?.name) {\r\n                savegame.class.heritage = historyService.clean_HeritageForSave(savegame.class.heritage);\r\n            }\r\n            if (savegame.class.background?.name) {\r\n                savegame.class.background = historyService.clean_BackgroundForSave(savegame.class.background);\r\n            }\r\n            if (savegame.class.animalCompanion) {\r\n                if (savegame.class.animalCompanion.class?.ancestry) {\r\n                    savegame.class.animalCompanion.class.ancestry = animalCompanionsService.clean_AncestryForSave(savegame.class.animalCompanion.class.ancestry);\r\n                }\r\n                if (savegame.class.animalCompanion.class?.levels) {\r\n                    savegame.class.animalCompanion.class = animalCompanionsService.clean_LevelsForSave(savegame.class.animalCompanion.class);\r\n                }\r\n                if (savegame.class.animalCompanion.class?.specializations) {\r\n                    savegame.class.animalCompanion.class.specializations.forEach(spec => {\r\n                        spec = animalCompanionsService.clean_SpecializationForSave(spec);\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        //Then go through the whole thing again and compare every object to its Class's default, deleting everything that has the same value as the default.\r\n        savegame = this.clean(savegame, itemsService);\r\n\r\n        return this.save_CharacterToDB(savegame);\r\n\r\n    }\r\n\r\n    load_Characters(): Observable<string[]> {\r\n        return this.http.get<string[]>(this.server + '/list');\r\n    }\r\n\r\n    load_CharacterFromDB(id: string): Observable<string[]> {\r\n        return this.http.get<string[]>(this.server + '/load/' + id);\r\n    }\r\n\r\n    delete_CharacterFromDB(savegame: Savegame): Observable<string[]> {\r\n        //Why is this a get?\r\n        return this.http.get<string[]>(this.server + '/delete/' + savegame.id);\r\n    }\r\n\r\n    save_CharacterToDB(savegame): Observable<string[]> {\r\n        return this.http.post<string[]>(this.server + '/save/', savegame);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.loading;\r\n    }\r\n\r\n    initialize(characterService: CharacterService) {\r\n        this.loading = true;\r\n        this.load_Characters()\r\n            .subscribe((results: string[]) => {\r\n                this.loader = results;\r\n                this.finish_loading(characterService)\r\n            }, (error) => {\r\n                console.log('Error loading characters from database: ' + error.message);\r\n            });\r\n    }\r\n\r\n    finish_loading(characterService: CharacterService) {\r\n        if (this.loader) {\r\n            this.savegames = [];\r\n            this.loader.forEach(savegame => {\r\n                let newLength = this.savegames.push(new Savegame());\r\n                this.savegames[newLength - 1].id = savegame.id;\r\n                this.savegames[newLength - 1].dbId = savegame._id || \"\";\r\n                this.savegames[newLength - 1].level = savegame.level || 1;\r\n                this.savegames[newLength - 1].name = savegame.name || \"Unnamed\";\r\n                this.savegames[newLength - 1].partyName = savegame.partyName || \"No Party\";\r\n                if (savegame.class) {\r\n                    this.savegames[newLength - 1].class = savegame.class.name || \"\";\r\n                    if (savegame.class.levels?.[1]?.featChoices?.length) {\r\n                        savegame.class.levels[1].featChoices.filter(choice => choice.specialChoice && choice.feats?.length == 1 && choice.available == 1 && choice.source == savegame.class.name).forEach(choice => {\r\n                            let choiceName = choice.feats[0].name.split(\":\")[0];\r\n                            if (!choiceName.includes(\"School\") && choiceName.includes(choice.type)) {\r\n                                choiceName = choiceName.substr(0, choiceName.length - choice.type.length - 1);\r\n                            }\r\n                            this.savegames[newLength - 1].classChoice = choiceName;\r\n                        });\r\n                    }\r\n                    if (savegame.class.ancestry) {\r\n                        this.savegames[newLength - 1].ancestry = savegame.class.ancestry.name || \"\";\r\n                    }\r\n                    if (savegame.class.heritage) {\r\n                        this.savegames[newLength - 1].heritage = savegame.class.heritage.name || \"\";\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.loader = [];\r\n            characterService.set_Changed(\"charactersheet\");\r\n            characterService.process_ToChange();\r\n        }\r\n        if (this.loading) { this.loading = false; }\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { EffectGain } from './EffectGain';\r\nimport { Item } from './Item';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { Rune } from './Rune';\r\nimport { ItemsService } from './items.service';\r\nimport { InventoryGain } from './InventoryGain';\r\nimport { Talisman } from './Talisman';\r\nimport { Material } from './Material';\r\nimport { Hint } from './Hint';\r\n\r\nexport class Equipment extends Item {\r\n    //This is a list of all the attributes that should be saved if a refID exists. All others can be looked up via the refID when loading the character.\r\n    //If an attribute could be the same as a new Item, but different from its refID item, it should be on the save list.\r\n    //For example, a set of arrows comes with amount=10, but a standard item has amount=1.\r\n    // If you use up 9 arrows and then save, amount=1 will be deleted because it's the same as a new item, and you will have 10 arrows after loading.\r\n    public readonly baseType = \"Equipment\";\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    allowEquippable = true;\r\n    //Equipment can normally be equipped.\r\n    equippable = true;\r\n    //Describe all activities that you gain from this item. The activity must be a fully described \"Activity\" type object\r\n    public activities: ItemActivity[] = [];\r\n    public broken: boolean = false;\r\n    public shoddy: boolean = false;\r\n    //Some items have a different bulk when you are carrying them instead of wearing them, like backpacks\r\n    public carryingBulk: string = \"\";\r\n    //Is the item currently equipped - items with equippable==false are always equipped\r\n    public equipped: boolean = false;\r\n    //List EffectGain for every Effect that comes from equipping and investing the item\r\n    //effects get eval'ed, so can use values like \"-characterService.get_Character().level\"\r\n    public effects: EffectGain[] = [];\r\n    //Amount of propertyRunes you can still apply\r\n    public get freePropertyRunes(): number {\r\n        //You can apply as many property runes as the level of your potency rune. Each rune with the Saggorak trait counts double.\r\n        let runes = this.potencyRune - this.propertyRunes.length - this.propertyRunes.filter(rune => rune.traits.includes(\"Saggorak\")).length;\r\n        let extraRune = this.material?.[0]?.extraRune || 0;\r\n        if (this.potencyRune == 3 && extraRune) {\r\n            for (let index = 0; index < extraRune; index++) {\r\n                runes++;\r\n            }\r\n        }\r\n        return runes;\r\n    };\r\n    //Name any common activity that becomes available when you equip and invest this item\r\n    public gainActivities: ActivityGain[] = [];\r\n    //If this is a container, list whether it has a limit and a bulk reduction.\r\n    public gainInventory: InventoryGain[] = [];\r\n    //What hint should show up for this item? This allows to be more concise and not use the entire description.\r\n    //If no hint is set, desc will show instead\r\n    public hints: Hint[] = [];\r\n    //Is the item currently invested - items without the Invested trait are always invested and don't count against the limit\r\n    public invested: boolean = false;\r\n    public material: Material[] = [];\r\n    //What kind of runes and material can be applied to this item? Some items that are not weapons can be modded like weapons, some weapons cannot be modded, etc.\r\n    public moddable: \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\" = \"\";\r\n    //Potency Rune level for weapons and armor\r\n    public potencyRune: number = 0;\r\n    //Property Runes for weapons and armor\r\n    public propertyRunes: Rune[] = [];\r\n    //Blade Ally Runes can be emulated on weapons and handwraps\r\n    public bladeAllyRunes: Rune[] = [];\r\n    //Resilient Rune level for armor\r\n    public resilientRune: number = 0;\r\n    //Is the name input visible in the inventory\r\n    public showName: boolean = false;\r\n    //Striking Rune level for weapons\r\n    public strikingRune: number = 0;\r\n    //Store any talismans attached to this item.\r\n    public talismans: Talisman[] = [];\r\n    get_Bulk() {\r\n        //Return either the bulk set by an oil, or the bulk of the item reduced by the material (no lower than L).\r\n        let bulk: string = this.bulk;\r\n        this.material.forEach(mat => {\r\n            if (parseInt(this.bulk) && parseInt(this.bulk) != 0) {\r\n                bulk = (parseInt(this.bulk) - mat.bulkReduction).toString();\r\n                if (parseInt(bulk) == 0 && parseInt(this.bulk) != 0) {\r\n                    bulk = \"L\";\r\n                }\r\n            }\r\n        })\r\n        let oilBulk: string = \"\";\r\n        this.oilsApplied.forEach(oil => {\r\n            if (oil.bulkEffect) {\r\n                oilBulk = oil.bulkEffect\r\n            }\r\n        });\r\n        bulk = (this.carryingBulk && !this.equipped) ? this.carryingBulk : bulk;\r\n        return oilBulk || bulk;\r\n    }\r\n    get_PotencyRune() {\r\n        //Return the highest value of your potency rune or any oils that emulate one\r\n        return Math.max(...this.oilsApplied.map(oil => oil.potencyEffect), this.potencyRune);\r\n    }\r\n    get_Potency(potency: number) {\r\n        if (potency > 0) {\r\n            return \"+\" + potency;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n    get_StrikingRune() {\r\n        //Return the highest value of your striking rune or any oils that emulate one\r\n        return Math.max(...this.oilsApplied.map(oil => oil.strikingEffect), this.strikingRune);\r\n    }\r\n    get_Striking(striking: number) {\r\n        switch (striking) {\r\n            case 0:\r\n                return \"\";\r\n            case 1:\r\n                return \"Striking\";\r\n            case 2:\r\n                return \"Greater Striking\";\r\n            case 3:\r\n                return \"Major Striking\";\r\n        }\r\n    }\r\n    get_ResilientRune() {\r\n        //Return the highest value of your striking rune or any oils that emulate one\r\n        return Math.max(...this.oilsApplied.map(oil => oil.resilientEffect), this.resilientRune);\r\n    }\r\n    get_Resilient(resilient: number) {\r\n        switch (resilient) {\r\n            case 0:\r\n                return \"\";\r\n            case 1:\r\n                return \"Resilient\";\r\n            case 2:\r\n                return \"Greater Resilient\";\r\n            case 3:\r\n                return \"Major Resilient\";\r\n        }\r\n    }\r\n    get_Name() {\r\n        if (this.displayName.length) {\r\n            return this.displayName;\r\n        } else {\r\n            let potency = this.get_Potency(this.get_PotencyRune());\r\n            let secondary: string = \"\";\r\n            let properties: string = \"\";\r\n            let material: string = \"\";\r\n            if (this.moddable == \"weapon\" || (this.moddable == \"-\" && this.type == \"weapons\")) {\r\n                secondary = this.get_Striking(this.get_StrikingRune());\r\n            } else if (this.moddable == \"armor\" || (this.moddable == \"-\" && this.type == \"armors\")) {\r\n                secondary = this.get_Resilient(this.get_ResilientRune());\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                let name: string = rune.name;\r\n                if (rune.name.includes(\"(Greater)\")) {\r\n                    name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\"(Greater)\"));\r\n                } else if (rune.name.includes(\", Greater)\")) {\r\n                    name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\", Greater)\")) + \")\";\r\n                }\r\n                properties += \" \" + name;\r\n            })\r\n            if (this[\"bladeAlly\"]) {\r\n                this.bladeAllyRunes.forEach(rune => {\r\n                    let name: string = rune.name;\r\n                    if (rune.name.includes(\"(Greater)\")) {\r\n                        name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\"(Greater)\"));\r\n                    } else if (rune.name.includes(\", Greater)\")) {\r\n                        name = \"Greater \" + rune.name.substr(0, rune.name.indexOf(\", Greater)\")) + \")\";\r\n                    }\r\n                    properties += \" \" + name;\r\n                })\r\n            }\r\n            this.material.forEach(mat => {\r\n                let name: string = mat.name;\r\n                if (mat.name.includes(\"(\")) {\r\n                    name = mat.name.substr(0, mat.name.indexOf(\" (\"));\r\n                }\r\n                material += \" \" + name;\r\n            })\r\n            return (potency + \" \" + (secondary + \" \" + (properties + \" \" + (material + \" \" + this.name).trim()).trim()).trim()).trim();\r\n        }\r\n    }\r\n    get_Price(itemsService: ItemsService) {\r\n        let price = this.price;\r\n        if (this.moddable == \"weapon\") {\r\n            if (this.potencyRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.find(rune => rune.potency == this.potencyRune).price;\r\n            }\r\n            if (this.strikingRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.find(rune => rune.striking == this.strikingRune).price;\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                let cleanRune = itemsService.get_CleanItems().weaponrunes.find(weaponRune => weaponRune.name.toLowerCase() == rune.name.toLowerCase());\r\n                if (cleanRune) {\r\n                    if (cleanRune.name == \"Speed\" && this.material?.[0]?.name.includes(\"Orichalcum\")) {\r\n                        price += Math.floor(cleanRune.price / 2);\r\n                    } else {\r\n                        price += cleanRune.price;\r\n                    }\r\n                }\r\n            })\r\n        } else if (this.moddable == \"armor\") {\r\n            if (this.potencyRune) {\r\n                price += itemsService.get_CleanItems().armorrunes.find(rune => rune.potency == this.potencyRune).price;\r\n            }\r\n            if (this.strikingRune) {\r\n                price += itemsService.get_CleanItems().armorrunes.find(rune => rune.resilient == this.strikingRune).price;\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                price += itemsService.get_CleanItems().armorrunes.find(armorRune => armorRune.name.toLowerCase() == rune.name.toLowerCase()).price;\r\n            })\r\n        }\r\n        this.material.forEach(mat => {\r\n            price += mat.price;\r\n            if (parseInt(this.bulk)) {\r\n                price += (mat.bulkPrice * parseInt(this.bulk));\r\n            }\r\n        })\r\n        this.talismans.forEach(talisman => {\r\n            price += itemsService.get_CleanItems().talismans.find(cleanTalisman => cleanTalisman.name.toLowerCase() == talisman.name.toLowerCase()).price;\r\n        })\r\n        return price;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Armor } from './Armor';\r\nimport { AC } from './AC';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DefenseService {\r\n\r\n    AC: AC = new AC();\r\n\r\n    constructor(\r\n        private effectsService: EffectsService,\r\n    ) { }\r\n\r\n    get_AC() {\r\n        return this.AC;\r\n    }\r\n\r\n    get_EquippedArmor(creature: Character|AnimalCompanion) {\r\n        let armor = creature.inventories[0].armors;\r\n        return armor.filter(armor => armor.equipped);\r\n    }\r\n\r\n    get_EquippedShield(creature: Character|AnimalCompanion) {\r\n        let shield = creature.inventories[0].shields;\r\n        return shield.filter(shield => shield.equipped && !shield.broken);\r\n    }\r\n\r\n}\r\n","import { Effect } from './Effect';\r\n\r\nexport class EffectCollection {\r\n    public all: Effect[] = [];\r\n    public relatives: Effect[] = [];\r\n    public absolutes: Effect[] = [];\r\n    public bonuses: Effect[] = [];\r\n    public penalties: Effect[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Condition } from './Condition';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { Item } from './Item';\r\nimport { ItemsService } from './items.service';\r\nimport { Equipment } from './Equipment';\r\nimport { EffectGain } from './EffectGain';\r\nimport * as json_conditions from '../assets/json/conditions';\r\nimport { Creature } from './Creature';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ConditionsService {\r\n\r\n    private conditions: Condition[] = [];\r\n    private loading: boolean = false;\r\n    private appliedConditions: ConditionGain[][] = [[], [], []];\r\n\r\n    constructor() { }\r\n\r\n    get_Conditions(name: string = \"\", type: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.conditions.filter(condition =>\r\n                (condition.name.toLowerCase() == name.toLowerCase() || name == \"\") &&\r\n                (condition.type.toLowerCase() == type.toLowerCase() || type == \"\")\r\n            );\r\n        } else {\r\n            return [new Condition()];\r\n        }\r\n    }\r\n\r\n    get_CalculatedIndex(creature: string) {\r\n        switch (creature) {\r\n            case \"Character\":\r\n                return 0;\r\n            case \"Companion\":\r\n                return 1;\r\n            case \"Familiar\":\r\n                return 2;\r\n        }\r\n    }\r\n\r\n    get_AppliedConditions(creature: Creature, characterService: CharacterService, activeConditions: ConditionGain[], readonly: boolean = false) {\r\n        let creatureIndex: number = this.get_CalculatedIndex(creature.type);\r\n        //Readonly skips any modifications and just returns the currently applied conditions. The same happens if the conditions haven't changed since the last run.\r\n        if (readonly || JSON.stringify(activeConditions) == JSON.stringify(this.appliedConditions[creatureIndex])) {\r\n            return activeConditions\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }).sort((a, b) => {\r\n                    if (a.duration > b.duration) {\r\n                        return 1;\r\n                    }\r\n                    if (a.duration < b.duration) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n        } else {\r\n            let overrides: string[] = [];\r\n            activeConditions.forEach(gain => {\r\n                //Set apply for all conditions first, then change it later.\r\n                gain.apply = true;\r\n                let originalCondition = this.get_Conditions(gain.name)?.[0];\r\n                if (originalCondition) {\r\n                    //Mark any conditions for deletion if their duration is 0, or if they can have a value and their value is 0 or lower\r\n                    //Only add overrides for the rest\r\n                    if ((originalCondition.hasValue && gain.value <= 0) || gain.duration == 0) {\r\n                        gain.value = -1;\r\n                    } else {\r\n                        overrides.push(...originalCondition.overrideConditions);\r\n                    }\r\n                }\r\n            });\r\n            activeConditions.forEach(gain => {\r\n                let condition = this.get_Conditions(gain.name)?.[0];\r\n                if (condition) {\r\n                    //Only process the conditions that haven't been marked for deletion.\r\n                    if (gain.value != -1) {\r\n                        if (overrides.includes(gain.name) || (overrides.includes(\"All\") && !condition.overrideConditions.includes(\"All\"))) {\r\n                            gain.apply = false;\r\n                        }\r\n                        //We compare this condition with all others that have the same name and deactivate it under certain circumstances\r\n                        //Are there any other conditions with this name and value that have not been deactivated yet?\r\n                        activeConditions.filter(otherGain =>\r\n                            (otherGain !== gain) &&\r\n                            (otherGain.name == gain.name) &&\r\n                            (otherGain.apply)\r\n                        ).forEach(otherGain => {\r\n                            //Unlimited conditions and higher value conditions remain, same persistent damage value conditions are exclusive.\r\n                            if (condition.unlimited) {\r\n                                gain.apply = true;\r\n                            } else if (otherGain.value + otherGain.heightened > gain.value + gain.heightened) {\r\n                                gain.apply = false;\r\n                            } else if (otherGain.choice > gain.choice) {\r\n                                gain.apply = false;\r\n                            } else if (\r\n                                otherGain.value == gain.value &&\r\n                                otherGain.heightened == gain.heightened\r\n                            ) {\r\n                                //If the value and choice is the same:\r\n                                //Deactivate this condition if the other one has a longer duration (and this one is not permanent), or is permanent (no matter if this one is)\r\n                                //The other condition will not be deactivated because it only gets compared to the ones that aren't deactivated yet\r\n                                if (otherGain.duration == -1 || (gain.duration >= 0 && otherGain.duration >= gain.duration)) {\r\n                                    gain.apply = false;\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            //Remove all conditions that were marked for deletion by setting its value to -1. We use while so we don't mess up the index and skip some.\r\n            while (activeConditions.some(gain => gain.value == -1)) {\r\n                characterService.remove_Condition(creature, activeConditions.find(gain => gain.value == -1), false);\r\n            }\r\n            this.appliedConditions[creatureIndex] = [];\r\n            this.appliedConditions[creatureIndex] = activeConditions.map(gain => Object.assign(new ConditionGain(), gain));\r\n            return activeConditions\r\n                .sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }).sort((a, b) => {\r\n                    if (a.duration > b.duration) {\r\n                        return 1;\r\n                    }\r\n                    if (a.duration < b.duration) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    process_Condition(creature: Creature, characterService: CharacterService, effectsService: EffectsService, itemsService: ItemsService, gain: ConditionGain, condition: Condition, taken: boolean, increaseWounded: boolean = true, ignoreEndsWithConditions: boolean = false) {\r\n\r\n        //Prepare components for refresh\r\n        if (condition.gainActivities.length) {\r\n            characterService.set_ToChange(creature.type, \"activities\");\r\n        }\r\n        condition.hints.forEach(hint => {\r\n            characterService.set_TagsToChange(creature.type, hint.showon);\r\n        });\r\n\r\n        if (taken) {\r\n            gain.maxDuration = gain.duration;\r\n        }\r\n\r\n        //Copy the condition's ActivityGains to the ConditionGain so we can track its duration, cooldown etc.\r\n        gain.gainActivities = condition.gainActivities.map(activityGain => Object.assign(new ActivityGain(), JSON.parse(JSON.stringify(activityGain))));\r\n        \r\n        if (!gain.endsWithConditions.length) {\r\n            gain.endsWithConditions = condition.endsWithConditions;\r\n        }\r\n\r\n        //One time effects\r\n        if (condition.onceEffects.length) {\r\n            if (taken) {\r\n                condition.onceEffects.forEach(effect => {\r\n                    let tempEffect = Object.assign(new EffectGain, JSON.parse(JSON.stringify(effect)));\r\n                    //Copy some data to allow calculations and tracking temporary HP.\r\n                    if (!tempEffect.source) {\r\n                        tempEffect.source = condition.name;\r\n                        tempEffect.sourceId = gain.id;\r\n                    }\r\n                    if (!tempEffect.spellSource) {\r\n                        tempEffect.spellSource = gain.spellSource;\r\n                    }\r\n                    characterService.process_OnceEffect(creature, tempEffect, gain.value, gain.heightened, gain.choice, gain.spellCastingAbility);\r\n                })\r\n            }\r\n        }\r\n\r\n        //One time effects when ending the condition\r\n        if (condition.endEffects.length) {\r\n            if (!taken) {\r\n                condition.endEffects.forEach(effect => {\r\n                    let tempEffect = Object.assign(new EffectGain, JSON.parse(JSON.stringify(effect)));\r\n                    //Copy some data to allow calculations and tracking temporary HP.\r\n                    if (!tempEffect.source) {\r\n                        tempEffect.source = condition.name;\r\n                        tempEffect.sourceId = gain.id;\r\n                    }\r\n                    if (!tempEffect.spellSource) {\r\n                        tempEffect.spellSource = gain.spellSource;\r\n                    }\r\n                    characterService.process_OnceEffect(creature, tempEffect, gain.value, gain.heightened, gain.choice, gain.spellCastingAbility);\r\n                })\r\n            }\r\n        }\r\n\r\n        //Gain other conditions if applicable\r\n        //They are removed when this is removed in characterService.remove_Condition().\r\n        if (taken) {\r\n            condition.gainConditions.filter(extraCondition => !extraCondition.conditionChoiceFilter || extraCondition.conditionChoiceFilter == gain.choice).forEach(extraCondition => {\r\n                let addCondition = Object.assign(new ConditionGain, JSON.parse(JSON.stringify(extraCondition)));\r\n                if (!addCondition.heightened) {\r\n                    addCondition.heightened = gain.heightened;\r\n                }\r\n                if (addCondition.lockedByParent) {\r\n                    addCondition.lockedByID = gain.id;\r\n                }\r\n                addCondition.source = gain.name;\r\n                addCondition.parentID = gain.id;\r\n                addCondition.apply = true;\r\n                characterService.add_Condition(creature, addCondition, false, gain);\r\n            })\r\n        }\r\n\r\n        //If this ends, remove conditions that have this listed in endsWithConditions\r\n        if (!taken && !ignoreEndsWithConditions) {\r\n            let conditionsToRemove: ConditionGain[] = characterService.get_AppliedConditions(creature, \"\", \"\", true)\r\n                .filter(gain => gain.endsWithConditions.includes(condition.name))\r\n                .map(gain => Object.assign(new ConditionGain, JSON.parse(JSON.stringify(gain))));\r\n            conditionsToRemove.forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false);\r\n            })\r\n        }\r\n\r\n        //Remove other conditions if applicable\r\n        if (taken) {\r\n            condition.endConditions.forEach(end => {\r\n                characterService.get_AppliedConditions(creature, end).forEach(gain => {\r\n                    characterService.remove_Condition(creature, gain, false);\r\n                })\r\n            })\r\n        }\r\n\r\n        //Conditions that start when this ends. This happens if there is a nextCondition value.\r\n        if (!taken && condition.nextCondition) {\r\n            let newGain: ConditionGain = new ConditionGain();\r\n            newGain.source = gain.source;\r\n            newGain.name = condition.nextCondition.name;\r\n            newGain.duration = condition.nextCondition.duration || -1;\r\n            characterService.add_Condition(creature, newGain, false);\r\n        }\r\n\r\n        //Gain Items\r\n        if (creature && creature.type != \"Familiar\") {\r\n            if (condition.gainItems.length) {\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n                if (taken) {\r\n                    gain.gainItems = condition.get_HeightenedItems(gain.heightened).map(itemGain => Object.assign(new ItemGain(), itemGain));\r\n                    gain.gainItems\r\n                        .filter(gainItem =>\r\n                            (\r\n                                !gainItem.conditionChoiceFilter ||\r\n                                gainItem.conditionChoiceFilter == gain.choice\r\n                            )\r\n                        ).forEach(gainItem => {\r\n                            this.add_ConditionItem((creature as AnimalCompanion | Character), characterService, itemsService, gainItem, condition);\r\n                        });\r\n                } else {\r\n                    gain.gainItems\r\n                        .filter(gainItem =>\r\n                            (\r\n                                !gainItem.conditionChoiceFilter ||\r\n                                gainItem.conditionChoiceFilter == gain.choice\r\n                            )\r\n                        ).forEach(gainItem => {\r\n                            this.remove_ConditionItem((creature as AnimalCompanion | Character), characterService, itemsService, gainItem);\r\n                        });\r\n                    gain.gainItems = [];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (condition.senses.length) {\r\n            characterService.set_ToChange(creature.type, \"skills\");\r\n        }\r\n\r\n        //Stuff that happens when your Dying value is raised or lowered beyond a limit.\r\n        if (gain.name == \"Dying\") {\r\n            if (taken) {\r\n                if (creature.health.dying(creature, characterService) >= creature.health.maxDying(creature, effectsService)) {\r\n                    if (characterService.get_AppliedConditions(creature, \"Dead\").length == 0) {\r\n                        characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Dead\", source: \"Dying value too high\" }), false)\r\n                    }\r\n                }\r\n            } else {\r\n                if (creature.health.dying(creature, characterService) == 0) {\r\n                    if (increaseWounded) {\r\n                        if (creature.health.wounded(creature, characterService) > 0) {\r\n                            characterService.get_AppliedConditions(creature, \"Wounded\").forEach(gain => {\r\n                                gain.value += 1\r\n                                gain.source = \"Recovered from Dying\";\r\n                            });\r\n                        } else {\r\n                            characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Wounded\", value: 1, source: \"Recovered from Dying\" }), false)\r\n                        }\r\n                    }\r\n                    if (creature.health.currentHP(creature, characterService, effectsService).result == 0) {\r\n                        if (characterService.get_AppliedConditions(creature, \"Unconscious\", \"0 Hit Points\").length == 0) {\r\n                            characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Unconscious\", source: \"0 Hit Points\" }), false)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n        }\r\n\r\n        //End the condition's activity if there is one and it is active.\r\n        if (!taken && gain.source) {\r\n            let activityGains = characterService.get_OwnedActivities(creature, creature.level, true).filter(activityGain => activityGain.active && activityGain.name == gain.source);\r\n            if (activityGains.length) {\r\n                let activityGain: ActivityGain;\r\n                //Try to find the activity with the same duration as the condition. If there isn't one, end the first one.\r\n                if (activityGains.length > 1) {\r\n                    activityGain = activityGains.find(activityGain => activityGain.duration == gain.duration)\r\n                }\r\n                if (!activityGain) {\r\n                    activityGain = activityGains[0];\r\n                }\r\n                let activity = characterService.activitiesService.get_Activities(activityGain.name)[0];\r\n                characterService.activitiesService.activate_Activity(creature, \"\", characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, activityGain, activity, false, false);\r\n            }\r\n        }\r\n\r\n        //End the condition's spell if there is one and it is active.\r\n        if (!taken && gain.spellGainID) {\r\n            let character = characterService.get_Character();\r\n            //If no other conditions have this spellgain's ID, find the spellgain and disable it.\r\n            if (!characterService.get_AppliedConditions(character).some(conditionGain => conditionGain !== gain && conditionGain.spellGainID == gain.spellGainID)) {\r\n                character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.id == gain.spellGainID && taken.gain.active).forEach(taken => {\r\n                    //Tick down the duration and the cooldown.\r\n                    let spell = characterService.spellsService.get_Spells(taken.gain.name)[0];\r\n                    if (spell) {\r\n                        characterService.spellsService.process_Spell(character, taken.gain.target, characterService, itemsService, characterService.conditionsService, null, taken.gain, spell, 0, false, false)\r\n                    }\r\n                    characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                });\r\n            }\r\n        }\r\n\r\n        //Update Health when Wounded changes.\r\n        if (condition.name == \"Wounded\") {\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n        }\r\n\r\n        //Update Attacks if attack restrictions apply.\r\n        if (condition.attackRestrictions.length) {\r\n            characterService.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n\r\n        //Update Defense if Defense conditions are changed.\r\n        if (gain.source == \"Defense\") {\r\n            characterService.set_ToChange(creature.type, \"defense\");\r\n        }\r\n\r\n        //Update Time and Health if the condition has an instant duration.\r\n        if (gain.duration == 1) {\r\n            characterService.set_ToChange(creature.type, \"time\");\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n        }\r\n\r\n    }\r\n\r\n    add_ConditionItem(creature: Character | AnimalCompanion, characterService: CharacterService, itemsService: ItemsService, gainItem: ItemGain, condition: Condition) {\r\n        let newItem: Item = itemsService.get_CleanItems()[gainItem.type].filter((item: Item) => item.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n        if (newItem) {\r\n            if (newItem.can_Stack()) {\r\n                //For consumables, add the appropriate amount and don't track them.\r\n                characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, false, false, false, gainItem.amount);\r\n            } else {\r\n                //For equipment, track the ID of the newly added item for removal.\r\n                let grantedItem = characterService.grant_InventoryItem(creature, creature.inventories[0], newItem, false, false, true);\r\n                gainItem.id = grantedItem.id;\r\n                if (grantedItem.get_Name) {\r\n                    grantedItem.grantedBy = \"(Granted by \" + condition.name + \")\";\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    remove_ConditionItem(creature: Character | AnimalCompanion, characterService: CharacterService, itemsService: ItemsService, gainItem: ItemGain) {\r\n        if (itemsService.get_Items()[gainItem.type].filter((item: Item) => item.name.toLowerCase() == gainItem.name.toLowerCase())[0]?.can_Stack()) {\r\n            let items: Item[] = creature.inventories[0][gainItem.type].filter((item: Item) => item.name == gainItem.name);\r\n            //For consumables, remove the same amount as previously given. This is not ideal, but you can easily add more in the inventory.\r\n            if (items.length) {\r\n                characterService.drop_InventoryItem(creature, creature.inventories[0], items[0], false, true, true, gainItem.amount);\r\n            }\r\n        } else {\r\n            //For equipment, we have saved the ID and remove exactly that item.\r\n            let item: Item = creature.inventories[0][gainItem.type].find((item: Item) => item.id == gainItem.id);\r\n            if (item) {\r\n                if ((item as Equipment).gainInventory && (item as Equipment).gainInventory.length) {\r\n                    //If a temporary container is destroyed, return all contained items to the main inventory.\r\n                    creature.inventories.filter(inv => inv.itemId == item.id).forEach(inv => {\r\n                        inv.allItems().forEach(invItem => {\r\n                            itemsService.move_InventoryItem(creature, invItem, creature.inventories[0], inv, characterService);\r\n                        });\r\n                    });\r\n                }\r\n                characterService.drop_InventoryItem(creature, creature.inventories[0], item, false, true, true);\r\n            }\r\n            gainItem.id = \"\";\r\n        }\r\n    }\r\n\r\n    tick_Conditions(creature: Creature, turns: number = 10, yourTurn: number) {\r\n        let activeConditions = creature.conditions;\r\n        while (turns > 0) {\r\n            let activeConditions = creature.conditions;\r\n            activeConditions = activeConditions.sort(function (a, b) {\r\n                // Sort conditions by the length of either their nextstage or their duration, whichever is shorter.\r\n                let compareA: number[] = [];\r\n                if (a.nextStage > 0) { compareA.push(a.nextStage); }\r\n                if (a.duration > 0) { compareA.push(a.duration); }\r\n                let compareB: number[] = [];\r\n                if (b.nextStage > 0) { compareB.push(b.nextStage); }\r\n                if (b.duration > 0) { compareB.push(b.duration); }\r\n                if (!compareA.length) {\r\n                    return 1\r\n                } else if (!compareB.length) {\r\n                    return -1\r\n                } else {\r\n                    return Math.min(...compareA) - Math.min(...compareB)\r\n                }\r\n            });\r\n            if (activeConditions.some(gain => (gain.duration > 0 && gain.choice != \"Onset\") || gain.nextStage > 0) || activeConditions.some(gain => gain.decreasingValue)) {\r\n                //Get the first condition that will run out\r\n                let first: number;\r\n                //If any condition has a decreasing Value per round, step 5 (to the end of the Turn) if it is your Turn or 10 (1 turn) at most\r\n                //Otherwise find the next step from either the duration or the nextStage of the first gain of the sorted list.\r\n                if (activeConditions.some(gain => gain.decreasingValue)) {\r\n                    if (yourTurn == 5) {\r\n                        first = 5;\r\n                    } else {\r\n                        first = 10;\r\n                    }\r\n                } else {\r\n                    if (activeConditions.some(gain => (gain.duration > 0 && gain.choice != \"Onset\") || gain.nextStage > 0)) {\r\n                        let firstObject: ConditionGain = activeConditions.filter(gain => gain.duration > 0 || gain.nextStage > 0)[0]\r\n                        let durations: number[] = [];\r\n                        if (firstObject.duration > 0 && firstObject.choice != \"Onset\") { durations.push(firstObject.duration); }\r\n                        if (firstObject.nextStage > 0) { durations.push(firstObject.nextStage); }\r\n                        first = Math.min(...durations);\r\n                    }\r\n                }\r\n                //Either to the next condition to run out or decrease their value or step the given turns, whichever comes first\r\n                let step = Math.min(first, turns);\r\n                activeConditions.filter(gain => gain.duration > 0 && gain.choice != \"Onset\").forEach(gain => {\r\n                    gain.duration -= step;\r\n                });\r\n                activeConditions.filter(gain => gain.nextStage > 0).forEach(gain => {\r\n                    gain.nextStage -= step;\r\n                    if (gain.nextStage <= 0) {\r\n                        gain.nextStage = -1;\r\n                    }\r\n                });\r\n                //If any conditions have their value decreasing, do this now.\r\n                if ((yourTurn == 5 && step == 5) || (yourTurn == 0 && step == 10)) {\r\n                    activeConditions.filter(gain => gain.decreasingValue).forEach(gain => {\r\n                        gain.value--;\r\n                    });\r\n                }\r\n                turns -= step;\r\n            } else {\r\n                turns = 0;\r\n            }\r\n        }\r\n        creature.conditions = activeConditions;\r\n    }\r\n\r\n    rest(creature: Creature, characterService: CharacterService) {\r\n        creature.conditions.filter(gain => gain.duration == -2).forEach(gain => {\r\n            gain.duration = 0;\r\n        });\r\n\r\n        //After resting with full HP, the Wounded condition is removed.\r\n        if (characterService.get_Health(creature).damage == 0) {\r\n            creature.conditions.filter(gain => gain.name == \"Wounded\").forEach(gain => characterService.remove_Condition(creature, gain, false));\r\n        }\r\n        //If Verdant Metamorphosis is active, remove the following non-permanent conditions after resting: Drained, Enfeebled, Clumsy, Stupefied and all poisons and diseases of 19th level or lower. \r\n        if (characterService.effectsService.get_EffectsOnThis(creature, \"Verdant Metamorphosis\").length) {\r\n            creature.conditions.filter(gain => gain.duration != -1 && !gain.lockedByParent && [\"Drained\", \"Enfeebled\", \"Clumsy\", \"Stupefied\"].includes(gain.name)).forEach(gain => { gain.value = -1 })\r\n            creature.conditions.filter(gain => gain.duration != -1 && !gain.lockedByParent && gain.value != -1 && this.get_Conditions(gain.name)?.[0]?.type == \"afflictions\").forEach(gain => {\r\n                if (!characterService.itemsService.get_CleanItems().alchemicalpoisons.some(poison => gain.name.includes(poison.name) && poison.level > 19)) {\r\n                    gain.value = -1;\r\n                }\r\n            })\r\n        }\r\n        //After resting, the Fatigued condition is removed (unless locked by its parent), and the value of Doomed and Drained is reduced (unless locked by its parent).\r\n        creature.conditions.filter(gain => gain.name == \"Fatigued\" && !gain.valueLockedByParent).forEach(gain => characterService.remove_Condition(creature, gain), false);\r\n        creature.conditions.filter(gain => gain.name == \"Doomed\" && !gain.valueLockedByParent && !(gain.lockedByParent && gain.value == 1)).forEach(gain => { gain.value -= 1 });\r\n        creature.conditions.filter(gain => gain.name == \"Drained\" && !gain.valueLockedByParent && !(gain.lockedByParent && gain.value == 1)).forEach(gain => {\r\n            gain.value -= 1;\r\n            if (gain.apply) {\r\n                creature.health.damage += creature.level;\r\n            }\r\n            if (\r\n                //If you have Fast Recovery or have activated the effect of Forge-Day's Rest, reduce the value by 2 instead of 1.\r\n                (\r\n                    creature.type == \"Character\" &&\r\n                    (creature as Character).get_FeatsTaken(1, creature.level, \"Fast Recovery\").length\r\n                ) ||\r\n                characterService.featsService.get_Feats([], \"Forge-Day's Rest\")?.[0]?.hints.some(hint => hint.active)\r\n            ) {\r\n                gain.value -= 1;\r\n                if (gain.apply) {\r\n                    creature.health.damage += creature.level;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    refocus(creature: Creature, characterService: CharacterService) {\r\n        creature.conditions.filter(gain => gain.duration == -3).forEach(gain => {\r\n            gain.duration = 0;\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.conditions.length) {\r\n            this.loading = true;\r\n            this.load_Conditions();\r\n            this.loading = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.conditions.forEach(condition => {\r\n                condition.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Conditions() {\r\n        this.conditions = [];\r\n        Object.keys(json_conditions).forEach(key => {\r\n            this.conditions.push(...json_conditions[key].map(obj => Object.assign(new Condition(), obj)));\r\n        });\r\n        //Blank choices are saved with \"name\":\"-\" for easier managing; These need to be blanked here.\r\n        this.conditions.forEach(condition => {\r\n            condition.choices.forEach(choice => {\r\n                if (choice.name == \"-\") {\r\n                    choice.name = \"\";\r\n                }\r\n            })\r\n            if (condition.choices.length && !condition.choice) {\r\n                condition.choice = condition.choices[0].name\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { AbilityBoost } from './AbilityBoost';\r\nimport { Character } from './Character';\r\n\r\nexport class AbilityChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    //How many of the available ability boosts are lost if you rolled your own ability scores?\r\n    public baseValuesLost: number = 0;\r\n    public boosts: AbilityBoost[] = [];\r\n    public filter: string[] = [];\r\n    public id: string = \"\";\r\n    public infoOnly: boolean = false;\r\n    public source: string = \"\";\r\n    maxAvailable(character: Character) {\r\n        let lost = 0;\r\n        if (character.baseValues.length > 0) {\r\n            lost = this.baseValuesLost\r\n        }\r\n        return this.available - lost;\r\n    }\r\n}","<div class=\"newrow lower\" *ngIf=\"spell\">\r\n    <div class=\"newrow left-aligned\">\r\n        <cite class=\"trait\" *ngFor=\"let trait of spell.traits; trackBy:trackByIndex;\" [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n        <app-tags [creature]=\"'Character'\" [objectName]=\"spell.name\" [showTraits]=true [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n    </div>\r\n    <div class=\"list-item lower newrow problem\" *ngIf=\"spell.inputRequired\">\r\n        <strong>Player input required:</strong>\r\n        <div class=\"newrow left-aligned\">\r\n            <p *ngFor=\"let inputRequired of spell.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                {{inputRequired}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.sourceBook\">\r\n        <span>\r\n            <strong>Source</strong>\r\n            <i>&nbsp;{{spell.sourceBook}}</i>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.PFSnote\">\r\n        <span>\r\n            <strong>PFS Note</strong>\r\n            <i>&nbsp;{{spell.PFSnote}}</i>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.traditions && !spell.traditions.includes('Focus')\">\r\n        <span>\r\n            <strong>Traditions</strong>\r\n            {{spell.traditions.join(', ')}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.castType || spell.cost\">\r\n        <span *ngIf=\"spell.castType\">\r\n            <strong>Cast</strong>\r\n            <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons><span>{{spell.castType}}&nbsp;</span>\r\n        </span>\r\n        <span *ngIf=\"spell.cost\">\r\n            <strong>Cost</strong>\r\n            {{spell.cost}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.trigger\">\r\n        <span>\r\n            <strong>Trigger</strong>\r\n            {{spell.trigger}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.range || spell.area || spell.targets\">\r\n        <span *ngIf=\"spell.range\">\r\n            <strong>Range</strong>\r\n            {{spell.range}}&nbsp;\r\n        </span>\r\n        <span *ngIf=\"spell.area\">\r\n            <strong>Area</strong>\r\n            {{spell.area}}&nbsp;\r\n        </span>\r\n        <span *ngIf=\"spell.targets\">\r\n            <strong>Targets</strong>\r\n            {{spell.targets}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"spell.savingThrow || spell.duration\">\r\n        <span *ngIf=\"spell.savingThrow\">\r\n            <strong>Saving Throw</strong>\r\n            {{spell.savingThrow}}&nbsp;\r\n        </span>\r\n        <span *ngIf=\"spell.duration\">\r\n            <strong>Duration</strong>\r\n            {{spell.duration}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngFor=\"let desc of get_Heightened(spell.desc).split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.critsuccess\">\r\n        <span>\r\n            <strong>Critical Success&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.critsuccess)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.success\">\r\n        <span>\r\n            <strong>Success&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.success)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.failure\">\r\n        <span>\r\n            <strong>Failure&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.failure)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow lower left-aligned\" *ngIf=\"spell.critfailure\">\r\n        <span>\r\n            <strong>Critical Failure&nbsp;</strong>\r\n            <span [innerHTML]=\"get_Heightened(spell.critfailure)\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngFor=\"let heightened of spell.heightened; trackBy:trackByIndex;\">\r\n        <span>\r\n            <strong>Heightened {{heightened.level}}</strong>\r\n            {{heightened.desc}}\r\n        </span>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngFor=\"let feat of get_FeatsShowingOn(spell.name); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">{{feat.name}}</header>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"feat.traits.lenght\">\r\n            <cite class=\"trait\" *ngFor=\"let trait of feat.traits; trackBy:trackByIndex;\" [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngFor=\"let desc of feat.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n            <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let shownSpellSet of spell.showSpells; trackBy:trackByIndex;\">\r\n        <div *ngFor=\"let shownSpell of get_Spells(shownSpellSet.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader left-aligned\">{{shownSpell.name}}\r\n                <app-actionIcons [actionString]=\"shownSpell.actions\">\r\n                </app-actionIcons> {{shownSpell.castType.toString()}}</header>\r\n            <app-spell [spell]=shownSpell [spellLevel]=\"shownSpellSet.level || spellLevel || 0\"></app-spell>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Spell } from '../Spell';\r\nimport { TraitsService } from '../traits.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spell',\r\n    templateUrl: './spell.component.html',\r\n    styleUrls: ['./spell.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellComponent implements OnInit {\r\n\r\n    @Input()\r\n    spell: Spell\r\n    @Input()\r\n    spellLevel: number;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    get_Heightened(desc: string) {\r\n        let levelNumber = this.spellLevel;\r\n        if (!levelNumber || levelNumber == -1) {\r\n            levelNumber = this.characterService.get_Character().get_SpellLevel();\r\n        } else if (this.spell.levelreq && levelNumber < this.spell.levelreq) {\r\n            levelNumber = this.spell.levelreq;\r\n        }\r\n        return this.spell.get_Heightened(desc, levelNumber)\r\n    }\r\n\r\n    get_FeatsShowingOn(spellName: string) {\r\n        return this.characterService.get_FeatsShowingOn(spellName);\r\n    }\r\n\r\n    get_Spells(name: string) {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.characterService.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"individualspells\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == \"character\" && \r\n                    (\r\n                        view.target.toLowerCase() == \"all\" ||\r\n                        (view.target.toLowerCase() == \"individualspells\" && [this.spell.name.toLowerCase(), \"all\"].includes(view.subtarget.toLowerCase()))\r\n                    )) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div id=\"crafting\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleCraftingMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"get_CraftingMenuState()=='in'\">\r\n        <div class=\"list-item\">\r\n            <strong>Find (in Name, Description or Traits)</strong>\r\n            <span>\r\n                <input type=text [(ngModel)]=\"wordFilter\" (ngModelChange)=check_Filter() />\r\n                <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>Sort by</strong>\r\n            <select [(ngModel)]=\"sorting\">\r\n                <option *ngFor=\"let sort of ['Name','Level']\" [ngValue]=\"sort.toLowerCase()\">\r\n                    {{sort}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"itembox-inner\">\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <div class=\"value\">{{get_Character().cash[0]}}</div>\r\n                    <strong>Gold</strong>\r\n                    <div class=\"value\">{{get_Character().cash[1]}}</div>\r\n                    <strong>Silver</strong>\r\n                    <div class=\"value\">{{get_Character().cash[2]}}</div>\r\n                    <strong>Copper</strong>\r\n                    <div class=\"value center-aligned\">{{get_Character().cash[3]}}</div>\r\n                </div>\r\n            </div>\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashP\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Gold</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashG\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Silver</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashS\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Copper</strong>\r\n                    <input class=\"number4 center-aligned\" type=\"number\" [(ngModel)]=\"cashC\"\r\n                        (keypress)=\"numbersOnly($event)\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span>\r\n                        <button (click)=\"change_Cash(1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\">Gain</button>\r\n                    </span>\r\n                    <span>\r\n                        <button (click)=\"change_Cash(-1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\"\r\n                            [disabled]=\"!have_Funds()\">Spend</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngFor=\"let items of [get_Items()]; trackBy:trackByIndex;\">\r\n                <ng-container *ngIf=\"have_Feat('Snare Specialist')\">\r\n                    <ng-container *ngFor=\"let preparations of [get_SnareSpecialistPreparations()]\">\r\n                        <header class=\"sectionHeader\">Snare Specialist</header>\r\n                        <div class=\"list-item\">\r\n                            You can prepare {{preparations.available - preparations.prepared}} of\r\n                            {{preparations.available}} snares for quick deployment.\r\n                        </div>\r\n                        <ng-container *ngFor=\"let snares of [get_VisibleItems(items.snares)]; trackBy:trackByIndex;\">\r\n                            <ng-container *ngFor=\"let listID of ['snarespecialist']; trackBy:trackByIndex;\">\r\n                                <button class=\"list-item\" [ngClass]=\"{'invisible':!snares.length}\"\r\n                                    (click)=\"toggle_List(listID)\">\r\n                                    <header class=\"sectionHeader\">Snares</header>\r\n                                </button>\r\n                                <div class=\"list-item\" [ngClass]=\"{'invisible':!snares.length}\"\r\n                                    *ngIf=\"get_ShowList()==listID||get_ShowList()=='All'\">\r\n                                    <ng-container *ngFor=\"let item of snares; trackBy:trackByIndex;\">\r\n                                        <ng-container *ngFor=\"let prepared of [get_PreparedForQuickCrafting(item)]\">\r\n                                            <div class=\"list-item\"\r\n                                                *ngFor=\"let inventoryID of [listID+item.id]; trackBy:trackByIndex;\">\r\n                                                <button class=\"newrow sublist-toggle\"\r\n                                                    [ngClass]=\"{'fancy-button':prepared}\"\r\n                                                    (click)=\"toggle_Item(inventoryID)\">\r\n                                                    <span>{{prepared}}\r\n                                                        {{(item.get_Name) ? item.get_Name() : item.name}}</span>\r\n                                                    <span>{{(item.level) ? \"Level \"+item.level :\r\n                                                        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"}}</span>\r\n                                                </button>\r\n                                                <div class=\"list-item sublist lower\" [ngClass]=\"{'fancy-list':prepared}\"\r\n                                                    *ngIf=\" get_ShowItem()==inventoryID\">\r\n                                                    <span>\r\n                                                        <button class=\"center-aligned\"\r\n                                                            (click)=\"on_PrepareForQuickCrafting(item, -1)\"\r\n                                                            [disabled]=\"!prepared\">\r\n                                                            -\r\n                                                        </button>\r\n                                                        <button class=\"center-aligned\"\r\n                                                            (click)=\"on_PrepareForQuickCrafting(item, 1)\"\r\n                                                            [disabled]=\"preparations.available <= preparations.prepared\">\r\n                                                            +\r\n                                                        </button>\r\n                                                        Prepare for quick deployment\r\n                                                    </span>\r\n                                                    <app-item [item]=item [itemStore]=true></app-item>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <header class=\"sectionHeader\">Craft Items</header>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Crafting'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                <div class=\"list-item\">\r\n                    <strong>Crafting costs</strong><br />\r\n                    The material cost of Crafting an item can vary depending on your success using the Craft activity.\r\n                    If you Craft an item in any way that requires you to spend materials, manually spend the appropriate\r\n                    amount of currency and any required items.\r\n                </div>\r\n                <div class=\"list-item\">\r\n                    <strong>Crafting costs</strong><br />\r\n                    When available, a shoddy item usually costs half the Price of a standard item, though you can never\r\n                    sell one in any case. Attacks and checks involving a shoddy item take a –2 item penalty. This\r\n                    penalty also applies to any DCs that a shoddy item applies to (such as AC, for shoddy armor). A\r\n                    shoddy suit of armor also worsens the armor's check penalty by 2. A shoddy item's Hit Points and\r\n                    Broken Threshold are each half that of a normal item of its type.\r\n                </div>\r\n                <ng-container *ngFor=\"let itemSet of items.names; let index = index; trackBy:trackByIndex;\">\r\n                    <ng-container *ngFor=\"let listID of [(index*1000+1000)]; trackBy:trackByIndex;\">\r\n                        <button class=\"list-item\"\r\n                            [ngStyle]=\"{'display':!get_VisibleItems(items[itemSet.key]).length ? 'none' : 'flex' }\"\r\n                            (click)=\"toggle_List(listID)\">\r\n                            <header class=\"sectionHeader\">{{itemSet.name}}</header>\r\n                        </button>\r\n                        <div class=\"list-item\"\r\n                            [ngStyle]=\"{'display':!get_VisibleItems(items[itemSet.key]).length ? 'none' : 'flex' }\"\r\n                            *ngIf=\"get_ShowList()==listID||get_ShowList()=='All'\">\r\n                            <ng-container\r\n                                *ngFor=\"let item of get_VisibleItems(items[itemSet.key]); trackBy:trackByIndex;\">\r\n                                <div class=\"list-item\"\r\n                                    *ngFor=\"let inventoryID of [listID+item.id]; trackBy:trackByIndex;\">\r\n                                    <button class=\"newrow sublist-toggle\" (click)=\"toggle_Item(inventoryID)\">\r\n                                        <span>{{(item.get_Name) ? item.get_Name() : item.name}}</span>\r\n                                        <span *ngIf=\"item.type == 'armors'\">{{([\"Light Barding\",\"Heavy\r\n                                            Barding\"].includes(item.prof)) ? item.prof : item.prof.split(\" \")[0]}}\r\n                                            {{item.group}}\r\n                                            {{(item.type==\"armors\" && (![\"Unarmored Defense\",\"Light Barding\",\"Heavy\r\n                                            Barding\"].includes(item.prof))) ? \"Armor\" : \"\"}}</span>\r\n                                        <span *ngIf=\"item.type == 'weapons'\">{{(item.prof == 'Unarmed') ? item.prof :\r\n                                            item.prof.substr(0, item.prof.length - 8)}}\r\n                                            {{item.group}}</span>\r\n                                        <span>{{(item.level) ? \"Level \"+item.level :\r\n                                            \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"}}</span>\r\n                                    </button>\r\n                                    <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                        <ng-container>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"grant_Item(item)\"\r\n                                                [ngbTooltip]=\"cannot_Craft(item).join('\\n')\"\r\n                                                [disabled]=\"cannot_Craft(item).length\">\r\n                                                Craft using Craft activity\r\n                                            </button>\r\n                                        </ng-container>\r\n                                        <app-itemMaterial class=\"newrow\" [item]=item [craftingStation]=\"true\">\r\n                                        </app-itemMaterial>\r\n                                        <div class=\"newrow list-item\" *ngIf=\"item.baseType=='Equipment'\">\r\n                                            <span>\r\n                                                <input id=\"{{item.id}}shoddy\" type=\"checkbox\" [(ngModel)]=\"item.shoddy\">\r\n                                                <label for=\"{{item.id}}shoddy\">Shoddy</label>\r\n                                            </span>\r\n                                        </div>\r\n                                        <app-item [item]=item [itemStore]=true></app-item>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ItemsService } from '../items.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { Item } from '../Item';\r\nimport { Character } from '../Character';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-crafting',\r\n    templateUrl: './crafting.component.html',\r\n    styleUrls: ['./crafting.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CraftingComponent implements OnInit {\r\n\r\n    private showList: string = \"\";\r\n    private showItem: number = 0;\r\n    public id: number = 0;\r\n    public wordFilter: string = \"\";\r\n    public sorting: \"level\"|\"name\" = \"level\";\r\n    public creature: string = \"Character\";\r\n    public cashP: number = 0;\r\n    public cashG: number = 0;\r\n    public cashS: number = 0;\r\n    public cashC: number = 0;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private itemsService: ItemsService,\r\n        private characterService: CharacterService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(type: string) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    toggle_Item(id: number) {\r\n        if (this.showItem == id) {\r\n            this.showItem = 0;\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.characterService.get_CraftingMenuState();\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList == \"All\") {\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = \"All\";\r\n        }\r\n    }\r\n\r\n    toggleCraftingMenu() {\r\n        this.characterService.toggle_Menu(\"crafting\");\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    have_Funds(sum: number = 0) {\r\n        let character = this.characterService.get_Character();\r\n        if (!sum) {\r\n            sum = (this.cashP * 1000) + (this.cashG * 100) + (this.cashS * 10) + (this.cashC);\r\n        }\r\n        let funds = (character.cash[0] * 1000) + (character.cash[1] * 100) + (character.cash[2] * 10) + (character.cash[3]);\r\n        if (sum <= funds) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number = 0, changeafter: boolean = false) {\r\n        this.characterService.change_Cash(multiplier, sum, this.cashP, this.cashG, this.cashS, this.cashC);\r\n        if (changeafter) {\r\n            this.characterService.set_Changed(\"inventory\");\r\n        }\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_CraftingItems();\r\n    }\r\n\r\n    get_InventoryItemSets(type: string) {\r\n        return this.characterService.get_Character().inventories.map(inventory => inventory[type]);\r\n    }\r\n\r\n    get_VisibleItems(items: Item[]) {\r\n        let have_CraftingBook = this.get_Character().inventories.find(inv => inv.adventuringgear.find(gear => gear.name == \"Basic Crafter's Book\"));\r\n        return items.filter((item: Item) =>\r\n            (\r\n                this.get_FormulasLearned(item.id).length ||\r\n                (\r\n                    item.level == 0 && have_CraftingBook\r\n                )\r\n            ) &&\r\n            !item.hide &&\r\n            (\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        item.name.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.desc.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.traits.filter(trait => trait.toLowerCase().includes(this.wordFilter.toLowerCase())).length\r\n                    )\r\n                )\r\n            )\r\n        ).sort((a, b) => {\r\n            if (a[this.sorting] > b[this.sorting]) {\r\n                return 1;\r\n            }\r\n            if (a[this.sorting] < b[this.sorting]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    cannot_Craft(item: Item) {\r\n        //Return any reasons why you cannot craft an item.\r\n        let character: Character = this.get_Character();\r\n        let reasons: string[] = [];\r\n        if (item.traits.includes(\"Alchemical\") && !character.get_FeatsTaken(1, character.level, \"Alchemical Crafting\").length) {\r\n            reasons.push(\"You need the Alchemical Crafting skill feat to create alchemical items.\")\r\n        }\r\n        if (item.traits.includes(\"Magical\") && !character.get_FeatsTaken(1, character.level, \"Magical Crafting\").length) {\r\n            reasons.push(\"You need the Magical Crafting skill feat to create magic items.\")\r\n        }\r\n        if (item.traits.includes(\"Snare\") && !character.get_FeatsTaken(1, character.level, \"Snare Crafting\").length) {\r\n            reasons.push(\"You need the Snare Crafting skill feat to create snares.\")\r\n        }\r\n        if (item.level > character.level) {\r\n            reasons.push(\"The item to craft must be your level or lower.\")\r\n        }\r\n        if (item.level >= 16 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 8) {\r\n            reasons.push(\"You must be legendary in Crafting to craft items of 16th level or higher.\")\r\n        } else if (item.level >= 9 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 6) {\r\n            reasons.push(\"You must be a master in Crafting to craft items of 9th level or higher.\")\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    grant_Item(item: Item) {\r\n        let amount = 1;\r\n        if (item[\"stack\"]) {\r\n            amount = item[\"stack\"];\r\n        }\r\n        item.crafted = true;\r\n        this.characterService.grant_InventoryItem(this.characterService.get_Character(), this.characterService.get_Character().inventories[0], item, false, true, true, amount);\r\n    }\r\n\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.get_Character().get_FormulasLearned(id, source);\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length;\r\n    }\r\n\r\n    get_SnareSpecialistPreparations() {\r\n        if (this.have_Feat(\"Snare Specialist\")) {\r\n            let prepared: number = this.get_FormulasLearned().reduce((sum, current) => sum + current.snareSpecialistPrepared, 0);\r\n            let available = 0;\r\n            let character = this.get_Character();\r\n            let crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n            if (crafting >= 4) {\r\n                available += 4;\r\n            }\r\n            if (crafting >= 6) {\r\n                available += 2;\r\n            }\r\n            if (crafting >= 8) {\r\n                available += 2;\r\n            }\r\n            if (this.have_Feat(\"Ubiquitous Snares\")) {\r\n                available *= 2;\r\n            }\r\n            return { available: available, prepared: prepared };\r\n        }\r\n    }\r\n\r\n    on_PrepareForQuickCrafting(item: Item, amount: number) {\r\n        if (this.get_FormulasLearned(item.id).length) {\r\n            this.get_FormulasLearned(item.id)[0].snareSpecialistPrepared += amount;\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        //this.characterService.set_ToChange(\"Character\", \"crafting\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_PreparedForQuickCrafting(item: Item) {\r\n        if (this.get_FormulasLearned(item.id).length) {\r\n            return this.get_FormulasLearned(item.id)[0].snareSpecialistPrepared;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.itemsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"crafting\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"crafting\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n}\r\n","import { FeatTaken } from './FeatTaken';\r\n\r\nexport class FeatChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    public feats: FeatTaken[] = [];\r\n    public filter: string[] = [];\r\n    public id: string = \"\";\r\n    //If insertLevel is set, this featChoice is placed at the designated class level when granted by a feat.\r\n    // I.e. if a feat contains a FeatChoice with insertLevel = 5, the choice is added to level 5 regardless of when the feat was taken.\r\n    public insertLevel: number = 0;\r\n    //If insertClass is set, this featChoice is only granted by a feat if the character class name matches this name.\r\n    // This is especially useful for class choices (hunter's edge, rogue racket, bloodline etc.) that don't give certain benefits when multiclassing.\r\n    public insertClass: string = \"\";\r\n    public level: number = 0;\r\n    //If showOnSheet is set, this choice is intended to be made on the character sheet instead of while building the character.\r\n    // This is relevant for features like Combat Flexibility.\r\n    public showOnSheet: boolean = false;\r\n    //If showOnCurrentLevel is set, this choice is always shown at the current character level. This allows it to use the current level for all its requirements.\r\n    // This is relevant for feats like Raging Intimidation.\r\n    public showOnCurrentLevel: boolean = false;\r\n    public source: string = \"\";\r\n    //For special choices, we don't really use true feats, but make choices that can best be represented by the extensive feat structure.\r\n    //In this case, we don't go looking for feats with a certain trait, but rely completely on the filter.\r\n    //The choice's type will be the choice title in the character configuration.\r\n    public specialChoice: boolean = false;\r\n    //Feats may give feat choices with a level attribute of \"half your level\", which can be formulated here (e.g. as \"level.number / 2\") and will be evaluated while taking the feat.\r\n    //It will always be rounded down.\r\n    public dynamicLevel: string = \"\";\r\n    //You can add requirements to the ignore list. These get evaluated and must result in: \"levelreq\", \"abilityreq\", \"featreq\", \"skillreq\", \"heritagereq\", \"dedicationlimit\" to do anything.\r\n    public ignoreRequirements: string[] = [];\r\n    public type: string = \"\";\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { Feat } from '../Feat';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Effect } from '../Effect';\r\nimport { Condition } from '../Condition';\r\nimport { CharacterService } from '../character.service';\r\n\r\n@Component({\r\n    selector: 'app-gridIcon',\r\n    templateUrl: './gridIcon.component.html',\r\n    styleUrls: ['./gridIcon.component.scss'],\r\n    providers: [NgbPopoverConfig] // add NgbPopoverConfig to the component providers\r\n})\r\nexport class GridIconComponent implements OnInit {\r\n\r\n    @Input()\r\n    title: string = \"\";\r\n    @Input()\r\n    detail: string = \"\";\r\n    @Input()\r\n    subTitle: string = \"\";\r\n    @Input()\r\n    superTitle: string = \"\";\r\n    @Input()\r\n    type: \"\" | \"Condition\" | \"Feat\" = \"\";\r\n    @Input()\r\n    desc: string = \"\";\r\n    @Input()\r\n    shortDesc: string = \"\";\r\n    @Input()\r\n    condition: ConditionGain = null;\r\n    @Input()\r\n    originalCondition: Condition = null;\r\n    @Input()\r\n    feat: Feat = null;\r\n    @Input()\r\n    effect: Effect = null;\r\n\r\n    constructor(\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"click\";\r\n        tooltipConfig.placement = \"auto\";\r\n        //For touch compatibility, the tooltip should open on hover, but not on tap. Because a tap counts as both hover and click,\r\n        // we allow both and have a delay of 0 so that the tooltip opens on hover and immediately closes again on click.\r\n        tooltipConfig.openDelay = 0;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_IconSubTitle() {\r\n        if (this.condition?.duration || this.effect?.duration) {\r\n            let duration = this.condition?.duration || this.effect?.duration || 0;\r\n            if (duration < 10) {\r\n                switch (duration) {\r\n                    case -3:\r\n                        return \"<i class='bi-eye-fill'></i>\"\r\n                    case -2:\r\n                        return \"<i class='bi-sunrise-fill'></i>\"\r\n                    case -1:\r\n                        return \"<i class='bi-arrow-repeat'></i>\"\r\n                    case 0:\r\n                        return \"\";\r\n                    case 1:\r\n                        return \"<i class='bi-exclamation-diamond-fill'></i>\"\r\n                    case 5:\r\n                        return \"<i class='bi-play-fill'></i>\"\r\n                }\r\n            }\r\n        }\r\n        return this.subTitle;\r\n    }\r\n\r\n    get_IsOneWordTitle() {\r\n        let title: string = this.title;\r\n        if (this.feat) {\r\n            if (this.feat.subType) {\r\n                title = this.title || this.feat.superType;\r\n            } else {\r\n                title = this.title || this.feat.name;\r\n            }\r\n        } else if (this.condition) {\r\n            title = this.title || this.condition.name;\r\n        } else if (this.effect) {\r\n            title = this.title || this.effect.target;\r\n        }\r\n        return !title.includes(\" \");\r\n    }\r\n\r\n    get_IconTitle() {\r\n        let iconTitle: string = this.title;\r\n        if (this.feat) {\r\n            if (this.feat.subType) {\r\n                iconTitle = this.title || this.feat.superType;\r\n            } else {\r\n                iconTitle = this.title || this.feat.name;\r\n            }\r\n        } else if (this.condition) {\r\n            iconTitle = this.title || this.condition.name;\r\n        } else if (this.effect) {\r\n            iconTitle = this.title || this.effect.target;\r\n        }\r\n        if (iconTitle) {\r\n            if (!iconTitle.includes(\" \")) {\r\n                //If the title does not contain spaces, and is not just a number, keep only letters and return the first 3 letters.\r\n                //Return numbers unchanged\r\n                if (isNaN(parseInt(iconTitle))) {\r\n                    iconTitle = iconTitle.replace(/[^A-Z]/gi, '').substr(0, 3);\r\n                }\r\n            } else if (iconTitle.match(\".*[A-Z].*\")) {\r\n                //If the title has spaces and contains capital letters, keep only capital letters and return the first 4.\r\n                iconTitle = iconTitle.replace(/[^A-Z ]/g, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").substr(0, 4);\r\n            } else if (iconTitle.match(\".*[A-Za-z].*\")) {\r\n                //If the title has spaces and contains no capital letters, keep only the first letters of every word and return the first 4.\r\n                iconTitle = iconTitle.replace(/[^A-Z ]/gi, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").toUpperCase().substr(0, 4);\r\n            }\r\n        }\r\n        if (iconTitle.length >= 4) {\r\n            //If the title is 4 letters or more, break them into 2*2 to display them as a square.\r\n            iconTitle = iconTitle.substr(0, 2) + \"<br />\" + iconTitle.substr(2, 2);\r\n        }\r\n        return iconTitle;\r\n    }\r\n\r\n    get_IconDetail() {\r\n        let iconDetail: string = this.detail;\r\n        if (this.feat && !iconDetail) {\r\n            if (this.feat.subType) {\r\n                iconDetail = this.feat.subType;\r\n            }\r\n        } else if (this.condition && !iconDetail) {\r\n            if (this.condition.choice.substr(0,6) == \"Stage \") {\r\n                iconDetail = this.condition.choice.replace(\"tage \", \"\");\r\n                return iconDetail;\r\n            } else {\r\n                iconDetail = this.condition.choice;\r\n            }\r\n        }\r\n        if (iconDetail) {\r\n            if (iconDetail.match(\".*[A-Z].*\")) {\r\n                iconDetail = iconDetail.replace(/[^A-Z ]/g, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").substr(0, 2);\r\n            } else {\r\n                iconDetail = iconDetail.replace(/[^a-z ]/gi, '').split(\" \").map(part => part.substr(0, 1)).join(\"\").toUpperCase().substr(0, 2);\r\n            }\r\n        }\r\n        return iconDetail;\r\n    }\r\n\r\n    get_IconSuperTitle() {\r\n        let superTitle: string = this.superTitle;\r\n        //For icon- names, return a <i> with that icon.\r\n        if (this.superTitle.substr(0, 5) == \"icon-\") {\r\n            return \"<i class='\" + superTitle.substr(5) + \"'></i>\"\r\n        }\r\n        //For effect values, show the value as SuperTitle if up to 2 characters long. Longer values will be shown as Value instead.\r\n        if (this.effect) {\r\n            if (this.effect.setValue) {\r\n                superTitle = this.effect.setValue;\r\n            } else if (this.effect.value) {\r\n                superTitle = this.effect.value;\r\n            }\r\n        } else if (this.condition?.duration == 1 || this.condition?.nextStage == -1) {\r\n            //If a condition has a duration of 1, it needs to be handled immediately, and we show an exclamation diamond to point that out.\r\n            return \"<i class='bi-exclamation-diamond'></i>\";\r\n        } else if (this.condition?.lockedByParent || this.condition?.valueLockedByParent) {\r\n            //If a condition or its value is locked by its parent, show a lock.\r\n            return \"<i class='bi-lock'></i>\";\r\n        }\r\n        if (superTitle.length <= 2) {\r\n            return superTitle;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    get_IconValue() {\r\n        //Show condition value, and show effect values over 2 characters. Shorter effect values will be shown as SuperTitle instead.\r\n        if (this.condition?.value) {\r\n            return this.condition.value.toString();\r\n        } else if (this.effect?.setValue?.length > 2) {\r\n            return this.effect.setValue;\r\n        } else if (this.effect?.value?.length > 2) {\r\n            return this.effect.value;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    get_DurationOverlays() {\r\n        if (this.condition?.duration || this.effect?.duration) {\r\n            let duration = this.condition?.duration || this.effect?.duration || 0;\r\n            let maxDuration = this.condition?.maxDuration || this.effect?.maxDuration || 0;\r\n            let percentage = 100 - Math.floor((duration / maxDuration) * 100);\r\n            if (percentage > 50) {\r\n                return [\r\n                    { offset: 0, percentage: 50, over50: 1 },\r\n                    { offset: 50, percentage: percentage - 50, over50: 0 }\r\n                ]\r\n            } else {\r\n                return [\r\n                    { offset: 0, percentage: percentage, over50: 0 },\r\n                    { offset: 50, percentage: 0, over50: 0 }\r\n                ]\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}","<span class=\"iconValue disable-text-selection\"\r\n    [ngStyle]=\"{'color': effect ? 'inherit' : 'var(--textcolor)'}\">{{get_IconValue()}}</span>\r\n<span class=\"iconDetail disable-text-selection\">{{get_IconDetail()}}</span>\r\n<span class=\"iconSuperTitle newrow disable-text-selection\" style=\"text-align: center;\">\r\n    <div [innerHtml]=\"get_IconSuperTitle()\"></div>\r\n</span>\r\n<span class=\"iconTitle newrow disable-text-selection\" style=\"text-align: center;\">\r\n    <div [innerHtml]=\"get_IconTitle()\"></div>\r\n</span>\r\n<span class=\"iconSubTitle disable-text-selection\" [innerHtml]=\"get_IconSubTitle()\"></span>\r\n<ng-container *ngIf=\"(condition?.duration < condition?.maxDuration) || (effect?.duration < effect?.maxDuration)\">\r\n    <ng-container *ngFor=\"let overlay of get_DurationOverlays(); trackBy:trackByIndex;\">\r\n        <div class=\"gridicon-time-overlay\" [style.--offset]=\"overlay.offset\" [style.--percentage]=\"overlay.percentage\"\r\n            [style.--over50]=\"overlay.over50\" [ngClass]=\"{'transition5':!overlay.over50}\"></div>\r\n    </ng-container>\r\n</ng-container>","export class Settings {\r\n    public readonly _className: string = this.constructor.name;\r\n    abilitiesMinimized: boolean = false;\r\n    accent: string = \"#465A8C\";\r\n    darkmode: boolean = true;\r\n    activitiesMinimized: boolean = false;\r\n    attacksMinimized: boolean = false;\r\n    characterMinimized: boolean = false;\r\n    companionMinimized: boolean = false;\r\n    defenseMinimized: boolean = false;\r\n    effectsMinimized: boolean = false;\r\n    familiarMinimized: boolean = false;\r\n    generalMinimized: boolean = false;\r\n    healthMinimized: boolean = false;\r\n    inventoryMinimized: boolean = false;\r\n    skillsMinimized: boolean = false;\r\n    spellbookMinimized: boolean = false;\r\n    spellsMinimized: boolean = false;\r\n    spelllibraryMinimized: boolean = false;\r\n    timeMinimized: boolean = false;\r\n    autoCloseChoices: boolean = false;\r\n    showOtherOptions: boolean = true;\r\n    lowerLevelFeats: boolean = true;\r\n    higherLevelFeats: boolean = true;\r\n    unavailableFeats: boolean = true;\r\n    archetypeFeats: boolean = true;\r\n    hintsShowMoreInformation: boolean = true;\r\n    characterTileMode: boolean = true;\r\n    spellsTileMode: boolean = true;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D10',\r\n  templateUrl: './D10.svg',\r\n  styleUrls: ['./diceIcons_D10.component.css']\r\n})\r\nexport class DiceIcons_D10Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D10\"\r\n        d=\"M 32.00,4.00\r\n           C 32.00,4.00 58.00,28.00 58.00,28.00\r\n             58.00,28.00 58.00,36.00 58.00,36.00\r\n             58.00,36.00 32.18,60.00 32.00,60.00\r\n             31.82,60.00 6.00,36.00 6.00,36.00\r\n             6.00,36.00 6.00,28.00 6.00,28.00\r\n             6.00,28.00 32.00,4.00 32.00,4.00 Z\r\n           M 58.00,36.00\r\n           C 58.00,36.00 50.00,28.00 50.00,28.00\r\n             50.00,28.00 32.00,36.00 32.00,36.00\r\n             32.00,36.00 14.00,28.00 14.00,28.00\r\n             14.00,28.00 6.00,36.00 6.00,36.00M 32.00,36.00\r\n           C 32.00,36.00 32.00,60.00 32.00,60.00M 14.00,28.00\r\n           C 14.00,28.00 32.00,4.00 32.00,4.00\r\n             32.00,4.00 50.00,28.00 50.00,28.00\r\n             50.00,28.00 32.00,36.00 32.00,36.00\r\n             32.00,36.00 14.00,28.00 14.00,28.00 Z\" />\r\n   </g>\r\n</svg>\r\n","import { Injectable } from '@angular/core';\r\nimport { Ability } from './Ability';\r\nimport * as json_abilities from '../assets/json/abilities';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbilitiesService {\r\n    private abilities: Ability[] = []; \r\n    private loading: Boolean = false;\r\n    \r\n    constructor() { }\r\n    \r\n    get_Abilities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.abilities.filter(ability => ability.name == name || name == \"\");\r\n        } else {\r\n            return [new Ability];\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.abilities.length) {\r\n            this.loading = true;\r\n            this.load_Abilities();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Abilities() {\r\n        this.abilities = [];\r\n        Object.keys(json_abilities).forEach(key => {\r\n            this.abilities.push(...json_abilities[key].map(obj => Object.assign(new Ability(), obj)));\r\n        });\r\n    }\r\n}","import { Material } from './Material';\r\n\r\nexport class ShieldMaterial extends Material {\r\n    public readonly _className: string = this.constructor.name;\r\n    \r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { AlchemicalBomb } from './AlchemicalBomb';\r\n\r\nexport class OtherConsumableBomb extends AlchemicalBomb {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Other Consumables (Bombs) should be type \"otherconsumablesbombs\" to be found in the database\r\n    readonly type = \"otherconsumablesbombs\";\r\n}","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Effect } from './Effect';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\n\r\nexport class Bulk {\r\n    public readonly _className: string = this.constructor.name;\r\n    calculate(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService) {\r\n        let maxabsolutes = this.absolutes(creature, effectsService, \"Max Bulk\");\r\n        let currentabsolutes = this.absolutes(creature, effectsService, \"Bulk\");\r\n\r\n        let result = {\r\n            maxabsolutes: maxabsolutes,\r\n            maxbonuses: this.bonuses(creature, effectsService, \"Max Bulk\"),\r\n            maxpenalties: this.penalties(creature, effectsService, \"Max Bulk\"),\r\n            max: this.max(creature, characterService, effectsService, maxabsolutes),\r\n            currentabsolutes: currentabsolutes,\r\n            currentbonuses: this.bonuses(creature, effectsService, \"Bulk\"),\r\n            currentpenalties: this.penalties(creature, effectsService, \"Bulk\"),\r\n            current: this.current(creature, characterService, effectsService, currentabsolutes),\r\n            encumbered: this.encumbered(creature, characterService, effectsService)\r\n        }\r\n        return result;\r\n    }\r\n    absolutes(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_AbsolutesOnThis(creature, name);\r\n    }\r\n    relatives(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_RelativesOnThis(creature, name);\r\n    }\r\n    bonuses(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_BonusesOnThis(creature, name);\r\n    }\r\n    penalties(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_PenaltiesOnThis(creature, name);\r\n    }\r\n    current(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, absolutes: Effect[] = undefined) {\r\n        let inventories = creature.inventories;\r\n        let result: { value: number, explain: string } = { value: 0, explain: \"\" };\r\n        if (characterService.still_loading()) { return result; }\r\n        inventories.forEach(inventory => {\r\n            //To avoid decimal issues, the bulk is rounded to one decimal.\r\n            let bulk = Math.floor(Math.max(inventory.get_Bulk(false) - inventory.bulkReduction, 0) * 10) / 10;\r\n            result.value += bulk;\r\n            result.explain += \"\\n\" + inventory.get_Name(characterService) + \": \" + bulk;\r\n        })\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(creature, effectsService, \"Bulk\");\r\n        }\r\n        absolutes.forEach(effect => {\r\n            result.value = parseInt(effect.setValue);\r\n            result.explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, \"Bulk\").forEach(effect => {\r\n            result.value += parseInt(effect.value);\r\n            result.explain += effect.source + \": \" + effect.value;\r\n        });\r\n        result.value = Math.floor(Math.max(0, result.value));\r\n        //Cut the first newline\r\n        result.explain = result.explain.trim();\r\n        return result;\r\n    }\r\n    encumbered(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, absolutes: Effect[] = undefined) {\r\n        //Gets the basic bulk and adds all effects\r\n        let result: { value: number, explain: string } = { value: 5, explain: \"Base limit: 5\" };\r\n        if (characterService.still_loading()) { return result; }\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        if (str != 0) {\r\n            result.value += str;\r\n            result.explain += \"\\nStrength Modifier: \" + str;\r\n        }\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(creature, effectsService, \"Encumbered Limit\");\r\n        }\r\n        absolutes.forEach(effect => {\r\n            result.value = parseInt(effect.setValue);\r\n            result.explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, \"Encumbered Limit\").forEach(effect => {\r\n            result.value += parseInt(effect.value);\r\n            result.explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n        });\r\n        return result;\r\n    }\r\n    max(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, absolutes: Effect[] = undefined) {\r\n        //Gets the basic bulk and adds all effects\r\n        let result: { value: number, explain: string } = { value: 10, explain: \"Base limit: 10\" };\r\n        if (characterService.still_loading()) { return result; }\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        if (str != 0) {\r\n            result.value += str;\r\n            result.explain += \"\\nStrength Modifier: \" + str;\r\n        }\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(creature, effectsService, \"Max Bulk\");\r\n        }\r\n        absolutes.forEach(effect => {\r\n            result.value = parseInt(effect.setValue);\r\n            result.explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, \"Max Bulk\").forEach(effect => {\r\n            result.value += parseInt(effect.value);\r\n            result.explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n        });\r\n        return result;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D8',\r\n  templateUrl: './D8.svg',\r\n  styleUrls: ['./diceIcons_D8.component.css']\r\n})\r\nexport class DiceIcons_D8Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D8\"\r\n        d=\"M 32.00,2.00\r\n           C 32.00,2.00 58.00,17.00 58.00,17.00\r\n             58.00,17.00 58.00,47.00 58.00,47.00\r\n             58.00,47.00 32.18,62.00 32.00,62.00\r\n             31.82,62.00 6.00,47.00 6.00,47.00\r\n             6.00,47.00 6.00,17.00 6.00,17.00\r\n             6.00,17.00 32.00,2.00 32.00,2.00 Z\r\n           M 58.00,47.00\r\n           C 58.00,47.00 6.00,47.00 6.00,47.00\r\n             6.00,47.00 32.00,2.00 32.00,2.00\r\n             32.00,2.00 58.00,47.00 58.00,47.00 Z\" />\r\n   </g>\r\n</svg>\r\n","import { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\n\r\nexport class AnimalCompanionLevel {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public extraDamage: number = 0;\r\n    public name: string = \"\";\r\n    public number: number = 0;\r\n    public sizeChange: number = 0;\r\n    public skillChoices: SkillChoice[] = [];\r\n}","import core from './core.json';\r\nimport custom_eselfreunde from './custom_eselfreunde.json'\r\nexport {\r\n    core,\r\n    custom_eselfreunde\r\n};","import { Injectable } from '@angular/core';\r\nimport { Character } from './Character';\r\nimport { Skill } from './Skill';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Item } from './Item';\r\nimport { Class } from './Class';\r\nimport { AbilitiesService } from './abilities.service';\r\nimport { SkillsService } from './skills.service';\r\nimport { Level } from './Level';\r\nimport { ClassesService } from './classes.service';\r\nimport { ItemCollection } from './ItemCollection';\r\nimport { Armor } from './Armor';\r\nimport { Weapon } from './Weapon';\r\nimport { FeatsService } from './feats.service';\r\nimport { TraitsService } from './traits.service';\r\nimport { Ancestry } from './Ancestry';\r\nimport { HistoryService } from './history.service';\r\nimport { Heritage } from './Heritage';\r\nimport { Background } from './Background';\r\nimport { ItemsService } from './items.service';\r\nimport { Feat } from './Feat';\r\nimport { Condition } from './Condition';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { Activity } from './Activity';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { SpellsService } from './spells.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Consumable } from './Consumable';\r\nimport { TimeService } from './time.service';\r\nimport { DefenseService } from './defense.service';\r\nimport { Equipment } from './Equipment';\r\nimport { EffectGain } from './EffectGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { Rune } from './Rune';\r\nimport { DeitiesService } from './deities.service';\r\nimport { Deity } from './Deity';\r\nimport { AnimalCompanionsService } from './animalcompanions.service';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { SavegameService } from './savegame.service';\r\nimport { FamiliarsService } from './familiars.service';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { InventoryGain } from './InventoryGain';\r\nimport { Oil } from './Oil';\r\nimport { WornItem } from './WornItem';\r\nimport { Savegame } from './Savegame';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Ammunition } from './Ammunition';\r\nimport { Shield } from './Shield';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { Snare } from './Snare';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { Hint } from './Hint';\r\nimport { Creature } from './Creature';\r\nimport { LanguageGain } from './LanguageGain';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CharacterService {\r\n\r\n    private me: Character = new Character();\r\n    public characterChanged$: Observable<string>;\r\n    public viewChanged$: Observable<{ creature: string, target: string, subtarget: string }>;\r\n    private loader = [];\r\n    private loading: boolean = false;\r\n    private basicItems = []\r\n    private toChange: { creature: string, target: string, subtarget: string }[] = [];\r\n    private changed: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\r\n    private viewChanged: BehaviorSubject<{ creature: string, target: string, subtarget: string }> = new BehaviorSubject<{ creature: string, target: string, subtarget: string }>({ target: \"\", creature: \"\", subtarget: \"\" });\r\n\r\n    itemsMenuState: string = 'out';\r\n    itemsMenuTarget: string = 'Character';\r\n    craftingMenuState: string = 'out';\r\n    characterMenuState: string = 'out';\r\n    companionMenuState: string = 'out';\r\n    familiarMenuState: string = 'out';\r\n    spellsMenuState: string = 'out';\r\n    spelllibraryMenuState: string = 'out';\r\n    conditionsMenuState: string = 'out';\r\n    diceMenuState: string = 'out';\r\n\r\n    constructor(\r\n        private savegameService: SavegameService,\r\n        public abilitiesService: AbilitiesService,\r\n        private skillsService: SkillsService,\r\n        public classesService: ClassesService,\r\n        public featsService: FeatsService,\r\n        public traitsService: TraitsService,\r\n        private historyService: HistoryService,\r\n        public conditionsService: ConditionsService,\r\n        public activitiesService: ActivitiesService,\r\n        public itemsService: ItemsService,\r\n        public spellsService: SpellsService,\r\n        public effectsService: EffectsService,\r\n        public timeService: TimeService,\r\n        public defenseService: DefenseService,\r\n        public deitiesService: DeitiesService,\r\n        public animalCompanionsService: AnimalCompanionsService,\r\n        public familiarsService: FamiliarsService\r\n    ) { }\r\n\r\n    still_loading() {\r\n        return this.loading;\r\n    }\r\n\r\n    get_Changed(): Observable<string> {\r\n        return this.characterChanged$;\r\n    }\r\n\r\n    get_ViewChanged(): Observable<{ creature: string, target: string, subtarget: string }> {\r\n        return this.viewChanged$;\r\n    }\r\n\r\n    set_ToChange(creature: string = \"Character\", target: string = \"all\", subtarget: string = \"\") {\r\n        target = target || \"all\";\r\n        this.toChange.push({ creature: creature, target: target, subtarget: subtarget });\r\n    }\r\n\r\n    set_HintsToChange(creature: string, hints: Hint[] = []) {\r\n        //For transition between single showon strings and multiple hints, we are currently doing both.\r\n        hints.forEach(hint => {\r\n            //Update the tags for every element that is named here.\r\n            hint.showon.split(\",\").forEach(subtarget => {\r\n                this.set_ToChange(creature, \"tags\", subtarget.trim())\r\n            })\r\n            //If any activities are named, also update the activities area.\r\n            if (this.get_OwnedActivities(this.get_Creature(creature), this.get_Creature(creature).level).find(activity => hint.showon.includes(activity.name))) {\r\n                this.set_ToChange(creature, \"activities\")\r\n            }\r\n        })\r\n        this.set_ToChange(creature, \"character-sheet\");\r\n    }\r\n\r\n    set_TagsToChange(creature: string, showonString: string = \"\") {\r\n        //For transition between single showon strings and multiple hints, we are currently doing both.\r\n        //  Ideally, we can eventually delete this function and clean up every place that uses it.\r\n\r\n        //Update the tags for every element that is named here.\r\n        showonString.split(\",\").forEach(subtarget => {\r\n            this.set_ToChange(creature, \"tags\", subtarget.trim())\r\n        })\r\n        //If any activities are named, also update the activities area.\r\n        if (this.get_OwnedActivities(this.get_Creature(creature), this.get_Creature(creature).level).find(activity => showonString.includes(activity.name))) {\r\n            this.set_ToChange(creature, \"activities\")\r\n        }\r\n        this.set_ToChange(creature, \"character-sheet\");\r\n    }\r\n\r\n    set_AbilityToChange(creature: string, ability: string) {\r\n        //Set refresh commands for all components of the application depending this ability.\r\n        let abilities: string[] = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\r\n        let attacks: string[] = [\"Dexterity\", \"Strength\"];\r\n        let defense: string[] = [\"Constitution\", \"Dexterity\", \"Wisdom\"];\r\n        let general: string[] = [\"Strength\", \"Dexterity\", \"Intelligence\", \"Wisdom\", \"Charisma\"];\r\n        let health: string[] = [\"Constitution\"];\r\n        let inventory: string[] = [\"Strength\"];\r\n        let spells: string[] = [\"Intelligence\", \"Charisma\", \"Wisdom\"];\r\n\r\n        //Prepare changes for everything that should be updated according to the ability.\r\n        this.set_ToChange(creature, \"abilities\");\r\n        if (abilities.includes(ability)) {\r\n            this.set_ToChange(creature, \"abilities\");\r\n            this.set_ToChange(creature, \"individualskills\", ability);\r\n        }\r\n        if (attacks.includes(ability)) {\r\n            this.set_ToChange(creature, \"attacks\");\r\n        }\r\n        if (defense.includes(ability)) {\r\n            this.set_ToChange(creature, \"defense\");\r\n        }\r\n        if (general.includes(ability)) {\r\n            this.set_ToChange(creature, \"general\");\r\n        }\r\n        if (health.includes(ability)) {\r\n            this.set_ToChange(creature, \"health\");\r\n        }\r\n        if (inventory.includes(ability)) {\r\n            this.set_ToChange(creature, \"inventory\");\r\n        }\r\n        if (spells.includes(ability)) {\r\n            this.set_ToChange(creature, \"spells\");\r\n            this.set_ToChange(creature, \"spellbook\");\r\n            this.set_ToChange(creature, \"spellchoices\");\r\n        }\r\n        this.set_ToChange(creature, \"effects\");\r\n        this.set_ToChange(\"Character\", \"charactersheet\")\r\n        if (ability == \"Intelligence\") {\r\n            this.update_LanguageList();\r\n        }\r\n    }\r\n\r\n    process_ToChange() {\r\n        [\"Character\", \"Companion\", \"Familiar\"].forEach(creature => {\r\n            if (this.toChange.find(view => view.creature == creature && view.target == \"all\")) {\r\n                this.clear_ToChange(creature);\r\n                this.set_ViewChanged({ creature: creature, target: \"all\", subtarget: \"\" });\r\n            } else {\r\n                //Process effects first, as effects may stack up more of the others.\r\n                let uniqueEffectsStrings = this.toChange.filter(view => view.creature == creature && view.target == \"effects\").map(view => JSON.stringify(view))\r\n                let uniqueEffects = Array.from(new Set(uniqueEffectsStrings)).map(view => JSON.parse(view));\r\n                uniqueEffects.forEach(view => {\r\n                    this.set_ViewChanged(view);\r\n                });\r\n                //For the rest, copy the toChange list and clear it, so we don't get a loop if set_ViewChanged() causes more calls of process_ToChange().\r\n                let uniqueOthersStrings = this.toChange.filter(view => view.creature == creature && view.target != \"effects\").map(view => JSON.stringify(view))\r\n                let uniqueOthers = Array.from(new Set(uniqueOthersStrings)).map(view => JSON.parse(view));\r\n                this.clear_ToChange(creature);\r\n                uniqueOthers.forEach(view => {\r\n                    this.set_ViewChanged(view);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    clear_ToChange(creature: string = \"all\") {\r\n        this.toChange = this.toChange.filter(view => view.creature != creature && creature != \"all\")\r\n    }\r\n\r\n    set_ViewChanged(view: { creature: string, target: string, subtarget: string }) {\r\n        this.viewChanged.next(view);\r\n    }\r\n\r\n    set_Changed(target: string = \"all\") {\r\n        target = target || \"all\";\r\n        if ([\"Character\", \"Companion\", \"Familiar\", \"all\"].includes(target)) {\r\n            this.clear_ToChange(target);\r\n        }\r\n        this.changed.next(target);\r\n    }\r\n\r\n    get_Darkmode() {\r\n        if (!this.still_loading()) {\r\n            return this.get_Character().settings.darkmode;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    toggle_Menu(menu: string = \"\", parameter: string = \"\") {\r\n        this.characterMenuState = (menu == \"character\" && (this.characterMenuState == 'out')) ? 'in' : 'out';\r\n        //Companion and Familiar menus don't need to close if the dice menu opens.\r\n        if (menu != \"dice\") {\r\n            this.companionMenuState = (menu == \"companion\" && (this.companionMenuState == 'out')) ? 'in' : 'out';\r\n            this.familiarMenuState = (menu == \"familiar\" && (this.familiarMenuState == 'out')) ? 'in' : 'out';\r\n        }\r\n        this.itemsMenuState = (menu == \"items\" && (this.itemsMenuState == 'out')) ? 'in' : 'out';\r\n        this.craftingMenuState = (menu == \"crafting\" && (this.craftingMenuState == 'out')) ? 'in' : 'out';\r\n        this.spellsMenuState = (menu == \"spells\" && (this.spellsMenuState == 'out')) ? 'in' : 'out';\r\n        this.spelllibraryMenuState = (menu == \"spelllibrary\" && (this.spelllibraryMenuState == 'out')) ? 'in' : 'out';\r\n        this.conditionsMenuState = (menu == \"conditions\" && (this.conditionsMenuState == 'out')) ? 'in' : 'out';\r\n        this.diceMenuState = (menu == \"dice\" && (this.diceMenuState == 'out')) ? 'in' : 'out';\r\n        if (this.characterMenuState == 'in') {\r\n            this.set_Changed(\"charactersheet\");\r\n        }\r\n        if (this.companionMenuState == 'in') {\r\n            this.set_Changed(\"Companion\");\r\n        }\r\n        if (this.familiarMenuState == 'in') {\r\n            this.set_Changed(\"Familiar\");\r\n        }\r\n        if (this.itemsMenuState == 'in') {\r\n            this.set_Changed(\"items\");\r\n        }\r\n        if (this.craftingMenuState == 'in') {\r\n            this.set_Changed(\"crafting\");\r\n        }\r\n        if (this.spellsMenuState == 'in') {\r\n            this.set_Changed(\"spells\");\r\n        }\r\n        if (this.spelllibraryMenuState == 'in') {\r\n            this.set_Changed(\"spelllibrary\");\r\n        }\r\n        if (this.conditionsMenuState == 'in') {\r\n            this.set_Changed(\"conditions\");\r\n        }\r\n        this.set_Changed(\"top-bar\");\r\n        if (this.toChange.length) {\r\n            this.process_ToChange();\r\n        }\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterMenuState;\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.companionMenuState;\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.familiarMenuState;\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.itemsMenuState;\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.craftingMenuState;\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.spellsMenuState;\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.spelllibraryMenuState;\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.conditionsMenuState;\r\n    }\r\n\r\n    get_DiceMenuState() {\r\n        return this.diceMenuState;\r\n    }\r\n\r\n    get_ItemsMenuTarget() {\r\n        return this.itemsMenuTarget;\r\n    }\r\n\r\n    set_ItemsMenuTarget(target: string) {\r\n        this.itemsMenuTarget = target;\r\n        this.set_Changed(\"itemstore\");\r\n    }\r\n\r\n    get_Level(number: number) {\r\n        return this.get_Character().class.levels[number];\r\n    }\r\n\r\n    get_Creature(type: string) {\r\n        switch (type) {\r\n            case \"Character\":\r\n                return this.get_Character();\r\n            case \"Companion\":\r\n                return this.get_Companion();\r\n            case \"Familiar\":\r\n                return this.get_Familiar();\r\n            default:\r\n                return new Character();\r\n        }\r\n    }\r\n\r\n    get_Character() {\r\n        if (!this.still_loading()) {\r\n            return this.me;\r\n        } else { return new Character() }\r\n    }\r\n\r\n    get_CompanionAvailable(charLevel: number = this.get_Character().level) {\r\n        //Return any feat that grants an animal companion that you own.\r\n        return this.get_FeatsAndFeatures().find(feat => feat.gainAnimalCompanion == 1 && feat.have(this.get_Character(), this, charLevel));\r\n    }\r\n\r\n    get_FamiliarAvailable(charLevel: number = this.get_Character().level) {\r\n        //Return any feat that grants an animal companion that you own.\r\n        return this.get_FeatsAndFeatures().find(feat => feat.gainFamiliar && feat.have(this.get_Character(), this, charLevel));\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.get_Character().class?.animalCompanion || new AnimalCompanion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.get_Character().class?.familiar || new Familiar();\r\n    }\r\n\r\n    get_Creatures(companionAvailable: boolean = undefined, familiarAvailable: boolean = undefined) {\r\n        if (!this.still_loading()) {\r\n            if (companionAvailable == undefined) {\r\n                companionAvailable = this.get_CompanionAvailable() != null;\r\n            }\r\n            if (familiarAvailable == undefined) {\r\n                familiarAvailable = this.get_FamiliarAvailable() != null;\r\n            }\r\n            if (companionAvailable && familiarAvailable) {\r\n                return ([] as (Creature)[]).concat(this.get_Character()).concat(this.get_Companion()).concat(this.get_Familiar());\r\n            } else if (companionAvailable) {\r\n                return ([] as (Creature)[]).concat(this.get_Character()).concat(this.get_Companion());\r\n            } else if (familiarAvailable) {\r\n                return ([] as (Creature)[]).concat(this.get_Character()).concat(this.get_Familiar());\r\n            } else {\r\n                return ([] as (Creature)[]).concat(this.get_Character());\r\n            }\r\n        } else { return [new Character()] }\r\n    }\r\n\r\n    reset_Character(id: string = \"\") {\r\n        this.loading = true;\r\n        this.initialize(id);\r\n    }\r\n\r\n    get_Accent() {\r\n        if (!this.still_loading()) {\r\n            function hexToRgb(hex) {\r\n                if (hex.length == 4) {\r\n                    var result = /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i.exec(hex);\r\n                    return result ? {\r\n                        r: parseInt(result[1] + result[1], 16),\r\n                        g: parseInt(result[2] + result[2], 16),\r\n                        b: parseInt(result[3] + result[3], 16),\r\n                    } : null;\r\n                } else if (hex.length == 7) {\r\n                    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n                    return result ? {\r\n                        r: parseInt(result[1], 16),\r\n                        g: parseInt(result[2], 16),\r\n                        b: parseInt(result[3], 16),\r\n                    } : null;\r\n                }\r\n            }\r\n            let original = this.get_Character().settings.accent;\r\n            if (original.length == 4 || original.length == 7) {\r\n                try {\r\n                    let rgba = hexToRgb(original)\r\n                    let result = rgba.r + \",\" + rgba.g + \",\" + rgba.b;\r\n                    return result;\r\n                }\r\n                catch (error) {\r\n                    return \"25, 118, 210\"\r\n                }\r\n            } else {\r\n                return \"25, 118, 210\";\r\n            }\r\n        }\r\n    }\r\n\r\n    set_Accent() {\r\n        document.documentElement.style.setProperty('--accent', this.get_Accent());\r\n    }\r\n\r\n    set_Darkmode() {\r\n        if (this.get_Darkmode()) {\r\n            document.body.classList.add('darkmode');\r\n        } else {\r\n            document.body.classList.remove('darkmode');\r\n        }\r\n    }\r\n\r\n    get_Classes(name: string) {\r\n        return this.classesService.get_Classes(name);\r\n    }\r\n\r\n    get_Ancestries(name: string) {\r\n        this.historyService.get_Ancestries(name)\r\n    }\r\n\r\n    get_Deities(name: string = \"\") {\r\n        return this.deitiesService.get_Deities(name);\r\n    }\r\n\r\n    get_Speeds(creature: Creature, name: string = \"\") {\r\n        return creature.speeds.filter(speed => speed.name == name || name == \"\");\r\n    }\r\n\r\n    update_LanguageList() {\r\n        //Ensure that the language list is always as long as ancestry languages + INT + any relevant feats and bonuses.\r\n        //This function is called by the effects service after generating effects, so that new languages aren't thrown out before the effects are generated.\r\n        //Don't call this function in situations where effects are going to change, but haven't been generated yet - or you may lose languages.\r\n        let character = this.get_Character();\r\n        if (character.class.name) {\r\n            //Collect everything that gives you free languages, and the level on which it happens. This will allow us to mark languages as available depending on their level.\r\n            let languageSources: { name: string, level: number, amount: number }[] = [];\r\n\r\n            //Free languages from your ancestry\r\n            let ancestryLanguages: number = character.class.ancestry.baseLanguages - character.class.ancestry.languages.length;\r\n            if (ancestryLanguages) {\r\n                languageSources.push({ name: \"Ancestry\", level: 0, amount: ancestryLanguages });\r\n            }\r\n\r\n            //Free languages from your base intelligence\r\n            let baseIntelligence: number = this.get_Abilities(\"Intelligence\")[0]?.baseValue(character, this, 0)?.result;\r\n            let baseInt: number = Math.floor((baseIntelligence - 10) / 2);\r\n            if (baseInt > 0) {\r\n                languageSources.push({ name: \"Intelligence\", level: 0, amount: baseInt })\r\n            }\r\n            //Build an array of int per level for comparison between the levels, starting with the base at 0.\r\n            let int: number[] = [baseInt]\r\n\r\n            //Collect all feats that grant extra free languages, then note if you have any of them, and on which level.\r\n            //Also add more languages if INT has been raised (and is positive).\r\n            let languageFeats: string[] = this.get_FeatsAndFeatures().filter(feat => feat.effects.some(effect => effect.affected == \"Max Languages\")).map(feat => feat.name);\r\n            character.class.levels.forEach(level => {\r\n                character.get_FeatsTaken(level.number, level.number).filter(taken => languageFeats.includes(taken.name)).forEach(taken => {\r\n                    //The amount will be added later by effects.\r\n                    languageSources.push({ name: taken.name, level: level.number, amount: 0 })\r\n                })\r\n                //Compare INT on this level with INT on the previous level. Don't do this on Level 0, obviously.\r\n                if (level.number > 0) {\r\n                    let levelIntelligence: number = this.get_Abilities(\"Intelligence\")[0]?.baseValue(character, this, level.number)?.result;\r\n                    int.push(Math.floor((levelIntelligence - 10) / 2));\r\n                    let diff = int[level.number] - int[level.number - 1];\r\n                    if (diff > 0 && int[level.number] > 0) {\r\n                        languageSources.push({ name: \"Intelligence\", level: level.number, amount: Math.min(diff, int[level.number]) })\r\n                    }\r\n                }\r\n            })\r\n\r\n            //Never apply absolute effects or negative effects to Max Languages. This should not happen in the game,\r\n            // and it could delete your chosen languages.\r\n            //Apply the relative effects by finding a language source fitting the effect and changing its amount accordingly.\r\n            // Only change sources that have no amount yet.\r\n            // If a source cannot be found, the effect is not from a feat and should be treated as temporary (level -2).\r\n            this.effectsService.get_RelativesOnThis(this.get_Character(), \"Max Languages\").forEach(effect => {\r\n                if (parseInt(effect.value) > 0) {\r\n                    let source = languageSources.find(source => source.name == effect.source && source.amount == 0);\r\n                    if (source) {\r\n                        source.amount = parseInt(effect.value);\r\n                    } else {\r\n                        languageSources.push({ name: effect.source, level: -2, amount: parseInt(effect.value) })\r\n                    }\r\n                }\r\n            })\r\n\r\n            //If the current INT is positive and higher than the base INT for the current level (e.g. because of an item bonus), add another language source.\r\n            let currentInt = this.get_Abilities(\"Intelligence\")[0]?.mod(character, this, this.effectsService)?.result;\r\n            let diff = currentInt - int[character.level];\r\n            if (diff > 0 && currentInt > 0) {\r\n                languageSources.push({ name: \"Intelligence\", level: -2, amount: Math.min(diff, currentInt) })\r\n            }\r\n\r\n            //Remove all free languages that have not been filled.\r\n            character.class.languages = character.class.languages.sort().filter(language => !(language.name == \"\" && !language.locked));\r\n            //Make a new list of all the free languages. We will pick and sort the free languages from here into the character language list.\r\n            let tempLanguages: LanguageGain[] = character.class.languages.filter(language => !language.locked).map(language => Object.assign(new LanguageGain(), JSON.parse(JSON.stringify(language))));\r\n            //Reduce the character language list to only the locked ones.\r\n            character.class.languages = character.class.languages.filter(language => language.locked);\r\n\r\n            //Add free languages based on the sources and the copied language list:\r\n            // - For each source, find a language that has the same source and the same level.\r\n            // - If not available, find a language that has the same source and no level (level -1).\r\n            // (This is mainly for the transition from the old language calculations. Languages should not have level -1 in the future.)\r\n            // - If not available, add a new blank language.\r\n            languageSources.forEach(languageSource => {\r\n                for (let index = 0; index < languageSource.amount; index++) {\r\n                    let existingLanguage = tempLanguages.find(language => language.source == languageSource.name && language.level == languageSource.level && !language.locked)\r\n                    if (existingLanguage) {\r\n                        character.class.languages.push(existingLanguage);\r\n                        tempLanguages.splice(tempLanguages.indexOf(existingLanguage), 1);\r\n                    } else {\r\n                        existingLanguage = tempLanguages.find(language => language.source == languageSource.name && language.level == -1 && !language.locked)\r\n                        if (existingLanguage) {\r\n                            let newLanguage = Object.assign(new LanguageGain(), JSON.parse(JSON.stringify(tempLanguages)));\r\n                            newLanguage.level = languageSource.level;\r\n                            character.class.languages.push(newLanguage);\r\n                            tempLanguages.splice(tempLanguages.indexOf(existingLanguage), 1);\r\n                        } else {\r\n                            character.class.languages.push(Object.assign(new LanguageGain(), { name: \"\", source: languageSource.name, locked: false, level: languageSource.level }));\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n            //If any languages are left in the temporary list, assign them to any blank languages, preferring same source, Intelligence and then Multilingual as sources.\r\n            tempLanguages.forEach(lostLanguage => {\r\n                let targetLanguage = character.class.languages\r\n                    .find(freeLanguage =>\r\n                        !freeLanguage.locked &&\r\n                        freeLanguage.name == \"\" &&\r\n                        (freeLanguage.source == lostLanguage.source || freeLanguage.source == \"Intelligence\" || freeLanguage.source == \"Multilingual\" || true)\r\n                    )\r\n                if (targetLanguage) {\r\n                    targetLanguage.name = lostLanguage.name;\r\n                }\r\n            })\r\n\r\n            //Sort languages by locked > level > source > name.\r\n            character.class.languages = character.class.languages\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                    if (a.source > b.source) {\r\n                        return 1;\r\n                    }\r\n                    if (a.source < b.source) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                    if (a.level > b.level) {\r\n                        return 1;\r\n                    }\r\n                    if (a.level < b.level) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                .sort(function (a, b) {\r\n                    if (!a.locked && b.locked) {\r\n                        return 1;\r\n                    }\r\n                    if (a.locked && !b.locked) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n        }\r\n    }\r\n\r\n    change_Class($class: Class) {\r\n        //Cleanup Heritage, Ancestry, Background and class skills\r\n        let character = this.get_Character();\r\n        character.class.on_ChangeHeritage(this);\r\n        character.class.on_ChangeAncestry(this);\r\n        character.class.on_ChangeBackground(this);\r\n        character.class.on_ChangeClass(this);\r\n        character.class = new Class();\r\n        character.class = Object.assign(new Class(), JSON.parse(JSON.stringify($class)));\r\n        character.class = this.reassign(character.class);\r\n        character.class.on_NewClass(this, this.itemsService);\r\n        //After the class change, process all immediate effects from feats (or rather features) that you get from the class - like gaining the Druidic language.\r\n        this.get_FeatsAndFeatures()\r\n            .filter(feat => feat.onceEffects.length && feat.have(character, this, character.level))\r\n            .forEach(feat => {\r\n                feat.onceEffects.forEach(effect => {\r\n                    this.process_OnceEffect(character, effect);\r\n                })\r\n            })\r\n        //Update everything because the class changes everything.\r\n        this.set_Changed();\r\n    }\r\n\r\n    change_Ancestry(ancestry: Ancestry, itemsService: ItemsService) {\r\n        let character = this.get_Character();\r\n        this.change_Heritage(new Heritage());\r\n        character.class.on_ChangeAncestry(this);\r\n        character.class.ancestry = new Ancestry();\r\n        character.class.ancestry = Object.assign(new Ancestry(), JSON.parse(JSON.stringify(ancestry)))\r\n        character.class.ancestry = this.reassign(character.class.ancestry);\r\n        character.class.on_NewAncestry(this, itemsService);\r\n        this.update_LanguageList();\r\n    }\r\n\r\n    change_Deity(deity: Deity) {\r\n        let character = this.get_Character();\r\n        character.class.deity = deity.name;\r\n        this.set_ToChange(\"Character\", \"general\");\r\n        this.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.set_ToChange(\"Character\", \"attacks\");\r\n    }\r\n\r\n    change_Heritage(heritage: Heritage, index: number = -1, source: string = \"\") {\r\n        let character = this.get_Character();\r\n        character.class.on_ChangeHeritage(this, index);\r\n        if (index == -1) {\r\n            character.class.heritage = new Heritage();\r\n            character.class.heritage = Object.assign(new Heritage(), JSON.parse(JSON.stringify(heritage)))\r\n            character.class.heritage = this.reassign(character.class.heritage);\r\n        } else {\r\n            character.class.additionalHeritages[index] = new Heritage();\r\n            character.class.additionalHeritages[index] = Object.assign(new Heritage(), JSON.parse(JSON.stringify(heritage)))\r\n            character.class.additionalHeritages[index] = this.reassign(character.class.additionalHeritages[index]);\r\n            character.class.additionalHeritages[index].source = source;\r\n        }\r\n        character.class.on_NewHeritage(this, this.itemsService, index);\r\n    }\r\n\r\n    change_Background(background: Background) {\r\n        let character = this.get_Character();\r\n        character.class.on_ChangeBackground(this);\r\n        character.class.background = new Background();\r\n        character.class.background = Object.assign(new Background(), JSON.parse(JSON.stringify(background)));\r\n        character.class.background = this.reassign(character.class.background);\r\n        character.class.on_NewBackground(this);\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Inventories(creature: Creature) {\r\n        if (!this.still_loading()) {\r\n            return creature.inventories;\r\n        } else { return [new ItemCollection()] }\r\n    }\r\n\r\n    get_Specializations(group: string = \"\") {\r\n        return this.itemsService.get_Specializations(group);\r\n    }\r\n\r\n    get_InvestedItems(creature: Creature) {\r\n        return creature.inventories[0].allEquipment().filter(item => item.invested && item.traits.includes(\"Invested\"));\r\n    }\r\n\r\n    create_WeaponFeats(weapons: Weapon[] = []) {\r\n        //This function depends on the feats and items being loaded, and it will wait forever for them!\r\n        if (this.featsService.still_loading() || this.itemsService.still_loading()) {\r\n            setTimeout(() => {\r\n                this.create_WeaponFeats(weapons);\r\n            }, 500)\r\n        } else {\r\n            if (!weapons.length) {\r\n                weapons = this.itemsService.get_ItemsOfType(\"weapons\");\r\n            }\r\n            let weaponFeats = this.get_Feats().filter(feat => feat.weaponfeatbase);\r\n            weaponFeats.forEach(feat => {\r\n                let featweapons = weapons;\r\n                //These filters are hardcoded according to the needs of the weaponfeatbase feats. There is \"Advanced Weapon\", \"Uncommon Ancestry Weapon\" and \"Uncommon Ancestry Advanced Weapon\" so far.\r\n                if (feat.subType.includes(\"Uncommon\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.traits.includes(\"Uncommon\"));\r\n                }\r\n                if (feat.subType.includes(\"Simple\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.prof == \"Simple Weapons\");\r\n                } else if (feat.subType.includes(\"Martial\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.prof == \"Martial Weapons\");\r\n                } else if (feat.subType.includes(\"Advanced\")) {\r\n                    featweapons = featweapons.filter(weapon => weapon.prof == \"Advanced Weapons\");\r\n                }\r\n                if (feat.subType.includes(\"Ancestry\")) {\r\n                    let ancestries: string[] = this.historyService.get_Ancestries().map(ancestry => ancestry.name);\r\n                    featweapons = featweapons.filter(weapon => weapon.traits.some(trait => ancestries.includes(trait)));\r\n                }\r\n                featweapons.forEach(weapon => {\r\n                    let replacementString = feat.subType;\r\n                    let oldFeat = this.get_Feats().find(libraryFeat => libraryFeat.name == feat.name.replace(replacementString, weapon.name));\r\n                    if (oldFeat) {\r\n                        this.remove_CustomFeat(oldFeat);\r\n                    }\r\n                    let regex = new RegExp(replacementString, \"g\")\r\n                    let featString = JSON.stringify(feat);\r\n                    featString = featString.replace(regex, weapon.name);\r\n                    let replacedFeat = Object.assign(new Feat(), JSON.parse(featString))\r\n                    let newLength = this.add_CustomFeat(replacedFeat);\r\n                    let newFeat = this.get_Character().customFeats[newLength - 1];\r\n                    newFeat.hide = false;\r\n                    newFeat.weaponfeatbase = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    verify_Feats() {\r\n        //run meetsSpecialReq for every feat once, so that we can see in the console if a specialReq isn't working.\r\n        this.featsService.get_Feats(this.me.customFeats).filter(feat => feat.specialreq).forEach(feat => {\r\n            feat.meetsSpecialReq(this);\r\n        })\r\n    }\r\n\r\n    grant_InventoryItem(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Item, resetRunes: boolean = true, changeAfter: boolean = true, equipAfter: boolean = true, amount: number = 1, newId: boolean = true, expiration: number = 0) {\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n        let newInventoryItem = this.itemsService.initialize_Item(item, false, newId);\r\n        //Assign the library's item id as the new item's refId. This allows us to read the default information from the library later.\r\n        if (!newInventoryItem.refId) {\r\n            newInventoryItem.refId = item.id;\r\n        }\r\n        let returnedInventoryItem;\r\n        //Check if this item already exists in the inventory, and if it is stackable and doesn't expire. Don't make that check if this item expires.\r\n        let existingItems: Item[] = [];\r\n        if (!expiration) {\r\n            existingItems = inventory[item.type].filter((existing: Item) =>\r\n                existing.name == newInventoryItem.name && newInventoryItem.can_Stack() && !item.expiration\r\n            );\r\n        }\r\n        //If any existing, stackable items are found, try parsing the amount and set it to 1 if failed, then raise the amount on the first of the existing items.\r\n        //The amount must be parsed because it could be set to anything during custom item creation.\r\n        //If no items are found, add the new item to the inventory.\r\n        //Set returnedInventoryItem to either the found or the new item for further processing.\r\n        if (existingItems.length) {\r\n            let intAmount: number = 1\r\n            try {\r\n                intAmount = parseInt(amount.toString())\r\n            } catch (error) {\r\n                intAmount = 1\r\n            }\r\n            existingItems[0].amount += intAmount;\r\n            returnedInventoryItem = existingItems[0];\r\n        } else {\r\n            let newInventoryLength = inventory[item.type].push(newInventoryItem);\r\n            let createdInventoryItem = inventory[item.type][newInventoryLength - 1];\r\n            if (createdInventoryItem.amount && amount > 1) {\r\n                createdInventoryItem.amount = amount;\r\n            }\r\n            if (equipAfter && Object.keys(createdInventoryItem).includes(\"equipped\") && item.equippable) {\r\n                this.onEquip(creature, inventory, createdInventoryItem, true, false);\r\n            }\r\n            if (!item.equippable && (item[\"gainActivities\"]?.length || item[\"activities\"]?.length)) {\r\n                this.set_ToChange(creature.type, \"activities\");\r\n            }\r\n            returnedInventoryItem = createdInventoryItem;\r\n            if (returnedInventoryItem[\"prof\"] == \"Advanced Weapons\") {\r\n                this.create_WeaponFeats([returnedInventoryItem]);\r\n            }\r\n            if (resetRunes && returnedInventoryItem[\"moddable\"]) {\r\n                if (returnedInventoryItem[\"potencyRune\"]) {\r\n                    returnedInventoryItem[\"potencyRune\"] = 0;\r\n                }\r\n                if (returnedInventoryItem[\"strikingRune\"]) {\r\n                    returnedInventoryItem[\"strikingRune\"] = 0;\r\n                }\r\n                if (returnedInventoryItem[\"resilientRune\"]) {\r\n                    returnedInventoryItem[\"resilientRune\"] = 0;\r\n                }\r\n                if (returnedInventoryItem[\"propertyRunes\"]) {\r\n                    returnedInventoryItem[\"propertyRunes\"].length = 0;\r\n                }\r\n            }\r\n            if (returnedInventoryItem[\"propertyRunes\"] && returnedInventoryItem[\"propertyRunes\"].length) {\r\n                returnedInventoryItem[\"propertyRunes\"].filter((rune: Rune) => rune[\"loreChoices\"]).forEach((rune: Rune) => {\r\n                    this.add_RuneLore(rune as Rune);\r\n                });\r\n            }\r\n        }\r\n        if (returnedInventoryItem[\"gainInventory\"]) {\r\n            returnedInventoryItem[\"gainInventory\"].forEach((gain: InventoryGain) => {\r\n                let newLength = creature.inventories.push(new ItemCollection());\r\n                let newInventory = creature.inventories[newLength - 1];\r\n                newInventory.itemId = returnedInventoryItem.id;\r\n                newInventory.bulkLimit = gain.bulkLimit;\r\n                newInventory.bulkReduction = gain.bulkReduction;\r\n            })\r\n        }\r\n        if (expiration) {\r\n            returnedInventoryItem.expiration = expiration;\r\n        }\r\n        //Add all Items that you get from being granted this one\r\n        if (returnedInventoryItem.gainItems && returnedInventoryItem.gainItems.length) {\r\n            returnedInventoryItem.gainItems.filter((gainItem: ItemGain) => gainItem.on == \"grant\").forEach(gainItem => {\r\n                let newItem: Item = this.get_CleanItems()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n                if (newItem.can_Stack()) {\r\n                    this.grant_InventoryItem(creature, inventory, newItem, true, false, false, gainItem.amount + (gainItem.amountPerLevel * creature.level));\r\n                } else {\r\n                    let equip = true;\r\n                    //Don't equip the new item if it's a shield or armor and this one is too - only one shield or armor can be equipped\r\n                    if ((returnedInventoryItem.type == \"armors\" || returnedInventoryItem.type == \"shields\") && newItem.type == returnedInventoryItem.type) {\r\n                        equip = false;\r\n                    }\r\n                    let grantedItem = this.grant_InventoryItem(creature, inventory, newItem, true, false, equip);\r\n                    gainItem.id = grantedItem.id;\r\n                    if (grantedItem.get_Name) {\r\n                        grantedItem.grantedBy = \"(Granted by \" + returnedInventoryItem.name + \")\";\r\n                    };\r\n                }\r\n            });\r\n        }\r\n        if (returnedInventoryItem.gainActivities) {\r\n            (returnedInventoryItem as Equipment).gainActivities.forEach((gain: ActivityGain) => {\r\n                gain.active = false;\r\n            });\r\n        }\r\n        if (returnedInventoryItem.activities) {\r\n            (returnedInventoryItem as Equipment).activities.forEach((activity: ItemActivity) => {\r\n                activity.active = false;\r\n            });\r\n        }\r\n        if (returnedInventoryItem.constructor == AlchemicalBomb || returnedInventoryItem.constructor == OtherConsumableBomb || returnedInventoryItem.constructor == Ammunition || returnedInventoryItem.constructor == Snare) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        returnedInventoryItem[\"activities\"]?.forEach((activity: ItemActivity) => {\r\n            activity.hints?.forEach((hint: Hint) => {\r\n                this.set_TagsToChange(creature.type, hint.showon);\r\n            })\r\n        });\r\n        if (returnedInventoryItem[\"showon\"]) {\r\n            this.set_TagsToChange(creature.type, item[\"showon\"]);\r\n        }\r\n        if (changeAfter) {\r\n            this.process_ToChange();\r\n        }\r\n        return returnedInventoryItem;\r\n    }\r\n\r\n    drop_InventoryItem(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Item, changeAfter: boolean = true, equipBasicItems: boolean = true, including: boolean = true, amount: number = 1) {\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n        if (item.constructor == AlchemicalBomb || item.constructor == OtherConsumableBomb || item.constructor == Ammunition || item.constructor == Snare) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (item[\"showon\"]) {\r\n            this.set_TagsToChange(creature.type, item[\"showon\"]);\r\n        }\r\n        this.set_ItemViewChanges(creature, item);\r\n        if (amount < item.amount) {\r\n            item.amount -= amount;\r\n        } else {\r\n            if (item[\"equipped\"]) {\r\n                this.onEquip(creature, inventory, item as Equipment, false, false);\r\n            } else if (item[\"invested\"] && item.can_Invest()) {\r\n                this.on_Invest(creature, inventory, item as Equipment, false, false);\r\n            }\r\n            if (item[\"propertyRunes\"]) {\r\n                item[\"propertyRunes\"].filter((rune: Rune) => rune.loreChoices.length).forEach((rune: Rune) => {\r\n                    this.remove_RuneLore(rune);\r\n                })\r\n            }\r\n            if (item[\"appliedOils\"]) {\r\n                item[\"appliedOils\"].filter((oil: Oil) => oil.runeEffect.loreChoices.length).forEach((oil: Oil) => {\r\n                    this.remove_RuneLore(oil.runeEffect);\r\n                })\r\n            }\r\n            if (item[\"activities\"]) {\r\n                item[\"activities\"].forEach(activity => {\r\n                    if (activity.active) {\r\n                        this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n                    }\r\n                })\r\n            }\r\n            if (item[\"gainActivities\"]) {\r\n                item[\"gainActivities\"].forEach(gain => {\r\n                    if (gain.active) {\r\n                        this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, gain, this.activitiesService.get_Activities(gain.name)[0], false);\r\n                    }\r\n                })\r\n            }\r\n            if (item[\"gainInventory\"]) {\r\n                creature.inventories = creature.inventories.filter(inventory => inventory.itemId != item.id);\r\n            }\r\n            if (including && item[\"gainItems\"] && item[\"gainItems\"].length) {\r\n                item[\"gainItems\"].filter((gainItem: ItemGain) => gainItem.on == \"grant\").forEach(gainItem => {\r\n                    this.lose_GainedItem(creature, gainItem);\r\n                });\r\n            }\r\n            inventory[item.type] = inventory[item.type].filter((any_item: Item) => any_item !== item);\r\n            if (equipBasicItems) {\r\n                this.equip_BasicItems(creature);\r\n            }\r\n        }\r\n        if (changeAfter) {\r\n            this.process_ToChange()\r\n        }\r\n    }\r\n\r\n    add_RuneLore(rune: Rune) {\r\n        //Go through all the loreChoices (usually only one)\r\n        rune.loreChoices.forEach(choice => {\r\n            //Check if only one (=this) item's rune has this lore (and therefore no other item has already created it on the character), and if so, create it.\r\n            if (\r\n                this.get_Character().inventories[0].allEquipment()\r\n                    .filter(item => item.propertyRunes\r\n                        .some(propertyRune => propertyRune.loreChoices\r\n                            .some(otherchoice => otherchoice.loreName == choice.loreName)\r\n                        )\r\n                    ).length +\r\n                this.get_Character().inventories[0].allEquipment()\r\n                    .filter(item => item.oilsApplied\r\n                        .some(oil => oil.runeEffect && oil.runeEffect.loreChoices\r\n                            .some(otherchoice => otherchoice.loreName == choice.loreName)\r\n                        )\r\n                    ).length == 1) {\r\n                this.get_Character().add_Lore(this, choice);\r\n            }\r\n        });\r\n    }\r\n\r\n    remove_RuneLore(rune: Rune) {\r\n        //Iterate through the loreChoices (usually only one)\r\n        rune.loreChoices.forEach(choice => {\r\n            //Check if only one item's rune has this lore (and therefore no other rune still needs it created), and if so, remove it.\r\n            if (this.get_Character().inventories[0].allEquipment()\r\n                .filter(item => item.propertyRunes\r\n                    .filter(propertyRune => propertyRune.loreChoices\r\n                        .filter(otherchoice => otherchoice.loreName == choice.loreName)\r\n                        .length)\r\n                    .length)\r\n                .length +\r\n                this.get_Character().inventories[0].allEquipment()\r\n                    .filter(item => item.oilsApplied\r\n                        .filter(oil => oil.runeEffect && oil.runeEffect.loreChoices\r\n                            .filter(otherchoice => otherchoice.loreName == choice.loreName)\r\n                            .length)\r\n                        .length)\r\n                    .length == 1) {\r\n                this.get_Character().remove_Lore(this, choice);\r\n            }\r\n        });\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number, plat: number = 0, gold: number = 0, silver: number = 0, copper: number = 0) {\r\n        if (sum) {\r\n            plat = gold = silver = copper = 0;\r\n            plat = Math.floor(sum / 100000) * 100;\r\n            sum %= 100000;\r\n            gold = Math.floor(sum / 100);\r\n            sum %= 100;\r\n            silver = Math.floor(sum / 10);\r\n            sum %= 10;\r\n            copper = sum;\r\n        }\r\n        if (copper) {\r\n            this.get_Character().cash[3] += (copper * multiplier);\r\n            if (this.get_Character().cash[3] < 0) {\r\n                if (this.get_Character().cash[2] > 0 || this.get_Character().cash[1] > 0 || this.get_Character().cash[0] > 0) {\r\n                    silver += Math.floor(this.get_Character().cash[3] / 10) * multiplier;\r\n                    this.get_Character().cash[3] -= Math.floor(this.get_Character().cash[3] / 10) * 10;\r\n                }\r\n            };\r\n        }\r\n        if (silver) {\r\n            this.get_Character().cash[2] += (silver * multiplier);\r\n            if (this.get_Character().cash[2] < 0) {\r\n                if (this.get_Character().cash[1] > 0 || this.get_Character().cash[0] > 0) {\r\n                    gold += Math.floor(this.get_Character().cash[2] / 10) * multiplier;\r\n                    this.get_Character().cash[2] -= Math.floor(this.get_Character().cash[2] / 10) * 10;\r\n                }\r\n            };\r\n        }\r\n        if (gold) {\r\n            this.get_Character().cash[1] += (gold * multiplier);\r\n            if (this.get_Character().cash[1] < 0) {\r\n                if (this.get_Character().cash[0] > 0) {\r\n                    plat += Math.floor(this.get_Character().cash[1] / 10) * multiplier;\r\n                    this.get_Character().cash[1] -= Math.floor(this.get_Character().cash[1] / 10) * 10;\r\n                }\r\n            };\r\n        }\r\n        if (plat) {\r\n            this.get_Character().cash[0] += (plat * multiplier);\r\n            if (this.get_Character().cash[0] < 0) {\r\n                this.sort_Cash();\r\n            }\r\n        }\r\n        if (this.get_Character().cash[0] < 0 || this.get_Character().cash[1] < 0 || this.get_Character().cash[2] < 0) {\r\n            this.sort_Cash();\r\n        }\r\n        this.set_ToChange(\"Character\", \"inventory\");\r\n    }\r\n\r\n    sort_Cash() {\r\n        let sum = (this.get_Character().cash[0] * 1000) + (this.get_Character().cash[1] * 100) + (this.get_Character().cash[2] * 10) + (this.get_Character().cash[3]);\r\n        this.get_Character().cash = [0, 0, 0, 0];\r\n        this.change_Cash(1, sum);\r\n    }\r\n\r\n    set_ItemViewChanges(creature: Character | AnimalCompanion, item: Item) {\r\n        if (item.constructor == AlchemicalBomb || item.constructor == OtherConsumableBomb || item.constructor == AlchemicalPoison || item.constructor == Ammunition || item.constructor == Snare) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (item[\"showon\"]) {\r\n            this.set_TagsToChange(creature.type, item[\"showon\"]);\r\n        }\r\n        if (item[\"effects\"]?.length) {\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        if (item.constructor.prototype instanceof Equipment) {\r\n            this.set_EquipmentViewChanges(this.get_Character(), item as Equipment);\r\n        }\r\n    }\r\n\r\n    set_EquipmentViewChanges(creature: Character | AnimalCompanion, item: Equipment) {\r\n        //Prepare refresh list according to the item's properties.\r\n        if (item.constructor == Shield || item.constructor == Armor || item.constructor == Weapon) {\r\n            this.set_ToChange(creature.type, \"defense\");\r\n            //There are effects that are based on your currently equipped armor and shield.\r\n            //That means we have to check the effects whenever we equip or unequip one of those.\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        if (item.constructor == Weapon) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n            //There are effects that are based on your currently weapons.\r\n            //That means we have to check the effects whenever we equip or unequip one of those.\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        item.hints.forEach(hint => {\r\n            this.set_TagsToChange(creature.type, hint.showon);\r\n        })\r\n        item.traits.map(trait => this.traitsService.get_Traits(trait)[0])?.filter(trait => trait?.hints?.length).forEach(trait => {\r\n            trait.hints.forEach(hint => {\r\n                this.set_TagsToChange(creature.type, hint.showon);\r\n            })\r\n        })\r\n        if (item.effects?.length ||\r\n            item.constructor == Armor && (item as Armor).get_Strength()) {\r\n            this.set_ToChange(creature.type, \"effects\");\r\n        }\r\n        if (item.constructor == Weapon) {\r\n            this.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (item.constructor == Armor ||\r\n            item.constructor == Shield) {\r\n            this.set_ToChange(creature.type, \"defense\");\r\n        }\r\n        if (item.activities?.length) {\r\n            this.set_ToChange(creature.type, \"activities\");\r\n        }\r\n        if (item.gainActivities?.length) {\r\n            this.set_ToChange(creature.type, \"activities\");\r\n        }\r\n        item.propertyRunes?.forEach((rune: Rune) => {\r\n            if (item.moddable == \"armor\" && rune.hints?.length) {\r\n                rune.hints.forEach(hint => {\r\n                    this.set_TagsToChange(creature.type, hint.showon);\r\n                })\r\n            }\r\n            if (item.moddable == \"armor\" && (rune as ArmorRune).effects?.length) {\r\n                this.set_ToChange(creature.type, \"effects\");\r\n            }\r\n            if (rune.activities?.length) {\r\n                this.set_ToChange(creature.type, \"activities\");\r\n            }\r\n        });\r\n        if (item.constructor == AdventuringGear) {\r\n            if ((item as AdventuringGear).isArmoredSkirt) {\r\n                this.set_ToChange(creature.type, \"inventory\");\r\n                this.set_ToChange(creature.type, \"defense\");\r\n            }\r\n        }\r\n        if (item.constructor == WornItem) {\r\n            if ((item as WornItem).isDoublingRings) {\r\n                this.set_ToChange(creature.type, \"inventory\");\r\n                this.set_ToChange(creature.type, \"attacks\");\r\n            }\r\n            if ((item as WornItem).isHandwrapsOfMightyBlows) {\r\n                this.set_ToChange(creature.type, \"inventory\");\r\n                this.set_ToChange(creature.type, \"attacks\");\r\n            }\r\n        }\r\n    }\r\n\r\n    onEquip(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Equipment, equipped: boolean = true, changeAfter: boolean = true, equipBasicItems: boolean = true) {\r\n        //Only allow equipping or unequipping for items that the creature can wear.\r\n        if ((creature.type == \"Character\" && !item.traits.includes(\"Companion\")) || (creature.type == \"Companion\" && item.traits.includes(\"Companion\")) || item.name == \"Unarmored\") {\r\n            item.equipped = equipped;\r\n            this.set_ToChange(creature.type, \"inventory\");\r\n            this.set_EquipmentViewChanges(creature, item);\r\n            if (item.equipped) {\r\n                if (item instanceof Armor || item instanceof Shield) {\r\n                    let allOfType = inventory[item.type];\r\n                    //If you equip a shield that is already raised, preserve that status (e.g. for the Shield spell).\r\n                    let raised = false;\r\n                    if (item instanceof Shield && item.raised) {\r\n                        raised = true;\r\n                    }\r\n                    allOfType.forEach(typeItem => {\r\n                        this.onEquip(creature, inventory, typeItem, false, false, false);\r\n                    });\r\n                    item.equipped = true;\r\n                    if (item instanceof Shield) {\r\n                        item.raised = raised;\r\n                    }\r\n                }\r\n\r\n                //If you get an Activity from an item that doesn't need to be invested, immediately invest it in secret so the Activity is gained\r\n                if ((item.gainActivities || item.activities) && !item.can_Invest()) {\r\n                    this.on_Invest(creature, inventory, item, true, false);\r\n                }\r\n                //Add all Items that you get from equipping this one\r\n                if (item.gainItems && item.gainItems.length) {\r\n                    item.gainItems.filter((gainItem: ItemGain) => gainItem.on == \"equip\").forEach(gainItem => {\r\n                        let newItem: Item = this.itemsService.get_Items()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0]\r\n                        if (newItem.can_Stack()) {\r\n                            this.grant_InventoryItem(creature, inventory, newItem, false, false, false, gainItem.amount + (gainItem.amountPerLevel * creature.level));\r\n                        } else {\r\n                            let equip = true;\r\n                            //Don't equip the new item if it's a shield or armor and this one is too - only one shield or armor can be equipped\r\n                            if ((item instanceof Armor || item instanceof Shield) && newItem.type == item.type) {\r\n                                equip = false;\r\n                            }\r\n                            let grantedItem = this.grant_InventoryItem(creature, inventory, newItem, false, false, equip);\r\n                            gainItem.id = grantedItem.id;\r\n                            if (grantedItem.get_Name) {\r\n                                grantedItem.grantedBy = \"(Granted by \" + item.name + \")\"\r\n                            };\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                if (equipBasicItems) {\r\n                    this.equip_BasicItems(creature);\r\n                }\r\n                //If you are unequipping a shield, you should also be lowering it and losing cover\r\n                if (item instanceof Shield) {\r\n                    if (item.takingCover) {\r\n                        this.get_AC().set_Cover(creature, 0, item, this, this.conditionsService);\r\n                        item.takingCover = false;\r\n                    }\r\n                    item.raised = false;\r\n                }\r\n                //If the item was invested, it isn't now.\r\n                if (item.invested) {\r\n                    this.on_Invest(creature, inventory, item, false, false);\r\n                }\r\n                if (item.gainItems?.length) {\r\n                    item.gainItems.filter((gainItem: ItemGain) => gainItem.on == \"equip\").forEach(gainItem => {\r\n                        this.lose_GainedItem(creature, gainItem);\r\n                    });\r\n                }\r\n                item.propertyRunes?.forEach(rune => {\r\n                    //Deactivate any active toggled activities of inserted runes.\r\n                    rune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n                        this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n                    })\r\n                })\r\n            }\r\n            if (changeAfter) {\r\n                this.process_ToChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    lose_GainedItem(creature: Character | AnimalCompanion, gainedItem: ItemGain) {\r\n        if (this.itemsService.get_CleanItems()[gainedItem.type].concat(...creature.inventories.map(inventory => inventory[gainedItem.type])).filter((item: Item) => item.name.toLowerCase() == gainedItem.name.toLowerCase())[0]?.can_Stack()) {\r\n            let amountToDrop = gainedItem.amount || 1;\r\n            creature.inventories.forEach(inventory => {\r\n                let items: Item[] = inventory[gainedItem.type].filter((libraryItem: Item) => libraryItem.name == gainedItem.name);\r\n                items.forEach(item => {\r\n                    if (amountToDrop) {\r\n                        if (item.amount < amountToDrop) {\r\n                            this.drop_InventoryItem(creature, inventory, item, false, false, true, gainedItem.amount - amountToDrop);\r\n                            amountToDrop -= gainedItem.amount;\r\n                        } else {\r\n                            this.drop_InventoryItem(creature, inventory, item, false, false, true, gainedItem.amount);\r\n                            amountToDrop = 0;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            creature.inventories.forEach(inventory => {\r\n                let items: Item[] = inventory[gainedItem.type].filter((libraryItem: Item) => libraryItem.id == gainedItem.id);\r\n                items.forEach(item => {\r\n                    this.drop_InventoryItem(creature, inventory, item, false, false, true);\r\n                });\r\n            });\r\n            gainedItem.id = \"\";\r\n        }\r\n    }\r\n\r\n    on_Invest(creature: Character | AnimalCompanion, inventory: ItemCollection, item: Equipment, invested: boolean = true, changeAfter: boolean = true) {\r\n        item.invested = invested;\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n        if (item.invested) {\r\n            if (!item.equipped) {\r\n                this.onEquip(creature, inventory, item, true, false);\r\n            } else {\r\n                this.set_EquipmentViewChanges(creature, item);\r\n            }\r\n        } else {\r\n            item.gainActivities.filter(gainActivity => gainActivity.active).forEach((gainActivity: ActivityGain) => {\r\n                let libraryActivity = this.activitiesService.get_Activities(gainActivity.name)[0];\r\n                if (libraryActivity) {\r\n                    this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, gainActivity, libraryActivity, false);\r\n                }\r\n            });\r\n            item.activities.filter(itemActivity => itemActivity.active).forEach((itemActivity: ItemActivity) => {\r\n                this.activitiesService.activate_Activity(creature, \"\", this, this.conditionsService, this.itemsService, this.spellsService, itemActivity, itemActivity, false);\r\n            })\r\n            this.set_EquipmentViewChanges(creature, item);\r\n        }\r\n        if (changeAfter) {\r\n            this.process_ToChange();\r\n        }\r\n    }\r\n\r\n    on_ConsumableUse(creature: Character | AnimalCompanion, item: Consumable) {\r\n        item.amount--\r\n        this.itemsService.process_Consumable(creature, this, this.itemsService, this.conditionsService, this.spellsService, item);\r\n        this.set_ItemViewChanges(creature, item);\r\n        this.set_ToChange(creature.type, \"inventory\");\r\n    }\r\n\r\n    grant_BasicItems() {\r\n        //This function depends on the items being loaded, and it will wait forever for them!\r\n        if (this.itemsService.still_loading()) {\r\n            setTimeout(() => {\r\n                this.grant_BasicItems();\r\n            }, 500)\r\n        } else {\r\n            this.basicItems = [];\r\n            let newBasicWeapon: Weapon = Object.assign(new Weapon(), this.itemsService.get_ItemsOfType(\"weapons\", \"Fist\")[0]);\r\n            this.basicItems.push(newBasicWeapon);\r\n            let newBasicArmor: Armor;\r\n            newBasicArmor = Object.assign(new Armor(), this.itemsService.get_ItemsOfType(\"armors\", \"Unarmored\")[0]);\r\n            this.basicItems.push(newBasicArmor);\r\n            this.equip_BasicItems(this.get_Character(), false)\r\n            this.equip_BasicItems(this.get_Companion(), false)\r\n        }\r\n    }\r\n\r\n    equip_BasicItems(creature: Character | AnimalCompanion, changeAfter: boolean = true) {\r\n        if (!this.still_loading() && this.basicItems.length) {\r\n            if (!creature.inventories[0].weapons.length && creature.type == \"Character\") {\r\n                this.grant_InventoryItem(creature, creature.inventories[0], this.basicItems[0], true, false, false);\r\n            }\r\n            if (!creature.inventories[0].armors.length) {\r\n                this.grant_InventoryItem(creature, creature.inventories[0], this.basicItems[1], true, false, false);\r\n            }\r\n            if (!creature.inventories[0].weapons.some(weapon => weapon.equipped == true)) {\r\n                if (creature.inventories[0].weapons.length) {\r\n                    this.onEquip(creature, creature.inventories[0], creature.inventories[0].weapons[0], true, changeAfter);\r\n                }\r\n            }\r\n            if (!creature.inventories[0].armors.some(armor => armor.equipped == true)) {\r\n                this.onEquip(creature, creature.inventories[0], creature.inventories[0].armors[0], true, changeAfter);\r\n            }\r\n        }\r\n    }\r\n\r\n    add_CustomSkill(skillName: string, type: string, abilityName: string, locked: boolean = false, recallKnowledge: boolean = false) {\r\n        this.get_Character().customSkills.push(new Skill(abilityName, skillName, type, locked, recallKnowledge));\r\n    }\r\n\r\n    remove_CustomSkill(oldSkill: Skill) {\r\n        this.get_Character().customSkills = this.get_Character().customSkills.filter(skill => skill !== oldSkill);\r\n    }\r\n\r\n    add_CustomFeat(newFeat: Feat) {\r\n        let newLength = this.get_Character().customFeats.push(Object.assign(new Feat(), JSON.parse(JSON.stringify(newFeat))));\r\n        this.get_Character().customFeats[newLength - 1] = this.savegameService.reassign(this.get_Character().customFeats[newLength - 1]);\r\n        this.set_ToChange(\"Character\", \"charactersheet\");\r\n        return newLength;\r\n    }\r\n\r\n    remove_CustomFeat(oldFeat: Feat) {\r\n        this.get_Character().customFeats = this.get_Character().customFeats.filter(skill => skill !== oldFeat);\r\n    }\r\n\r\n    get_Conditions(name: string = \"\", type: string = \"\") {\r\n        return this.conditionsService.get_Conditions(name, type);\r\n    }\r\n\r\n    get_AppliedConditions(creature: Creature, name: string = \"\", source: string = \"\", readonly: boolean = false) {\r\n        //Returns ConditionGain[] with apply=true/false for each\r\n        return this.conditionsService.get_AppliedConditions(creature, this, creature.conditions, readonly).filter(condition =>\r\n            (condition.name == name || name == \"\") &&\r\n            (condition.source == source || source == \"\")\r\n        );\r\n    }\r\n\r\n    add_Condition(creature: Creature, conditionGain: ConditionGain, reload: boolean = true, parentConditionGain: ConditionGain = null) {\r\n        let activate: boolean = true;\r\n        let originalCondition = this.get_Conditions(conditionGain.name)[0];\r\n        if (originalCondition) {\r\n            if (conditionGain.heightened < originalCondition.minLevel) {\r\n                conditionGain.heightened = originalCondition.minLevel;\r\n            }\r\n            //If the condition has an activationPrerequisite, test that first and only activate if it evaluates to a nonzero number.\r\n            if (conditionGain.activationPrerequisite) {\r\n                let testConditionGain: any = Object.assign(new ConditionGain(), JSON.parse(JSON.stringify(conditionGain)));\r\n                let testEffectGain: EffectGain = new EffectGain();\r\n                testEffectGain.value = conditionGain.activationPrerequisite;\r\n                testConditionGain.effects = [testEffectGain];\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this, testConditionGain, \"\", parentConditionGain);\r\n                if (effects?.[0]?.value == \"0\" || !(parseInt(effects?.[0]?.value))) {\r\n                    activate = false;\r\n                }\r\n            }\r\n            if (activate) {\r\n                //If there are choices, and the choice is not set by the gain, take the default or the first choice.\r\n                if (originalCondition.choices.length && !conditionGain.choice) {\r\n                    conditionGain.choice = originalCondition.choice || originalCondition.choices[0].name;\r\n                }\r\n                //If there is a choice, check if there is a nextStage value of that choice.\r\n                if (conditionGain.choice) {\r\n                    conditionGain.nextStage\r\n                }\r\n                conditionGain.nextStage = originalCondition.choices.find(choice => choice.name == conditionGain.choice)?.nextStage || 0;\r\n                if (conditionGain.nextStage) {\r\n                    this.set_ToChange(creature.type, \"time\");\r\n                    this.set_ToChange(creature.type, \"health\");\r\n                }\r\n                if (conditionGain.heightened < originalCondition.minLevel) {\r\n                    conditionGain.heightened = originalCondition.minLevel\r\n                }\r\n                if (!conditionGain.radius) {\r\n                    conditionGain.radius = originalCondition.radius;\r\n                }\r\n                //Set persistent if the condition is, unless ignorePersistent is set. Don't just set gain.persistent = condition.persistent, because condition.persistent could be false.\r\n                if (originalCondition.persistent && !conditionGain.ignorePersistent) {\r\n                    conditionGain.persistent = true;\r\n                }\r\n                conditionGain.decreasingValue = originalCondition.decreasingValue;\r\n                conditionGain.notes = originalCondition.notes;\r\n                conditionGain.showNotes = conditionGain.notes && true;\r\n                let newLength: number = 0;\r\n                if (conditionGain.addValue) {\r\n                    let existingConditions = creature.conditions.filter(gain => gain.name == conditionGain.name);\r\n                    if (existingConditions.length) {\r\n                        existingConditions.forEach(gain => {\r\n                            gain.value += conditionGain.addValue;\r\n                            //If this condition gain has both locked properties and addValue, transfer these properties and change the parentID to this one, but only if the existing gain does not have them.\r\n                            if (conditionGain.lockedByParent && !gain.lockedByParent) {\r\n                                gain.lockedByParent = true;\r\n                                gain.parentID = conditionGain.parentID;\r\n                            }\r\n                            if (conditionGain.valueLockedByParent && !gain.valueLockedByParent) {\r\n                                gain.valueLockedByParent = true;\r\n                                gain.parentID = conditionGain.parentID;\r\n                            }\r\n                            if (conditionGain.persistent) {\r\n                                gain.persistent = true;\r\n                            }\r\n                        })\r\n                        this.set_ToChange(creature.type, \"effects\");\r\n                    } else {\r\n                        if (!conditionGain.value) {\r\n                            conditionGain.value = conditionGain.addValue;\r\n                        }\r\n                        if (conditionGain.value > 0) {\r\n                            newLength = creature.conditions.push(conditionGain);\r\n                        }\r\n                    }\r\n                } else {\r\n                    newLength = creature.conditions.push(conditionGain);\r\n                }\r\n                if (newLength) {\r\n                    this.conditionsService.process_Condition(creature, this, this.effectsService, this.itemsService, conditionGain, this.conditionsService.get_Conditions(conditionGain.name)[0], true);\r\n                    this.set_ToChange(creature.type, \"effects\");\r\n                    if (reload) {\r\n                        this.process_ToChange();\r\n                    }\r\n                    return newLength;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    remove_Condition(creature: Creature, conditionGain: ConditionGain, reload: boolean = true, increaseWounded: boolean = true, keepPersistent: boolean = true, ignoreLockedByParent: boolean = false, ignoreEndsWithConditions: boolean = false) {\r\n        //Find the correct condition gain to remove. This can be the exact same as the conditionGain parameter, but if it isn't, find the most similar one:\r\n        //- Find all condition gains with similar name, value and source, then if there are more than one of those:\r\n        //-- Try finding one that has the exact same attributes.\r\n        //-- If none is found, find one that has the same duration.\r\n        //- If none is found or the list has only one, take the first.\r\n        let oldConditionGain: ConditionGain = creature.conditions.find(gain => gain === conditionGain);\r\n        if (!oldConditionGain) {\r\n            let oldConditionGains: ConditionGain[] = creature.conditions.filter(gain => gain.name == conditionGain.name && gain.value == conditionGain.value && gain.source == conditionGain.source);\r\n            if (oldConditionGains.length > 1) {\r\n                oldConditionGain = oldConditionGains.find(gain => JSON.stringify(gain) == JSON.stringify(conditionGain))\r\n                if (!oldConditionGain) {\r\n                    oldConditionGain = oldConditionGains.find(gain => gain.duration == conditionGain.duration)\r\n                }\r\n            }\r\n            if (!oldConditionGain) {\r\n                oldConditionGain = oldConditionGains[0]\r\n            }\r\n        }\r\n        let originalCondition = this.get_Conditions(conditionGain.name)[0];\r\n        //If this condition is locked by its parent, it can't be removed.\r\n        if (oldConditionGain && (ignoreLockedByParent || !oldConditionGain.lockedByParent)) {\r\n            if (oldConditionGain.nextStage || oldConditionGain.duration == 1) {\r\n                this.set_ToChange(creature.type, \"time\");\r\n                this.set_ToChange(creature.type, \"health\");\r\n            }\r\n            //Remove the parent lock for all conditions locked by this, so that they can be removed in the next step or later (if persistent).\r\n            this.remove_LockedByParent(creature, oldConditionGain.id);\r\n            this.get_AppliedConditions(creature, \"\", oldConditionGain.name, true).filter(gain =>\r\n                gain.parentID == oldConditionGain.id\r\n            ).forEach(extraCondition => {\r\n                if (!(keepPersistent && extraCondition.persistent)) {\r\n                    //Remove child conditions that are not persistent, or remove all if keepPersistent is false.\r\n                    this.remove_Condition(creature, extraCondition, false, increaseWounded, keepPersistent, ignoreLockedByParent, ignoreEndsWithConditions);\r\n                } else if (extraCondition.persistent) {\r\n                    //If this condition adds persistent conditions, don't remove them, but remove the persistent flag as its parent is gone.\r\n                    this.remove_Persistent(creature, extraCondition);\r\n                }\r\n            })\r\n            creature.conditions.splice(creature.conditions.indexOf(oldConditionGain), 1)\r\n            this.conditionsService.process_Condition(creature, this, this.effectsService, this.itemsService, oldConditionGain, originalCondition, false, increaseWounded, ignoreEndsWithConditions);\r\n            this.set_ToChange(creature.type, \"effects\");\r\n            if (reload) {\r\n                this.process_ToChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    remove_Persistent(creature: Creature, conditionGain: ConditionGain) {\r\n        //This function removes the persistent attribute from a condition gain, allowing it to be removed normally.\r\n        //Find the correct condition to remove the persistent attribute:\r\n        //- Find all persistent condition gains with similar name, value and source, then if there are more than one of those:\r\n        //-- Try finding one that has the exact same attributes.\r\n        //-- If none is found, find one that has the same duration.\r\n        //- If none is found or the list has only one, take the first.\r\n        let oldConditionGain: ConditionGain;\r\n        let oldConditionGains: ConditionGain[] = creature.conditions.filter(gain => gain.name == conditionGain.name && gain.source == conditionGain.source && gain.persistent);\r\n        if (oldConditionGains.length > 1) {\r\n            oldConditionGain = oldConditionGains.find(gain => JSON.stringify(gain) == JSON.stringify(conditionGain))\r\n            if (!oldConditionGain) {\r\n                oldConditionGain = oldConditionGains.find(gain => gain.duration == conditionGain.duration)\r\n            }\r\n        }\r\n        if (!oldConditionGain) {\r\n            oldConditionGain = oldConditionGains[0]\r\n        }\r\n        if (oldConditionGain) {\r\n            oldConditionGain.persistent = false;\r\n        }\r\n    }\r\n\r\n    remove_LockedByParent(creature: Creature, id: string) {\r\n        //This function removes the lockedByParent and lockedByID attributes from all condition gains locked by the given ID.\r\n        creature.conditions.filter(gain => gain.parentID == id).forEach(gain => {\r\n            gain.lockedByParent = false;\r\n            gain.valueLockedByParent = false;\r\n        });\r\n    }\r\n\r\n    process_OnceEffect(creature: Creature, effectGain: EffectGain, conditionValue: number = 0, conditionHeightened: number = 0, conditionChoice: string = \"\", conditionSpellCastingAbility: string = \"\") {\r\n        let value = 0;\r\n        try {\r\n            //we eval the effect value by sending this effect gain to get_SimpleEffects() and receive the resulting effect.\r\n            let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this, { effects: [effectGain], spellSource: effectGain.spellSource, value: conditionValue, heightened: conditionHeightened, choice: conditionChoice, spellCastingAbility: conditionSpellCastingAbility });\r\n            if (effects.length) {\r\n                let effect = effects[0];\r\n                if (effect?.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                    //I don't understand why this is done. I guess we don't want floats, but why not simply take the int?\r\n                    if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                        value = parseInt(effect.value);\r\n                    }\r\n                }\r\n            } else {\r\n                value = 0;\r\n            }\r\n        } catch (error) {\r\n            value = 0;\r\n        }\r\n        switch (effectGain.affected) {\r\n            case \"Focus Points\":\r\n                (creature as Character).class.focusPoints = Math.min((creature as Character).class.focusPoints, this.get_MaxFocusPoints());\r\n                //We intentionally add the point after we set the limit. This allows us to gain focus points with feats and raise the current points\r\n                // before the limit is increased. The focus points are automatically limited in the spellbook component, where they are displayed, and when casting focus spells.\r\n                (creature as Character).class.focusPoints += value;\r\n                this.set_ToChange(\"Character\", \"spellbook\");\r\n                break;\r\n            case \"Temporary HP\":\r\n                //When you get temporary HP, some things to process:\r\n                //- If you already have temporary HP, add this amount to the selection. The player needs to choose one amount; they are not cumulative.\r\n                //- If you are setting temporary HP manually, or if the current amount is 0, skip the selection and remove all the other options.\r\n                //- If you are losing temporary HP, lose only those that come from the same source.\r\n                //-- If that's the current effective amount, remove all other options (if you are \"using\" your effective temporary HP, we assume that you have made the choice for this amount). \r\n                //--- If the current amount is 0 after loss, reset the temporary HP.\r\n                //-- Remove it if it's not the effective amount.\r\n                if (value > 0) {\r\n                    if (effectGain.source == \"Manual\") {\r\n                        creature.health.temporaryHP[0] = { amount: value, source: effectGain.source, sourceId: \"\" };\r\n                        creature.health.temporaryHP.length = 1;\r\n                    } else if (creature.health.temporaryHP[0].amount == 0) {\r\n                        creature.health.temporaryHP[0] = { amount: value, source: effectGain.source, sourceId: effectGain.sourceId };\r\n                        creature.health.temporaryHP.length = 1;\r\n                    } else {\r\n                        creature.health.temporaryHP.push({ amount: value, source: effectGain.source, sourceId: effectGain.sourceId });\r\n                    }\r\n                } else {\r\n                    let targetTempHPSet = creature.health.temporaryHP.find(tempHPSet => ((tempHPSet.source == \"Manual\") && (effectGain.source == \"Manual\")) || tempHPSet.sourceId == effectGain.sourceId)\r\n                    if (targetTempHPSet) {\r\n                        targetTempHPSet.amount += value;\r\n                        if (targetTempHPSet === creature.health.temporaryHP[0]) {\r\n                            creature.health.temporaryHP.length = 1;\r\n                            if (targetTempHPSet.amount <= 0) {\r\n                                creature.health.temporaryHP[0] = { amount: 0, source: \"\", sourceId: \"\" };\r\n                            }\r\n                        } else {\r\n                            if (targetTempHPSet.amount <= 0) {\r\n                                creature.health.temporaryHP.splice(creature.health.temporaryHP.indexOf(targetTempHPSet), 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.set_ToChange(creature.type, \"health\");\r\n                //Update Health and Time because having multiple temporary HP keeps you from ticking time and resting.\r\n                this.set_ToChange(\"Character\", \"health\");\r\n                this.set_ToChange(\"Character\", \"time\");\r\n                break;\r\n            case \"HP\":\r\n                if (value > 0) {\r\n                    creature.health.heal(creature, this, this.effectsService, value, true)\r\n                } else if (value < 0) {\r\n                    creature.health.takeDamage(creature, this, this.effectsService, -value, false)\r\n                }\r\n                this.set_ToChange(creature.type, \"health\");\r\n                this.set_ToChange(creature.type, \"effects\");\r\n                break;\r\n            case \"Raise Shield\":\r\n                let shield = this.get_Character().inventories[0].shields.find(shield => shield.equipped);\r\n                if (shield) {\r\n                    if (value > 0) {\r\n                        shield.raised = true;\r\n                    } else {\r\n                        shield.raised = false;\r\n                    }\r\n                    this.set_ToChange(creature.type, \"defense\");\r\n                    this.set_ToChange(creature.type, \"effects\");\r\n                }\r\n                break;\r\n            case \"Cover\":\r\n                this.defenseService.get_AC().set_Cover(creature, value, null, this, this.conditionsService);\r\n                break;\r\n        }\r\n    }\r\n\r\n    have_Trait(object: any, traitName: string) {\r\n        return this.traitsService.have_Trait(this, object, traitName);\r\n    }\r\n\r\n    get_Abilities(name: string = \"\") {\r\n        return this.abilitiesService.get_Abilities(name)\r\n    }\r\n\r\n    get_Skills(creature: Creature, name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        return this.skillsService.get_Skills(creature.customSkills, name, type, locked)\r\n    }\r\n\r\n    get_SkillLevelName(level: number, short: boolean = false) {\r\n        return this.skillsService.get_SkillLevelName(level, short);\r\n    }\r\n\r\n    get_Feats(name: string = \"\", type: string = \"\") {\r\n        return this.featsService.get_Feats(this.get_Character().customFeats, name, type);\r\n    }\r\n\r\n    get_Features(name: string = \"\") {\r\n        return this.featsService.get_Features(name);\r\n    }\r\n\r\n    get_FeatsAndFeatures(name: string = \"\", type: string = \"\", includeSubTypes: boolean = false, includeCountAs: boolean = false) {\r\n        //Use this function very sparingly! See get_All() for details.\r\n        return this.featsService.get_All(this.get_Character().customFeats, name, type, includeSubTypes, includeCountAs);\r\n    }\r\n\r\n    get_Health(creature: Creature) {\r\n        return creature.health;\r\n    }\r\n\r\n    get_AnimalCompanionLevels() {\r\n        return this.animalCompanionsService.get_CompanionLevels();\r\n    }\r\n\r\n    get_Senses(creature: Creature, charLevel: number = this.get_Character().level) {\r\n        let senses: string[] = [];\r\n\r\n        let ancestrySenses: string[];\r\n        if (creature.type == \"Familiar\") {\r\n            ancestrySenses = (creature as Familiar).senses;\r\n        } else {\r\n            ancestrySenses = (creature as AnimalCompanion | Character).class?.ancestry?.senses;\r\n        }\r\n        if (ancestrySenses.length) {\r\n            senses.push(...ancestrySenses)\r\n        }\r\n        if (creature.type == \"Character\") {\r\n            let character = creature as Character;\r\n            let heritageSenses = character.class.heritage.senses\r\n            if (heritageSenses.length) {\r\n                senses.push(...heritageSenses)\r\n            }\r\n            this.get_FeatsAndFeatures()\r\n                .filter(feat => feat.senses?.length && feat.have(character, this, charLevel))\r\n                .forEach(feat => {\r\n                    senses.push(...feat.senses);\r\n                });\r\n        }\r\n        if (creature.type == \"Familiar\") {\r\n            let familiar = creature as Familiar;\r\n            familiar.abilities.feats.map(gain => this.familiarsService.get_FamiliarAbilities(gain.name)[0]).filter(ability => ability?.senses.length).forEach(ability => {\r\n                senses.push(...ability.senses);\r\n            })\r\n        }\r\n        this.get_AppliedConditions(creature).filter(gain => gain.apply).forEach(gain => {\r\n            let condition = this.conditionsService.get_Conditions(gain.name)[0]\r\n            if (condition?.senses.length) {\r\n                senses.push(...condition.senses.filter(sense => !sense.conditionChoiceFilter || sense.conditionChoiceFilter == gain.choice).map(sense => sense.name))\r\n            }\r\n        });\r\n        return Array.from(new Set(senses));\r\n    }\r\n\r\n    process_Feat(creature: Character | Familiar, feat: Feat, featName: string, choice: FeatChoice, level: Level, taken: boolean) {\r\n        this.featsService.process_Feat(creature, this, feat, featName, choice, level, taken);\r\n    }\r\n\r\n    get_FeatsShowingOn(objectName: string = \"all\") {\r\n        return this.get_FeatsAndFeatures().filter(feat =>\r\n            feat.hints.find(hint =>\r\n                hint.showon?.split(\",\").find(showon =>\r\n                    objectName.toLowerCase() == \"all\" ||\r\n                    showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                    (\r\n                        objectName.toLowerCase().includes(\"lore\") &&\r\n                        showon.trim().toLowerCase() == \"lore\"\r\n                    )\r\n                )\r\n            ) && feat.have(this.get_Character(), this, this.get_Character().level)\r\n        )\r\n    }\r\n\r\n    get_CompanionShowingOn(objectName: string = \"all\") {\r\n        //Get showon elements from Companion Ancestry and Specialization\r\n        return []\r\n            .concat(\r\n                [this.get_Companion().class.ancestry]\r\n                    .filter(ancestry =>\r\n                        ancestry.hints\r\n                            .find(hint =>\r\n                                hint.showon?.split(\",\")\r\n                                    .find(showon =>\r\n                                        objectName == \"all\" ||\r\n                                        showon.trim().toLowerCase() == objectName.toLowerCase()\r\n                                    )\r\n                            )\r\n                    )\r\n            )\r\n            .concat(\r\n                this.get_Companion().class.specializations\r\n                    .filter(spec =>\r\n                        spec.hints\r\n                            .find(hint =>\r\n                                hint.showon?.split(\",\")\r\n                                    .find(showon =>\r\n                                        objectName == \"all\" ||\r\n                                        showon.trim().toLowerCase() == objectName.toLowerCase()\r\n                                    )\r\n                            )\r\n                    )\r\n            )\r\n            //Return any feats that include e.g. Companion:Athletics\r\n            .concat(\r\n                this.get_FeatsShowingOn(\"Companion:\" + objectName)\r\n            )\r\n    }\r\n\r\n    get_FamiliarShowingOn(objectName: string = \"all\") {\r\n        //Get showon elements from Familiar Abilities\r\n        return this.familiarsService.get_FamiliarAbilities().filter(feat =>\r\n            feat.hints.find(hint =>\r\n                hint.showon?.split(\",\").find(showon =>\r\n                    objectName.toLowerCase() == \"all\" ||\r\n                    showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                    (\r\n                        objectName.toLowerCase().includes(\"lore\") &&\r\n                        showon.trim().toLowerCase() == \"lore\"\r\n                    )\r\n                )\r\n            ) && feat.have(this.get_Familiar(), this)\r\n            //Return any feats that include e.g. Companion:Athletics\r\n        ).concat(this.get_FeatsShowingOn(\"Familiar:\" + objectName))\r\n    }\r\n\r\n    get_ConditionsShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        return this.get_AppliedConditions(creature)\r\n            .filter(conditionGain => conditionGain.apply)\r\n            .map(conditionGain => this.get_Conditions(conditionGain.name)[0])\r\n            .filter(condition =>\r\n                condition?.hints.find(hint =>\r\n                    hint.showon?.split(\",\").find(showon =>\r\n                        objectName.trim().toLowerCase() == \"all\" ||\r\n                        showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                        (\r\n                            objectName.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n    }\r\n\r\n    get_OwnedActivities(creature: Creature, levelNumber: number = creature.level, all: boolean = false) {\r\n        let activities: (ActivityGain | ItemActivity)[] = []\r\n        if (!this.still_loading()) {\r\n            if (creature.type == \"Character\") {\r\n                activities.push(...(creature as Character).class.activities.filter(gain => gain.level <= levelNumber));\r\n            }\r\n            if (creature.type == \"Companion\") {\r\n                activities.push(...(creature as AnimalCompanion).class?.ancestry?.activities.filter(gain => gain.level <= levelNumber));\r\n            }\r\n            //Get all applied condition gains' activity gains. These were copied from the condition when it was added.\r\n            this.get_AppliedConditions(creature, \"\", \"\", true).filter(gain => gain.apply).forEach(gain => {\r\n                activities.push(...gain.gainActivities);\r\n            });\r\n            //With the all parameter, get all activities of all items regardless of whether they are equipped or invested or slotted.\r\n            // This is used for ticking down cooldowns.\r\n            if (all) {\r\n                creature.inventories.forEach(inv => {\r\n                    inv.allEquipment().forEach(item => {\r\n                        if (item.gainActivities.length) {\r\n                            activities.push(...item.gainActivities);\r\n                        }\r\n                        if (item.activities.length) {\r\n                            activities.push(...item.activities);\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.propertyRunes) {\r\n                            item.propertyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.bladeAllyRunes) {\r\n                            item.bladeAllyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from Oils emulating runes\r\n                        if (item.oilsApplied) {\r\n                            item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.activities).forEach(oil => {\r\n                                activities.push(...oil.runeEffect.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from slotted Aeon Stones\r\n                        if ((item as WornItem).aeonStones) {\r\n                            (item as WornItem).aeonStones.filter(stone => stone.activities.length).forEach(stone => {\r\n                                activities.push(...stone.activities);\r\n                            })\r\n                        }\r\n                    })\r\n                    inv.allRunes().forEach(rune => {\r\n                        if (rune.activities.length) {\r\n                            activities.push(...rune.activities);\r\n                        }\r\n                    })\r\n                })\r\n            } else {\r\n                //Without the all parameter, get activities only from equipped and invested items and their slotted items.\r\n                creature.inventories[0].allEquipment()\r\n                    .filter(item =>\r\n                        (item.equippable ? item.equipped : true) &&\r\n                        (item.can_Invest() ? item.invested : true) &&\r\n                        !item.broken\r\n                    ).forEach((item: Equipment) => {\r\n                        if (item.gainActivities.length) {\r\n                            activities.push(...item.gainActivities);\r\n                        }\r\n                        //DO NOT get resonant activities at this point\r\n                        if (item.activities.length) {\r\n                            activities.push(...item.activities.filter(activity => !activity.resonant || all));\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.propertyRunes) {\r\n                            item.propertyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from runes\r\n                        if (item.bladeAllyRunes && item[\"bladeAlly\"]) {\r\n                            item.bladeAllyRunes.filter(rune => rune.activities.length).forEach(rune => {\r\n                                activities.push(...rune.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from Oils emulating runes\r\n                        if (item.oilsApplied) {\r\n                            item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.activities).forEach(oil => {\r\n                                activities.push(...oil.runeEffect.activities);\r\n                            });\r\n                        }\r\n                        //Get activities from slotted Aeon Stones, including resonant activities\r\n                        if ((item as WornItem).aeonStones) {\r\n                            (item as WornItem).aeonStones.filter(stone => stone.activities.length).forEach(stone => {\r\n                                activities.push(...stone.activities);\r\n                            })\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n        return activities.sort(function (a, b) {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    get_ActivitiesShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        return this.get_OwnedActivities(creature)\r\n            //Conflate ActivityGains and their respective Activities into one object...\r\n            .map(gain => gain.constructor == ItemActivity ? [gain, gain] : [gain, this.activitiesService.get_Activities(gain.name)[0]])\r\n            //...so that we can find the activities where the gain is active or the activity doesn't need to be toggled...\r\n            .filter((gainAndActivity: [ActivityGain | ItemActivity, Activity]) => gainAndActivity[1] && (gainAndActivity[0].active || !gainAndActivity[1].toggle))\r\n            //...and then keep only the activities.\r\n            .map((gainAndActivity: [ActivityGain | ItemActivity, Activity]) => gainAndActivity[1])\r\n            .filter(activity =>\r\n                activity?.hints.find(hint =>\r\n                    hint.showon.split(\",\").find(showon =>\r\n                        objectName.trim().toLowerCase() == \"all\" ||\r\n                        showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                        (\r\n                            objectName.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n    }\r\n\r\n    get_ItemsShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        let returnedItems: Item[] = [];\r\n        //Prepare function to add items whose hints match the objectName.\r\n        function get_Hint(item: Equipment | Oil | WornItem | ArmorRune) {\r\n            if (item.hints\r\n                .find(hint =>\r\n                    hint.showon.split(\",\").find(showon =>\r\n                        objectName.trim().toLowerCase() == \"all\" ||\r\n                        showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                        (\r\n                            objectName.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n                )\r\n            ) {\r\n                returnedItems.push(item);\r\n            }\r\n        }\r\n        creature.inventories.forEach(inventory => {\r\n            inventory.allEquipment().filter(item => (item.equippable ? item.equipped : true) && item.amount && !item.broken && (item.can_Invest() ? item.invested : true)).forEach(item => {\r\n                get_Hint(item);\r\n                item.oilsApplied.forEach(oil => {\r\n                    get_Hint(oil);\r\n                });\r\n                if ((item as WornItem).aeonStones) {\r\n                    (item as WornItem).aeonStones.forEach(stone => {\r\n                        get_Hint(stone);\r\n                    });\r\n                }\r\n                if (item.moddable == \"armor\" && (item as Equipment).propertyRunes) {\r\n                    (item as Equipment).propertyRunes.forEach(rune => {\r\n                        get_Hint(rune as ArmorRune);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return returnedItems;\r\n    }\r\n\r\n    get_ArmorSpecializationsShowingOn(creature: Creature, objectName: string = \"all\") {\r\n        if (creature.type == \"Character\") {\r\n            return creature.inventories[0].armors.find(armor => armor.equipped).get_ArmorSpecialization(creature, this)\r\n                .filter(spec =>\r\n                    spec?.hints\r\n                        .find(hint =>\r\n                            hint.showon.split(\",\")\r\n                                .find(showon =>\r\n                                    objectName.trim().toLowerCase() == \"all\" ||\r\n                                    showon.trim().toLowerCase() == objectName.toLowerCase() ||\r\n                                    (\r\n                                        objectName.toLowerCase().includes(\"lore\") &&\r\n                                        showon.trim().toLowerCase() == \"lore\"\r\n                                    )\r\n                                )\r\n                        )\r\n                )\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_MaxFocusPoints() {\r\n        let focusPoints: number = 0;\r\n        this.effectsService.get_AbsolutesOnThis(this.get_Character(), \"Focus Pool\").forEach(effect => {\r\n            focusPoints = parseInt(effect.setValue);\r\n        })\r\n        this.effectsService.get_RelativesOnThis(this.get_Character(), \"Focus Pool\").forEach(effect => {\r\n            focusPoints += parseInt(effect.value);\r\n        })\r\n        return Math.min(focusPoints, 3);\r\n    }\r\n\r\n    get_AC() {\r\n        return this.defenseService.get_AC();\r\n    }\r\n\r\n    initialize_AnimalCompanion() {\r\n        let character = this.get_Character();\r\n        if (character.class.animalCompanion) {\r\n            character.class.animalCompanion = Object.assign(new AnimalCompanion(), character.class.animalCompanion);\r\n            character.class.animalCompanion = this.reassign(character.class.animalCompanion);\r\n            character.class.animalCompanion.class.reset_levels(this);\r\n            character.class.animalCompanion.set_Level(this);\r\n            this.equip_BasicItems(character.class.animalCompanion);\r\n            this.set_ToChange(\"Companion\", \"all\");\r\n        }\r\n    }\r\n\r\n    cleanup_Familiar() {\r\n        this.get_Familiar().abilities.feats.forEach(gain => {\r\n            this.get_Character().take_Feat(this.get_Familiar(), this, undefined, gain.name, false, this.get_Familiar().abilities, undefined);\r\n        })\r\n    }\r\n\r\n    initialize_Familiar() {\r\n        let character = this.get_Character();\r\n        if (character.class.familiar) {\r\n            character.class.familiar = Object.assign(new Familiar(), character.class.familiar);\r\n            character.class.familiar = this.reassign(character.class.familiar);\r\n            this.set_ToChange(\"Familiar\", \"all\");\r\n        }\r\n    }\r\n\r\n    initialize(id: string) {\r\n        this.set_Changed(\"top-bar\");\r\n        this.loading = true;\r\n        this.traitsService.initialize();\r\n        this.abilitiesService.initialize();\r\n        this.activitiesService.initialize();\r\n        this.featsService.initialize();\r\n        this.historyService.initialize();\r\n        this.classesService.initialize();\r\n        this.conditionsService.initialize();\r\n        this.spellsService.initialize();\r\n        this.skillsService.initialize()\r\n        this.itemsService.initialize();\r\n        this.effectsService.initialize(this);\r\n        this.deitiesService.initialize();\r\n        this.animalCompanionsService.initialize();\r\n        this.familiarsService.initialize();\r\n        this.savegameService.initialize(this);\r\n        if (id) {\r\n            this.me = new Character();\r\n            this.load_CharacterFromDB(id)\r\n                .subscribe((results: string[]) => {\r\n                    this.loader = results;\r\n                    this.finish_loading()\r\n                }, (error) => {\r\n                    console.log('Error loading character from database: ' + error.message);\r\n                });\r\n        } else {\r\n            this.me = new Character();\r\n            this.finish_loading();\r\n        }\r\n    }\r\n\r\n    load_CharacterFromDB(id: string): Observable<string[]> {\r\n        return this.savegameService.load_CharacterFromDB(id);\r\n    }\r\n\r\n    delete_Character(savegame: Savegame) {\r\n        this.savegameService.delete_CharacterFromDB(savegame).subscribe((results) => {\r\n            console.log(\"Deleted \" + (savegame.name || \"character\") + \" from database.\");\r\n            this.savegameService.initialize(this);\r\n        }, (error) => {\r\n            console.log('Error deleting from database: ' + error.message);\r\n        });\r\n    }\r\n\r\n    reassign(object: any) {\r\n        return this.savegameService.reassign(object, \"\", this.itemsService);\r\n    }\r\n\r\n    finish_loading() {\r\n        if (this.loader) {\r\n            this.me = Object.assign(new Character(), JSON.parse(JSON.stringify(this.loader)));\r\n            this.loader = [];\r\n            this.finalize_Character();\r\n        }\r\n    }\r\n\r\n    finalize_Character() {\r\n        if (this.itemsService.still_loading() || this.animalCompanionsService.still_loading()) {\r\n            setTimeout(() => {\r\n                this.finalize_Character();\r\n            }, 500)\r\n        } else {\r\n            //Use this.me here instead of this.get_Character() because we're still_loading()\r\n            this.me = this.savegameService.load_Character(this.me, this.itemsService, this.classesService, this.historyService, this.animalCompanionsService)\r\n            if (this.loading) { this.loading = false; }\r\n            this.grant_BasicItems();\r\n            this.create_WeaponFeats();\r\n            this.characterChanged$ = this.changed.asObservable();\r\n            this.viewChanged$ = this.viewChanged.asObservable();\r\n            this.verify_Feats();\r\n            this.timeService.set_YourTurn(this.get_Character().yourTurn);\r\n            this.set_Accent();\r\n            this.set_Darkmode();\r\n            this.trigger_FinalChange();\r\n        }\r\n    }\r\n\r\n    trigger_FinalChange() {\r\n        if (\r\n            this.traitsService.still_loading() ||\r\n            this.featsService.still_loading() ||\r\n            this.historyService.still_loading() ||\r\n            this.classesService.still_loading() ||\r\n            this.conditionsService.still_loading() ||\r\n            this.spellsService.still_loading() ||\r\n            this.itemsService.still_loading()\r\n        ) {\r\n            setTimeout(() => {\r\n                this.trigger_FinalChange();\r\n            }, 500)\r\n        } else {\r\n            //Update everything once.\r\n            this.set_Changed();\r\n            this.set_ToChange(\"Character\", \"effects\");\r\n            this.process_ToChange();\r\n        }\r\n    }\r\n\r\n    save_Character() {\r\n        this.get_Character().yourTurn = this.timeService.get_YourTurn();\r\n        this.savegameService.save_Character(this.get_Character(), this.itemsService, this.classesService, this.historyService, this.animalCompanionsService).subscribe((result) => {\r\n            if (result[\"lastErrorObject\"] && result[\"lastErrorObject\"].updatedExisting) {\r\n                console.log(\"Saved \" + (this.get_Character().name || \"character\") + \" to database.\");\r\n            } else {\r\n                console.log(\"Created \" + (this.get_Character().name || \"character\") + \" on database.\");\r\n            }\r\n            this.savegameService.initialize(this);\r\n        }, (error) => {\r\n            console.log('Error saving to database: ' + error.message);\r\n        });\r\n\r\n    }\r\n\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { SpellChoice } from './SpellChoice';\r\nimport { Scroll } from './Scroll';\r\n\r\nexport class SpellCasting {\r\n    public readonly _className: string = this.constructor.name;\r\n    //The name of the class that this choice belongs to.\r\n    //Important to identify the class's spellcasting key ability.\r\n    public className: string = \"\";\r\n    public ability: string = \"\";\r\n    //The level where you learn to spell casts using this method.\r\n    public charLevelAvailable: number = 0;\r\n    public tradition: \"\"|\"Arcane\"|\"Divine\"|\"Occult\"|\"Primal\" = \"\";\r\n    public traditionAvailable: 0;\r\n    public traditionFilter: string[] = [];\r\n    public spellChoices: SpellChoice[] = [];\r\n    //SpellSlotsUsed is for spontaneous casters and counts the spells cast on each spell level, where the index is the spell level.\r\n    //Index 0 is for Studious Capacity, which allows a single more casting each day,\r\n    // and index 11 and 12 are for Greater Vital Evolution, which allows two more.\r\n    public spellSlotsUsed: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    //SpellBookSlots is for Wizards and describes how many spells you can learn per level, where the index is the level.\r\n    //Index 0 is for cantrips. Regular wizards get 2 new spells per level and 5 on the first, and the spell level can be up to index/2 (rounded up).\r\n    public spellBookSlots: number[] = [10, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\r\n    //BondedItemCharges is for Wizards and contains charges to restore a used spell. The index is the spell level, and 0 is for all spell levels.\r\n    //Universalists get 1 for each level per rest, and all other schools get 1 for all. These are added at Rest.\r\n    public bondedItemCharges: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    public source: string = \"\";\r\n    public scrollSavant: Scroll[] = [];\r\n    constructor(public castingType: \"Focus\"|\"Innate\"|\"Prepared\"|\"Spontaneous\") {\r\n    }    \r\n}","import core from './core.json';\r\nimport custom_caverns_and_covens from './custom_caverns_and_covens.json'\r\nexport {\r\n    core,\r\n    custom_caverns_and_covens\r\n};","import core from './core.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    custom_kitsune\r\n};","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-abilities-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Abilities</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <ng-container *ngIf=\"!get_Minimized()\">\r\n            <div class=\"list-item\" *ngFor=\"let ability of get_Abilities(); trackBy:trackByIndex;\">\r\n                <ng-container\r\n                    *ngFor=\"let calculatedAbility of [ability.calculate(get_Creature(), characterService, effectsService)]; trackBy:trackByIndex;\">\r\n                    <div class=\"newrow\">\r\n                        <strong>{{ability.name}}</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedAbility.value.explain\"\r\n                                [ngClass]=\"{'penalty':calculatedAbility.penalties, 'bonus':calculatedAbility.bonuses, 'absolute':calculatedAbility.absolutes}\">\r\n                                {{calculatedAbility.value.result}}\r\n                            </div>\r\n                        </span>\r\n                        <strong>Modifier</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedAbility.mod.explain\"\r\n                                [ngClass]=\"{'penalty':calculatedAbility.modpenalties, 'bonus':calculatedAbility.modbonuses, 'absolute':calculatedAbility.modabsolutes}\">\r\n                                {{calculatedAbility.mod.result}}\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <app-tags class=\"newrow tags\" [creature]=\"creature\" [objectName]=ability.name [showTraits]=true\r\n                        [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true\r\n                        [showEffects]=true>\r\n                    </app-tags>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"get_Minimized()\">\r\n            <div class=\"list-item\" *ngFor=\"let subset of [1,2]; trackBy:trackByIndex;\">\r\n                <span *ngFor=\"let ability of get_Abilities(subset); let index = index; trackBy:trackByIndex;\">\r\n                    <ng-container\r\n                        *ngFor=\"let calculatedAbility of [ability.calculate(get_Creature(), characterService, effectsService)]; trackBy:trackByIndex;\">\r\n                        <strong>{{ability.name.substring(0, 3).toUpperCase()}}</strong>&nbsp;\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedAbility.mod.explain\"\r\n                                [ngClass]=\"{'penalty':calculatedAbility.modpenalties, 'bonus':calculatedAbility.modbonuses, 'absolute':calculatedAbility.modabsolutes}\">\r\n                                {{calculatedAbility.mod.result}}\r\n                            </div>\r\n                        </span>\r\n                    </ng-container>\r\n                </span>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { AbilitiesService} from '../abilities.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Creature } from '../Creature';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Character } from '../Character';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-abilities',\r\n    templateUrl: './abilities.component.html',\r\n    styleUrls: ['./abilities.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AbilitiesComponent implements OnInit {\r\n    \r\n    @Input()\r\n    public creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public abilitiesService: AbilitiesService,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.abilitiesMinimized = !this.characterService.get_Character().settings.abilitiesMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.abilitiesMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_CalculatedIndex() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return 0;\r\n            case \"Companion\":\r\n                return 1;\r\n        }\r\n    }\r\n\r\n    get_Abilities(subset: number = 0) {\r\n        switch (subset) {\r\n            case 0:\r\n                return this.abilitiesService.get_Abilities();\r\n            case 1:\r\n                return this.abilitiesService.get_Abilities().filter((ability, index) => index <= 2);\r\n            case 2:\r\n                return this.abilitiesService.get_Abilities().filter((ability, index) => index >= 3);\r\n        }\r\n        \r\n    }\r\n    \r\n    still_loading() {\r\n        return this.abilitiesService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"abilities\", \"all\", this.creature.toLowerCase()].includes(target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"abilities\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div class=\"list-item\"\r\n    [ngClass]=\"{'fullsize-only':(calculatedSkill.value.result == 0), 'character-only':(calculatedSkill.level == 0 && creature == 'Companion')}\"\r\n    *ngFor=\"let calculatedSkill of [skill.calculate(get_Creature(), this.characterService,this.abilitiesService,this.effectsService, get_Character().level, isDC)]; trackBy:trackByIndex;\">\r\n    <div class=\"newrow\">\r\n        <ng-template #AbilityPopover>\r\n            <strong>Ability</strong>\r\n            {{calculatedSkill.ability}}\r\n        </ng-template>\r\n        <span>\r\n            <span class=\"fullsize-only\">\r\n                <input id=\"{{skill.name}}ShowNotes\" class=\"invisible\" type=\"checkbox\" [(ngModel)]=\"skill.showNotes\">\r\n                <label for=\"{{skill.name}}ShowNotes\" [ngbTooltip]=\"'Edit notes'\"><i class='bi-pencil-square'></i>&nbsp;</label>\r\n            </span>\r\n            <strong [ngbPopover]=\"calculatedSkill.ability ? AbilityPopover : null\">{{get_Name(skill)}}</strong>\r\n        </span>\r\n        <app-proficiency-form style=\"flex-grow:0\" [creature]=\"creature\" [skill]=\"skill\"\r\n            [characterService]=\"this.characterService\" [level]=\"this.characterService.get_Character().level\"\r\n            *ngIf=\"creature != 'Familiar'\">\r\n        </app-proficiency-form>\r\n        <span *ngIf=\"showValue\">\r\n            <div class=\"value\" [ngbPopover]=\"((isDC) ? 'DC basis: 10\\n' : '')+calculatedSkill.value.explain\"\r\n                [ngClass]=\"{'penalty':calculatedSkill.penalties, 'bonus':calculatedSkill.bonuses, 'absolute':calculatedSkill.absolutes.length}\">\r\n                {{calculatedSkill.value.result + ((isDC) ? 10 : 0)}}\r\n            </div>\r\n        </span>\r\n    </div>\r\n    <app-tags [creature]=\"creature\" [objectName]=skill.name [showTraits]=true [showFeats]=true [showItems]=true\r\n        [showActivities]=true [showConditions]=true [specialNames]=get_SpecialShowon(skill)\r\n        [specialEffects]=\"calculatedSkill.absolutes.concat(calculatedSkill.relatives)\">\r\n    </app-tags>\r\n    <div class=\"fullwidth\" [ngbCollapse]=\"!skill.showNotes\">\r\n        <div class=\"fullsize-only newrow\">\r\n            <span>\r\n                <strong>Notes</strong>\r\n                <input id=\"{{skill.name}}Notes\" type=\"textarea\" class=\"fullwidth\" [(ngModel)]=\"skill.notes\">\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { SkillsService } from '../skills.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { AbilitiesService } from '../abilities.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Skill } from '../Skill';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Effect } from '../Effect';\r\n\r\n@Component({\r\n    selector: 'app-skill',\r\n    templateUrl: './skill.component.html',\r\n    styleUrls: ['./skill.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SkillComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    skill: Skill;\r\n    @Input()\r\n    showValue: boolean = true;\r\n    @Input()\r\n    isDC: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public abilitiesService: AbilitiesService,\r\n        public skillsService: SkillsService,\r\n        public traitsService: TraitsService,\r\n        public effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        return this.characterService.get_Skills(this.get_Creature(), name, type);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Name(skill: Skill) {\r\n        if (!this.isDC && skill.name.includes(\"Spell DC\")) {\r\n            return skill.name.replace(\"Spell DC\", \"Spell Attacks\");\r\n        } else {\r\n            return skill.name;\r\n        }\r\n    }\r\n\r\n    get_SpecialShowon(skill: Skill) {\r\n        let creature = this.get_Creature();\r\n        //Under certain circumstances, some Feats apply to skills independently of their name.\r\n        //Return names that get_FeatsShowingOn should run on\r\n        let specialNames: string[] = []\r\n        //Show Path to Perfection notices on a save if any skill increases with that PtP as its source can be found\r\n        if (skill.type == \"Save\" && creature.type == \"Character\") {\r\n            if (creature.get_SkillIncreases(this.characterService, 1, this.get_Creature().level, skill.name, \"Path to Perfection\").length) {\r\n                specialNames.push(\"Path to Perfection\");\r\n            }\r\n            if (creature.get_SkillIncreases(this.characterService, 1, this.get_Creature().level, skill.name, \"Second Path to Perfection\").length) {\r\n                specialNames.push(\"Second Path to Perfection\");\r\n            }\r\n            if (creature.get_SkillIncreases(this.characterService, 1, this.get_Creature().level, skill.name, \"Third Path to Perfection\").length) {\r\n                specialNames.push(\"Third Path to Perfection\");\r\n            }\r\n        }\r\n        return specialNames;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.skillsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"individualskills\", \"all\", this.creature.toLowerCase(), this.skill.name.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature == this.creature &&\r\n                        (\r\n                            view.target == \"all\" ||\r\n                            (view.target == \"individualskills\" &&\r\n                                (\r\n                                    [this.skill.name.toLowerCase(), this.skill.ability.toLowerCase(), \"all\"].includes(view.subtarget.toLowerCase()) ||\r\n                                    (\r\n                                        this.get_Name(this.skill).toLowerCase().includes(\"attacks\") &&\r\n                                        view.subtarget == \"attacks\"\r\n                                    )\r\n                                )\r\n                            )\r\n                        )) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { WornItem } from 'src/app/WornItem';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { TimeService } from 'src/app/time.service';\r\n\r\n@Component({\r\n    selector: 'app-itemAeonStones',\r\n    templateUrl: './itemAeonStones.component.html',\r\n    styleUrls: ['./itemAeonStones.component.css']\r\n})\r\nexport class ItemAeonStonesComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: WornItem;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n\r\n    public newAeonStone: { aeonStone: WornItem, inv: ItemCollection }[];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Slots() {\r\n        let indexes: number[] = [];\r\n        for (let index = 0; index < this.item.isWayfinder; index++) {\r\n            indexes.push(index);\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n    get_Inventories() {\r\n        if (this.itemStore) {\r\n            return [this.get_CleanItems()];\r\n        } else {\r\n            return this.get_Character().inventories;\r\n        }\r\n    }\r\n\r\n    get_InitialAeonStones(index: number) {\r\n        let item = this.item;\r\n        //Start with one empty stone to select nothing.\r\n        let allStones: { aeonStone: WornItem, inv: ItemCollection }[] = [{ aeonStone: new WornItem(), inv: null }];\r\n        allStones[0].aeonStone.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (item.aeonStones[index]) {\r\n            allStones.push(this.newAeonStone[index] as { aeonStone: WornItem, inv: ItemCollection });\r\n        }\r\n        return allStones;\r\n    }\r\n\r\n    get_AeonStones(inv: ItemCollection) {\r\n        if (this.itemStore) {\r\n            return inv.wornitems.filter(wornItem => wornItem.isAeonStone).map(aeonStone => ({ aeonStone: aeonStone, inv: null }));\r\n        } else {\r\n            return inv.wornitems.filter(wornItem => wornItem.isAeonStone).map(aeonStone => ({ aeonStone: aeonStone, inv: inv }));\r\n        }\r\n    }\r\n\r\n    get_AeonStoneCooldown(stone: WornItem) {\r\n        //If any resonant activity on this aeon Stone has a cooldown, return the lowest of these in a human readable format.\r\n        if (stone.activities && stone.activities.length && stone.activities.some(activity => activity.resonant && activity.activeCooldown)) {\r\n            let lowestCooldown = Math.min(...stone.activities.filter(activity => activity.resonant && activity.activeCooldown).map(activity => activity.activeCooldown));\r\n            return \" (Cooldown: \"+this.timeService.get_Duration(lowestCooldown)+\")\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    add_AeonStone(index: number) {\r\n        let item: WornItem = this.item;\r\n        let stone: WornItem = this.newAeonStone[index].aeonStone;\r\n        let inv: ItemCollection = this.newAeonStone[index].inv;\r\n        if (!item.aeonStones[index] || stone !== item.aeonStones[index]) {\r\n            //If there is an Aeon Stone in this slot, return the old stone to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (item.aeonStones[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_AeonStone(index);\r\n                }\r\n                item.aeonStones.splice(index, 1);\r\n            }\r\n            //Then add the new Aeon Stone to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (stone.name != \"\") {\r\n                //Add a copy of the stone to the item\r\n                let newLength = item.aeonStones.push(Object.assign(new WornItem, JSON.parse(JSON.stringify(stone))));\r\n                item.aeonStones[newLength - 1] = this.characterService.reassign(item.aeonStones[newLength - 1]);\r\n                let newStone = item.aeonStones[newLength - 1];\r\n                newStone.amount = 1;\r\n                //If we are not in the item store, remove the inserted Aeon Stone from the inventory, either by decreasing the amount or by dropping the item.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, stone, false, false, false, 1);\r\n                }\r\n            }\r\n        }\r\n        this.set_ToChange(stone);\r\n        this.set_AeonStoneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_AeonStone(index: number) {\r\n        let item: WornItem = this.item;\r\n        let oldStone: WornItem = item.aeonStones[index];\r\n        this.set_ToChange(oldStone);\r\n        //Add the extracted stone to the inventory, either on an existing stack or as a new item.\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldStone, false, false, false, 1);\r\n    }\r\n\r\n    set_ToChange(stone: WornItem) {\r\n        stone.hints?.forEach(hint => {\r\n            this.characterService.set_TagsToChange(\"Character\", hint.showon);\r\n        })\r\n        if (stone.effects.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        }\r\n        if (stone.activities.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n    }\r\n\r\n    get_Title(stone: WornItem) {\r\n        if (this.itemStore && stone.price) {\r\n            return \"Price \" + this.get_Price(stone);\r\n        }\r\n    }\r\n\r\n    get_Price(stone: WornItem) {\r\n        if (stone.price) {\r\n            if (stone.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = stone.price;\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100)+\"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) {priceString += \" \";}\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10)+\"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) {priceString += \" \";}\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price+\"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    set_AeonStoneNames() {\r\n        this.newAeonStone = \r\n        (this.item.aeonStones ? [\r\n            (this.item.aeonStones[0] ? { aeonStone: this.item.aeonStones[0], inv: null } : { aeonStone: new WornItem(), inv: null }),\r\n            (this.item.aeonStones[1] ? { aeonStone: this.item.aeonStones[1], inv: null } : { aeonStone: new WornItem(), inv: null }),\r\n        ] : [{ aeonStone: new WornItem(), inv: null }, { aeonStone: new WornItem(), inv: null }]);\r\n        this.newAeonStone.filter(stone => stone.aeonStone.name == \"New Item\").forEach(stone => {\r\n            stone.aeonStone.name = \"\";\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_AeonStoneNames();\r\n    }\r\n\r\n}","<!--Changing Aeon Stones-->\r\n<div class=\"newrow\" *ngFor=\"let index of get_Slots(); trackBy:trackByIndex;\">\r\n    <strong *ngIf=\"index == 0\">Aeon Stones</strong>\r\n    <span *ngIf=\"index != 0\">&nbsp;</span>\r\n    <select [(ngModel)]=\"newAeonStone[index]\" (change)=\"add_AeonStone(index)\" [disabled]=\"!item.aeonStones[index-1] && index > 0\">\r\n        <ng-container *ngFor=\"let stone of get_InitialAeonStones(index); let initialStoneIndex = index; trackBy:trackByIndex;\">\r\n            <option [ngValue]=\"stone\" *ngIf=\"initialStoneIndex == 0\">\r\n                \r\n            </option>\r\n            <optgroup *ngIf=\"initialStoneIndex == 1\" label=\"Current stone\">\r\n                <option [ngValue]=\"stone\">\r\n                    {{stone.aeonStone.name}}\r\n                </option>\r\n            </optgroup>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n            <optgroup label=\"{{itemStore ? 'Available stones' : inv.get_Name(characterService)}}\" *ngIf=\"get_AeonStones(inv).length\">\r\n                <option *ngFor=\"let stone of get_AeonStones(inv); trackBy:trackByIndex;\" [ngValue]=\"stone\"\r\n                title=\"{{get_Title(stone.aeonStone)}}\">\r\n                    {{stone.aeonStone.amount > 1 ? stone.aeonStone.amount+\" \" : \"\"}}{{stone.aeonStone.name}}{{get_AeonStoneCooldown(stone.aeonStone)}}\r\n                </option>\r\n            </optgroup>\r\n        </ng-container>\r\n    </select>\r\n</div>","export class ItemProperty {\r\n    public desc: string = \"\";\r\n    public examples: string = \"\";\r\n    public group: string = \"\";\r\n    public key: string = \"\";\r\n    public locked: boolean = false;\r\n    public name: string = \"\";\r\n    public parent: string = \"\";\r\n    public priority: number = 0;\r\n    public property: any;\r\n    public type: string = \"\";\r\n    public validation: string = \"\";\r\n}\r\n","export class InventoryGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    //You cannot add any items to an inventory that would break its bulk limit.\r\n    public bulkLimit: number = 0;\r\n    //This is the amount of bulk that can be ignored when weighing this inventory.\r\n    public bulkReduction: number = 0;\r\n}","export class SpecializationGain {\r\n    public bladeAlly: boolean = false;\r\n    public condition: string = \"\";\r\n    public featreq: string = \"\";\r\n    public group: string = \"\";\r\n    public name: string = \"\";\r\n    public proficiency: string = \"\";\r\n    public skillLevel: number = 0;\r\n    public range: string = \"\";\r\n    public trait: string = \"\";\r\n}\r\n","<div *ngFor=\"let proficiency of [get_ProficiencyLevel()]; trackBy:trackByIndex;\">\r\n    <span class=\"proficiency\" [ngbTooltip]=\"level.title\" *ngFor=\"let level of get_Levels(); trackBy:trackByIndex;\" [ngClass]=\"{'checked':proficiency == level.value}\">{{level.key}}</span>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Skill } from '../Skill';\r\nimport { CharacterService } from '../character.service';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Character } from '../Character';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-proficiency-form',\r\n    templateUrl: './proficiency-form.component.html',\r\n    styleUrls: ['./proficiency-form.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class ProficiencyFormComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    skill: Skill;\r\n    @Input()\r\n    characterService: CharacterService;\r\n    @Input()\r\n    level: number;\r\n    @Input()\r\n    excludeTemporary: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.triggers = \"hover:click\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.container = \"body\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Character | AnimalCompanion;\r\n    }\r\n\r\n    get_Levels() {\r\n        return [\r\n            { value: 2, key: \"T\", title: \"Trained\" },\r\n            { value: 4, key: \"E\", title: \"Expert\" },\r\n            { value: 6, key: \"M\", title: \"Master\" },\r\n            { value: 8, key: \"L\", title: \"Legendary\" }\r\n        ]\r\n    }\r\n\r\n    get_ProficiencyLevel() {\r\n        return this.skill.level(this.get_Creature(), this.characterService, this.level, this.excludeTemporary);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"individualskills\", \"all\", this.creature.toLowerCase(), this.skill.name.toLowerCase()].includes(target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges()\r\n                }\r\n            });\r\n        this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature == this.creature &&\r\n                    (\r\n                        view.target == \"all\" ||\r\n                        (view.target.toLowerCase() == \"individualskills\" && [this.skill.name.toLowerCase(), this.skill.ability.toLowerCase(), \"all\"].includes(view.subtarget.toLowerCase()))\r\n                    )) {\r\n                    this.changeDetector.detectChanges()\r\n                }\r\n            });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { Condition } from '../Condition';\r\nimport { TimeService } from '../time.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { ItemProperty } from '../ItemProperty';\r\nimport { EffectGain } from '../EffectGain';\r\nimport { ItemsService } from '../items.service';\r\nimport { Creature } from '../Creature';\r\nimport { Skill } from '../Skill';\r\nimport { Ability } from '../Ability';\r\nimport { Activity } from '../Activity';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { Equipment } from '../Equipment';\r\nimport { Consumable } from '../Consumable';\r\nimport { Effect } from '../Effect';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-conditions',\r\n    templateUrl: './conditions.component.html',\r\n    styleUrls: ['./conditions.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConditionsComponent implements OnInit {\r\n\r\n    public endOn: number = 5;\r\n    public value: number = 1;\r\n    public heightened: number = 1;\r\n    public showList: string = \"\";\r\n    public showItem: string = \"\";\r\n    public wordFilter: string = \"\";\r\n    public permanent: boolean = true;\r\n    public days: number = 0;\r\n    public hours: number = 0;\r\n    public minutes: number = 0;\r\n    public turns: number = 0;\r\n    private purpose: \"conditions\" | \"customeffects\" = \"conditions\";\r\n    public newEffect: EffectGain = new EffectGain();\r\n    public validationError: string[] = [];\r\n    public validationResult: string[] = [];\r\n    public parseInt = parseInt;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private activitiesService: ActivitiesService,\r\n        private conditionsService: ConditionsService,\r\n        private effectsService: EffectsService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private traitsService: TraitsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(type) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    toggle_Item(type) {\r\n        if (this.showItem == type) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = type;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Purpose(purpose: \"conditions\" | \"customeffects\") {\r\n        this.purpose = purpose;\r\n    }\r\n\r\n    get_ShowPurpose() {\r\n        return this.purpose;\r\n    }\r\n\r\n    //If you don't use trackByIndex on certain inputs, you lose focus everytime the value changes. I don't get that, but I'm using it now.\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList) {\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = \"All\";\r\n        }\r\n    }\r\n\r\n    get_EndOn() {\r\n        return this.endOn;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.conditionsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    toggleConditionsMenu() {\r\n        this.characterService.toggle_Menu(\"conditions\");\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.characterService.get_ConditionsMenuState();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Companion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    get_Creatures(companionAvailable: boolean = undefined, familiarAvailable: boolean = undefined) {\r\n        return this.characterService.get_Creatures(companionAvailable, familiarAvailable);\r\n    }\r\n\r\n    get_VisibleConditionsSet(type: string) {\r\n        let typeKey = \"\";\r\n        switch (type) {\r\n            case \"Generic\":\r\n                typeKey = \"generic\";\r\n                break;\r\n            case \"Activities\":\r\n                typeKey = \"activities\";\r\n                break;\r\n            case \"Afflictions\":\r\n                typeKey = \"afflictions\";\r\n                break;\r\n            case \"Alchemical Elixirs\":\r\n                typeKey = \"alchemicalelixirs\";\r\n                break;\r\n            case \"Alchemical Tools\":\r\n                typeKey = \"alchemicaltools\";\r\n                break;\r\n            case \"Ammunition\":\r\n                typeKey = \"ammunition\";\r\n                break;\r\n            case \"Blood Magic\":\r\n                typeKey = \"bloodmagic\";\r\n                break;\r\n            case \"Feats\":\r\n                typeKey = \"feats\";\r\n                break;\r\n            case \"Other Consumables\":\r\n                typeKey = \"otherconsumables\";\r\n                break;\r\n            case \"Potions\":\r\n                typeKey = \"potions\";\r\n                break;\r\n            case \"Spells\":\r\n                typeKey = \"spells\";\r\n                break;\r\n            case \"Talismans\":\r\n                typeKey = \"talismans\";\r\n                break;\r\n            case \"Worn Items\":\r\n                typeKey = \"wornitems\";\r\n                break;\r\n            case \"Held Items\":\r\n                typeKey = \"helditems\";\r\n                break;\r\n        }\r\n\r\n        if (typeKey) {\r\n            return this.get_Conditions(\"\", typeKey).filter(condition =>\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        condition.name.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        condition.desc.toLowerCase().includes(this.wordFilter.toLowerCase())\r\n                    )\r\n                )\r\n            ).sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Conditions(name: string = \"\", type: string = \"\") {\r\n        return this.conditionsService.get_Conditions(name, type);\r\n    }\r\n\r\n    set_Permanent() {\r\n        this.permanent = true;\r\n        this.days = 0;\r\n        this.hours = 0;\r\n        this.minutes = 0;\r\n        this.turns = 0;\r\n    }\r\n\r\n    add_Day(days: number) {\r\n        this.days = Math.max(this.days + days, 0);\r\n        this.permanent = false;\r\n    }\r\n\r\n    set_Duration() {\r\n        if (this.permanent) {\r\n            this.permanent = false;\r\n        }\r\n    }\r\n\r\n    get_ConditionDuration(includeTurn: boolean = true) {\r\n        return this.permanent ? -1 :\r\n            (\r\n                this.days * 144000 +\r\n                this.hours * 6000 +\r\n                this.minutes * 100 +\r\n                this.turns * 10 +\r\n                (includeTurn ? (this.endOn == this.timeService.get_YourTurn() ? 0 : 5) : 0)\r\n            )\r\n    }\r\n\r\n    get_ConditionChoices(condition: Condition) {\r\n        return condition.get_Choices(this.characterService, false);\r\n    }\r\n\r\n    get_Duration(duration: number = this.get_ConditionDuration()) {\r\n        return this.timeService.get_Duration(duration, true);\r\n    }\r\n\r\n    add_Condition(creature: Creature, condition: Condition, duration: number = this.get_ConditionDuration(false)) {\r\n        let newGain = new ConditionGain();\r\n        newGain.name = condition.name;\r\n        if (duration == -1) {\r\n            newGain.duration = duration;\r\n        } else {\r\n            newGain.duration = duration + (this.endOn == this.timeService.get_YourTurn() ? 0 : 5);\r\n        }\r\n        newGain.choice = condition.choice;\r\n        if (condition.hasValue) {\r\n            newGain.value = this.value;\r\n        }\r\n        if (condition.type == \"spells\") {\r\n            newGain.heightened = this.heightened;\r\n        }\r\n        newGain.source = \"Manual\";\r\n        this.characterService.add_Condition(creature, newGain, true);\r\n    }\r\n\r\n    get_EffectsProperty() {\r\n        return this.effectsService.get_EffectProperties().find(property => !property.parent && property.key == \"effects\");\r\n    }\r\n\r\n    get_EffectValue(creature: Creature, effect: EffectGain) {\r\n        //Fit the custom effect into the box defined by get_SimpleEffects\r\n        let effectsObject = { effects: [effect] }\r\n        let result = this.effectsService.get_SimpleEffects(creature, this.characterService, effectsObject);\r\n        if (result.length) {\r\n            return result;\r\n        } else {\r\n            //If the EffectGain did not produce an effect, return a blank effect instead.\r\n            return [new Effect()];\r\n        }\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode != 45 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_Items();\r\n    }\r\n\r\n    get_Inventories() {\r\n        return this.get_Character().inventories;\r\n    }\r\n\r\n    get_EffectInvalid() {\r\n        if (!this.newEffect.affected || (!this.newEffect.toggle && !this.newEffect.setValue && this.newEffect.value == \"0\")) {\r\n            return \"This effect will not do anything.\"\r\n        };\r\n    }\r\n\r\n    add_Effect(creature: Creature) {\r\n        let duration: number = this.get_ConditionDuration(false);\r\n        let newLength = creature.effects.push(Object.assign(new EffectGain(), JSON.parse(JSON.stringify(this.newEffect))));\r\n        if (duration == -1) {\r\n            creature.effects[newLength - 1].duration = duration;\r\n        } else {\r\n            creature.effects[newLength - 1].duration = duration + (this.endOn == this.timeService.get_YourTurn() ? 0 : 5);\r\n        }\r\n        creature.effects[newLength - 1].maxDuration = creature.effects[newLength - 1].duration;\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.set_ToChange(creature.type, \"conditions\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_Effect(creature: Creature, index: number) {\r\n        creature.effects.splice(index, 1);\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.set_ToChange(creature.type, \"conditions\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    update_Effects(creature: Creature) {\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.set_ToChange(creature.type, \"conditions\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    validate(propertyData: ItemProperty, index: number) {\r\n        let value = this.newEffect[propertyData.key]\r\n        if (propertyData.key == \"value\" && propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && effect.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError[index] = \"\";\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError[index] = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError[index] = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                        this.validationResult[index] = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError[index] = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                    this.validationResult[index] = \"\";\r\n                }\r\n            }\r\n        } else if (propertyData.key == \"setValue\" && propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && (parseInt(effect.value) || parseFloat(effect.value)) || parseInt(effect.value) == 0) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError[index] = \"\";\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError[index] = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult[index] = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError[index] = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                        this.validationResult[index] = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError[index] = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                    this.validationResult[index] = \"\";\r\n                }\r\n            }\r\n        } else if (propertyData.validation == \"1plus\") {\r\n            if (parseInt(value) >= 1) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = 1\r\n            }\r\n        } else if (propertyData.validation == \"0plus\") {\r\n            if (parseInt(value) >= 0) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = 0\r\n            }\r\n        } else if (propertyData.validation == \"=1plus\") {\r\n            if (parseInt(value) >= -1) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = -1\r\n            }\r\n        } else if (propertyData.validation == \"0minus\") {\r\n            if (parseInt(value) <= 0) {\r\n\r\n            } else {\r\n                this.newEffect[propertyData.key] = 0\r\n            }\r\n        }\r\n    }\r\n\r\n    get_CustomEffectProperties() {\r\n        function get_PropertyData(key: string, effectsService: EffectsService) {\r\n            return effectsService.get_EffectProperties().filter(property => property.key == key)[0];\r\n        }\r\n        return Object.keys(this.newEffect).map((key) => get_PropertyData(key, this.effectsService)).filter(property => property != undefined).sort((a, b) => {\r\n            if (a.priority > b.priority) {\r\n                return 1;\r\n            }\r\n            if (a.priority < b.priority) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => {\r\n            if (a.group > b.group) {\r\n                return 1;\r\n            }\r\n            if (a.group < b.group) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_Examples(propertyData: ItemProperty) {\r\n        let examples: string[] = [\"\"];\r\n\r\n        switch (propertyData.examples) {\r\n            case \"effects affected\":\r\n                examples.push(...this.characterService.get_Skills(this.get_Character()).map((skill: Skill) => skill.name));\r\n                examples.push(...this.characterService.get_Abilities().map((ability: Ability) => { return ability.name }));\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.affected))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.affected))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.affected))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.affected))\r\n                    });\r\n                });\r\n                break;\r\n            case \"effects value\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.value))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.value))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.value))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"effects setvalue\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.setValue))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.setValue))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"effects type\":\r\n                examples = [\"\", \"item\", \"circumstance\", \"status\", \"proficiency\"];\r\n                break;\r\n        }\r\n\r\n        let uniqueExamples = Array.from(new Set(examples))\r\n        return uniqueExamples\r\n            .sort(function (a, b) {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"conditions\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"conditions\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n\r\n}\r\n","<div id=\"conditions\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleConditionsMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading() && get_ConditionsMenuState()=='in'\">\r\n        <header class=\"sectionHeader\">Duration: {{get_Duration()}}</header>\r\n        <div class=\"itembox-inner\">\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <button class=\"center-aligned\" (click)=\"set_Permanent()\">Permanent</button>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <button class=\"center-aligned\" (click)=\"add_Day(-1)\">-1 Day</button>\r\n                    <button class=\"center-aligned\" (click)=\"add_Day(1)\">+1 Day</button>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <strong style=\"flex-basis: 10%; flex-grow: 0;\">Hours</strong>\r\n                    <input class=\"slider\" type=\"range\" min=\"0\" max=\"23\" [(ngModel)]=\"hours\"\r\n                        (ngModelChange)=\"set_Duration()\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <strong style=\"flex-basis: 10%; flex-grow: 0;\">Minutes</strong>\r\n                    <input class=\"slider\" type=\"range\" min=\"0\" max=\"59\" [(ngModel)]=\"minutes\"\r\n                        (ngModelChange)=\"set_Duration()\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <strong style=\"flex-basis: 10%; flex-grow: 0;\">Turns</strong>\r\n                    <input class=\"slider\" type=\"range\" min=\"0\" max=\"9\" [(ngModel)]=\"turns\"\r\n                        (ngModelChange)=\"set_Duration()\">\r\n                </div>\r\n                <div class=\"newrow left-aligned\">\r\n                    End on:\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span><input type=\"radio\" [(ngModel)]=\"endOn\" [value]=\"5\">&nbsp;Turn Start</span>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span><input type=\"radio\" [(ngModel)]=\"endOn\" [value]=\"0\">&nbsp;Turn End</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"list-item\">\r\n                <button (click)=\"toggle_Purpose('conditions')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='conditions'}\">Add Conditions</button>\r\n                <button (click)=\"toggle_Purpose('customeffects')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='customeffects'}\">Custom Effects</button>\r\n            </div>\r\n            <ng-container *ngIf=\"get_ShowPurpose()=='conditions'\">\r\n                <header class=\"sectionHeader\">Add Conditions</header>\r\n                <div class=\"list-item\">\r\n                    <strong>Find (in Name or Description)</strong>\r\n                    <span>\r\n                        <input type=text [(ngModel)]=\"wordFilter\" (keypress)=check_Filter() />\r\n                        <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                        <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n                    </span>\r\n                </div>\r\n                <ng-container\r\n                    *ngFor=\"let set of ['Generic','Activities','Afflictions','Alchemical Elixirs','Alchemical Tools','Ammunition','Blood Magic','Feats','Held Items','Other Consumables','Potions','Spells','Talismans','Worn Items']; trackBy:trackByIndex;\">\r\n                    <ng-container\r\n                        *ngFor=\"let visibleConditions of [get_VisibleConditionsSet(set)]; trackBy:trackByIndex;\">\r\n                        <button class=\"list-item\" (click)=\"toggle_List(set)\" *ngIf=\"visibleConditions.length\">\r\n                            <header class=\"sectionHeader\">{{set}}</header>\r\n                        </button>\r\n                        <div class=\"list-item\"\r\n                            *ngIf=\"visibleConditions.length && (get_ShowList()==set||get_ShowList()=='All')\">\r\n                            <div class=\"list-item\" *ngFor=\"let condition of visibleConditions; trackBy:trackByIndex;\">\r\n                                <strong>{{condition.name}}</strong>&nbsp;\r\n                                <div class=\"newrow\" *ngIf=\"condition.hasValue\">\r\n                                    <span>\r\n                                        Value: <select [(ngModel)]=\"value\">\r\n                                            <option\r\n                                                *ngFor=\"let valueNumber of [1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"valueNumber\">{{valueNumber}}\r\n                                            </option>\r\n                                        </select><br>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"condition.type == 'spells'\">\r\n                                    <span>\r\n                                        Spell level (for effect values): <select [(ngModel)]=\"heightened\">\r\n                                            <option\r\n                                                *ngFor=\"let valueNumber of [1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"valueNumber\" [disabled]=\"valueNumber < condition.minLevel\">\r\n                                                {{valueNumber}}\r\n                                            </option>\r\n                                        </select><br>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"condition.name == 'Persistent Damage'\">\r\n                                    <span>\r\n                                        Damage type and amount: <input type=\"text\" id=\"persistentDamage\"\r\n                                            [(ngModel)]=\"condition.choice\" maxLength=\"30\">\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"condition.choices.length\">\r\n                                    <span>Effect selection:\r\n                                        <select [(ngModel)]=\"condition.choice\">\r\n                                            <option\r\n                                                *ngFor=\"let choice of get_ConditionChoices(condition); trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"choice\">\r\n                                                {{choice}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </span>\r\n                                </div>\r\n                                <ng-container *ngFor=\"let companionAvailable of [get_CompanionAvailable()]\">\r\n                                    <ng-container *ngFor=\"let familiarAvailable of [get_FamiliarAvailable()]\">\r\n                                        <div class=\"newrow\" *ngIf=\"!condition.restricted\">\r\n                                            <span>\r\n                                                Add ({{get_Duration()}})\r\n                                            </span>\r\n                                            <span>\r\n                                                <span *ngIf=\"condition.fixedDuration\">Add\r\n                                                    (Default duration: {{get_Duration(condition.fixedDuration)}})\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\">\r\n                                            <span>\r\n                                                <button (click)=\"add_Condition(get_Character(), condition)\"\r\n                                                    *ngIf=\"!condition.restricted\">\r\n                                                    to Character\r\n                                                </button>\r\n                                            </span>\r\n                                            <span>\r\n                                                <button\r\n                                                    (click)=\"add_Condition(get_Character(), condition, condition.fixedDuration)\"\r\n                                                    *ngIf=\"condition.fixedDuration && !condition.restricted\">\r\n                                                    to Character\r\n                                                </button>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\" *ngIf=\"companionAvailable\">\r\n                                            <span>\r\n                                                <button (click)=\"add_Condition(get_Companion(), condition)\"\r\n                                                    *ngIf=\"!condition.restricted\">to Animal Companion\r\n                                                </button>\r\n                                            </span>\r\n                                            <span>\r\n                                                <button\r\n                                                    (click)=\"add_Condition(get_Companion(), condition, condition.fixedDuration)\"\r\n                                                    *ngIf=\"condition.fixedDuration && !condition.restricted\">\r\n                                                    to Animal Companion\r\n                                                </button>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\" *ngIf=\"familiarAvailable\">\r\n                                            <span>\r\n                                                <button (click)=\"add_Condition(get_Familiar(), condition)\"\r\n                                                    *ngIf=\"!condition.restricted\">to Familiar\r\n                                                </button>\r\n                                            </span>\r\n                                            <span>\r\n                                                <button\r\n                                                    (click)=\"add_Condition(get_Familiar(), condition, condition.fixedDuration)\"\r\n                                                    *ngIf=\"condition.fixedDuration && !condition.restricted\">\r\n                                                    to Familiar\r\n                                                </button>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\">\r\n                                            <button (click)=\"toggle_Item(set+condition.name)\"\r\n                                                [ngClass]=\"{'fancy-button':get_ShowItem()==set+condition.name}\">\r\n                                                {{get_ShowItem()==set+condition.name ? \"Hide\" : \"Show\"}} Description\r\n                                            </button>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"get_ShowItem()==set+condition.name\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let desc of condition.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n                                                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\"\r\n                                                        [innerHTML]=\"line\">\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"get_ShowPurpose()=='customeffects'\">\r\n                <header class=\"sectionHeader\">Custom Effects</header>\r\n                <button class=\"list-item\" (click)=\"toggle_List('addCustomEffect')\"\r\n                    *ngIf=\"get_ShowPurpose()=='customeffects'\">\r\n                    <header class=\"sectionHeader\">Add Custom Effect</header>\r\n                </button>\r\n                <div class=\"newrow list-item\"\r\n                    *ngIf=\"get_ShowPurpose()=='customeffects' && get_ShowList()=='addCustomEffect'\">\r\n                    <div class=\"newrow list-item\"\r\n                        *ngFor=\"let property of get_CustomEffectProperties(); let index = index; trackBy:trackByIndex;\">\r\n                        <div class=\"newrow left-aligned\">\r\n                            <strong [ngbPopover]=\"property.desc\">{{property.name}}</strong>\r\n                        </div>\r\n                        <div class=\"newrow\">\r\n                            <input class=\"newrow\" type=\"text\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                (blur)=\"validate(property.key, index)\" *ngIf=\"!property.type && !property.locked\">\r\n                            <textarea class=\"newrow\" rows=3 [(ngModel)]=\"newEffect[property.key]\"\r\n                                *ngIf=\"property.type=='textarea'\"></textarea>\r\n                            <input type=\"checkbox\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                *ngIf=\"property.type=='checkbox'\">\r\n                            <input type=\"number\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                (blur)=\"validate(property, index)\" (keypress)=\"numbersOnly($event)\"\r\n                                *ngIf=\"property.type=='number'\">\r\n                        </div>\r\n                        <div class=\"newrow\" *ngIf=\"validationError[index]\">\r\n                            <span class=\"problem\">{{validationError[index]}}</span>\r\n                        </div>\r\n                        <div class=\"newrow\" *ngIf=\"validationResult[index]\">\r\n                            <span>Current result: {{validationResult[index]}}</span>\r\n                        </div>\r\n                        <div class=\"list-item\" style=\"margin: initial 0\"\r\n                            *ngIf=\"property.type!='textarea' && property.type!='checkbox'\">\r\n                            <select class=\"newrow\" [(ngModel)]=\"newEffect[property.key]\"\r\n                                [disabled]=\"!get_Examples(property).length\" (ngModelChange)=\"validate(property, index)\">\r\n                                <option *ngFor=\"let example of get_Examples(property); trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"example\">\r\n                                    {{example}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container *ngFor=\"let creature of get_Creatures(); trackBy:trackByIndex\"\r\n                        [ngbPopover]=\"get_EffectInvalid()\">\r\n                        <div>\r\n                            <button class=\"list-item newrow\" (click)=\"add_Effect(creature)\"\r\n                                [disabled]=\"get_EffectInvalid()\">\r\n                                <header class=\"sectionHeader\">Add to {{creature.type}}</header>\r\n                            </button>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <ng-container *ngFor=\"let creature of get_Creatures()\">\r\n                    <ng-container *ngIf=\"creature.effects.length\">\r\n                        <button class=\"list-item\" (click)=\"toggle_List('customEffects'+creature.type)\">\r\n                            <header class=\"sectionHeader\">Custom effects on {{creature.type}}</header>\r\n                        </button>\r\n                        <div class=\"list-item\" *ngIf=\"get_ShowList()=='customEffects'+creature.type\">\r\n                            <ng-container\r\n                                *ngFor=\"let effectGain of creature.effects; let index = index; trackBy:trackByIndex;\">\r\n                                <div class=\"list-item\"\r\n                                    *ngFor=\"let effectResult of get_EffectValue(creature, effectGain)\">\r\n                                    <span>\r\n                                        <span>{{effectGain.source || \"Custom effect\"}}: </span>\r\n                                        <strong\r\n                                            [ngClass]=\"{'penalty':effectResult.penalty, 'bonus':!effectResult.penalty && !effectResult.setValue, 'absolute':effectResult.setValue}\"\r\n                                            [ngbPopover]=\"effectGain.setValue ? effectGain.setValue : (effectGain.value ? effectGain.value : '')\">{{effectGain.affected}}\r\n                                            {{parseInt(effectResult.value) ? effectResult.value :\r\n                                            ''}}{{effectResult.setValue ? \"= \"+effectResult.setValue : ''}}\r\n                                        </strong>\r\n                                        <span\r\n                                            *ngIf=\"effectResult.value || effectResult.setValue || effectResult.toggle\">{{(effectResult.type\r\n                                            != \"untyped\") ? effectResult.type+' ' : ''}}{{(effectResult.toggle ||\r\n                                            effectResult.setValue) ? '' : (effectResult.penalty ? 'penalty' :\r\n                                            'bonus')}}</span>\r\n                                        <span\r\n                                            *ngIf=\"!effectResult.value && !effectResult.setValue && !effectResult.toggle\">no\r\n                                            effect</span> {{effectGain.duration ? \"(\" +\r\n                                        get_Duration(effectGain.duration) + \")\" : ''}}\r\n                                    </span>\r\n                                    <button class=\"list-item newrow\" (click)=\"remove_Effect(creature, index)\">\r\n                                        Remove\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { ConditionGain } from './ConditionGain';\r\nimport { Item } from './Item';\r\nimport { EffectGain } from './EffectGain';\r\n\r\nexport class Consumable extends Item {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    readonly allowEquippable = false;\r\n    //Consumables can not be equipped.\r\n    readonly equippable = false;\r\n    public readonly baseType = \"Consumable\";\r\n    //How many Actions does it take to use this item?\r\n    //Usually \"Free\", \"Reaction\", \"1\", \"2\" or \"3\", but can be something special like \"1 hour\"\r\n    public actions: string = \"1A\";\r\n    //What needs to be done to activate? Example: \"Command\", \"Manipulate\"\r\n    public activationType: string = \"\";\r\n    public inputRequired: string = \"\";\r\n    //List ConditionGain for every condition that you gain from using this item\r\n    public gainConditions: ConditionGain[] = [];\r\n    //List EffectGain for every effect that happens instantly when the item is used\r\n    public onceEffects: EffectGain[] = [];\r\n    //Some Items get bought in stacks. Stack defines how many you buy at once,\r\n    //and how many make up one instance of the items Bulk.\r\n    public stack: number = 1;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Feat } from './Feat';\r\nimport { Level } from './Level';\r\nimport { CharacterService } from './character.service';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Character } from './Character';\r\nimport { Speed } from './Speed';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { Heritage } from './Heritage';\r\nimport { ItemGain } from './ItemGain';\r\nimport { Item } from './Item';\r\nimport * as json_feats from '../assets/json/feats';\r\nimport * as json_features from '../assets/json/features';\r\nimport { LanguageGain } from './LanguageGain';\r\nimport { SpellCast } from './SpellCast';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FeatsService {\r\n    private feats: Feat[] = [];\r\n    private features: Feat[] = [];\r\n    private loading_feats: boolean = false;\r\n    private loading_features: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Feats(loreFeats: Feat[], name: string = \"\", type: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            let feats: Feat[] = this.feats.concat(loreFeats);\r\n            //I wrote this function to use indexOf instead of == and don't remember why, but problems arose with feats that contained other feats' names.\r\n            //I checked that all references to the function were specific, and changed it back. If any bugs should come from this, now it's documented.\r\n            //It was probably for featreqs, which have now been changed to be arrays and allow to check for all possible options instead of a matching substring\r\n            return feats.filter(feat =>\r\n            ((feat.name.toLowerCase() == name.toLowerCase() || name == \"\") &&\r\n                (feat.traits.map(trait => trait.toLowerCase()).includes(type.toLowerCase()) || type == \"\")));\r\n        } else { return [new Feat()]; }\r\n    }\r\n\r\n    get_Features(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.features.filter(feature => (feature.name.toLowerCase() == name.toLowerCase() || name == \"\"));\r\n        } else { return [new Feat()]; }\r\n    }\r\n\r\n    get_All(loreFeats: Feat[], name: string = \"\", type: string = \"\", includeSubTypes: boolean = false, includeCountAs: boolean = false) {\r\n        //ATTENTION: Use this function sparingly!\r\n        //There are thousands of feats. Particularly if you need to find out if you have a feat with an attribute:\r\n        // DON'T take all your feats, do get_All([], name)[0] and check the attribute\r\n        // DO get_All(), check the attribute and THEN check if you have the feat.\r\n        // That way, if you have 20 feats, and there are 4 feats with that attribute, you only do 4 * 20 comparisons instead of 20 * 1000\r\n        if (!this.still_loading()) {\r\n            let feats: Feat[] = this.feats.concat(loreFeats).concat(this.features);\r\n            return feats.filter(feat =>\r\n                name == \"\" ||\r\n                //For names like \"Aggressive Block or Brutish Shove\", split the string into the two feat names and return both.\r\n                name.split(\" or \").some(alternative =>\r\n                (\r\n                    feat.name.toLowerCase() == alternative.toLowerCase() ||\r\n                    (\r\n                        includeSubTypes &&\r\n                        feat.superType.toLowerCase() == alternative.toLowerCase()\r\n                    ) ||\r\n                    (\r\n                        includeCountAs &&\r\n                        feat.countAsFeat.toLowerCase() == alternative.toLowerCase()\r\n                    ) ||\r\n                    alternative == \"\"\r\n                )\r\n                ) &&\r\n                (\r\n                    type == \"\" ||\r\n                    feat.traits.map(trait => trait.toLowerCase()).includes(type.toLowerCase())\r\n                )\r\n            );\r\n        } else { return [new Feat()]; }\r\n    }\r\n\r\n    process_Feat(creature: Character | Familiar, characterService: CharacterService, feat: Feat, featName: string, choice: FeatChoice, level: Level, taken: boolean) {\r\n        let character = characterService.get_Character();\r\n        //Get feats and features via the characterService in order to include custom feats\r\n        let feats: Feat[] = [];\r\n        if (feat) {\r\n            feats = [feat];\r\n        } else {\r\n            if (creature.type == \"Familiar\") {\r\n                feats = characterService.familiarsService.get_FamiliarAbilities(featName);\r\n            } else {\r\n                feats = characterService.get_FeatsAndFeatures(featName);\r\n            }\r\n        }\r\n\r\n        if (feats.length) {\r\n            let feat = feats[0];\r\n\r\n            feat.hints.forEach(hint => {\r\n                characterService.set_TagsToChange(creature.type, hint.showon);\r\n            })\r\n            if (feat.effects.length) {\r\n                characterService.set_ToChange(creature.type, \"effects\");\r\n            }\r\n\r\n            //Gain another Feat\r\n            if (feat.gainFeatChoice.length) {\r\n                if (taken) {\r\n                    feat.gainFeatChoice.forEach(newFeatChoice => {\r\n                        let insertedFeatChoice: FeatChoice;\r\n                        //Skip if you don't have the required Class for this granted feat choice.\r\n                        if (newFeatChoice.insertClass ? character.class.name == newFeatChoice.insertClass : true) {\r\n                            //Check if the feat choice gets applied on a certain level and do that, or apply it on the current level.\r\n                            if (newFeatChoice.insertLevel && character.class.levels[newFeatChoice.insertLevel]) {\r\n                                insertedFeatChoice = character.add_FeatChoice(character.class.levels[newFeatChoice.insertLevel], newFeatChoice)\r\n                            } else {\r\n                                insertedFeatChoice = character.add_FeatChoice(level, newFeatChoice);\r\n                            }\r\n                            insertedFeatChoice.feats.forEach(gain => {\r\n                                this.process_Feat(creature, characterService, undefined, gain.name, insertedFeatChoice, level, true);\r\n                            })\r\n                            if (insertedFeatChoice.showOnSheet) {\r\n                                characterService.set_ToChange(creature.type, \"activities\");\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainFeatChoice.forEach(oldFeatChoice => {\r\n                        //Skip if you don't have the required Class for this granted feat choice, since you didn't get the choice in the first place.\r\n                        if (oldFeatChoice.insertClass ? (character.class.name == oldFeatChoice.insertClass) : true) {\r\n                            if (oldFeatChoice.showOnSheet) {\r\n                                characterService.set_ToChange(creature.type, \"activities\");\r\n                            }\r\n                            let a: FeatChoice[] = [];\r\n                            //If the feat choice got applied on a certain level, it needs to be removed from that level.\r\n                            if (oldFeatChoice.insertLevel && character.class.levels[oldFeatChoice.insertLevel]) {\r\n                                a = character.class.levels[oldFeatChoice.insertLevel].featChoices;\r\n                            } else {\r\n                                a = level.featChoices;\r\n                            }\r\n                            if (a.length) {\r\n                                //You might have taken this feat multiple times on the same level, so we are only removing one instance of each of its featChoices.\r\n                                let b: FeatChoice = a.filter(choice => choice.source == oldFeatChoice.source)[0];\r\n                                //Feats must explicitly be un-taken instead of just removed from the array, in case they made fixed changes\r\n                                if (b) {\r\n                                    b?.feats.forEach(feat => {\r\n                                        character.take_Feat(character, characterService, undefined, feat.name, false, b, false);\r\n                                    });\r\n                                    a.splice(a.indexOf(b), 1)\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Boost Ability (may happen in class subtype choices)\r\n            if (feat.gainAbilityChoice.length) {\r\n                if (taken) {\r\n                    feat.gainAbilityChoice.forEach(newAbilityChoice => {\r\n                        character.add_AbilityChoice(level, newAbilityChoice);\r\n                    });\r\n                } else {\r\n                    let a = level.abilityChoices;\r\n                    feat.gainAbilityChoice.forEach(oldAbilityChoice => {\r\n                        let oldChoice = a.filter(choice => choice.source == oldAbilityChoice.source)[0];\r\n                        if (oldChoice) {\r\n                            character.remove_AbilityChoice(oldChoice);\r\n                        }\r\n                    })\r\n                }\r\n                characterService.set_ToChange(creature.type, \"abilities\");\r\n                feat.gainAbilityChoice.forEach(abilityChoice => {\r\n                    abilityChoice.boosts.forEach(boost => {\r\n                        characterService.set_AbilityToChange(creature.type, boost.name);\r\n                    })\r\n                })\r\n\r\n            }\r\n\r\n            //Train free Skill or increase existing Skill\r\n            if (feat.gainSkillChoice.length) {\r\n                if (taken) {\r\n                    feat.gainSkillChoice.forEach(newSkillChoice => {\r\n                        let insertSkillChoice: SkillChoice = Object.assign(new SkillChoice(), JSON.parse(JSON.stringify(newSkillChoice)));\r\n                        let newChoice: SkillChoice;\r\n                        //Check if the skill choice has a class requirement, and if so, only apply it if you have that class.\r\n\r\n                        if (insertSkillChoice.insertClass ? character.class.name == insertSkillChoice.insertClass : true) {\r\n                            //For new training skill increases - that is, locked increases with maxRank 2 and type \"Skill\"\r\n                            //  - we need to check if you are already trained in it. If so, unlock this skill choice and set one\r\n                            //  available so that you can pick another skill.\r\n                            //  We can keep it if this is the first level and the other increase is not locked - the other increase will be freed up automatically.\r\n                            if (insertSkillChoice.type == \"Skill\") {\r\n                                insertSkillChoice.increases.filter(increase => increase.locked && increase.maxRank == 2).forEach(increase => {\r\n                                    let existingIncreases = character.get_SkillIncreases(characterService, 1, level.number, increase.name);\r\n                                    if (existingIncreases.filter(existingIncrease => existingIncrease.maxRank == 2).length &&\r\n                                        (\r\n                                            level.number > 1 ||\r\n                                            !existingIncreases.some(existingIncrease => existingIncrease.maxRank == 2 && !existingIncrease.locked))\r\n                                    ) {\r\n                                        increase.name = \"DELETE\";\r\n                                        insertSkillChoice.available += 1;\r\n                                    }\r\n                                })\r\n                                insertSkillChoice.increases = insertSkillChoice.increases.filter(increase => increase.name != \"DELETE\");\r\n                                //Add the still locked increases to the available value so they don't take away from it.\r\n                                if (insertSkillChoice.available) {\r\n                                    insertSkillChoice.available += insertSkillChoice.increases.length;\r\n                                }\r\n                            }\r\n                            //Check if the skill choice gets applied on a certain level and do that, or apply it on the current level.\r\n                            if (insertSkillChoice.insertLevel && character.class.levels[insertSkillChoice.insertLevel]) {\r\n                                newChoice = character.add_SkillChoice(character.class.levels[insertSkillChoice.insertLevel], insertSkillChoice)\r\n                            } else {\r\n                                newChoice = character.add_SkillChoice(level, insertSkillChoice);\r\n                            }\r\n                            //Apply any included Skill increases\r\n                            newChoice.increases.forEach(increase => {\r\n                                increase.sourceId = newChoice.id;\r\n                                character.process_Skill(characterService, increase.name, true, newChoice, true);\r\n                            })\r\n                            if (newChoice.showOnSheet) {\r\n                                characterService.set_ToChange(creature.type, \"skills\");\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainSkillChoice.forEach(oldSkillChoice => {\r\n                        //Skip if you don't have the required Class for this granted feat choice, since you didn't get the choice in the first place.\r\n                        if (oldSkillChoice.insertClass ? (character.class.name == oldSkillChoice.insertClass) : true) {\r\n                            let a: SkillChoice[];\r\n                            //If the feat choice got applied on a certain level, it needs to be removed from that level, too.\r\n                            if (oldSkillChoice.insertLevel && character.class.levels[oldSkillChoice.insertLevel]) {\r\n                                a = character.class.levels[oldSkillChoice.insertLevel].skillChoices;\r\n                            } else {\r\n                                a = level.skillChoices;\r\n                            }\r\n                            //We only retrieve one instance of the included SkillChoice, as the feat may have been taken multiple times.\r\n                            let oldChoice = a.filter(choice => choice.source == oldSkillChoice.source)[0];\r\n                            //Process and undo included Skill increases\r\n                            oldChoice?.increases.forEach(increase => {\r\n                                character.increase_Skill(characterService, increase.name, false, oldChoice, increase.locked);\r\n                            })\r\n                            if (oldChoice) {\r\n                                character.remove_SkillChoice(oldChoice);\r\n                                if (oldChoice.showOnSheet) {\r\n                                    characterService.set_ToChange(creature.type, \"skills\");\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain a spellcasting ability\r\n            if (feat.gainSpellCasting.length) {\r\n                if (taken) {\r\n                    feat.gainSpellCasting.forEach(casting => {\r\n                        character.add_SpellCasting(characterService, level, casting);\r\n                    });\r\n                } else {\r\n                    feat.gainSpellCasting.forEach(casting => {\r\n                        let oldCasting = character.class.spellCasting.find(ownedCasting => ownedCasting.className == casting.className &&\r\n                            ownedCasting.castingType == casting.castingType &&\r\n                            ownedCasting.source == casting.source);\r\n                        if (oldCasting) {\r\n                            character.remove_SpellCasting(characterService, oldCasting);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain Spell or Spell Option\r\n            if (feat.gainSpellChoice.length) {\r\n                if (taken) {\r\n                    feat.gainSpellChoice.forEach(newSpellChoice => {\r\n                        if (newSpellChoice.insertClass ? character.class.name == newSpellChoice.insertClass : true) {\r\n                            let insertSpellChoice: SpellChoice = Object.assign(new SpellChoice(), JSON.parse(JSON.stringify(newSpellChoice)));\r\n                            //Allow adding Spellchoices without a class to automatically add the correct class.\r\n                            // This finds the correct class either from the choice (if its type is a class name) or from the character's main class.\r\n                            if (!insertSpellChoice.className) {\r\n                                let classNames: string[] = characterService.classesService.get_Classes().map(characterclass => characterclass.name);\r\n                                if (classNames.includes(choice.type)) {\r\n                                    insertSpellChoice.className = choice.type;\r\n                                } else {\r\n                                    insertSpellChoice.className = characterService.get_Character().class.name;\r\n                                }\r\n                            }\r\n                            //Wellspring Gnome changes:\r\n                            //\"Whenever you gain a primal innate spell from a gnome ancestry feat, change its tradition from primal to your chosen tradition.\"\r\n                            if (character.class.heritage.name.includes(\"Wellspring Gnome\")) {\r\n                                if (insertSpellChoice.tradition && insertSpellChoice.castingType == \"Innate\" && insertSpellChoice.tradition == \"Primal\" && feat.traits.includes(\"Gnome\")) {\r\n                                    insertSpellChoice.tradition = character.class.heritage.subType;\r\n                                }\r\n                            }\r\n                            //Copy some information for functions that know the SpellGain, but not the SpellChoice.\r\n                            insertSpellChoice.spells.forEach(gain => {\r\n                                gain.sourceId = insertSpellChoice.id;\r\n                                gain.source = insertSpellChoice.source;\r\n                                gain.frequency = insertSpellChoice.frequency;\r\n                                gain.cooldown = insertSpellChoice.cooldown;\r\n                            })\r\n                            insertSpellChoice.source == \"Feat: \" + feat.name;\r\n                            character.add_SpellChoice(characterService, level.number, insertSpellChoice);\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainSpellChoice.forEach(newSpellChoice => {\r\n                        //Skip if you don't have the required Class for this granted spell choice, since you didn't get the choice in the first place.\r\n                        if (newSpellChoice.insertClass ? (character.class.name == newSpellChoice.insertClass) : true) {\r\n                            character.remove_SpellChoice(characterService, newSpellChoice);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain Lore\r\n            if (feat.gainLoreChoice.length) {\r\n                if (taken) {\r\n                    feat.gainLoreChoice.forEach(choice => {\r\n                        let newChoice = character.add_LoreChoice(level, choice);\r\n                        if (choice.loreName) {\r\n                            //If this feat gives you a specific lore, and you previously got the same lore from a free choice, that choice gets undone.\r\n                            if (character.customSkills.find(skill => skill.name == \"Lore: \" + choice.loreName)) {\r\n                                character.class.levels.forEach(searchLevel => {\r\n                                    searchLevel.loreChoices.filter(searchChoice => searchChoice.loreName == choice.loreName && searchChoice.available).forEach(searchChoice => {\r\n                                        character.remove_Lore(characterService, searchChoice);\r\n                                        searchChoice.loreName == \"\";\r\n                                    })\r\n                                })\r\n                            }\r\n                            character.add_Lore(characterService, newChoice);\r\n                        }\r\n                    })\r\n                } else {\r\n                    let a = level.loreChoices;\r\n                    let oldChoice = a.filter(choice => choice.source == 'Feat: ' + featName)[0];\r\n                    if (oldChoice) {\r\n                        if (oldChoice.loreName) {\r\n                            character.remove_Lore(characterService, oldChoice);\r\n                        }\r\n                        a.splice(a.indexOf(oldChoice), 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Gain Action or Activity\r\n            if (feat.gainActivities.length) {\r\n                if (taken) {\r\n                    feat.gainActivities.forEach((gainActivity: string) => {\r\n                        if (feat.name == \"Trickster's Ace\") {\r\n                            character.gain_Activity(characterService, Object.assign(new ActivityGain(), { name: gainActivity, source: feat.name, data: [{ name: \"Trigger\", value: \"\" }] }), level.number);\r\n                        } else {\r\n                            character.gain_Activity(characterService, Object.assign(new ActivityGain(), { name: gainActivity, source: feat.name }), level.number);\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainActivities.forEach((gainActivity: string) => {\r\n                        let oldGain = character.class.activities.find(gain => gain.name == gainActivity && gain.source == feat.name);\r\n                        if (oldGain) {\r\n                            character.lose_Activity(characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, characterService.activitiesService, oldGain);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Gain conditions. Some Feats do give you a permanent condition.\r\n            if (feat.gainConditions.length) {\r\n                if (taken) {\r\n                    feat.gainConditions.forEach(gain => {\r\n                        let newConditionGain = Object.assign(new ConditionGain(), gain);\r\n                        characterService.add_Condition(character, newConditionGain, false);\r\n                    });\r\n                } else {\r\n                    feat.gainConditions.forEach(gain => {\r\n                        let conditionGains = characterService.get_AppliedConditions(character, gain.name).filter(conditionGain => conditionGain.source == gain.source);\r\n                        if (conditionGains.length) {\r\n                            characterService.remove_Condition(character, conditionGains[0], false);\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Gain items. Only items with on == \"grant\" are given at the moment the feat is taken.\r\n            if (feat.gainItems.length) {\r\n                if (taken) {\r\n                    feat.gainItems.filter(freeItem => freeItem.on == \"grant\").forEach((freeItem: ItemGain) => {\r\n                        let item: Item = characterService.itemsService.get_Items()[freeItem.type].filter((item: Item) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                        if (item) {\r\n                            characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainItems.filter(freeItem => freeItem.on == \"grant\").forEach((freeItem: ItemGain) => {\r\n                        let done: boolean = false;\r\n                        character.inventories.forEach(inv => {\r\n                            if (!done) {\r\n                                inv[freeItem.type].filter((item: Item) => item.name == freeItem.name).forEach(item => {\r\n                                    if (!done) {\r\n                                        characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                                        done = true;\r\n                                    }\r\n                                });\r\n                            }\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Add spells to your spell list.\r\n            if (feat.gainSpellListSpells.length) {\r\n                if (taken) {\r\n                    feat.gainSpellListSpells.forEach(spellName => {\r\n                        character.add_SpellListSpell(spellName, \"Feat: \" + feat.name, level.number)\r\n                    })\r\n                } else {\r\n                    feat.gainSpellListSpells.forEach(spellName => {\r\n                        character.remove_SpellListSpell(spellName, \"Feat: \" + feat.name, level.number)\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Gain ancestries\r\n            if (feat.gainAncestry.length) {\r\n                if (taken) {\r\n                    character.class.ancestry.ancestries.push(...feat.gainAncestry);\r\n                } else {\r\n                    feat.gainAncestry.forEach(ancestryGain => {\r\n                        let a = character.class.ancestry.ancestries;\r\n                        a.splice(a.indexOf(ancestryGain), 1);\r\n                    })\r\n                }\r\n                characterService.set_ToChange(\"Character\", \"general\");\r\n            }\r\n\r\n            //One time effects\r\n            if (feat.onceEffects) {\r\n                if (taken) {\r\n                    feat.onceEffects.forEach(effect => {\r\n                        characterService.process_OnceEffect(character, effect);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Bargain Hunter adds to your starting cash at level 1\r\n            if (feat.name == \"Bargain Hunter\") {\r\n                if (taken && level.number == 1) {\r\n                    character.cash[1] += 2;\r\n                } else if (level.number == 1) {\r\n                    character.cash[1] -= 2;\r\n                }\r\n                characterService.set_ToChange(\"Character\", \"inventory\");\r\n            }\r\n\r\n            //Different Worlds\r\n            //Here we copy the original feat so that we can change the included data property persistently, but we remove the copy's hints so they don't show twice.\r\n            if (feat.name == \"Different Worlds\") {\r\n                if (taken) {\r\n                    if (character.customFeats.filter(customFeat => customFeat.name == \"Different Worlds\").length == 0) {\r\n                        let newLength = characterService.add_CustomFeat(feat);\r\n                        let newFeat = character.customFeats[newLength - 1];\r\n                        newFeat.hide = true;\r\n                        newFeat.data = { background: \"\", name: \"\" }\r\n                        newFeat.hints.length = 0;\r\n                    }\r\n                } else {\r\n                    let oldChoices: LoreChoice[] = level.loreChoices.filter(choice => choice.source == \"Different Worlds\");\r\n                    let oldChoice = oldChoices[oldChoices.length - 1];\r\n                    if (oldChoice?.increases.length) {\r\n                        character.remove_Lore(characterService, oldChoice);\r\n                    }\r\n                    level.loreChoices = level.loreChoices.filter(choice => choice.source != \"Different Worlds\");\r\n                    let oldFeats = character.customFeats.filter(customFeat => customFeat.name == \"Different Worlds\")\r\n                    character.customFeats.filter(customFeat => customFeat.name == \"Different Worlds\").forEach(oldFeat => {\r\n                        characterService.remove_CustomFeat(oldFeat);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Gain Additional Heritages\r\n            //We add an additional heritage to the character so we can work with it.\r\n            if (feat.gainHeritage.length) {\r\n                if (taken) {\r\n                    feat.gainHeritage.forEach(heritageGain => {\r\n                        let newLength = character.class.additionalHeritages.push(new Heritage());\r\n                        character.class.additionalHeritages[newLength - 1].source = heritageGain.source;\r\n                    })\r\n                } else {\r\n                    feat.gainHeritage.forEach(heritageGain => {\r\n                        let oldHeritage = character.class.additionalHeritages.find(heritage => heritage.source == heritageGain.source);\r\n                        let heritageIndex = character.class.additionalHeritages.indexOf(oldHeritage);\r\n                        character.class.on_ChangeHeritage(characterService, heritageIndex);\r\n                        character.class.additionalHeritages.splice(heritageIndex, 1);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Fuse Stance\r\n            //We copy the original feat so that we can change the included data property persistently, but we remove the copy's hints so they don't show twice.\r\n            if (feat.name == \"Fuse Stance\") {\r\n                if (taken) {\r\n                    if (character.customFeats.filter(customFeat => customFeat.name == \"Fuse Stance\").length == 0) {\r\n                        let newLength = characterService.add_CustomFeat(feat);\r\n                        let newFeat = character.customFeats[newLength - 1];\r\n                        newFeat.hide = true;\r\n                        newFeat.data = { name: \"\", stances: [] as string[] }\r\n                        newFeat.hints.length = 0;\r\n                    }\r\n                } else {\r\n                    character.customFeats.filter(customFeat => customFeat.name == \"Fuse Stance\").forEach(oldFeat => {\r\n                        characterService.remove_CustomFeat(oldFeat);\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Remove spells that were granted by Blessed Blood.\r\n            if (feat.name == \"Blessed Blood\") {\r\n                if (!taken) {\r\n                    let removeList: { name: string, levelNumber: number }[] = character.class.spellList.filter(listSpell => listSpell.source == \"Feat: Blessed Blood\").map(listSpell => { return { name: listSpell.name, levelNumber: listSpell.level } });\r\n                    removeList.forEach(spell => {\r\n                        character.remove_SpellListSpell(spell.name, \"Feat: \" + feat.name, spell.levelNumber)\r\n                    })\r\n                }\r\n            }\r\n\r\n            //Feats that grant a familiar\r\n            if (feat.gainFamiliar) {\r\n                if (taken) {\r\n                    //Set the originClass to be the same as the feat choice type.\r\n                    //If the type is not a class name, set your main class name.\r\n                    if ([\"\", \"General\", \"Skill\", \"Ancestry\", \"Class\", \"Feat\"].includes(choice.type)) {\r\n                        character.class.familiar.originClass = character.class.name;\r\n                    } else {\r\n                        character.class.familiar.originClass = choice.type;\r\n                    }\r\n                } else {\r\n                    //Reset the familiar\r\n                    characterService.cleanup_Familiar();\r\n                    character.class.familiar = new Familiar();\r\n                }\r\n                characterService.set_ToChange(\"Familiar\", \"all\");\r\n                characterService.set_ToChange(\"Character\", \"top-bar\");\r\n            }\r\n\r\n            //Feats that grant an animal companion\r\n            if (feat.gainAnimalCompanion == 1) {\r\n                //Reset the animal companion\r\n                character.class.animalCompanion = new AnimalCompanion();\r\n                character.class.animalCompanion.class = new AnimalCompanionClass();\r\n                if (taken) {\r\n                    characterService.initialize_AnimalCompanion();\r\n                }\r\n                characterService.set_ToChange(\"Companion\", \"all\");\r\n            }\r\n\r\n            //Feats that level up the animal companion to Mature, Nimble or Savage\r\n            if (feat.gainAnimalCompanion > 1 && feat.gainAnimalCompanion < 6 && characterService.get_Companion()) {\r\n                let companion = characterService.get_Companion();\r\n                if (companion.class.levels.length) {\r\n                    if (taken) {\r\n                        if (feat.gainAnimalCompanion > 3) {\r\n                            companion.class.levels[3] = Object.assign(new AnimalCompanionLevel(), companion.class.levels[feat.gainAnimalCompanion]);\r\n                            companion.class.levels[3].number = 3;\r\n                        }\r\n                    } else {\r\n                        if (feat.gainAnimalCompanion > 3) {\r\n                            companion.class.levels[3] = new AnimalCompanionLevel();\r\n                            companion.class.levels[3].number = 3;\r\n                        }\r\n                    }\r\n                    companion.set_Level(characterService);\r\n                }\r\n                characterService.set_ToChange(\"Companion\", \"all\");\r\n            }\r\n\r\n            //Feats that grant an animal companion specialization\r\n            if (feat.gainAnimalCompanion == 6) {\r\n                let companion = characterService.get_Companion();\r\n                if (!taken) {\r\n                    //Remove the latest specialization chosen on this level, only if all choices are taken\r\n                    let specializations = companion.class.specializations.filter(spec => spec.level == level.number);\r\n                    if (specializations.length) {\r\n                        if (specializations.length >= characterService.get_FeatsAndFeatures()\r\n                            .filter(feat => feat.gainAnimalCompanion == 6 && character.get_FeatsTaken(level.number, level.number, feat.name)).length\r\n                        ) {\r\n                            companion.class.specializations = companion.class.specializations.filter(spec => spec.name != specializations[specializations.length - 1].name)\r\n                        }\r\n                    }\r\n                    characterService.set_ToChange(\"Companion\", \"all\");\r\n                }\r\n            }\r\n\r\n            //Feats that add Speeds should add them to the Speeds list as well. This can be applied for both Familiars and Characters, so we use Creature.\r\n            feat.effects.filter(effect => effect.affected.includes(\"Speed\") && effect.affected != \"Speed\").forEach(effect => {\r\n                if (taken) {\r\n                    let newLength = creature.speeds.push(new Speed(effect.affected));\r\n                    creature.speeds[newLength - 1].source = \"Feat: \" + feat.name;\r\n                } else {\r\n                    creature.speeds = creature.speeds.filter(speed => !(speed.name == effect.affected && speed.source == \"Feat: \" + feat.name));\r\n                }\r\n            })\r\n\r\n            //Cantrip Connection\r\n            if (feat.name == \"Cantrip Connection\") {\r\n                let spellCasting = character.class.spellCasting.find(casting => casting.className == characterService.get_Familiar().originClass && casting.castingType != \"Focus\");\r\n                if (taken) {\r\n                    if (spellCasting) {\r\n                        let newSpellChoice = new SpellChoice();\r\n                        newSpellChoice.available = 1;\r\n                        newSpellChoice.level = 0;\r\n                        newSpellChoice.className = spellCasting.className;\r\n                        newSpellChoice.castingType = spellCasting.castingType;\r\n                        newSpellChoice.source = \"Feat: \" + feat.name;\r\n\r\n                        let familiarLevel = characterService.get_FeatsAndFeatures()\r\n                            .filter(feat => feat.gainFamiliar && feat.have(character, characterService, character.level))\r\n                            .map(feat => character.class.levels.find(level => level.featChoices\r\n                                .find(choice => choice.feats\r\n                                    .find(featTaken => featTaken.name == feat.name)\r\n                                )\r\n                            ))[0];\r\n                        character.add_SpellChoice(characterService, familiarLevel.number, newSpellChoice)\r\n                    }\r\n                } else {\r\n                    let oldSpellChoice = spellCasting.spellChoices.find(choice => choice.source == \"Feat: \" + feat.name);\r\n                    if (oldSpellChoice) {\r\n                        character.remove_SpellChoice(characterService, oldSpellChoice);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Spell Battery\r\n            if (feat.name == \"Spell Battery\") {\r\n                let spellCasting = character.class.spellCasting.find(casting => casting.className == characterService.get_Familiar().originClass && casting.castingType != \"Focus\");\r\n                if (taken) {\r\n                    if (spellCasting) {\r\n                        let newSpellChoice = new SpellChoice();\r\n                        newSpellChoice.available = 1;\r\n                        newSpellChoice.dynamicLevel = \"highestSpellLevel - 3\"\r\n                        newSpellChoice.className = spellCasting.className;\r\n                        newSpellChoice.castingType = spellCasting.castingType;\r\n                        newSpellChoice.source = \"Feat: \" + feat.name;\r\n                        let familiarLevel = characterService.get_FeatsAndFeatures()\r\n                            .filter(feat => feat.gainFamiliar && feat.have(character, characterService, character.level))\r\n                            .map(feat => character.class.levels.find(level => level.featChoices\r\n                                .find(choice => choice.feats\r\n                                    .find(featTaken => featTaken.name == feat.name)\r\n                                )\r\n                            ))[0];\r\n                        character.add_SpellChoice(characterService, familiarLevel.number, newSpellChoice)\r\n                    }\r\n                } else {\r\n                    let oldSpellChoice = spellCasting.spellChoices.find(choice => choice.source == \"Feat: \" + feat.name);\r\n                    if (oldSpellChoice) {\r\n                        character.remove_SpellChoice(characterService, oldSpellChoice);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Feats that let you learn more spells.\r\n            if (feat.gainSpellBookSlots.length) {\r\n                if (taken) {\r\n                    feat.gainSpellBookSlots.forEach(slots => {\r\n                        let spellCasting = character.class.spellCasting.find(casting => casting.className == slots.className && casting.castingType == \"Prepared\");\r\n                        if (spellCasting) {\r\n                            for (let index = 0; index < spellCasting.spellBookSlots.length; index++) {\r\n                                spellCasting.spellBookSlots[index] += slots.spellBookSlots[index];\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    feat.gainSpellBookSlots.forEach(slots => {\r\n                        let spellCasting = character.class.spellCasting.find(casting => casting.className == slots.className && casting.castingType == \"Prepared\");\r\n                        if (spellCasting) {\r\n                            for (let index = 0; index < spellCasting.spellBookSlots.length; index++) {\r\n                                spellCasting.spellBookSlots[index] -= slots.spellBookSlots[index];\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Feats that add languages.\r\n            if (feat.gainLanguages.length) {\r\n                if (taken) {\r\n                    feat.gainLanguages.forEach(languageGain => {\r\n                        let newLanguageGain = Object.assign(new LanguageGain(), JSON.parse(JSON.stringify(languageGain)));\r\n                        newLanguageGain.level = level.number;\r\n                        character.class.languages.push(newLanguageGain);\r\n                    })\r\n                } else {\r\n                    feat.gainLanguages.forEach(languageGain => {\r\n                        let langIndex = character.class.languages.indexOf(character.class.languages.find(lang => (!lang.locked || lang.name == languageGain.name) && lang.source == languageGain.source && lang.level == level.number))\r\n                        if (langIndex != -1) {\r\n                            character.class.languages = character.class.languages.splice(langIndex, 1);\r\n                        }\r\n                    })\r\n                }\r\n                characterService.set_ToChange(\"Character\", \"general\");\r\n            }\r\n\r\n            //Reset bonded item charges when selecting or deselecting Wizard schools.\r\n            if ([\"Abjuration School\", \"Conjuration School\", \"Divination School\", \"Enchantment School\", \"Evocation School\",\r\n                \"Illusion School\", \"Necromancy School\", \"Transmutation School\", \"Universalist Wizard\"].includes(feat.name)) {\r\n                if (taken) {\r\n                    character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\").forEach(casting => {\r\n                        let superiorBond = character.get_FeatsTaken(1, character.level, \"Superior Bond\").length;\r\n                        if (feat.name == \"Universalist Wizard\") {\r\n                            casting.bondedItemCharges = [superiorBond, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n                        } else {\r\n                            casting.bondedItemCharges = [1 + superiorBond, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                        }\r\n                    });\r\n                } else {\r\n                    character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\").forEach(casting => {\r\n                        casting.bondedItemCharges = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                    });\r\n                    character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"school\")\r\n                }\r\n            }\r\n\r\n            //Reset changes made with Spell Blending.\r\n            if (feat.name == \"Spell Blending\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.spellBlending = [0, 0, 0];\r\n                    })\r\n                })\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Infinite Possibilities.\r\n            if (feat.name == \"Infinite Possibilities\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.infinitePossibilities = false;\r\n                    })\r\n                })\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Adapted Cantrip.\r\n            if (feat.name == \"Adapted Cantrip\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.adaptedCantrip = false;\r\n                    })\r\n                })\r\n                character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"adaptedcantrip\")\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Adaptive Adept.\r\n            if (feat.name.includes(\"Adaptive Adept\")) {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices.forEach(choice => {\r\n                        choice.adaptiveAdept = false;\r\n                    })\r\n                })\r\n                character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"adaptiveadept\")\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Giant Instinct.\r\n            if (feat.name == \"Giant Instinct\") {\r\n                character.inventories.forEach(inv => {\r\n                    inv.weapons.forEach(weapon => {\r\n                        weapon.large = false;\r\n                    })\r\n                })\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n            }\r\n\r\n            //Reset changes made with Blade Ally.\r\n            if (feat.name == \"Divine Ally: Blade Ally\") {\r\n                character.inventories.forEach(inv => {\r\n                    inv.weapons.forEach(weapon => {\r\n                        weapon.bladeAlly = false;\r\n                        weapon.bladeAllyRunes = [];\r\n                    })\r\n                    inv.wornitems.forEach(wornItem => {\r\n                        wornItem.bladeAlly = false;\r\n                        wornItem.bladeAllyRunes = [];\r\n                    })\r\n                    characterService.set_ToChange(creature.type, \"inventory\");\r\n                    characterService.set_ToChange(creature.type, \"attacks\");\r\n                })\r\n            }\r\n\r\n            //Spell Combination changes certain spell choices permanently.\r\n            if (feat.name == \"Spell Combination\") {\r\n                if (taken) {\r\n                    character.class.spellCasting.filter(casting => casting.className == \"Wizard\" && casting.castingType == \"Prepared\").forEach(casting => {\r\n                        [3, 4, 5, 6, 7, 8, 9, 10].forEach(spellLevel => {\r\n                            casting.spellChoices.find(choice => choice.level == spellLevel && choice.available == 1).spellCombinationAllowed = true;\r\n                        });\r\n                    });\r\n                    characterService.set_ToChange(creature.type, \"spells\");\r\n                    characterService.set_ToChange(creature.type, \"spellchoices\");\r\n                    characterService.set_ToChange(creature.type, \"spellbook\");\r\n                } else {\r\n                    character.class.spellCasting.filter(casting => casting.className == \"Wizard\" && casting.castingType == \"Prepared\").forEach(casting => {\r\n                        casting.spellChoices.filter(choice => choice.spellCombinationAllowed).forEach(choice => {\r\n                            choice.spellCombinationAllowed = false;\r\n                            choice.spellCombination = false;\r\n                            choice.spells.forEach(gain => gain.combinationSpellName = \"\");\r\n                        });\r\n                    });\r\n                    characterService.set_ToChange(creature.type, \"spells\");\r\n                    characterService.set_ToChange(creature.type, \"spellchoices\");\r\n                    characterService.set_ToChange(creature.type, \"spellbook\");\r\n                }\r\n            }\r\n\r\n            //Reset changes made with Arcane Evolution.\r\n            if (feat.name.includes(\"Arcane Evolution\")) {\r\n                character.class.spellBook = character.class.spellBook.filter(learned => learned.source != \"arcaneevolution\")\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellchoices\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Reset changes made with Spell Mastery\r\n            if (feat.name == \"Spell Mastery\") {\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellChoices = casting.spellChoices.filter(choice => choice.source != \"Feat: Spell Mastery\");\r\n                })\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n\r\n            //Familiar abilities should update the familiar's general information.\r\n            if (creature.type == \"Familiar\") {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n\r\n            //Snare Specialists and following feats change inventory aspects.\r\n            if (feat.name == \"Snare Specialist\" || feat.featreq.includes(\"Snare Specialist\")) {\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n\r\n            //Arcane Breadth gives hardcoded spell slots and needs to update the spellbook menu.\r\n            if (feat.name == \"Arcane Breadth\") {\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n            }\r\n\r\n            //Verdant Metamorphosis changes your traits and needs to update general.\r\n            if (feat.name == \"Verdant Metamorphosis\") {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n\r\n            //Feats that grant specializations or change proficiencies need to update defense and attacks.\r\n            if (feat.gainSpecialization || feat.changeProficiency.length || feat.copyProficiency.length) {\r\n                characterService.set_ToChange(creature.type, \"defense\");\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n                feat.changeProficiency.forEach(change => {\r\n                    if (change.name) { characterService.set_ToChange(creature.type, \"individualskills\", change.name); }\r\n                    if (change.group) { characterService.set_ToChange(creature.type, \"individualskills\", change.group); }\r\n                    if (change.trait) { characterService.set_ToChange(creature.type, \"individualskills\", change.name); }\r\n                })\r\n                feat.copyProficiency.forEach(change => {\r\n                    if (change.name) { characterService.set_ToChange(creature.type, \"individualskills\", change.name); }\r\n                })\r\n            }\r\n\r\n            //Feats that grant tenets and anathema need to update general.\r\n            if (feat.tenets.length || feat.anathema.length) {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n\r\n            //Feats that grant senses need to update skills.\r\n            if (feat.senses.length) {\r\n                characterService.set_ToChange(creature.type, \"skills\");\r\n            }\r\n\r\n            //Archetype \" Breadth\" spells need to update spells.\r\n            if (feat.name.includes(\" Breadth\")) {\r\n                characterService.set_ToChange(creature.type, \"spells\");\r\n            }\r\n\r\n            //Some hardcoded effects change depending on feats. There is no good way to resolve this, so we calculate the effects whenever we take a feat.\r\n            characterService.set_ToChange(creature.type, \"effects\");\r\n\r\n            //Condition choices can be dependent on feats, so we need to update spellbook and activities;\r\n            characterService.set_ToChange(creature.type, \"spellbook\");\r\n            characterService.set_ToChange(creature.type, \"activities\");\r\n\r\n            if (creature.type == \"Familiar\") {\r\n                characterService.set_ToChange(\"Familiar\", \"familiarabilities\");\r\n            } else {\r\n                characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading_feats || this.loading_features);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.feats.length) {\r\n            this.loading_feats = true;\r\n            this.load(json_feats, \"feats\");\r\n            this.loading_feats = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.feats.forEach(feat => {\r\n                feat.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n        if (!this.features.length) {\r\n            this.loading_features = true;\r\n            this.load(json_features, \"features\");\r\n            this.loading_features = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.features.forEach(feat => {\r\n                feat.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load(source, target: string) {\r\n        this[target] = [];\r\n        Object.keys(source).forEach(key => {\r\n            this[target].push(...source[key].map(obj => Object.assign(new Feat(), obj)));\r\n        });\r\n        this[target].forEach((feat: Feat) => {\r\n            feat.gainFeatChoice = feat.gainFeatChoice.map(choice => Object.assign(new FeatChoice(), choice));\r\n            feat.gainConditions = feat.gainConditions.map(choice => Object.assign(new ConditionGain(), choice));\r\n            feat.gainSpecialization = feat.gainSpecialization.map(spec => Object.assign(new SpecializationGain, spec));\r\n            //feat.gainFormulaChoice = feat.gainFormulaChoice.map(choice => Object.assign(new FormulaChoice(), choice));\r\n            feat.gainAbilityChoice = feat.gainAbilityChoice.map(choice => Object.assign(new AbilityChoice, choice));\r\n            feat.gainSkillChoice = feat.gainSkillChoice.map(choice => Object.assign(new SkillChoice, choice));\r\n            feat.gainSpellChoice = feat.gainSpellChoice.map(choice => Object.assign(new SpellChoice, choice));\r\n            feat.gainSpellCasting = feat.gainSpellCasting.map(choice => Object.assign(new SpellCasting(choice.castingType), choice));\r\n        })\r\n\r\n        let duplicates: string[] = Array.from(new Set(\r\n            this[target]\r\n                .filter((feat: Feat) =>\r\n                    this[target].filter((otherFeat: Feat) =>\r\n                        otherFeat.name == feat.name\r\n                    ).length > 1\r\n                ).map((feat: Feat) => feat.name)\r\n        ));\r\n        duplicates.forEach((featName) => {\r\n            let highestPriority = Math.max(\r\n                ...this[target]\r\n                    .filter((feat: Feat) => feat.name == featName)\r\n                    .map((feat: Feat) => feat.overridePriority)\r\n            );\r\n            let highestFeat = this[target].find((feat: Feat) => feat.name == featName && feat.overridePriority == highestPriority);\r\n            this[target] = this[target].filter((feat: Feat) => !(feat.name == featName && feat !== highestFeat));\r\n        })\r\n    }\r\n\r\n}","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Effect } from '../Effect';\r\nimport { Consumable } from '../Consumable';\r\nimport { Equipment } from '../Equipment';\r\nimport { OtherItem } from '../OtherItem';\r\nimport { Item } from '../Item';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { ItemCollection } from '../ItemCollection';\r\nimport { WornItem } from '../WornItem';\r\nimport { TimeService } from '../time.service';\r\nimport { FormulaLearned } from '../FormulaLearned';\r\nimport { Snare } from '../Snare';\r\nimport { SpellsService } from '../spells.service';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { Wand } from '../Wand';\r\nimport { Shield } from '../Shield';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { Weapon } from '../Weapon';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-inventory',\r\n    templateUrl: './inventory.component.html',\r\n    styleUrls: ['./inventory.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private id: number = 0;\r\n    private showItem: number = 0;\r\n    private showList: string = \"\";\r\n    public shieldDamage: number = 0;\r\n    public targetInventory = null;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public itemsService: ItemsService,\r\n        public traitsService: TraitsService,\r\n        public effectsService: EffectsService,\r\n        private timeService: TimeService,\r\n        private spellsService: SpellsService,\r\n        private conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.inventoryMinimized = !this.characterService.get_Character().settings.inventoryMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.inventoryMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    set_ItemsMenuTarget(target: string) {\r\n        this.characterService.set_ItemsMenuTarget(target);\r\n    }\r\n\r\n    toggle_Menu(menu: string = \"\") {\r\n        this.characterService.toggle_Menu(menu);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_List(type: string) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Item(id: number) {\r\n        if (this.showItem == id) {\r\n            this.showItem = 0;\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature(creature: string = this.creature) {\r\n        return this.characterService.get_Creature(creature) as Character | AnimalCompanion;\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Creatures() {\r\n        return this.characterService.get_Creatures();\r\n    }\r\n\r\n    get_Inventories(creature: string = this.creature, newID: boolean = false, calculate: boolean = false) {\r\n        if (newID) {\r\n            this.id = 0;\r\n        }\r\n        return this.get_Creature(creature).inventories;\r\n    }\r\n\r\n    get_TargetInventories(item: Item) {\r\n        //Return your inventories and your companion's main inventory (or the character's if called by the companion)\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                if (this.characterService.get_CompanionAvailable()) {\r\n                    return [this.get_Creature(\"Companion\").inventories[0]].concat(...this.get_Creature().inventories);\r\n                } else {\r\n                    return this.get_Creature().inventories;\r\n                }\r\n            case \"Companion\":\r\n                return [this.get_Creature(\"Character\").inventories[0]].concat(...this.get_Creature().inventories);\r\n        }\r\n    }\r\n\r\n    get_ContainedItems(item: Item) {\r\n        //Add up the number of items in each inventory with this item's id\r\n        //We have to sum up the items in each inventory, and then sum up those sums.\r\n        //Return a number\r\n        if (item.id && item[\"gainInventory\"] && item[\"gainInventory\"].length && this.get_Creature().inventories.length > 1) {\r\n            return this.get_Creature().inventories\r\n                .filter(inventory =>\r\n                    inventory.itemId == item.id\r\n                ).map(inventory => inventory.allItems()\r\n                    .map(item => item.amount)\r\n                    .reduce((a, b) => a + b, 0)\r\n                ).reduce((a, b) => a + b, 0);\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    can_Fit(item: Item, targetInventory: ItemCollection, sourceInventory: ItemCollection) {\r\n        if (targetInventory.itemId == item.id || targetInventory === sourceInventory) {\r\n            return false;\r\n        } else if (targetInventory.bulkLimit) {\r\n            let itemBulk = 0;\r\n            //Moving items will always unequip them. If the item has a carrying bulk, use that for the check.\r\n            switch ((item as Equipment).carryingBulk ? (item as Equipment).carryingBulk : item.get_Bulk()) {\r\n                case \"\":\r\n                    break;\r\n                case \"-\":\r\n                    break;\r\n                case \"L\":\r\n                    if (item.amount) {\r\n                        itemBulk += 0.1 * Math.floor(item.amount / (item[\"stack\"] ? item[\"stack\"] : 1));\r\n                    } else {\r\n                        itemBulk += 0.1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (item.amount) {\r\n                        itemBulk += parseInt(item.get_Bulk()) * Math.floor(item.amount / (item[\"stack\"] ? item[\"stack\"] : 1));\r\n                    } else {\r\n                        itemBulk += parseInt(item.get_Bulk());\r\n                    }\r\n                    break;\r\n            }\r\n            return (targetInventory.get_Bulk(false) + itemBulk <= targetInventory.bulkLimit)\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    sort_Cash() {\r\n        this.characterService.sort_Cash();\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_Items();\r\n    }\r\n\r\n    sort_ItemSet(itemSet) {\r\n        return itemSet.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    can_Equip(item: Item, inventoryIndex: number) {\r\n        return (inventoryIndex == 0 && item.equippable && this.creature == \"Character\" && !item.traits.includes(\"Companion\")) || (item.traits.includes(\"Companion\") && this.creature == \"Companion\") || item.name == \"Unarmored\"\r\n    }\r\n\r\n    can_Invest(item: Item, inventoryIndex: number) {\r\n        return inventoryIndex == 0 && item.can_Invest() && ((this.creature == \"Character\" && !item.traits.includes(\"Companion\")) || (item.traits.includes(\"Companion\") && this.creature == \"Companion\"))\r\n    }\r\n\r\n    can_Drop(item: Item) {\r\n        //Hidden items are never bought from the store. This implies that you gained them via an activity, spell, etc. and should not drop it.\r\n        //For Companions, the same goes for their basic attacks;\r\n        return !item.hide\r\n    }\r\n\r\n    can_DropAll(item: Item) {\r\n        //You can use the \"Drop All\" button if this item grants other items on grant or equip.\r\n        return item.gainItems && item.gainItems.filter(gain => gain.on != \"use\").length;\r\n    }\r\n\r\n    drop_InventoryItem(item: Item, inventory: ItemCollection, pay: boolean = false) {\r\n        this.showItem = 0;\r\n        if (pay) {\r\n            if (this.get_Price(item)) {\r\n                let price = this.get_Price(item);\r\n                if (item[\"stack\"]) {\r\n                    price *= Math.floor(item.amount / item[\"stack\"]);\r\n                } else {\r\n                    price *= item.amount;\r\n                }\r\n                if (price) {\r\n                    this.change_Cash(1, Math.floor(price / 2));\r\n                }\r\n            }\r\n        }\r\n        this.characterService.drop_InventoryItem(this.get_Creature(), inventory, item, false, true, true, item.amount);\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    move_InventoryItem(item: Item, inventory: ItemCollection, changeafter: boolean = true) {\r\n        this.itemsService.move_InventoryItem(this.get_Creature(), item, this.targetInventory, inventory, this.characterService)\r\n        if (changeafter) {\r\n            this.targetInventory = null;\r\n            this.characterService.set_ToChange(this.creature, \"inventory\");\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    drop_ContainerOnly(item: Item, inventory: ItemCollection) {\r\n        this.showItem = 0;\r\n        this.characterService.drop_InventoryItem(this.get_Creature(), inventory, item, false, true, false, item.amount);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    add_NewOtherItem(inventory: ItemCollection) {\r\n        inventory.otheritems.push(new OtherItem());\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    bulkOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode != 76 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validate_Bulk(item: OtherItem) {\r\n        if (parseInt(item.bulk) || parseInt(item.bulk) == 0 || item.bulk == \"L\" || item.bulk == \"\") {\r\n            //OK - no change needed.\r\n        } else {\r\n            item.bulk = \"\";\r\n        }\r\n    }\r\n\r\n    remove_OtherItem(item: OtherItem, inventory: ItemCollection) {\r\n        inventory.otheritems.splice(inventory.otheritems.indexOf(item), 1);\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Duration(turns: number) {\r\n        return this.timeService.get_Duration(turns);\r\n    }\r\n\r\n    get_CalculatedBulk() {\r\n        return this.get_Creature().bulk.calculate(this.get_Creature(), this.characterService, this.effectsService);\r\n    }\r\n\r\n    get_MaxInvested() {\r\n        let maxInvest = 0;\r\n        let effects: Effect[] = [];\r\n        let penalties: boolean = false;\r\n        let bonuses: boolean = false;\r\n        let absolutes: boolean = false;\r\n        let explain: string = \"\"\r\n        if (this.creature == \"Character\") {\r\n            maxInvest = 10;\r\n            explain = \"Base limit: 10\";\r\n        } else if (this.creature == \"Companion\") {\r\n            maxInvest = 2;\r\n            explain = \"Base limit: 2\";\r\n        }\r\n        this.effectsService.get_AbsolutesOnThis(this.get_Creature(), \"Max Invested\").forEach(effect => {\r\n            maxInvest = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n            absolutes = true;\r\n            effects.push(effect);\r\n        });\r\n        this.effectsService.get_RelativesOnThis(this.get_Creature(), \"Max Invested\").forEach(effect => {\r\n            maxInvest += parseInt(effect.value);\r\n            explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            if (parseInt(effect.value) < 0) {\r\n                penalties = true;\r\n            } else {\r\n                bonuses = true;\r\n            }\r\n            effects.push(effect);\r\n        });\r\n        return { value: maxInvest, explain: explain, effects: effects, penalties: penalties, bonuses: bonuses, absolutes: absolutes };\r\n    }\r\n\r\n    get_InvestedItems() {\r\n        return this.characterService.get_InvestedItems(this.get_Creature());\r\n    }\r\n\r\n    get_Invested() {\r\n        //Sum up the invested items: 1 for each item other than Wayfinders,\r\n        //  and for Wayfinders: 1 for the Wayfinder, and 1 for each Aeon Stone but the first. That is represented by 1 for each Aeon Stone (but at least 1).\r\n        return this.get_InvestedItems().map((item: WornItem) =>\r\n            (item.isWayfinder && item.aeonStones) ? Math.max(item.aeonStones.length, 1) : 1\r\n        ).reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    on_Equip(item: Equipment, inventory: ItemCollection, equipped: boolean) {\r\n        this.characterService.onEquip(this.get_Creature(), inventory, item, equipped);\r\n    }\r\n\r\n    on_Invest(item: Equipment, inventory: ItemCollection, invested: boolean) {\r\n        this.characterService.on_Invest(this.get_Creature(), inventory, item, invested);\r\n    }\r\n\r\n    onItemChange(item: Item) {\r\n        this.characterService.set_ItemViewChanges(this.get_Creature(), item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    onAmountChange(item: Consumable, amount: number, pay: boolean = false) {\r\n        item.amount += amount;\r\n        if (pay) {\r\n            if (amount > 0) {\r\n                this.change_Cash(-1, this.get_Price(item));\r\n            } else if (amount < 0) {\r\n                this.change_Cash(1, Math.floor(this.get_Price(item) / 2));\r\n            }\r\n        }\r\n        this.characterService.set_ItemViewChanges(this.get_Creature(), item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_InventoryName(inventory: ItemCollection) {\r\n        return inventory.get_Name(this.characterService);\r\n    }\r\n\r\n    on_SpellItemUse(item: Item, creature: string, inventory: ItemCollection) {\r\n        let spellName = item.storedSpells[0]?.spells[0]?.name || \"\";\r\n        let spellChoice = item.storedSpells[0];\r\n        if (spellChoice && spellName) {\r\n            let spell = this.get_Spells(item.storedSpells[0]?.spells[0]?.name)[0];\r\n            if (spell && !(item instanceof Wand && item.overcharged)) {\r\n                let tempGain: SpellGain = new SpellGain();\r\n                this.spellsService.process_Spell(this.get_Character(), creature, this.characterService, this.itemsService, this.conditionsService, null, tempGain, spell, spellChoice.level, true, true, false);\r\n            }\r\n            if (item instanceof Wand) {\r\n                if (item.cooldown) {\r\n                    if (item.overcharged) {\r\n                        this.drop_InventoryItem(item, inventory, false);\r\n                    } else {\r\n                        item.overcharged = true;\r\n                        item.broken = true;\r\n                    }\r\n                } else {\r\n                    item.cooldown = 144000;\r\n                }\r\n            } else {\r\n                spellChoice.spells.shift();\r\n            }\r\n        }\r\n        if (item instanceof Consumable) {\r\n            this.on_ConsumableUse(item, creature, inventory)\r\n        } else {\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    on_ConsumableUse(item: Consumable, creature: string, inventory: ItemCollection) {\r\n        this.characterService.on_ConsumableUse(this.get_Creature(creature), item);\r\n        if (this.can_Drop(item) && !item.can_Stack()) {\r\n            this.drop_InventoryItem(item, inventory, false);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    can_ApplyTalismans(item: Item) {\r\n        return ([\"armors\", \"shields\", \"weapons\"].includes(item.type)) &&\r\n            (\r\n                (item as Equipment).talismans.length ||\r\n                this.get_Creature().inventories.some(inv => inv.talismans.some(talisman => talisman.targets.includes(item.type)))\r\n            )\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    have_Funds(sum: number = 0) {\r\n        let character = this.characterService.get_Character();\r\n        let funds = (character.cash[0] * 1000) + (character.cash[1] * 100) + (character.cash[2] * 10) + (character.cash[3]);\r\n        if (sum <= funds) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number = 0, changeafter: boolean = false) {\r\n        this.characterService.change_Cash(multiplier, sum);\r\n        if (changeafter) {\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        if (this.creature == \"Character\") {\r\n            let character = this.get_Character();\r\n            return character.get_FeatsTaken(1, character.level, name).length;\r\n        }\r\n    }\r\n\r\n    have_QuickCrafting() {\r\n        if (this.creature == \"Character\") {\r\n            return this.have_Feat(\"Quick Alchemy\") ||\r\n                this.have_Feat(\"Snare Specialist\");\r\n        }\r\n    }\r\n\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.get_Character().get_FormulasLearned(id, source);\r\n    }\r\n\r\n    get_PreparedItems(type: string) {\r\n        if (type == 'snarespecialist') {\r\n            return this.get_FormulasLearned()\r\n                .filter(learned => learned.snareSpecialistPrepared)\r\n                .map(learned => Object.assign(new Object(), { learned: learned, item: this.itemsService.get_CleanItemByID(learned.id) }))\r\n                .sort(function (a, b) {\r\n                    if (a.item.name > b.item.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.item.name < b.item.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n        }\r\n    }\r\n\r\n    cannot_Craft(item: Item, learned: FormulaLearned, type: string) {\r\n        //Return any reasons why you cannot craft an item.\r\n        let character: Character = this.get_Character();\r\n        let reasons: string[] = [];\r\n        if (item.traits.includes(\"Alchemical\") && !character.get_FeatsTaken(1, character.level, \"Alchemical Crafting\").length) {\r\n            reasons.push(\"You need the Alchemical Crafting skill feat to create alchemical items.\")\r\n        }\r\n        if (item.traits.includes(\"Magical\") && !character.get_FeatsTaken(1, character.level, \"Magical Crafting\").length) {\r\n            reasons.push(\"You need the Magical Crafting skill feat to create magic items.\")\r\n        }\r\n        if (item.traits.includes(\"Snare\") && !character.get_FeatsTaken(1, character.level, \"Snare Crafting\").length) {\r\n            reasons.push(\"You need the Snare Crafting skill feat to create snares.\")\r\n        }\r\n        if (item.level > character.level) {\r\n            reasons.push(\"The item to craft must be your level or lower.\")\r\n        }\r\n        if (item.level >= 16 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 8) {\r\n            reasons.push(\"You must be legendary in Crafting to craft items of 16th level or higher.\")\r\n        } else if (item.level >= 9 && (this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0) < 6) {\r\n            reasons.push(\"You must be a master in Crafting to craft items of 9th level or higher.\")\r\n        }\r\n        if (type == \"snarespecialist\" && !learned.snareSpecialistAvailable) {\r\n            reasons.push(\"You must do your preparations again before you can deploy more of this item.\")\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    craft_Item(item: Item, learned: FormulaLearned, type: string) {\r\n        let amount = 1;\r\n        if (item[\"stack\"]) {\r\n            amount = item[\"stack\"];\r\n        }\r\n        this.characterService.grant_InventoryItem(this.characterService.get_Character(), this.characterService.get_Character().inventories[0], item, false, true, true, amount);\r\n        if (type == \"snarespecialist\") {\r\n            learned.snareSpecialistAvailable--\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_SnareSpecialistActions(item: Snare) {\r\n        //The rules for snare specialist and lightning snares say that these numbers apply to snares that take 1 minute to craft,\r\n        //  but there doesn't seem to be any other type of snare.\r\n        if (item.actions == \"1 minute\") {\r\n            if (this.have_Feat(\"Lightning Snares\")) {\r\n                return \"1A\"\r\n            } else {\r\n                return \"3A\";\r\n            }\r\n        } else {\r\n            return item.actions;\r\n        }\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    get_ItemSpell(item: Item) {\r\n        if (item.storedSpells.length && item.storedSpells[0].spells.length) {\r\n            let spell = this.get_Spells(item.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return [spell];\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_LargeWeaponAllowed(item: Item) {\r\n        return this.creature == \"Character\" && (this.get_Character().get_FeatsTaken(1, this.get_Character().level, 'Titan Mauler').length || this.effectsService.get_EffectsOnThis(this.get_Creature(), \"Use Large Weapons\").length) && item.type == \"weapons\" && ((item as Weapon).prof != \"Unarmed Attacks\");\r\n    }\r\n\r\n    get_BladeAllyAllowed(item: Item) {\r\n        return this.creature == \"Character\" && this.get_Character().get_FeatsTaken(1, this.get_Character().level, 'Divine Ally: Blade Ally').length && ((item.type == \"weapons\" && (item as Weapon).prof != \"Unarmed Attacks\") || (item.type == \"wornitems\" && (item as WornItem).isHandwrapsOfMightyBlows));\r\n    }\r\n\r\n    get_BladeAllyUsed() {\r\n        return this.get_Character().inventories.find(inventory => inventory.weapons.find(weapon => weapon.bladeAlly) || inventory.wornitems.find(wornItem => wornItem.isHandwrapsOfMightyBlows && wornItem.bladeAlly));\r\n    }\r\n\r\n    get_BattleforgedAllowed(item: Item) {\r\n        return (\r\n            this.get_Character().get_FeatsTaken(1, this.get_Character().level, 'Battleforger').length ||\r\n            this.effectsService.get_EffectsOnThis(this.get_Character(), \"Allow Battleforger\").length\r\n        ) && (\r\n                (\r\n                    item.type == \"weapons\" &&\r\n                    (item as Weapon).prof != \"Unarmed Attacks\"\r\n                ) ||\r\n                item.type == \"armors\" ||\r\n                (\r\n                    item.type == \"wornitems\" &&\r\n                    (item as WornItem).isHandwrapsOfMightyBlows)\r\n            );\r\n    }\r\n\r\n    on_ShieldHPChange(shield: Shield, amount: number) {\r\n        shield.damage += amount;\r\n        if (shield.equipped) {\r\n            this.characterService.set_ToChange(this.creature, \"defense\");\r\n        }\r\n        if (shield.get_HitPoints() < shield.get_BrokenThreshold()) {\r\n            shield.broken = true;\r\n        } else {\r\n            shield.broken = false;\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_RepairAllowed(item: Item) {\r\n        if ((item as Equipment).broken) {\r\n            if (item.constructor == Shield) {\r\n                if ((item as Shield).get_HitPoints() < (item as Shield).get_BrokenThreshold()) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"inventory\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"inventory\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-inventory-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Inventory</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <button class=\"fullsize-only list-item center-aligned\"\r\n            (click)=\"set_ItemsMenuTarget(creature); toggle_Menu('items')\">\r\n            Get Items\r\n        </button>\r\n        <header class=\"subsectionHeader\" *ngIf=\"creature=='Character'\">Currency</header>\r\n        <div class=\"list-item\" *ngIf=\"creature=='Character'\">\r\n            <span [ngbTooltip]=\"'Platinum'\">P</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[0]}}</div>\r\n            <span [ngbTooltip]=\"'Gold'\">G</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[1]}}</div>\r\n            <span [ngbTooltip]=\"'Silver'\">S</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[2]}}</div>\r\n            <span [ngbTooltip]=\"'Copper'\">C</span>\r\n            <div class=\"value\">{{this.characterService.get_Character().cash[3]}}</div>\r\n            <button class=\"center-aligned\" [ngbTooltip]=\"'Exchange coins for higher currency (no higher than Gold).'\"\r\n                (click)=\"sort_Cash();\">Sort</button>\r\n        </div>\r\n        <header class=\"subsectionHeader\">Bulk</header>\r\n        <ng-container *ngFor=\"let calculatedBulk of [get_CalculatedBulk()]; trackBy:trackByIndex;\">\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Bulk</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngbPopover]=\"calculatedBulk.current?.explain\"\r\n                            [ngClass]=\"{'penalty':calculatedBulk.currentpenalties, 'bonus':calculatedBulk.currentbonuses, 'absolute':calculatedBulk.currentabsolutes?.length}\">\r\n                            {{calculatedBulk.current?.value}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Bulk'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Encumbrance Limit</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngbPopover]=\"calculatedBulk.encumbered?.explain\"\r\n                            [ngClass]=\"{'penalty':calculatedBulk.penalties, 'bonus':calculatedBulk.bonuses, 'absolute':calculatedBulk.absolutes?.length}\">\r\n                            {{calculatedBulk.encumbered?.value}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Encumbered Limit'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Maximum Bulk</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngbPopover]=\"calculatedBulk.max?.explain\"\r\n                            [ngClass]=\"{'penalty':calculatedBulk.maxpenalties, 'bonus':calculatedBulk.maxbonuses, 'absolute':calculatedBulk.maxabsolutes?.length}\">\r\n                            {{calculatedBulk.max?.value}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Max Bulk'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"have_QuickCrafting()\">\r\n            <header class=\"sectionHeader fullsize-only box-header\">Quick Crafting</header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Quick Crafting'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <button class=\"list-item\" *ngIf=\"have_Feat('Snare Specialist')\" (click)=\"toggle_List('snarespecialist')\">\r\n                <header class=\"sectionHeader\">Snare Specialist</header>\r\n            </button>\r\n            <ng-container *ngIf=\"get_ShowList()=='snarespecialist'\">\r\n                <div class=\"newrow\" *ngIf=\"!get_PreparedItems('snarespecialist').length\">You don't have any snares\r\n                    prepared for quick deployment.</div>\r\n                <ng-container *ngFor=\"let preparedItem of get_PreparedItems('snarespecialist'); trackBy:trackByIndex;\">\r\n                    <div class=\"list-item\"\r\n                        *ngFor=\"let inventoryID of ['snarespecialist'+preparedItem.item.id]; trackBy:trackByIndex;\">\r\n                        <button class=\"newrow sublist-toggle\" (click)=\"toggle_Item(inventoryID)\"\r\n                            [ngClass]=\"{'inactive-button':!preparedItem.learned.snareSpecialistAvailable}\">\r\n                            <span>{{preparedItem.learned.snareSpecialistAvailable}}\r\n                                {{(preparedItem.item.get_Name) ? preparedItem.item.get_Name() :\r\n                                preparedItem.item.name}}</span>\r\n                            <span>{{(preparedItem.item.level) ? \"Level \"+preparedItem.item.level :\r\n                                \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"}}</span>\r\n                        </button>\r\n                        <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==inventoryID\"\r\n                            [ngClass]=\"{'inactive-list':!preparedItem.learned.snareSpecialistAvailable}\">\r\n                            <div\r\n                                [ngbTooltip]=\"cannot_Craft(preparedItem.item, preparedItem.learned, 'snarespecialist').join('\\n')\">\r\n                                <button class=\"newrow center-aligned\"\r\n                                    (click)=\"craft_Item(preparedItem.item, preparedItem.learned, 'snarespecialist')\"\r\n                                    [disabled]=\"cannot_Craft(preparedItem.item, preparedItem.learned, 'snarespecialist').length\">\r\n                                    <span>Deploy Snare <app-actionIcons\r\n                                            [actionString]=\"get_SnareSpecialistActions(preparedItem.item)\">\r\n                                        </app-actionIcons>\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                            <app-item [item]=preparedItem.item [itemStore]=true></app-item>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n        <header class=\"sectionHeader fullsize-only box-header\">Items</header>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Inventory'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <div class=\"fullsize-only list-item\" *ngFor=\"let maxInvested of [get_MaxInvested()]; trackBy:trackByIndex;\">\r\n            <strong>Invested</strong>\r\n            <div class=\"value\" [ngClass]=\"{'problem':(get_Invested() > maxInvested.value)}\">\r\n                {{get_Invested()}}\r\n            </div>\r\n            <strong>Max Invested</strong>\r\n            <div class=\"value\" [ngbPopover]=\"maxInvested.explain\"\r\n                [ngClass]=\"{'penalty':maxInvested.penalties, 'bonus':maxInvested.bonuses, 'absolute':maxInvested.absolutes}\">\r\n                {{get_MaxInvested().value}}\r\n            </div>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Max Invested'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        </div>\r\n        <div class=\"list-item\" [ngClass]=\"{'fullsize-only':inventoryIndex != 0}\"\r\n            *ngFor=\"let inventory of get_Inventories(creature, true, true); let inventoryIndex = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader fullsize-only newrow\">{{get_InventoryName(inventory)}}\r\n                <span *ngIf=\"inventory.bulkLimit && inventory.bulkLimit % 1 == 0\">&nbsp;{{\"(\"+inventory.get_Bulk()+\" /\r\n                    \"+inventory.bulkLimit+\" Bulk)\"}}</span>\r\n                <span\r\n                    *ngIf=\"inventory.bulkLimit && inventory.bulkLimit % 1 != 0\">&nbsp;{{\"(\"+(inventory.get_Bulk(false)*10)+\"L\r\n                    / \"+(inventory.bulkLimit*10)+\"L Bulk)\"}}</span>\r\n            </header>\r\n            <ng-container *ngFor=\"let itemSet of inventory.names; trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let listID of [get_ID()*1000]\">\r\n                    <header class=\"subsectionHeader newrow\" *ngIf=\"inventory[itemSet.key].length\">{{itemSet.name}}\r\n                    </header>\r\n                    <ng-container *ngFor=\"let item of sort_ItemSet(inventory[itemSet.key]); trackBy:trackByIndex;\">\r\n                        <div class=\"list-item\" *ngFor=\"let inventoryID of [item.id]; trackBy:trackByIndex;\">\r\n                            <button class=\"newrow left-aligned sublist-toggle\"\r\n                                [ngClass]=\"{'fancy-button':((item.equippable && item.equipped) || (item.can_Invest() && item.invested)), 'problem':item.broken}\"\r\n                                (click)=\"toggle_Item(inventoryID)\">\r\n                                <span [ngbTooltip]=\"'Broken'\" *ngIf=\"item.broken\"><i class='ra ra-broken-shield'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Shoddy'\" *ngIf=\"item.shoddy\"><i class='ra ra-broken-bottle'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Temporary Item'\" *ngIf=\"item.expiration\"><i class='ra ra-clockwork'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Large Weapon'\" *ngIf=\"item.large\"><i class='ra ra-large-hammer'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Blade Ally'\" *ngIf=\"item.bladeAlly\"><i class='ra ra-fireball-sword'></i>&nbsp;</span>\r\n                                <span [ngbTooltip]=\"'Battleforged'\" *ngIf=\"item.battleforged\"><i class='ra ra-anvil'></i>&nbsp;</span>\r\n                                {{(item.amount != undefined && item.amount != 1) ? item.amount+\" \" : \"\"}}\r\n                                {{(item['get_Name']) ? item.get_Name() : item.name}}&nbsp;\r\n                                <span class=\"lower\"\r\n                                    *ngFor=\"let containedItems of [get_ContainedItems(item)]\">{{containedItems ?\r\n                                    \"contains \"+containedItems+\" items\" : \"\"}}</span>\r\n                            </button>\r\n                            <div class=\"list-item sublist lower\"\r\n                                [ngClass]=\"{'fancy-list':((item.equippable && item.equipped) || (item.can_Invest() && item.invested)), 'problem':item.broken}\"\r\n                                *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                <div class=\"newrow\"\r\n                                    *ngFor=\"let prof of [(item.get_Proficiency ? item.get_Proficiency(get_Creature(), characterService) : item.prof)]; trackBy:trackByIndex;\">\r\n                                    <span [ngClass]=\"item.prof != prof ? 'absolute' : ''\"\r\n                                        *ngIf=\"item.type == 'armors'\">{{([\"Light Barding\",\"Heavy\r\n                                        Barding\"].includes(prof)) ? prof : prof.split(\" \")[0]}}\r\n                                        {{item.group}}\r\n                                        {{(item.type==\"armors\" && (![\"Unarmored Defense\",\"Light Barding\",\"Heavy\r\n                                        Barding\"].includes(prof))) ? \"Armor\" : \"\"}}</span>\r\n                                    <span [ngClass]=\"item.prof != prof ? 'absolute' : ''\"\r\n                                        *ngIf=\"item.type == 'weapons'\">{{(prof == 'Unarmed') ? prof : prof.substr(0,\r\n                                        prof.length - 8)}}\r\n                                        {{item.group}}</span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"item.expiration\">\r\n                                    <span><strong>Duration</strong> {{get_Duration(item.expiration)}}</span>\r\n                                </div>\r\n                                <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                    (click)=\"on_ConsumableUse(item, creature, inventory)\"\r\n                                    *ngIf=\"item.amount != undefined && !['alchemicalelixirs','potions','scrolls'].includes(item.type) && item.actions && (!item.targets || item.targets.length == 0)\">\r\n                                    <span>Use<app-actionIcons [actionString]=\"item.actions\">\r\n                                        </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                    </span>\r\n                                </button>\r\n                                <ng-container\r\n                                    *ngIf=\"item.amount != undefined && item.storedSpells.length && !['weaponrunes', 'armorrunes', 'oils'].includes(this.item.type)\">\r\n                                    <ng-container *ngFor=\"let spell of get_ItemSpell(item); trackBy:trackByIndex;\">\r\n                                        <div class=\"newrow\"\r\n                                            [ngbTooltip]=\"item.broken ? 'The item is broken and cannot be used.' : ''\">\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, creature, inventory)\"\r\n                                                *ngIf=\"['self', 'ally'].includes(spell.target)\"\r\n                                                [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    {{spell.target == 'ally' ? \"(Cast spell on yourself)\" : \"(Cast\r\n                                                    spell)\"}}\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, (creature=='Character' ? 'Companion' : 'Character'), inventory)\"\r\n                                                *ngIf=\"['companion', 'ally'].includes(spell.target) && get_CompanionAvailable()\"\r\n                                                [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell on\r\n                                                    {{creature == \"Character\" ? \"your animal companion\" : \"your\r\n                                                    master\"}})\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, 'Familiar', inventory)\"\r\n                                                *ngIf=\"['companion', 'ally'].includes(spell.target) && get_FamiliarAvailable()\"\r\n                                                [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell on your familiar)\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, '', inventory)\"\r\n                                                *ngIf=\"spell.target == 'ally'\" [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell on ally)\r\n                                                </span>\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"on_SpellItemUse(item, '', inventory)\"\r\n                                                *ngIf=\"spell.target == ''\" [disabled]=\"item.broken\">\r\n                                                <span>{{item.type == \"wands\" && item.cooldown ? \"Overcharge (Cooldown \"\r\n                                                    +\r\n                                                    get_Duration(item.cooldown) + \")\" : \"Use\"}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\">\r\n                                                    </app-actionIcons>{{(spell.activationType) ? spell.activationType :\r\n                                                    \"\"}}\r\n                                                    (Cast spell)\r\n                                                </span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                                <ng-container\r\n                                    *ngIf=\"item.amount != undefined && ['alchemicalelixirs','potions'].includes(item.type) && item.actions && (!item.targets || item.targets.length == 0)\">\r\n                                    <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                        (click)=\"on_ConsumableUse(item, creature, inventory)\">\r\n                                        <span>Use<app-actionIcons [actionString]=\"item.actions\">\r\n                                            </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                        </span>\r\n                                    </button>\r\n                                    <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                        (click)=\"on_ConsumableUse(item, 'Companion', inventory)\"\r\n                                        *ngIf=\"get_CompanionAvailable()\">\r\n                                        <span>Use (Give to your animal companion)<app-actionIcons\r\n                                                [actionString]=\"item.actions\">\r\n                                            </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                        </span>\r\n                                    </button>\r\n                                    <button class=\"newrow center-aligned\" [disabled]=\"!item.amount\"\r\n                                        (click)=\"on_ConsumableUse(item, 'Familiar', inventory)\"\r\n                                        *ngIf=\"get_FamiliarAvailable()\">\r\n                                        <span>Use (Give to your familiar)<app-actionIcons [actionString]=\"item.actions\">\r\n                                            </app-actionIcons>{{(item.activationType) ? item.activationType : \"\"}}\r\n                                        </span>\r\n                                    </button>\r\n                                </ng-container>\r\n                                <div class=\"newrow\">\r\n                                    <span *ngIf=\"can_Equip(item, inventoryIndex)\">\r\n                                        <button *ngIf=\"!item.equipped\"\r\n                                            (click)=\"on_Equip(item, inventory, true)\">Equip</button>\r\n                                        <button *ngIf=\"item.equipped\"\r\n                                            (click)=\"on_Equip(item, inventory, false)\">Unequip</button>\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Invest(item, inventoryIndex)\">\r\n                                        <button *ngIf=\"!item.invested\" (click)=\"on_Invest(item, inventory, true)\"\r\n                                            [disabled]=\"get_Invested() >= get_MaxInvested().value && !item.invested\">Invest</button>\r\n                                        <button *ngIf=\"item.invested\"\r\n                                            (click)=\"on_Invest(item, inventory, false)\">Uninvest</button>\r\n                                    </span>\r\n                                    <span *ngIf=\"item.can_Stack()\">\r\n                                        <button (click)=\"onAmountChange(item, -1)\"\r\n                                            [disabled]=\"item.amount <= 0\">-1</button>\r\n                                        <button (click)=\"onAmountChange(item, 1)\">+1</button>\r\n                                    </span>\r\n                                    <span\r\n                                        *ngIf=\"!can_Equip(item, inventoryIndex) && !can_Invest(item, inventoryIndex) && !item.can_Stack()\">\r\n                                        &nbsp;\r\n                                        <!-- This span is a placeholder that appears if no other button is valid on the left side of the Drop button -->\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Drop(item) && can_DropAll(item)\">\r\n                                        <button (click)=\"drop_ContainerOnly(item, inventory)\"\r\n                                            [ngbTooltip]=\"'Drop this item, but keep all items granted by it'\">\r\n                                            Drop this item only\r\n                                        </button>\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Drop(item) && !can_DropAll(item)\">\r\n                                        <button (click)=\"drop_InventoryItem(item, inventory)\">\r\n                                            Drop\r\n                                        </button>\r\n                                    </span>\r\n                                    <span *ngIf=\"can_Drop(item) && can_DropAll(item)\">\r\n                                        <button (click)=\"drop_InventoryItem(item, inventory)\"\r\n                                            [ngbTooltip]=\"'Drop this item and all items granted by it'\">\r\n                                            Drop with all parts\r\n                                        </button>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"newrow\" *ngIf=\"get_Price(item) && item.tradeable\">\r\n                                    <span *ngIf=\"item.can_Stack()\">\r\n                                        <span [ngbTooltip]=\"'Sell at half price'\">\r\n                                            <button (click)=\"onAmountChange(item, -1, true)\"\r\n                                                [disabled]=\"item.amount <= 0 || item.broken || item.shoddy\">Sell\r\n                                                1</button>\r\n                                        </span>\r\n                                        <button (click)=\"onAmountChange(item, 1, true)\"\r\n                                            [disabled]=\"!have_Funds(get_Price(item))\">Buy 1</button>\r\n                                    </span>\r\n                                    <span *ngIf=\"!item.can_Stack()\">\r\n                                        &nbsp;\r\n                                        <!-- This span is a placeholder that appears if no other button is valid on the left side of the Sell button -->\r\n                                    </span>\r\n                                    <span>\r\n                                        <span [ngbTooltip]=\"'Sell at half price'\">\r\n                                            <button (click)=\"drop_InventoryItem(item, inventory, true)\"\r\n                                                [disabled]=\"item.amount <= 0 || item.broken || item.shoddy\">\r\n                                                Sell {{can_DropAll(item) ? \" with all parts\" : \"\"}}\r\n                                            </button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"list-item\" *ngIf=can_Drop(item)>\r\n                                    <strong>Move to container</strong>\r\n                                    <span>\r\n                                        <select [(ngModel)]=\"targetInventory\"\r\n                                            (ngModelChange)=\"move_InventoryItem(item, inventory)\">\r\n                                            <option [ngValue]=\"null\"></option>\r\n                                            <option\r\n                                                *ngFor=\"let newTargetInventory of get_TargetInventories(item); trackBy:trackByIndex;\"\r\n                                                [ngValue]=\"newTargetInventory\"\r\n                                                [disabled]=\"!can_Fit(item, newTargetInventory, inventory)\">\r\n                                                {{get_InventoryName(newTargetInventory)}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"list-item newrow left-aligned\">\r\n                                    <span *ngIf=\"item['get_Name']\">\r\n                                        <input id=\"{{item.id}}showname\" type=\"checkbox\" [(ngModel)]=\"item.showName\">\r\n                                        <label for=\"{{item.id}}showname\">&nbsp;Name&nbsp;</label>\r\n                                    </span>\r\n                                    <span>\r\n                                        <input id=\"{{item.id}}shownotes\" type=\"checkbox\" [(ngModel)]=\"item.showNotes\">\r\n                                        <label for=\"{{item.id}}shownotes\">&nbsp;Notes&nbsp;</label>\r\n                                    </span>\r\n                                    <span\r\n                                        *ngIf=\"!['Fist','Unarmored'].includes(item.name) && item.baseType == 'Equipment'\">\r\n                                        <input id=\"{{item.id}}showstatus\" type=\"checkbox\" [(ngModel)]=\"item.showStatus\">\r\n                                        <label for=\"{{item.id}}showstatus\">&nbsp;Status&nbsp;</label>\r\n                                    </span>\r\n                                    <span *ngIf=\"item.moddable && item.moddable != '-' && item.type != 'shield'\">\r\n                                        <input id=\"{{item.id}}showrunes\" type=\"checkbox\" [(ngModel)]=\"item.showRunes\">\r\n                                        <label for=\"{{item.id}}showrunes\">&nbsp;Runes&nbsp;</label>\r\n                                    </span>\r\n                                </div>\r\n                                <!--Changing Name-->\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!item.showName\">\r\n                                    <div class=\"list-item newrow left-aligned\">\r\n                                        <span>Name</span> <input type=\"textarea\" class=\"fullwidth\"\r\n                                            [(ngModel)]=\"item.displayName\" (blur)=\"onItemChange(item)\">\r\n                                    </div>\r\n                                </div>\r\n                                <!--Changing Notes-->\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!item.showNotes\">\r\n                                    <div class=\"list-item newrow left-aligned\">\r\n                                        <span>Notes</span> <input type=\"textarea\" class=\"fullwidth\"\r\n                                            [(ngModel)]=\"item.notes\">\r\n                                    </div>\r\n                                </div>\r\n                                <!--Changing Status-->\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!(item.showStatus || item.broken || item.shoddy)\"\r\n                                    *ngIf=\"!['Fist','Unarmored'].includes(item.name) && item.baseType == 'Equipment'\">\r\n                                    <div class=\"list-item newrow left-aligned\">\r\n                                        <span>Status</span>\r\n                                        <div class=\"newrow\">\r\n                                            <span\r\n                                                [ngbPopover]=\"!get_RepairAllowed(item) ? 'You cannot repair a broken shield unless you restore its hit points above the Broken Threshold.' : ''\">\r\n                                                <input id=\"{{item.id}}broken\" type=\"checkbox\" [(ngModel)]=\"item.broken\"\r\n                                                    (ngModelChange)=onItemChange(item)\r\n                                                    [disabled]=\"!get_RepairAllowed(item)\">\r\n                                                <label for=\"{{item.id}}broken\">&nbsp;<i class='ra ra-broken-shield'></i>&nbsp;Broken</label>\r\n                                            </span>\r\n                                            <span>\r\n                                                <span\r\n                                                    [ngbPopover]=\"'A broken object can\\'t be used for its normal function, nor does it grant bonuses - with the exception of armor. Broken armor still grants its item bonus to AC, but it also imparts a status penalty to AC depending on its category: -1 for broken light armor, -2 for broken medium armor, or -3 for broken heavy armor. A broken item still imposes penalties and limitations normally incurred by carrying, holding, or wearing it. For example, broken armor would still impose its Dexterity modifier cap, check penalty, and so forth.'\">\r\n                                                    <button class=\"lower inactive-button\">Details</button>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div class=\"newrow\">\r\n                                            <span>\r\n                                                <input id=\"{{item.id}}shoddy\" type=\"checkbox\" [(ngModel)]=\"item.shoddy\"\r\n                                                    (ngModelChange)=onItemChange(item)>\r\n                                                <label for=\"{{item.id}}shoddy\">&nbsp;<i class='ra ra-broken-bottle'></i>&nbsp;Shoddy</label>\r\n                                            </span>\r\n                                            <span>\r\n                                                <span\r\n                                                    [ngbPopover]=\"'When available, a shoddy item usually costs half the Price of a standard item, though you can never sell one in any case. Attacks and checks involving a shoddy item take a –2 item penalty. This penalty also applies to any DCs that a shoddy item applies to (such as AC, for shoddy armor). A shoddy suit of armor also worsens the armor\\'s check penalty by 2. A shoddy item\\'s Hit Points and Broken Threshold are each half that of a normal item of its type.'\">\r\n                                                    <button class=\"lower inactive-button\">Details</button>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"list-item newrow\" *ngIf=\"get_LargeWeaponAllowed(item) || item.large\">\r\n                                    <span>\r\n                                        <input id=\"{{item.id}}large\" type=\"checkbox\" [(ngModel)]=\"item.large\"\r\n                                            (ngModelChange)=onItemChange(item)>\r\n                                        <label for=\"{{item.id}}large\">&nbsp;<i class='ra ra-large-hammer'></i>&nbsp;Large</label>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span\r\n                                            [ngbPopover]=\"'You can use a weapon built for a Large creature if you are Small or Medium (both normally and when raging). If you\\'re not Small or Medium, you can use a weapon built for a creature one size larger than you. While wielding the weapon, you have the clumsy 1 condition because of its unwieldy size.'\">\r\n                                            <button class=\"lower inactive-button\">Details</button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"list-item newrow\" *ngIf=\"get_BladeAllyAllowed(item) || item.bladeAlly\">\r\n                                    <div class=\"newrow\">\r\n                                        <span\r\n                                            [ngbPopover]=\"(get_BladeAllyUsed() && !item.bladeAlly) ? 'Another item is already designated as your blade ally.' : ''\">\r\n                                            <input id=\"{{item.id}}bladeally\" type=\"checkbox\"\r\n                                                [(ngModel)]=\"item.bladeAlly\" (ngModelChange)=onItemChange(item)\r\n                                                [disabled]=\"get_BladeAllyUsed() && !item.bladeAlly\">\r\n                                            <label for=\"{{item.id}}bladeally\">&nbsp;<i class='ra ra-fireball-sword'></i>&nbsp;Blade Ally</label>\r\n                                        </span>\r\n                                        <span>\r\n                                            <span\r\n                                                [ngbPopover]=\"'You can select one weapon or handwraps of mighty blows when you make your daily preparations. In your hands, the item gains the effect of a property rune and you also gain the weapon\\'s critical specialization effect. For a champion following the tenets of good, choose disrupting, ghost touch, returning, or shifting. For a champion following the tenets of evil, choose fearsome, returning, or shifting.'\">\r\n                                                <button class=\"lower inactive-button\">Details</button>\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <app-itemBladeAlly class=\"list-item newrow\" [item]=item *ngIf=\"item.bladeAlly\">\r\n                                    </app-itemBladeAlly>\r\n                                </div>\r\n                                <div class=\"list-item newrow\"\r\n                                    *ngIf=\"get_BattleforgedAllowed(item) || item.battleforged\">\r\n                                    <span>\r\n                                        <input id=\"{{item.id}}battleforged\" type=\"checkbox\"\r\n                                            [(ngModel)]=\"item.battleforged\" (ngModelChange)=onItemChange(item)>\r\n                                        <label for=\"{{item.id}}battleforged\">&nbsp;<i class='ra ra-anvil'></i>&nbsp;Battleforged</label>\r\n                                    </span>\r\n                                    <span>\r\n                                        <span\r\n                                            [ngbPopover]=\"'You can sharpen weapons, polish armor, and apply special techniques to temporarily gain better effects from your armaments. By spending 1 hour working on a weapon or armor, you can grant it the effects of a +1 potency rune until your next daily preparations, gaining a +1 item bonus to attack rolls for a weapon or increasing armor\\'s item bonus to AC by 1. This has no effect if the weapon or armor already had a potency rune.'\">\r\n                                            <button class=\"lower inactive-button\">Details</button>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"fullwidth\" [ngbCollapse]=\"!item.showRunes\"\r\n                                    *ngIf=\"item.moddable && item.moddable != '-' && item.type != 'shield'\">\r\n                                    <app-itemRunes class=\"list-item\" [item]=item [itemStore]=false>\r\n                                    </app-itemRunes>\r\n                                </div>\r\n                                <app-itemOils [item]=item [itemStore]=false *ngIf=\"item.type != 'oils'\">\r\n                                </app-itemOils>\r\n                                <app-itemPoisons [item]=item [itemStore]=false *ngIf=\"item.type == 'weapons'\">\r\n                                </app-itemPoisons>\r\n                                <app-itemTalismans [item]=item [itemStore]=false *ngIf=\"can_ApplyTalismans(item)\">\r\n                                </app-itemTalismans>\r\n                                <ng-container *ngIf=\"item.type =='shields'\">\r\n                                    <div class=\"list-item newrow\">\r\n                                        <strong>HP</strong>\r\n                                        <div class=\"value\"> {{item.get_HitPoints()}}</div>\r\n                                        <strong>Max HP</strong>\r\n                                        <div class=\"value\"> {{item.get_MaxHP()}}</div>\r\n                                        <strong>BT</strong>\r\n                                        <div class=\"value\"> {{item.get_BrokenThreshold()}}</div>\r\n                                    </div>\r\n                                    <div class=\"list-item newrow\">\r\n                                        <span>\r\n                                            <button [disabled]=\"shieldDamage == 0\"\r\n                                                (click)=\"on_ShieldHPChange(item, shieldDamage)\">Damage</button>\r\n                                        </span>\r\n                                        <span>\r\n                                            <input class=\"number3\" type=\"number\" [(ngModel)]=\"shieldDamage\"\r\n                                                maxLength=\"3\">\r\n                                        </span>\r\n                                        <span>\r\n                                            <button [disabled]=\"shieldDamage == 0\"\r\n                                                (click)=\"on_ShieldHPChange(item, -shieldDamage)\">Repair</button>\r\n                                        </span>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <app-item class=\"lower\" [creature]=\"creature\" [item]=item\r\n                                    [allowActivate]=\"(item.equippable ? item.equipped : true) && (item.can_Invest() ? item.invested : true)\"\r\n                                    [armoredSkirt]=\"item.get_ArmoredSkirt ? item.get_ArmoredSkirt(get_Creature(), characterService) : null\">\r\n                                </app-item>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n            <!--Other Items-->\r\n            <header class=\"subsectionHeader fullsize-only\">Miscellaneous Items</header>\r\n            <button class=\"fullsize-only newrow center-aligned\" (click)=\"add_NewOtherItem(inventory)\">Add</button>\r\n            <div class=\"fullsize-only list-item\" *ngFor=\"let item of inventory.otheritems; let index = index; trackBy:trackByIndex;\">\r\n                <strong>Name</strong>\r\n                <input id=\"miscellaneousItemName{{inventory.itemId}}{{index}}\" type=\"text\" [(ngModel)]=\"item.name\">\r\n                <strong>Bulk</strong>\r\n                <input id=\"miscellaneousItemBulk{{inventory.itemId}}{{index}}\" class=\"number2\" [(ngModel)]=\"item.bulk\" (blur)=\"validate_Bulk(item)\"\r\n                    (keypress)=\"bulkOnly($event)\">\r\n                <button (click)=\"remove_OtherItem(item, inventory)\">Drop</button>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Talisman } from 'src/app/Talisman';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { Shield } from 'src/app/Shield';\r\n\r\n@Component({\r\n    selector: 'app-itemTalismans',\r\n    templateUrl: './itemTalismans.component.html',\r\n    styleUrls: ['./itemTalismans.component.css']\r\n})\r\nexport class ItemTalismansComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Equipment;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    newTalisman: { talisman: Talisman, inv: ItemCollection }[];\r\n\r\n    public newPropertyRuneName: string[] = [\"\", \"\", \"\"];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Slots() {\r\n        let indexes: number[] = [];\r\n        for (let index = 0; index < this.item.talismans.length; index++) {\r\n            indexes.push(index);\r\n        }\r\n        //If Talismans are available, add one more slot.\r\n        if (this.itemStore || this.get_Character().inventories.some(inv => this.get_Talismans(inv).length)) {\r\n            indexes.push(indexes.length);\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n    get_Inventories() {\r\n        if (this.itemStore) {\r\n            return [this.get_CleanItems()];\r\n        } else {\r\n            return this.get_Character().inventories;\r\n        }\r\n    }\r\n\r\n    get_InitialTalismans(index: number) {\r\n        let item = this.item;\r\n        //Start with one empty talisman to select nothing.\r\n        let allTalismans: { talisman: Talisman, inv: ItemCollection }[] = [{ talisman: new Talisman(), inv: null }];\r\n        allTalismans[0].talisman.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (item.talismans[index]) {\r\n            allTalismans.push(this.newTalisman[index] as { talisman: Talisman, inv: ItemCollection });\r\n        }\r\n        return allTalismans;\r\n    }\r\n\r\n    get_Talismans(inv: ItemCollection) {\r\n        return inv.talismans.filter(talisman => talisman.targets.length && talisman.amount)\r\n            .map(talisman => ({ talisman: talisman, inv: (this.itemStore ? null : inv) }))\r\n            .filter((talisman: { talisman: Talisman, inv: ItemCollection }) =>\r\n                talisman.talisman.targets.length &&\r\n                (\r\n                    talisman.talisman.targets.includes(this.item.type) ||\r\n                    (\r\n                        //One Exception: The jade bauble is affixed to a melee weapon, which is not a weapon type.\r\n                        (this.item as Weapon).melee && talisman.talisman.targets.includes(\"melee weapons\")\r\n                    )\r\n                )\r\n            ).sort(function (a, b) {\r\n                if (a.talisman.name > b.talisman.name) {\r\n                    return 1;\r\n                }\r\n                if (a.talisman.name < b.talisman.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort((a, b) => a.talisman.level - b.talisman.level);;\r\n    }\r\n\r\n    add_Talisman(index: number) {\r\n        let item: Equipment = this.item;\r\n        let talisman: Talisman = this.newTalisman[index].talisman;\r\n        let inv: ItemCollection = this.newTalisman[index].inv;\r\n        if (!item.talismans[index] || talisman !== item.talismans[index]) {\r\n            //If there is a Talisman in this slot, return the old one to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (item.talismans[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_Talisman(index);\r\n                }\r\n                item.talismans.splice(index, 1);\r\n            }\r\n            //Then add the new Talisman to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (talisman.name != \"\") {\r\n                //Add a copy of Talisman to the item\r\n                let newLength = item.talismans.push(Object.assign(new Talisman, JSON.parse(JSON.stringify(talisman))));\r\n                item.talismans[newLength - 1] = this.characterService.reassign(item.talismans[newLength - 1]);\r\n                let newTalisman = item.talismans[newLength - 1];\r\n                newTalisman.amount = 1;\r\n                //If we are not in the item store, remove the inserted Talisman from the inventory, either by decreasing the amount or by dropping the item.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, talisman, false, false, false, 1);\r\n                }\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        if (this.item.constructor == Weapon) {\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        if (this.item.constructor == Armor || this.item.constructor == Shield) {\r\n            this.characterService.set_ToChange(\"Character\", \"defense\");\r\n        }\r\n        this.set_TalismanNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_Talisman(index: number) {\r\n        let item: Equipment = this.item;\r\n        let oldTalisman: Talisman = item.talismans[index];\r\n        //Add the extracted stone to the inventory, either on an existing stack or as a new item.\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldTalisman, false, false, false, 1);\r\n    }\r\n\r\n    get_Title(talisman: Talisman) {\r\n        if (this.itemStore && talisman.price) {\r\n            return \"Price \" + this.get_Price(talisman);\r\n        }\r\n    }\r\n\r\n    get_Price(talisman: Talisman) {\r\n        if (talisman.price) {\r\n            if (talisman.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = talisman.price;\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100)+\"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) {priceString += \" \";}\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10)+\"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) {priceString += \" \";}\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price+\"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    set_TalismanNames() {\r\n        this.newTalisman = [];\r\n        if (this.item.talismans) {\r\n            for (let index = 0; index < this.item.talismans.length; index++) {\r\n                if (this.item.talismans[index]) {\r\n                    this.newTalisman.push({ talisman: this.item.talismans[index], inv: null })\r\n                } else {\r\n                    this.newTalisman.push({ talisman: new Talisman(), inv: null })\r\n                }\r\n            }\r\n        } else {\r\n            this.newTalisman = [{ talisman: new Talisman(), inv: null }];\r\n        }\r\n        this.newTalisman.filter(talisman => talisman.talisman.name == \"New Item\").forEach(talisman => {\r\n            talisman.talisman.name = \"\";\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_TalismanNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Talismans-->\r\n<div class=\"list-item\">\r\n    <div class=\"newrow\" *ngFor=\"let index of get_Slots(); trackBy:trackByIndex;\">\r\n        <strong *ngIf=\"index == 0\">Affix Talisman</strong>\r\n        <span *ngIf=\"index != 0\">&nbsp;</span>\r\n        <select [(ngModel)]=\"newTalisman[index]\" (change)=\"add_Talisman(index)\" [disabled]=\"!item.talismans[index-1] && index > 0\">\r\n            <ng-container *ngFor=\"let talisman of get_InitialTalismans(index); let initialTalismanIndex = index; trackBy:trackByIndex;\">\r\n                <option [ngValue]=\"talisman\" *ngIf=\"initialTalismanIndex == 0\">\r\n                    \r\n                </option>\r\n                <optgroup *ngIf=\"initialTalismanIndex == 1\" label=\"Current Talisman\">\r\n                    <option [ngValue]=\"talisman\">\r\n                        {{talisman.talisman.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </ng-container>\r\n            <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n                <optgroup label=\"{{itemStore ? 'Available talismans' : inv.get_Name(characterService)}}\" *ngIf=\"get_Talismans(inv).length\">\r\n                    <option *ngFor=\"let talisman of get_Talismans(inv); trackBy:trackByIndex;\" [ngValue]=\"talisman\"\r\n                    title=\"{{get_Title(talisman.talisman)}}\">\r\n                        {{talisman.talisman.amount > 1 ? talisman.talisman.amount+\" \" : \"\"}}{{talisman.talisman.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </ng-container>\r\n        </select>\r\n    </div>\r\n</div>","import { Creature } from './Creature';\r\nimport { Skill } from './Skill';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { AbilityBoost } from './AbilityBoost';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\n\r\nexport class AnimalCompanion extends Creature {\r\n    public readonly _className: string = this.constructor.name;\r\n    public class: AnimalCompanionClass = new AnimalCompanionClass();\r\n    public customSkills: Skill[] = [\r\n        Object.assign(new Skill(), { name:\"Light Barding\", type:\"Armor Proficiency\" }),\r\n        Object.assign(new Skill(), { name:\"Heavy Barding\", type:\"Armor Proficiency\" })\r\n    ];\r\n    public species: string = \"\";\r\n    public readonly type = \"Companion\";\r\n    get_BaseSize() {\r\n        let size: number = (this.class.ancestry.size ? this.class.ancestry.size : 0);\r\n        this.class.levels.filter(level => level.number <= this.level).forEach(level => {\r\n            if (level.sizeChange) {\r\n                size = Math.min(size + level.sizeChange, 1)\r\n            }\r\n        })\r\n        return size;\r\n    }\r\n    get_Size(effectsService: EffectsService) {\r\n        let size: number = this.get_BaseSize()\r\n        \r\n        let setSizeEffects = effectsService.get_AbsolutesOnThis(this, \"Size\");\r\n        if (setSizeEffects.length) {\r\n            size = Math.max(...setSizeEffects.map(effect => parseInt(effect.setValue)));\r\n        }\r\n                \r\n        let sizeEffects = effectsService.get_RelativesOnThis(this, \"Size\");\r\n        sizeEffects.forEach(effect => {\r\n            size += parseInt(effect.value)\r\n        })\r\n\r\n        switch (size) {\r\n            case -2:\r\n                return \"Tiny\";\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\"\r\n            case 1:\r\n                return \"Large\"\r\n            case 2:\r\n                return \"Huge\"\r\n            case 3:\r\n                return \"Gargantuan\"\r\n        }\r\n    }\r\n    set_Level(characterService: CharacterService) {\r\n        let character = characterService.get_Character();\r\n        //Get all taken feats at this character level that grow the animal companion, then set the companion level to the highest option (or 1).\r\n        //Level 3 is a placeholder, Levels 4 and 5 are Nimble and Savage - when you take a feat with growAnimalCompanion > 3,\r\n        //  level 3 gets replaced with that level\r\n        //  That means that level 3 is the highest we need to go, as Nimble or Savage will be placed there.\r\n        this.level = Math.min(3, Math.max(1, ...characterService.get_FeatsAndFeatures()\r\n            .filter(feat => feat.gainAnimalCompanion && feat.have(character, characterService, character.level))\r\n            .map(feat => feat.gainAnimalCompanion)));\r\n        characterService.set_ToChange(\"Companion\", \"all\");\r\n    }\r\n    get_AbilityBoosts(minLevelNumber: number, maxLevelNumber: number, abilityName: string = \"\", type: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined ) {\r\n        if (this.class) {\r\n            let boosts = [];\r\n            //When animal companion levels are checked for ability boosts, we don't care about the character level - so we use the companion's level here.\r\n            let levels: (AnimalCompanionLevel|AnimalCompanionAncestry)[] = this.class.levels.filter(level => level.number >= 0 && level.number <= this.level );\r\n            levels.push(this.class.ancestry);\r\n            levels.forEach((level: AnimalCompanionLevel|AnimalCompanionAncestry) => {\r\n                level.abilityChoices.forEach(choice => {\r\n                    choice.boosts.filter(boost => \r\n                        (boost.name == abilityName || abilityName == \"\") &&\r\n                        (boost.type == type || type == \"\") &&\r\n                        (boost.source == source || source == \"\") &&\r\n                        (boost.sourceId == sourceId || sourceId == \"\") &&\r\n                        (boost.locked == locked || locked == undefined)\r\n                    ).forEach(boost => {\r\n                        boosts.push(boost);\r\n                    });\r\n                });\r\n            });\r\n            //When specializations are checked for ability boosts, we want to be certain we don't get a specialization that is taken on a higher character level\r\n            let specializations: (AnimalCompanionSpecialization)[] = this.class.specializations.filter(spec => spec.level >= minLevelNumber && spec.level <= maxLevelNumber);\r\n            //Only the first specialization may add the \"First specialization\" boosts.\r\n            specializations.forEach((spec: AnimalCompanionSpecialization, index) => {\r\n                spec.abilityChoices.forEach(choice => {\r\n                    if ((choice.source == \"First specialization\") ? index == 0 : true) {\r\n                        choice.boosts.filter(boost => \r\n                            (boost.name == abilityName || abilityName == \"\") &&\r\n                            (boost.type == type || type == \"\") &&\r\n                            (boost.source == source || source == \"\") &&\r\n                            (boost.sourceId == sourceId || sourceId == \"\") &&\r\n                            (boost.locked == locked || locked == undefined)\r\n                        ).forEach(boost => {\r\n                            boosts.push(boost);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            return boosts as AbilityBoost[];\r\n        }\r\n    }\r\n    get_SkillIncreases(characterService: CharacterService, minLevelNumber: number, maxLevelNumber: number, skillName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        if (this.class) {\r\n            //When animal companion species and levels are checked for skill increases, we don't care about the character level - so we replace minLevelNumber and maxLevelNumber here.\r\n            let increases = [];\r\n            this.class.levels\r\n                .filter(level => level.number >= 1 && level.number <= this.level )\r\n                .forEach(level => {\r\n                level.skillChoices.forEach(choice => {\r\n                    choice.increases.filter(increase => \r\n                        (increase.name == skillName || skillName == \"\") &&\r\n                        (increase.source == source || source == \"\") &&\r\n                        (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                        (increase.locked == locked || locked == undefined)\r\n                        ).forEach(increase => {\r\n                        increases.push(increase);\r\n                    })\r\n                })\r\n            })\r\n            if (this.class.ancestry.name) {\r\n                this.class.ancestry.skillChoices.forEach(choice => {\r\n                    choice.increases.filter(increase => \r\n                        (increase.name == skillName || skillName == \"\") &&\r\n                        (increase.source == source || source == \"\") &&\r\n                        (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                        (increase.locked == locked || locked == undefined)\r\n                        ).forEach(increase => {\r\n                        increases.push(increase);\r\n                    })\r\n                })\r\n            }\r\n            //When specializations are checked for skill increases, we want to be certain we don't get a specialization that is taken on a higher character level (maxLevelNumber)\r\n            let specializations: (AnimalCompanionSpecialization)[] = this.class.specializations.filter(spec => spec.level >= minLevelNumber && spec.level <= maxLevelNumber);\r\n            //Only the first specialization may add the \"First specialization\" increases.\r\n            specializations.forEach((spec: AnimalCompanionSpecialization, index) => {\r\n                spec.skillChoices.forEach(choice => {\r\n                    if ((choice.source == \"First specialization\") ? index == 0 : true) {\r\n                        choice.increases.filter(increase => \r\n                            (increase.name == skillName || skillName == \"\") &&\r\n                            (increase.source == source || source == \"\") &&\r\n                            (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                            (increase.locked == locked || locked == undefined)\r\n                            ).forEach(increase => {\r\n                            increases.push(increase);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            return increases;\r\n        }\r\n    }\r\n}\r\n","import { ActivityGain } from './ActivityGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nexport class ConditionGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public addValue: number = 0;\r\n    public id = uuidv1();\r\n    public apply: boolean = true;\r\n    public decreasingValue: boolean = false;\r\n    //duration in turns * 10, -1 for permanent or 1 for instant\r\n    public duration: number = -1;\r\n    public maxDuration: number = -1;\r\n    //nextStage in turns * 10\r\n    public nextStage: number = 0;\r\n    public name: string = \"\";\r\n    public showChoices: boolean = false;\r\n    public showNotes: boolean = false;\r\n    public showDuration: boolean = false;\r\n    public showValue: boolean = false;\r\n    public showRadius: boolean = false;\r\n    public notes: string = \"\";\r\n    public source: string = \"\";\r\n    public parentID: string = \"\";\r\n    public value: number = 0;\r\n    //Remove this condition if any of the endsWithConditions is removed.\r\n    public endsWithConditions: string[] = [];\r\n    //Only activate this condition if this string evaluates to a numeral nonzero value. This is tested at the add_condition stage, so it can be combined with conditionChoiceFilter.\r\n    public activationPrerequisite: string = \"\";\r\n    //For conditions within conditions, activate this condition only if this choice was made on the original condition.\r\n    public conditionChoiceFilter: string = \"\";\r\n    //Spells choose from multiple conditions those that match their level.\r\n    //For example, if a spell has a ConditionGain with heightenedFilter 1 and one with heightenedFilter 2, and the spell is cast at 2nd level, only the heightenedFilter 2 ConditionGain is used.\r\n    public heightenedFilter: number = 0;\r\n    //When casting a spell, the spell level is inserted here so it can be used for calculations.\r\n    public heightened: number = 0;\r\n    //When casting a spell, a different radius for a condition may be wanted.\r\n    public radius: number = 0;\r\n    //When casting a spell, some conditions want to calculate the spellcasting modifier, so we copy the spellcasting ability.\r\n    public spellCastingAbility: string = \"\";\r\n    //Some conditions change depending on how the spell was cast (particularly if they were cast as an Innate spell), so we copy the spell's source.\r\n    public spellSource: string = \"\";\r\n    //Save the id of the spellGain so that the spellgain can be deactivated when the condition ends.\r\n    public spellGainID: string = \"\";\r\n    //A condition's gainActivities gets copied here to track.\r\n    public gainActivities: ActivityGain[] = [];\r\n    //A condition's gainItems gets copied here to track.\r\n    public gainItems: ItemGain[] = [];\r\n    //If the gain is persistent, it does not get removed when its source is deactivated.\r\n    public persistent: boolean = false;\r\n    //If the gain is ignorePersistent, it gets removed when its source is deactivated, even when the condition is usually persistent.\r\n    public ignorePersistent: boolean = false;\r\n    //If the gain is ignorePersistentAtChoiceChange, it gets removed when the parent condition changes choices, even when it is persistent.\r\n    public ignorePersistentAtChoiceChange: boolean = false;\r\n    //For conditions gained by conditions, if lockedByParent is set, this condition cannot be removed until the condition with the source ID is gone.\r\n    public lockedByParent: boolean = false;\r\n    //If valueLockedByParent is set, the condition value can't be changed while the parent condition exists.\r\n    public valueLockedByParent: boolean = false;\r\n    //For spells, designate if the condition is meant for the caster or \"\" for the normal target creature.\r\n    public targetFilter: string = \"\";\r\n    //Some conditions have a choice that you can make. That is stored in this value.\r\n    public choice: string = \"\";\r\n    //If there is a choiceBySubType value, and you have a feat with superType == choiceBySubType, the choice will be set to the subtype of that feat. This overrides any manual choice.\r\n    public choiceBySubType: string = \"\";\r\n    //If choiceLocked is true, the choice can't be changed manually.\r\n    public choiceLocked: boolean = false;\r\n    //If hideChoices is true, the choice isn't visible on activities or spells.\r\n    public hideChoices: boolean = false;\r\n    //If acknowledgedInputRequired is true, the inputRequired message is not shown.\r\n    public acknowledgedInputRequired: boolean = false;\r\n}","import { Weapon } from './Weapon';\r\n\r\nexport class AlchemicalBomb extends Weapon {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical bombs should be type \"alchemicalbombs\" to be found in the database\r\n    public type = \"alchemicalbombs\";\r\n    //Weapons are usually moddable like a weapon. Weapons that cannot be modded should be set to \"-\"\r\n    readonly moddable = \"-\" as \"\"|\"-\"|\"weapon\"|\"armor\"|\"shield\";\r\n    //What kind of weapon is this based on? Needed for weapon proficiencies for specific magical items.\r\n    public readonly weaponBase: string = \"Alchemical Bomb\";\r\n    public readonly equippable = false;\r\n    get_Name() {\r\n        return this.displayName || this.name;\r\n    }\r\n    \r\n}","import { Equipment } from './Equipment';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ItemsService } from './items.service';\r\n\r\nexport class WornItem extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    readonly allowEquippable = false;\r\n    //Worn Items cannot be equipped or unequipped, but can be invested\r\n    readonly equippable = false;\r\n    //Worn Items should be type \"wornitems\" to be found in the database\r\n    readonly type = \"wornitems\";\r\n    //List any Aeon Stones equipped in this item (only for Wayfinders)\r\n    public aeonStones: WornItem[] = [];\r\n    //Does this item use the Doubling Rings functionality, and on which level?\r\n    public isDoublingRings: \"\"|\"Doubling Rings\"|\"Doubling Rings (Greater)\" = \"\";\r\n    //Does this item count for the \"Handwraps of Mighty Blows\" functionality? If so, be sure to make it moddable like a weapon.\r\n    public isHandwrapsOfMightyBlows: boolean = false;\r\n    //A Champion with the Divine Ally: Blade Ally Feat can designate one weapon or handwraps as his blade ally.\r\n    public bladeAlly: boolean = false;\r\n    //Does this item use the Wayfinder functionality to store Aeon Stones, and how many?\r\n    public isWayfinder: number = 0;\r\n    //Is this an Aeon Stone and can be stored in a Wayfinder?\r\n    public isAeonStone: boolean = false;\r\n    //How is this item worn? Example: \"worn belt\"\r\n    public usage: string = \"\";\r\n    //A Dwarf with the Battleforger feat can sharpen a weapon to grant the effect of a +1 potency rune. This applies to Handwraps of Mighty Blows only.\r\n    public battleforged: boolean = false;\r\n    get_Price(itemsService: ItemsService) {\r\n        let price = this.price;\r\n        if (this.moddable == \"weapon\") {\r\n            if (this.potencyRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.filter(rune => rune.potency == this.potencyRune)[0].price;\r\n            }\r\n            if (this.strikingRune) {\r\n                price += itemsService.get_CleanItems().weaponrunes.filter(rune => rune.striking == this.strikingRune)[0].price;\r\n            }\r\n            this.propertyRunes.forEach(rune => {\r\n                price += itemsService.get_CleanItems().weaponrunes.find(weaponRune => weaponRune.name.toLowerCase() == rune.name.toLowerCase()).price;\r\n            })\r\n        }\r\n        this.aeonStones.forEach(aeonStone => {\r\n            price += itemsService.get_CleanItems().wornitems.find(wornItem => wornItem.name.toLowerCase() == aeonStone.name.toLowerCase()).price;\r\n        })\r\n        return price;\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { DefenseService } from '../defense.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { Armor } from '../Armor';\r\nimport { EffectsService } from '../effects.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { AbilitiesService } from '../abilities.service';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Talisman } from '../Talisman';\r\nimport { Shield } from '../Shield';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-defense',\r\n    templateUrl: './defense.component.html',\r\n    styleUrls: ['./defense.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefenseComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    public shieldDamage: number = 0;\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private defenseService: DefenseService,\r\n        private traitsService: TraitsService,\r\n        private conditionsService: ConditionsService,\r\n        public effectsService: EffectsService,\r\n        public abilitiesService: AbilitiesService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.defenseMinimized = !this.characterService.get_Character().settings.defenseMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.defenseMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    get_ArmorSpecialization(armor: Armor) {\r\n        return armor.get_ArmorSpecialization(this.get_Creature(), this.characterService);\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_AC() {\r\n        return this.defenseService.get_AC();\r\n    }\r\n\r\n    get_CalculatedAC() {\r\n        return this.get_AC().calculate(this.get_Creature(), this.characterService, this.defenseService, this.effectsService);\r\n    }\r\n\r\n    get_Cover() {\r\n        let creature = this.get_Creature();\r\n        let conditions: string[] = this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n            .filter(gain => [\"Lesser Cover\", \"Standard Cover\", \"Greater Cover\"].includes(gain.name) && gain.source == \"Defense\")\r\n            .map(gain => gain.name);\r\n        if (conditions.includes(\"Greater Cover\")) {\r\n            return 4;\r\n        }\r\n        if (conditions.includes(\"Standard Cover\")) {\r\n            return 2;\r\n        }\r\n        if (conditions.includes(\"Lesser Cover\")) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    set_Cover(cover: number, shield: Shield = null) {\r\n        this.get_AC().set_Cover(this.get_Creature(), cover, shield, this.characterService, this.conditionsService);\r\n    }\r\n\r\n    raise_Shield(raised: boolean = false, shield: Shield) {\r\n        if (shield) {\r\n            shield.raised = raised;\r\n            if (!raised && shield.takingCover) {\r\n                this.set_Cover(0, shield);\r\n            }\r\n            this.set_DefenseChanged();\r\n        }\r\n    }\r\n\r\n    get_FlatFooted() {\r\n        let creature = this.get_Creature();\r\n        return this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n            .find(gain => gain.name == \"Flat-Footed\" && gain.source == \"Defense\");\r\n    }\r\n\r\n    set_FlatFooted(active: boolean) {\r\n        let creature = this.get_Creature();\r\n        let flatFooted = this.get_FlatFooted();\r\n        if (active) {\r\n            if (!flatFooted) {\r\n                let newCondition: ConditionGain = Object.assign(new ConditionGain(), { name: \"Flat-Footed\", source: \"Defense\", duration: -1, locked: true })\r\n                this.characterService.add_Condition(creature, newCondition, false);\r\n            }\r\n        } else {\r\n            if (flatFooted) {\r\n                this.characterService.remove_Condition(creature, flatFooted, false);\r\n            }\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_EquippedArmor() {\r\n        return this.defenseService.get_EquippedArmor(this.get_Creature() as Character | AnimalCompanion);\r\n    }\r\n\r\n    get_EquippedShield() {\r\n        return this.defenseService.get_EquippedShield(this.get_Creature() as Character | AnimalCompanion);\r\n    }\r\n\r\n    on_ShieldHPChange(shield: Shield, amount: number) {\r\n        shield.damage += amount;\r\n        if (shield.get_HitPoints() < shield.get_BrokenThreshold()) {\r\n            shield.broken = true;\r\n        } else {\r\n            shield.broken = false;\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        this.characterService.set_ToChange(this.creature, \"defense\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        return this.characterService.get_Skills(this.get_Creature(), name, type)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_TalismanTitle(talisman: Talisman) {\r\n        return (talisman.trigger ? \"Trigger: \" + talisman.trigger + \"\\n\\n\" : \"\") + talisman.desc;\r\n    }\r\n\r\n    on_TalismanUse(item: Armor | Shield, talisman: Talisman, index: number) {\r\n        this.characterService.set_ToChange(this.creature, \"defense\");\r\n        this.characterService.on_ConsumableUse(this.get_Creature() as Character | AnimalCompanion, talisman);\r\n        item.talismans.splice(index, 1)\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_DefenseChanged() {\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"defense\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"defense\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-defense-height\" class=\"attributeBox\">\r\n    <ng-container *ngFor=\"let calculatedAC of [get_CalculatedAC()]; trackBy:trackByIndex;\">\r\n        <header class=\"sectionHeader box-header\">Defense: Armor Class\r\n            <span [ngbPopover]=\"calculatedAC.value.explain\"\r\n                [ngClass]=\"{'penalty':calculatedAC.penalties, 'bonus':calculatedAC.bonuses, 'absolute':calculatedAC.absolutes.length}\">\r\n                {{calculatedAC.value.result}}</span>\r\n        </header>\r\n        <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n        <ng-container *ngIf=\"!still_loading()\">\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'AC'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true [showEffects]=false\r\n                [specialEffects]=\"calculatedAC.relatives.concat(calculatedAC.absolutes)\">\r\n            </app-tags>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Defense'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"list-item\">\r\n                <button class=\"newrow sublist-toggle center-aligned\" (click)=\"toggle_List('QuickStatus')\">\r\n                    Quick Status\r\n                </button>\r\n                <div class=\"list-item sublist\" *ngIf=\"get_ShowList()=='QuickStatus'\">\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"!get_FlatFooted()\" (click)=\"set_FlatFooted(true)\">Enable\r\n                            Flat-Footed</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_FlatFooted()\" (click)=\"set_FlatFooted(false)\">Disable\r\n                            Flat-Footed</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_Cover() != 1\" (click)=\"set_Cover(1)\">Lesser\r\n                            Cover</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_Cover() == 1\" (click)=\"set_Cover(0)\">End\r\n                            Cover</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_Cover() != 2\" (click)=\"set_Cover(2)\">Standard\r\n                            Cover</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_Cover() == 2\" (click)=\"set_Cover(0)\">End\r\n                            Cover</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_Cover() != 4\" (click)=\"set_Cover(4)\">Greater\r\n                            Cover</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_Cover() == 4\" (click)=\"set_Cover(0)\">End\r\n                            Cover</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf=\"creature != 'Familiar'\">\r\n                <header class=\"subsectionHeader fullsize-only\">Armor</header>\r\n                <div class=\"fullsize-only list-item\" *ngFor=\"let armor of get_EquippedArmor(); trackBy:trackByIndex;\">\r\n                    <div>\r\n                        {{armor.get_Name()}}\r\n                    </div>\r\n                    <div class=\"fullsize-only newrow left-aligned\" *ngIf=\"armor.traits.length\">\r\n                        <cite class=\"trait\" *ngFor=\"let trait of armor.traits; trackBy:trackByIndex;\"\r\n                            [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n                    </div>\r\n                    <app-tags [creature]=\"creature\" [objectName]=\"'Armor'\" [showTraits]=true [showFeats]=true\r\n                        [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                    <app-tags [creature]=\"creature\" [objectName]=\"armor.name\" [showItems]=true></app-tags>\r\n                    <div class=\"fullsize-only lower newrow left-aligned\"\r\n                        *ngFor=\"let talisman of armor.talismans; let index = index; trackBy:trackByIndex;\">\r\n                        <button [ngbTooltip]=\"get_TalismanTitle(talisman)\"\r\n                            (click)=\"on_TalismanUse(armor, talisman, index)\">\r\n                            <span>Activate {{talisman.name}}<app-actionIcons [actionString]=\"talisman.actions\">\r\n                                </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"fullsize-only lower newrow left-aligned\"\r\n                        *ngFor=\"let spec of get_ArmorSpecialization(armor); trackBy:trackByIndex;\">\r\n                        <strong>Armor specialization effect&nbsp;</strong>{{spec.desc}}\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngFor=\"let shield of get_EquippedShield(); trackBy:trackByIndex;\">\r\n                    <header class=\"subsectionHeader fullsize-only\">Shield</header>\r\n                    <div class=\"newrow list-item\">\r\n                        <div>{{shield.get_Name()}} AC <div class=\"value\">{{shield.get_ACBonus()}}</div>\r\n                                Hardness: <div class=\"value\">{{shield.get_Hardness()}}</div>\r\n                            <div class=\"fullsize-only newrow left-aligned\" *ngIf=\"shield.traits.length\">\r\n                                <cite class=\"trait\" *ngFor=\"let trait of shield.traits; trackBy:trackByIndex;\"\r\n                                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n                            </div>\r\n                            <app-tags [creature]=\"creature\" [objectName]=\"'Shield'\" [showTraits]=true [showFeats]=true\r\n                                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true>\r\n                            </app-tags>\r\n                            <div class=\"newrow\">\r\n                                <button class=\"center-aligned\" *ngIf=\"!shield.raised\"\r\n                                    (click)=\"raise_Shield(true, shield)\">Raise shield</button>\r\n                                <button class=\"center-aligned fancy-button\" *ngIf=\"shield.raised\"\r\n                                    (click)=\"raise_Shield(false, shield)\">Lower\r\n                                    shield</button>\r\n                                <button class=\"center-aligned\"\r\n                                    *ngIf=\"shield.raised && shield.coverbonus && !shield.takingCover\"\r\n                                    (click)=\"set_Cover(4, shield)\">Take cover</button>\r\n                                <button class=\"center-aligned fancy-button\"\r\n                                    *ngIf=\"shield.raised && shield.coverbonus && shield.takingCover\"\r\n                                    (click)=\"set_Cover(0, shield)\">End cover</button>\r\n                            </div>\r\n                            <div class=\"list-item newrow\">\r\n                                <strong>HP</strong> <div class=\"value\">{{shield.get_HitPoints()}}</div>\r\n                                <strong>Max HP</strong> <div class=\"value\">{{shield.get_MaxHP()}}</div>\r\n                                <strong>BT</strong> <div class=\"value\">{{shield.get_BrokenThreshold()}}</div>\r\n                            </div>\r\n                            <div class=\"list-item newrow\">\r\n                                <span>\r\n                                    <button [disabled]=\"shieldDamage == 0\"\r\n                                        (click)=\"on_ShieldHPChange(shield, shieldDamage)\">Damage</button>\r\n                                </span>\r\n                                <span>\r\n                                    <input class=\"number3\" type=\"number\" [(ngModel)]=\"shieldDamage\" maxLength=\"3\">\r\n                                </span>\r\n                                <span>\r\n                                    <button [disabled]=\"shieldDamage == 0\"\r\n                                        (click)=\"on_ShieldHPChange(shield, -shieldDamage)\">Repair</button>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"fullsize-only lower newrow left-aligned\"\r\n                                *ngFor=\"let talisman of shield.talismans; let index = index; trackBy:trackByIndex;\">\r\n                                <button [ngbTooltip]=\"get_TalismanTitle(talisman)\"\r\n                                    (click)=\"on_TalismanUse(shield, talisman, index)\">\r\n                                    <span>Activate {{talisman.name}}<app-actionIcons [actionString]=\"talisman.actions\">\r\n                                        </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <header class=\"sectionHeader fullsize-only box-header\" *ngIf=\"!still_loading()\">Saving Throws</header>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Saving Throws'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                <ng-container *ngFor=\"let skill of get_Skills('', 'Save'); trackBy:trackByIndex;\">\r\n                    <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!still_loading()\">\r\n                    <header class=\"sectionHeader fullsize-only box-header\">Armor Proficiencies</header>\r\n                    <ng-container *ngFor=\"let skill of get_Skills('', 'Armor Proficiency'); trackBy:trackByIndex;\">\r\n                        <app-skill class=\"fullsize-only\" [creature]=\"creature\" [skill]=skill [showValue]=false>\r\n                        </app-skill>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"creature == 'Familiar'\">\r\n                <header class=\"sectionHeader fullsize-only box-header\" *ngIf=\"!still_loading()\">Saving Throws</header>\r\n                <ng-container *ngFor=\"let skill of get_Skills('', 'Save'); trackBy:trackByIndex;\">\r\n                    <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n                </ng-container>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Saving Throws'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Consumable } from 'src/app/Consumable';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { ItemActivity } from 'src/app/ItemActivity';\r\nimport { ActivityGain } from 'src/app/ActivityGain';\r\nimport { ItemGain } from 'src/app/ItemGain';\r\nimport { EffectGain } from 'src/app/EffectGain';\r\nimport { ConditionGain } from 'src/app/ConditionGain';\r\nimport { Item } from 'src/app/Item';\r\nimport { ItemProperty } from 'src/app/ItemProperty';\r\nimport { SpellCast } from 'src/app/SpellCast';\r\nimport { EffectsService } from 'src/app/effects.service';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { Activity } from 'src/app/Activity';\r\nimport { Condition } from 'src/app/Condition';\r\nimport { Skill } from 'src/app/Skill';\r\nimport { Ability } from 'src/app/Ability';\r\nimport { SpellChoice } from 'src/app/SpellChoice';\r\nimport { InventoryGain } from 'src/app/InventoryGain';\r\nimport { Hint } from 'src/app/Hint';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-newItemProperty',\r\n    templateUrl: './newItemProperty.component.html',\r\n    styleUrls: ['./newItemProperty.component.css']\r\n})\r\nexport class NewItemPropertyComponent implements OnInit {\r\n\r\n    @Input()\r\n    propertyKey: string;\r\n    @Input()\r\n    parents: string[] = [];\r\n    @Input()\r\n    newItem: Item;\r\n    @Input()\r\n    propertyData: ItemProperty;\r\n    @Input()\r\n    noTitle: boolean = false;\r\n\r\n    public validationError: string = \"\";\r\n    public validationResult: string = \"\";\r\n\r\n    constructor(\r\n        private itemsService: ItemsService,\r\n        private characterService: CharacterService,\r\n        private effectsService: EffectsService,\r\n        private traitsService: TraitsService,\r\n        private activitiesService: ActivitiesService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    get_Parent() {\r\n        let item = this.newItem;\r\n        this.parents.forEach(parent => {\r\n            item = item[parent];\r\n        })\r\n        return item;\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode != 45 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Items() {\r\n        return this.itemsService.get_Items();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Inventories() {\r\n        return this.get_Character().inventories;\r\n    }\r\n\r\n    validate() {\r\n        let value = this.get_Parent()[this.propertyKey]\r\n        if (this.propertyKey == \"name\" && !this.propertyData.parent) {\r\n            if (!value) {\r\n                this.get_Parent()[this.propertyKey] = \"New Item\"\r\n            }\r\n            let existingItems = this.get_Inventories()[0][this.newItem.type].filter((existing: Item) => existing.name == value);\r\n            let existingCleanItems = this.itemsService.get_CleanItems()[this.newItem.type].filter((existing: Item) => existing.name == value);\r\n            if (existingItems.length && existingItems.some((existing: Item) => existing.can_Stack())) {\r\n                this.validationError = \"If you use this name, this item will be added to the \" + existingItems[0].name + \" stack in your inventory. All changes you make here will be lost.\";\r\n            } else if (existingItems.length) {\r\n                this.validationError = \"You already own an item with this name and type.\";\r\n            } else if (existingCleanItems.length) {\r\n                this.validationError = \"An item with this name and type already exists.\";\r\n            }\r\n        }\r\n        if (this.propertyKey == \"value\" && this.propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && effect.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError = \"\";\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError = \"This may result in a decimal value, which will be turned into a whole number.\"\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                        this.validationResult = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError = \"This may result in an invalid value or 0. Invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                    this.validationResult = \"\";\r\n                }\r\n            }\r\n        } else if (this.propertyKey == \"setValue\" && this.propertyData.parent == \"effects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && (parseInt(effect.value) || parseFloat(effect.value)) || parseInt(effect.value) == 0) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError = \"\";\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                        this.validationResult = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError = \"This may result in an invalid value. Absolute effects with an invalid value will not be applied.\"\r\n                    this.validationResult = \"\";\r\n                }\r\n            }\r\n        } else if (this.propertyKey == \"value\" && this.propertyData.parent == \"onceEffects\") {\r\n            if (value && value != \"0\") {\r\n                let effectGain = new EffectGain;\r\n                effectGain.value = value;\r\n                let effects = this.effectsService.get_SimpleEffects(this.get_Character(), this.characterService, { effects: [effectGain] });\r\n                if (effects.length) {\r\n                    let effect = effects[0];\r\n                    if (effect && effect.value && effect.value != \"0\" && (parseInt(effect.value) || parseFloat(effect.value))) {\r\n                        if (parseFloat(effect.value) == parseInt(effect.value)) {\r\n                            this.validationError = \"\";\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        } else {\r\n                            this.validationError = \"This may result in a decimal value and be turned into a whole number.\"\r\n                            this.validationResult = parseInt(effect.value).toString();\r\n                        }\r\n                    } else {\r\n                        this.validationError = \"This may result in an invalid value or 0. This is allowed for languages; for all other targets, invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                        this.validationResult = parseInt(effect.value).toString();\r\n                    }\r\n                } else {\r\n                    this.validationError = \"This may result in an invalid value or 0. This is allowed for languages; for all other targets, invalid values will default to 0, and untyped effects without a value will not be displayed.\"\r\n                    this.validationResult = \"\";\r\n                }\r\n            }\r\n        } else if (this.propertyKey == \"moddable\") {\r\n            if (this.newItem[\"potencyRune\"]) {\r\n                this.newItem[\"potencyRune\"] = 0;\r\n            }\r\n            if (this.newItem[\"strikingRune\"]) {\r\n                this.newItem[\"strikingRune\"] = 0;\r\n            }\r\n            if (this.newItem[\"propertyRunes\"]) {\r\n                this.newItem[\"propertyRunes\"].length = 0;\r\n            }\r\n        } else if (this.propertyKey == \"bulk\" || this.propertyKey == \"carryingBulk\") {\r\n            if (parseInt(value) || parseInt(value) == 0 || value == \"L\" || value == \"\") {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = \"\"\r\n            }\r\n        } else if (this.propertyData.validation == \"1plus\") {\r\n            if (parseInt(value) >= 1) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = 1\r\n            }\r\n        } else if (this.propertyData.validation == \"0plus\") {\r\n            if (parseInt(value) >= 0) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = 0\r\n            }\r\n        } else if (this.propertyData.validation == \"=1plus\") {\r\n            if (parseInt(value) >= -1) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = -1\r\n            }\r\n        } else if (this.propertyData.validation == \"0minus\") {\r\n            if (parseInt(value) <= 0) {\r\n\r\n            } else {\r\n                this.get_Parent()[this.propertyKey] = 0\r\n            }\r\n        }\r\n    }\r\n\r\n    get_IsObject(property) {\r\n        return (typeof property == 'object');\r\n    }\r\n\r\n    add_NewItemObject() {\r\n        let index = null;\r\n        switch (this.propertyKey) {\r\n            case \"activities\":\r\n                index = this.get_Parent()[this.propertyKey].push(new ItemActivity())\r\n                this.get_Parent()[this.propertyKey][index - 1].source = this.get_Parent()[\"id\"];\r\n                break;\r\n            case \"gainActivities\":\r\n                index = this.get_Parent()[this.propertyKey].push(new ActivityGain())\r\n                this.get_Parent()[this.propertyKey][index - 1].source = this.get_Parent()[\"id\"];\r\n                break;\r\n            case \"gainItems\":\r\n                this.get_Parent()[this.propertyKey].push(new ItemGain())\r\n                break;\r\n            case \"castSpells\":\r\n                this.get_Parent()[this.propertyKey].push(new SpellCast())\r\n                break;\r\n            case \"hints\":\r\n                this.get_Parent()[this.propertyKey].push(new Hint())\r\n                break;\r\n            case \"effects\":\r\n                this.get_Parent()[this.propertyKey].push(new EffectGain())\r\n                break;\r\n            case \"onceEffects\":\r\n                this.get_Parent()[this.propertyKey].push(new EffectGain())\r\n                break;\r\n            case \"propertyRunes\":\r\n                this.get_Parent()[this.propertyKey].push(\"\" as string)\r\n                break;\r\n            case \"storedSpells\":\r\n                this.get_Parent()[this.propertyKey].push(new SpellChoice())\r\n                this.get_Parent()[this.propertyKey][index - 1].source = this.get_Parent()[\"id\"];\r\n                break;\r\n            case \"traits\":\r\n                this.get_Parent()[this.propertyKey].push(\"\" as string)\r\n                break;\r\n            case \"gainConditions\":\r\n                this.get_Parent()[this.propertyKey].push(new ConditionGain())\r\n                break;\r\n            case \"castSpells\":\r\n                this.get_Parent()[this.propertyKey].push(\"\" as string)\r\n                break;\r\n            case \"gainInventory\":\r\n                this.get_Parent()[this.propertyKey].push(new InventoryGain())\r\n                break;\r\n        }\r\n    }\r\n\r\n    remove_NewItemObject(index: number) {\r\n        this.get_Parent()[this.propertyKey].splice(index, 1);\r\n    }\r\n\r\n    get_NewItemSubProperties(object: object) {\r\n        return Object.keys(object).map((key) =>\r\n            this.itemsService.get_ItemProperties().filter(property => property.parent == this.propertyData.key && property.key == key)[0])\r\n            .filter(property => property != undefined)\r\n            .sort((a, b) => {\r\n                if (a.priority > b.priority) {\r\n                    return 1;\r\n                }\r\n                if (a.priority < b.priority) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort((a, b) => {\r\n                if (a.group > b.group) {\r\n                    return 1;\r\n                }\r\n                if (a.group < b.group) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_Examples() {\r\n        let examples: (string | number)[] = [\"\"];\r\n\r\n        function extract_Example(element, key: string, isObject: Function, parent: string = \"\") {\r\n            if (parent) {\r\n                if (element[parent]) {\r\n                    element[parent].forEach(parent => {\r\n                        if (parent[key]) {\r\n                            if (!isObject(parent[key])) {\r\n                                examples.push(parent[key]);\r\n                            } else {\r\n                                examples.push(...parent[key]);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            } else if (element[key]) {\r\n                if (!isObject(element[key])) {\r\n                    examples.push(element[key]);\r\n                } else {\r\n                    examples.push(...element[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        switch (this.propertyData.examples) {\r\n            case \"prof\":\r\n                switch (this.get_Parent()[\"type\"]) {\r\n                    case \"weapons\":\r\n                        examples = this.characterService.get_Skills(this.get_Character(), \"\", \"Weapon Proficiency\").map(item => item.name)\r\n                        examples.push(\"Advanced Weapons\");\r\n                        break;\r\n                    case \"armors\":\r\n                        examples = this.characterService.get_Skills(this.get_Character(), \"\", \"Armor Proficiency\").map(item => item.name);\r\n                        examples.push(\"Light Barding\");\r\n                        examples.push(\"Heavy Barding\");\r\n                        break;\r\n                }\r\n                break;\r\n            case \"group\":\r\n                switch (this.get_Parent()[\"type\"]) {\r\n                    case \"weapons\":\r\n                        examples.push(...this.get_Items().weapons.map(item => item.group))\r\n                        break;\r\n                    case \"armors\":\r\n                        examples.push(...this.get_Items().armors.map(item => item.group))\r\n                        break;\r\n                }\r\n                break;\r\n            case \"weaponBase\":\r\n                examples.push(...this.get_Items().weapons.map(item => item.weaponBase))\r\n                break;\r\n            case \"traits\":\r\n                examples = this.traitsService.get_Traits().map(trait => trait.name)\r\n                break;\r\n            case \"isdoublingrings\":\r\n                examples = [\"\", \"Doubling Rings\", \"Doubling Rings (Greater)\"];\r\n                break;\r\n            case \"iswayfinder\":\r\n                examples = [0, 1, 2];\r\n                break;\r\n            case \"activity\":\r\n                examples.push(...this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables()))\r\n                    .filter(item => item[this.propertyData.key] && item[this.propertyData.key].length).map((item: Consumable) => {\r\n                        return item[this.propertyData.key];\r\n                    }));\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    examples.push(...item.activities.filter(activity => activity[this.propertyData.key].length)\r\n                        .map((activity: Activity) => activity[this.propertyData.key]\r\n                        ))\r\n                });\r\n                examples.push(...this.activitiesService.get_Activities()\r\n                    .filter(activity => activity[this.propertyData.key].length).map((activity: Activity) =>\r\n                        activity[this.propertyData.key]\r\n                    ));\r\n                break;\r\n            case \"spellname\":\r\n                examples.push(...this.spellsService.get_Spells().map(spell => spell.name));\r\n                break;\r\n            case \"spelllevel\":\r\n                examples = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n                break;\r\n            case \"storedspelllevel\":\r\n                examples = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n                break;\r\n            case \"spelltraditions\":\r\n                examples = [\"\", \"Arcane\", \"Divine\", \"Occult\", \"Primal\"];\r\n                break;\r\n            case \"spelltargets\":\r\n                examples = [\"\", \"Enemies\", \"Others\", \"Caster\"];\r\n                break;\r\n            case \"onceEffects affected\":\r\n                examples.push(...[\"Focus\", \"HP\", \"Temporary HP\"])\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.affected))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.affected))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.affected))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.affected))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.affected))\r\n                });\r\n                break;\r\n            case \"onceEffects value\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.value))\r\n                });\r\n                break;\r\n            case \"effects affected\":\r\n                examples.push(...this.characterService.get_Skills(this.get_Character()).map((skill: Skill) => skill.name));\r\n                examples.push(...this.characterService.get_Abilities().map((ability: Ability) => { return ability.name }));\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.affected))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.affected))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.affected))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.affected))\r\n                    });\r\n                });\r\n                break;\r\n            case \"effects value\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.value))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.value))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.value))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.value))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"effects setvalue\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length).forEach(feat => {\r\n                    examples.push(...feat.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.effects.length).forEach(feat => {\r\n                    examples.push(...feat.effects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.onceEffects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.characterService.get_Conditions().filter(condition => condition.effects.length).forEach((condition: Condition) => {\r\n                    examples.push(...condition.effects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                this.activitiesService.get_Activities().filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                    examples.push(...activity.effects.map(effect => effect.setValue))\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.onceEffects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.onceEffects.map(effect => effect.setValue))\r\n                    });\r\n                    item.activities.filter(activity => activity.effects.length).forEach((activity: Activity) => {\r\n                        examples.push(...activity.effects.map(effect => effect.setValue))\r\n                    });\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).filter(item => item.onceEffects.length).forEach((item: Consumable) => {\r\n                    examples.push(...item.onceEffects.map(effect => effect.setValue))\r\n                });\r\n                examples = examples.filter(example => typeof example == \"string\" && !example.toLowerCase().includes(\"object\") && !example.toLowerCase().includes(\"heightened\") && !example.toLowerCase().includes(\"value\"));\r\n                break;\r\n            case \"inputRequired\":\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    examples.push(...item.activities.filter(activity => activity.inputRequired.length)\r\n                        .map((activity: Activity) => activity.inputRequired\r\n                        ))\r\n                });\r\n                examples.push(...this.activitiesService.get_Activities()\r\n                    .filter(activity => activity.inputRequired.length).map((activity: Activity) => {\r\n                        return activity.inputRequired;\r\n                    }));\r\n                examples.push(...this.characterService.get_Conditions()\r\n                    .filter(condition => condition.inputRequired.length).map((condition: Condition) => {\r\n                        return condition.inputRequired;\r\n                    }));\r\n                break;\r\n            case \"gainactivity name\":\r\n                examples.push(...this.activitiesService.get_Activities().map((activity: Activity) => {\r\n                    return activity.name;\r\n                }));\r\n                break;\r\n            case \"showon\":\r\n                examples.push(...this.characterService.get_Skills(this.get_Character()).map((skill: Skill) => skill.name));\r\n                examples.push(...this.characterService.get_Abilities().map((ability: Ability) => ability.name));\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.hints.length).forEach(feat => {\r\n                    examples.push(...feat.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                })\r\n                this.characterService.get_Conditions().filter(condition => condition.hints.length).forEach(condition => {\r\n                    examples.push(...condition.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                })\r\n                this.activitiesService.get_Activities().filter(activity => activity.hints.length).forEach(activity => {\r\n                    examples.push(...activity.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                })\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.hints.length).forEach(activity => {\r\n                        examples.push(...activity.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                    })\r\n                });\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.hints.length).forEach((item: Equipment) => {\r\n                    examples.push(...item.hints.filter(hint => hint.showon.length).map(hint => hint.showon));\r\n                });\r\n                break;\r\n            case \"hints desc\":\r\n                this.characterService.get_FeatsAndFeatures().filter(feat => feat.hints.length).forEach(feat => {\r\n                    examples.push(...feat.hints.filter(hint => hint.desc.length).map(hint => hint.desc));\r\n                })\r\n                this.activitiesService.get_Activities().filter(activity => activity.hints.length).forEach(activity => {\r\n                    examples.push(...activity.hints.filter(hint => hint.desc.length).map(hint => hint.desc));\r\n                })\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).filter(item => item.activities.length).forEach((item: Equipment) => {\r\n                    item.activities.filter(activity => activity.hints.length).forEach(activity => {\r\n                        examples.push(...activity.hints.filter(hint => hint.desc.length).map(hint => hint.desc));\r\n                    })\r\n                });\r\n                break;\r\n            case \"effects type\":\r\n                examples = [\"\", \"item\", \"circumstance\", \"status\", \"proficiency\"];\r\n                break;\r\n            case \"gaincondition name\":\r\n                examples.push(...this.characterService.get_Conditions().map((condition: Condition) => condition.name));\r\n                break;\r\n            case \"gainitems name\":\r\n                examples = this.itemsService.get_Items()[this.get_Parent()[\"type\"]].map((item: Item) => item.name);\r\n                break;\r\n            case \"gainitems on\":\r\n                examples = [\"\", \"equip\", \"grant\", \"use\"];\r\n                break;\r\n            case \"dicesize\":\r\n                examples = [1, 2, 3, 4, 6, 8, 10, 12];\r\n                break;\r\n            default:\r\n                this.get_Items().allEquipment().concat(...this.get_Inventories().map(inventory => inventory.allEquipment())).forEach((item: Equipment) => {\r\n                    extract_Example(item, this.propertyData.key, this.get_IsObject, this.propertyData.parent);\r\n                });\r\n                this.get_Items().allConsumables().concat(...this.get_Inventories().map(inventory => inventory.allConsumables())).forEach((item: Consumable) => {\r\n                    extract_Example(item, this.propertyData.key, this.get_IsObject, this.propertyData.parent);\r\n                });\r\n                break;\r\n\r\n        }\r\n\r\n        let uniqueExamples = Array.from(new Set(examples))\r\n        return uniqueExamples.sort((a, b) => {\r\n            if (a > b) {\r\n                return 1;\r\n            }\r\n            if (a < b) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_ItemSets() {\r\n        return this.itemsService.get_Items().names;\r\n    }\r\n\r\n    set_ItemType() {\r\n        this.get_Parent()[\"name\"] = this.itemsService.get_Items()[this.get_Parent()[\"type\"]][0][\"name\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","<header class=\"sectionHeader\" *ngIf=\"propertyData.priority == 0 && propertyData.group\">\r\n    {{propertyData.group.split(\"-\")[1]}}</header>\r\n<div class=\"list-item\">\r\n    <ng-container *ngIf=\"!noTitle\">\r\n        <div class=\"newrow left-aligned\">\r\n            <strong [ngbPopover]=\"propertyData.desc\">{{propertyData.name}}</strong>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"get_IsObject(get_Parent()[propertyKey]) && get_Parent()[propertyKey]!=null\">\r\n        <button (click)=\"add_NewItemObject()\">Add</button>\r\n        <div class=\"list-item\" *ngFor=\"let object of get_Parent()[propertyKey]; let i = index; trackBy:trackByIndex;\">\r\n            <span>{{i+1}}</span>\r\n            <span>\r\n                <button (click)=\"remove_NewItemObject(i)\">Remove</button>\r\n            </span>\r\n            <ng-container *ngIf=\"get_IsObject(object)\">\r\n                <ng-container *ngFor=\"let subProperty of get_NewItemSubProperties(object); trackBy:trackByIndex;\">\r\n                    <app-newItemProperty [propertyData]=subProperty [propertyKey]=subProperty.key\r\n                        [parents]=parents.concat(propertyKey,i) [newItem]=newItem></app-newItemProperty>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!get_IsObject(object)\">\r\n                <app-newItemProperty class=\"newrow\" [propertyData]=propertyData [propertyKey]=i\r\n                    [parents]=parents.concat(propertyKey) [noTitle]=true [newItem]=newItem></app-newItemProperty>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!get_IsObject(get_Parent()[propertyKey]) || get_Parent()[propertyKey]==null\">\r\n        <div class=\"newrow\">\r\n            <input id=\"{{propertyKey}}\" class=\"newrow\" type=\"text\" [(ngModel)]=\"get_Parent()[propertyKey]\" (blur)=\"validate()\"\r\n                *ngIf=\"!propertyData.type && !propertyData.locked\">\r\n            <textarea class=\"newrow\" rows=3 [(ngModel)]=\"get_Parent()[propertyKey]\"\r\n                *ngIf=\"propertyData.type=='textarea'\"></textarea>\r\n            <input type=\"checkbox\" [(ngModel)]=\"get_Parent()[propertyKey]\" *ngIf=\"propertyData.type=='checkbox'\">\r\n            <input type=\"number\" [(ngModel)]=\"get_Parent()[propertyKey]\" (blur)=\"validate()\"\r\n                (keypress)=\"numbersOnly($event)\" *ngIf=\"propertyData.type=='number'\">\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"validationError.length\">\r\n            <span class=\"problem\">{{validationError}}</span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"validationResult.length\">\r\n            <span>Current result: {{validationResult}}</span>\r\n        </div>\r\n        <div class=\"list-item\" style=\"margin: initial 0\" *ngIf=\"propertyData.type!='textarea' && propertyData.type!='checkbox' &&\r\n        !(propertyData.parent == 'gainItems' && propertyData.key == 'type')\">\r\n            <select class=\"newrow\" [(ngModel)]=\"get_Parent()[propertyKey]\" [disabled]=\"!get_Examples().length\"\r\n                (ngModelChange)=\"validate()\">\r\n                <option *ngFor=\"let example of get_Examples(); trackBy:trackByIndex;\" [ngValue]=\"example\">\r\n                    {{example}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"list-item\" style=\"margin: initial 0\"\r\n            *ngIf=\"propertyData.parent == 'gainItems' && propertyData.key == 'type'\">\r\n            <select class=\"newrow\" [(ngModel)]=\"get_Parent()[propertyKey]\" (ngModelChange)=\"set_ItemType()\">\r\n                <option *ngFor=\"let itemset of get_ItemSets(); trackBy:trackByIndex;\" [ngValue]=\"itemset.key\">\r\n                    {{itemset.name}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { Item } from 'src/app/Item';\r\nimport { Oil } from 'src/app/Oil';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Weapon } from 'src/app/Weapon';\r\n\r\n@Component({\r\n    selector: 'app-itemOils',\r\n    templateUrl: './itemOils.component.html',\r\n    styleUrls: ['./itemOils.component.css']\r\n})\r\nexport class ItemOilsComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Item;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    newOil: { oil: Oil, inv: ItemCollection } = { oil: new Oil(), inv: null };\r\n\r\n    public newPropertyRuneName: string[] = [\"\", \"\", \"\"];\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Duration(turns: number) {\r\n        return this.timeService.get_Duration(turns)\r\n    }\r\n\r\n    get_Oils() {\r\n        let item = this.item;\r\n        let allOils: { oil: Oil, inv: ItemCollection }[] = [{ oil: new Oil(), inv: null }];\r\n        allOils[0].oil.name = \"\";\r\n        if (this.itemStore) {\r\n            allOils.push(...this.get_CleanItems().oils.filter(oil => oil.targets.length).map(oil => ({ oil: oil, inv: null })));\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                allOils.push(...inv.oils.filter(oil => oil.targets.length && oil.amount).map(oil => ({ oil: oil, inv: inv })));\r\n            });\r\n        }\r\n        return allOils.filter(\r\n            (oil: { oil: Oil, inv: ItemCollection }, index) =>\r\n                index == 0 ||\r\n                (\r\n                    oil.oil.targets.length && (\r\n                        oil.oil.targets.includes(item.type) ||\r\n                        oil.oil.targets.includes(\"items\")\r\n                    ) && (\r\n                        oil.oil.weightLimit ?\r\n                            (\r\n                                !(parseInt(item.bulk)) ||\r\n                                (\r\n                                    item.bulk && parseInt(item.bulk) <= oil.oil.weightLimit\r\n                                )\r\n                            )\r\n                            : true\r\n                    ) && (\r\n                        oil.oil.rangereq ?\r\n                            (\r\n                                item[oil.oil.rangereq]\r\n                            )\r\n                            : true\r\n                    ) && (\r\n                        oil.oil.damagereq ?\r\n                            (\r\n                                (item as Weapon).dmgType &&\r\n                                (\r\n                                    oil.oil.damagereq.split(\"\")\r\n                                        .filter(req => item[\"dmgType\"].includes(req)).length ||\r\n                                    (item as Weapon).dmgType == \"modular\"\r\n                                )\r\n                            )\r\n                            : true\r\n                    )\r\n                )\r\n        );\r\n    }\r\n\r\n    add_Oil() {\r\n        if (this.newOil.oil.name) {\r\n            let item = this.item;\r\n            let newLength = item.oilsApplied.push(Object.assign(new Oil(), JSON.parse(JSON.stringify(this.newOil.oil))));\r\n            item.oilsApplied[newLength - 1] = this.characterService.reassign(item.oilsApplied[newLength - 1]);\r\n            if (this.newOil.inv) {\r\n                this.characterService.drop_InventoryItem(this.get_Character(), this.newOil.inv, this.newOil.oil, false, false, false, 1);\r\n            }\r\n            //Add RuneLore if the oil's Rune Effect includes one\r\n            if (item.oilsApplied[newLength - 1].runeEffect && item.oilsApplied[newLength - 1].runeEffect.loreChoices.length) {\r\n                this.characterService.add_RuneLore(item.oilsApplied[newLength - 1].runeEffect);\r\n            }\r\n            this.newOil = { oil: new Oil(), inv: null };\r\n            this.newOil.oil.name = \"\";\r\n            this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n            this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    remove_Oil(index: number) {\r\n        //Remove RuneLore if applicable.\r\n        if (this.item.oilsApplied[index].runeEffect && this.item.oilsApplied[index].runeEffect.loreChoices.length) {\r\n            this.characterService.remove_RuneLore(this.item.oilsApplied[index].runeEffect);\r\n        }\r\n        this.item.oilsApplied.splice(index, 1);\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","<!--Adding Oils-->\r\n<div class=\"list-item\" *ngIf=\"get_Oils().length > 1 || item.oilsApplied.length\">\r\n    <div class=\"newrow\">\r\n        <strong>Apply oil</strong>\r\n        <select [(ngModel)]=\"newOil\" (ngModelChange)=\"add_Oil()\">\r\n            <option *ngFor=\"let oil of get_Oils(); trackBy:trackByIndex;\" [ngValue]=\"oil\">\r\n                {{oil.oil.amount != 1 ? oil.oil.amount + \" \" : \"\"}}{{oil.oil.get_Name()}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.oilsApplied.length\">\r\n        <strong>Applied oils</strong>\r\n        <div class=\"newrow\" *ngFor=\"let oil of item.oilsApplied; let index = index; trackBy:trackByIndex;\">\r\n            <span>\r\n                {{oil.get_Name()}} ({{get_Duration(oil.duration)}})\r\n            </span>\r\n            <button class=\"lower\" (click)=\"remove_Oil(index)\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>","import { FeatChoice } from './FeatChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { ItemGain } from './ItemGain';\r\n\r\nexport class Heritage {\r\n    public readonly _className: string = this.constructor.name;\r\n    public gainActivities: string[] = [];\r\n    public ancestries: string[] = [];\r\n    public desc: string = \"\";\r\n    public featChoices: FeatChoice[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public name: string = \"\";\r\n    public senses: string[] = [];\r\n    public skillChoices: SkillChoice[] = [];\r\n    //Some feats may add additional heritages. We use the source here so we can identify and remove them.\r\n    public source: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public spellChoices: SpellChoice[] = [];\r\n    public subType: string = \"\";\r\n    public subTypes: Heritage[] = [];\r\n    public traits: string[] = [];\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D4',\r\n  templateUrl: './D4.svg',\r\n  styleUrls: ['./diceIcons_D4.component.css']\r\n})\r\nexport class DiceIcons_D4Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D4\"\r\n        d=\"M 62.00,56.00\r\n           C 62.00,56.00 2.00,56.00 2.00,56.00\r\n             2.00,56.00 32.00,7.00 32.00,7.00\r\n             32.00,7.00 62.00,56.00 62.00,56.00 Z\r\n           M 62.00,56.00\r\n           C 62.00,56.00 32.00,40.00 32.00,40.00\r\n             32.00,40.00 2.00,56.00 2.00,56.00M 32.00,7.00\r\n           C 32.00,7.00 32.00,40.00 32.00,40.00\" />\r\n   </g>\r\n</svg>\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { EffectsService } from './effects.service';\r\nimport { DefenseService } from './defense.service';\r\nimport { CharacterService } from './character.service';\r\nimport { Effect } from './Effect';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\nimport { Creature } from './Creature';\r\nimport { Shield } from './Shield';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { ConditionGain } from './ConditionGain';\r\n\r\nexport class AC {\r\n    public name: string = \"AC\"\r\n    set_Cover(creature: Creature, cover: number, shield: Shield = null, characterService: CharacterService, conditionsService: ConditionsService) {\r\n        let conditions: ConditionGain[] = conditionsService.get_AppliedConditions(creature, characterService, creature.conditions, true)\r\n            .filter(gain => [\"Lesser Cover\", \"Standard Cover\", \"Greater Cover\"].includes(gain.name) && gain.source == \"Defense\");\r\n        let lesserCover = conditions.find(gain => gain.name == \"Lesser Cover\");\r\n        let standardCover = conditions.find(gain => gain.name == \"Standard Cover\");\r\n        let greaterCover = conditions.find(gain => gain.name == \"Greater Cover\");\r\n        let coverName: string = \"\";\r\n        switch (cover) {\r\n            case 0:\r\n                if (shield) {\r\n                    shield.takingCover = false;\r\n                }\r\n                break;\r\n            case 1:\r\n                if (!lesserCover) {\r\n                    coverName = \"Lesser Cover\";\r\n                }\r\n                break;\r\n            case 2:\r\n                if (!standardCover) {\r\n                    coverName = \"Standard Cover\";\r\n                }\r\n                break;\r\n            case 4:\r\n                if (shield) {\r\n                    shield.takingCover = true;\r\n                }\r\n                if (!greaterCover) {\r\n                    coverName = \"Greater Cover\";\r\n                }\r\n                break;\r\n        }\r\n        if (lesserCover && cover != 1) {\r\n            characterService.remove_Condition(creature, lesserCover, false);\r\n        }\r\n        if (standardCover && cover != 2) {\r\n            characterService.remove_Condition(creature, standardCover, false);\r\n        }\r\n        if (greaterCover && cover != 4) {\r\n            characterService.remove_Condition(creature, greaterCover, false);\r\n        }\r\n        if (coverName) {\r\n            let newCondition: ConditionGain = Object.assign(new ConditionGain(), { name: coverName, source: \"Defense\", duration: -1, locked: true })\r\n            characterService.add_Condition(creature, newCondition, false);\r\n        }\r\n        characterService.process_ToChange();\r\n    }\r\n    calculate(creature: Creature, characterService: CharacterService, defenseService: DefenseService, effectsService: EffectsService) {\r\n        let character = characterService.get_Character();\r\n        let absolutes: Effect[] = this.absolutes(creature, effectsService);\r\n        let relatives: Effect[] = this.relatives(creature, character, effectsService);\r\n\r\n        let result = {\r\n            absolutes: absolutes,\r\n            relatives: relatives,\r\n            bonuses: this.bonuses(creature, character, effectsService),\r\n            penalties: this.penalties(creature, character, effectsService),\r\n            value: this.value(creature, characterService, defenseService, effectsService, absolutes, relatives)\r\n        }\r\n        return result;\r\n    }\r\n    get_NamesList() {\r\n        return [\r\n            \"AC\",\r\n            \"All Checks and DCs\",\r\n            \"Dexterity-based Checks and DCs\"\r\n        ]\r\n    }\r\n    absolutes(creature: Creature, effectsService: EffectsService) {\r\n        return effectsService.get_AbsolutesOnThese(creature, this.get_NamesList());\r\n    }\r\n    relatives(creature: Creature, character: Character, effectsService: EffectsService) {\r\n        //Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (creature.type == \"Familiar\") {\r\n            let effects = effectsService.get_RelativesOnThese(character, this.get_NamesList()).filter(effect => effect.type != \"circumstance\" && effect.type != \"status\")\r\n            effects.push(...effectsService.get_RelativesOnThese(creature, this.get_NamesList()).filter(effect => effect.type == \"circumstance\" || effect.type == \"status\"))\r\n        }\r\n        return effectsService.get_RelativesOnThese(creature, this.get_NamesList());\r\n    }\r\n    bonuses(creature: Creature, character: Character, effectsService: EffectsService) {\r\n        //We need to copy show_BonusesOnThese and adapt it because Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (creature.type == \"Familiar\") {\r\n            let characterBonuses = effectsService.get_Effects(character.type).bonuses.some(effect =>\r\n                effect.creature == character.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                effect.type != \"circumstance\" &&\r\n                effect.type != \"status\" &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            let familiarBonuses = effectsService.get_Effects(creature.type).bonuses.some(effect =>\r\n                effect.creature == creature.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                (effect.type == \"circumstance\" || effect.type == \"status\") &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            return characterBonuses || familiarBonuses;\r\n        } else {\r\n            return effectsService.show_BonusesOnThese(creature, this.get_NamesList());\r\n        }\r\n    }\r\n    penalties(creature: Creature, character: Character, effectsService: EffectsService) {\r\n        //We need to copy show_PenaltiesOnThese and adapt it because Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (creature.type == \"Familiar\") {\r\n            let characterPenalties = effectsService.get_Effects(character.type).penalties.some(effect =>\r\n                effect.creature == character.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                effect.type != \"circumstance\" &&\r\n                effect.type != \"status\" &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            let familiarPenalties = effectsService.get_Effects(creature.type).penalties.some(effect =>\r\n                effect.creature == creature.id &&\r\n                effect.apply &&\r\n                effect.show &&\r\n                (effect.type == \"circumstance\" || effect.type == \"status\") &&\r\n                this.get_NamesList().map(name => name.toLowerCase()).includes(effect.target.toLowerCase())\r\n            );\r\n            return characterPenalties || familiarPenalties;\r\n        } else {\r\n            return effectsService.show_PenaltiesOnThese(creature, this.get_NamesList());\r\n        }\r\n    }\r\n    value(creature: Creature, characterService: CharacterService, defenseService: DefenseService, effectsService: EffectsService, absolutes: Effect[] = undefined, relatives: Effect[] = undefined) {\r\n        if (characterService.still_loading()) { return { result: 0, explain: \"\" }; }\r\n        //Get the bonus from the worn armor. This includes the basic 10\r\n        let armorBonus: number = 10;\r\n        let explain: string = \"DC Basis: 10\";\r\n        let armorCreature: AnimalCompanion | Character;\r\n        let character: Character = characterService.get_Character();\r\n        //Familiars get the Character's AC\r\n        if (creature.type == \"Familiar\") {\r\n            armorCreature = character;\r\n        } else {\r\n            armorCreature = creature as AnimalCompanion | Character;\r\n        }\r\n        //Familiars get the Character's AC without status and circumstance effects, and add their own of those.\r\n        if (relatives == undefined) {\r\n            relatives = this.relatives(creature, character, effectsService);\r\n        } else {\r\n            //Reassign the effects to unchain them from the calling function.\r\n            relatives = relatives.map(relative => Object.assign(new Effect(), JSON.parse(JSON.stringify(relative))));\r\n        }\r\n        let armorSet = false;\r\n        //Absolutes completely replace the baseValue. They are sorted so that the highest value counts last.\r\n        if (absolutes == undefined) {\r\n            absolutes = this.absolutes(armorCreature, effectsService)\r\n        } else {\r\n            //Reassign the effects to unchain them from the calling function.\r\n            absolutes = absolutes.map(absolute => Object.assign(new Effect(), JSON.parse(JSON.stringify(absolute))));\r\n        }\r\n        absolutes.forEach(effect => {\r\n            armorSet = true;\r\n            armorBonus = parseInt(effect.setValue)\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        let armors = defenseService.get_EquippedArmor(armorCreature);\r\n        if (!armorSet && armors.length > 0) {\r\n            let armor = armors[0];\r\n            let charLevel = characterService.get_Character().level;\r\n            let dex = characterService.get_Abilities(\"Dexterity\")[0].mod(armorCreature, characterService, effectsService).result;\r\n            //Get the profiency with either this armor or its category\r\n            //Familiars have the same AC as the Character before circumstance or status effects.\r\n            let skillLevel = armor.profLevel(armorCreature, characterService);\r\n            let charLevelBonus = 0;\r\n            if (skillLevel) {\r\n                explain += \"\\nProficiency: \" + skillLevel;\r\n                //Add character level if the character is trained or better with either the armor category or the armor itself\r\n                charLevelBonus = charLevel;\r\n                explain += \"\\nCharacter Level: \" + charLevelBonus;\r\n            }\r\n            //Add the dexterity modifier up to the armor's dex cap, unless there is no cap\r\n            let dexcap = armor.get_DexCap();\r\n            effectsService.get_AbsolutesOnThis(creature, \"Dexterity Modifier Cap\").forEach(effect => {\r\n                dexcap = parseInt(effect.setValue);\r\n                explain += \"\\n\" + effect.source + \": Dexterity modifier cap \" + dexcap;\r\n            })\r\n            effectsService.get_RelativesOnThis(creature, \"Dexterity Modifier Cap\").forEach(effect => {\r\n                dexcap += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": Dexterity modifier cap \" + parseInt(effect.value);\r\n            })\r\n            let dexBonus = (dexcap != -1) ? Math.max(Math.min(dex, dexcap), 0) : dex;\r\n            if (dexBonus) {\r\n                if (dexcap != -1 && dexcap < dex) {\r\n                    explain += \"\\nDexterity Modifier (capped): \" + dexBonus;\r\n                } else {\r\n                    explain += \"\\nDexterity Modifier: \" + dexBonus;\r\n                }\r\n            }\r\n            //Explain the Armor Bonus\r\n            let armorItemBonus = armor.get_ACBonus();\r\n            let shoddy = armor.$shoddy;\r\n            if (armorItemBonus || shoddy) {\r\n                explain += \"\\nArmor Bonus: \" + (armorItemBonus + (shoddy ? 2 : 0));\r\n            }\r\n            //As long as Potency is calculated like this, it is cumulative with item effects on AC.\r\n            let potency = armor.get_PotencyRune();\r\n            if (potency) {\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, potency.toString(), \"\", false, \"Potency\", false, true, true, 0))\r\n            }\r\n            if (armor.battleforged) {\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, \"+1\", \"\", false, \"Battleforged\", false, true, true, 0))\r\n            }\r\n            //Shoddy items have a -2 item penalty to attacks, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n            if (shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && armor.crafted) {\r\n                explain += \"\\nShoddy (canceled by Junk Tinker): -0\";\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, \"0\", \"\", false, \" (canceled by Junk Tinker)\", true, true, true, 0))\r\n            } else if (shoddy) {\r\n                relatives.push(new Effect(creature.type, \"item\", this.name, \"-2\", \"\", false, \"Shoddy\", true, true, true, 0))\r\n            }\r\n            //Add up all modifiers and return the AC gained from this armor\r\n            armorBonus += skillLevel + charLevelBonus + armorItemBonus + dexBonus;\r\n        }\r\n        //Sum up the effects\r\n        let effectsSum = 0;\r\n        characterService.effectsService.get_TypeFilteredEffects(relatives, false)\r\n            .forEach(effect => {\r\n                effectsSum += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            });\r\n        //Add up the armor bonus and all active effects and return the sum\r\n        let result: number = armorBonus + effectsSum;\r\n        return { result: result, explain: explain };\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { CharacterService } from '../character.service';\r\n\r\n@Component({\r\n    selector: 'app-character-sheet',\r\n    templateUrl: './character-sheet.component.html',\r\n    styleUrls: ['./character-sheet.component.css'],\r\n    animations: [\r\n        trigger('slideInOut', [\r\n            state('in', style({\r\n                transform: 'translate3d(0,0,0)'\r\n            })),\r\n            state('out', style({\r\n                transform: 'translate3d(-100%, 0, 0)'\r\n            })),\r\n            transition('in => out', animate('400ms ease-in-out')),\r\n            transition('out => in', animate('400ms ease-in-out'))\r\n        ]),\r\n        trigger('slideInOutRight', [\r\n            state('in', style({\r\n                transform: 'translate3d(0,0,0)'\r\n            })),\r\n            state('out', style({\r\n                transform: 'translate3d(+100%, 0, 0)'\r\n            })),\r\n            transition('in => out', animate('400ms ease-in-out')),\r\n            transition('out => in', animate('400ms ease-in-out'))\r\n        ]),\r\n        trigger('slideInOutVert', [\r\n            state('in', style({\r\n                transform: 'translate3d(0,0,0)'\r\n            })),\r\n            state('out', style({\r\n                transform: 'translate3d(0, -100%, 0)'\r\n            })),\r\n            transition('in => out', animate('400ms ease-in-out')),\r\n            transition('out => in', animate('400ms ease-in-out'))\r\n        ]),\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CharacterSheetComponent implements OnInit {\r\n\r\n    public showMode: string = \"\";\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        private changeDetector: ChangeDetectorRef\r\n    ) { }\r\n\r\n    toggle_Mode(type: string) {\r\n        if (this.showMode == type) {\r\n            this.showMode = \"\";\r\n        } else {\r\n            this.showMode = type;\r\n        }\r\n    }\r\n\r\n    get_ShowMode() {\r\n        return this.showMode;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    get_Darkmode() {\r\n        return this.characterService.get_Darkmode();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.characterService.get_ItemsMenuState();\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.characterService.get_CraftingMenuState();\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterService.get_CharacterMenuState();\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.characterService.get_CompanionMenuState();\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.characterService.get_FamiliarMenuState();\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.characterService.get_SpellsMenuState();\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.characterService.get_SpellLibraryMenuState();\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.characterService.get_ConditionsMenuState();\r\n    }\r\n\r\n    get_DiceMenuState() {\r\n        return this.characterService.get_DiceMenuState();\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_CharacterMinimized() {\r\n        return this.characterService.get_Character().settings.characterMinimized;\r\n    }\r\n\r\n    get_CompanionMinimized() {\r\n        return this.characterService.get_Character().settings.companionMinimized;\r\n    }\r\n\r\n    get_FamiliarMinimized() {\r\n        return this.characterService.get_Character().settings.familiarMinimized;\r\n    }\r\n\r\n    get_SpellsMinimized() {\r\n        return this.characterService.get_Character().settings.spellsMinimized;\r\n    }\r\n\r\n    get_SpellLibraryMinimized() {\r\n        return this.characterService.get_Character().settings.spelllibraryMinimized;\r\n    }\r\n    \r\n    get_GeneralMinimized() {\r\n        return this.characterService.get_Character().settings.generalMinimized;\r\n    }\r\n\r\n    get_EffectsMinimized() {\r\n        return this.characterService.get_Character().settings.effectsMinimized;\r\n    }\r\n\r\n    get_AbilitiesMinimized() {\r\n        return this.characterService.get_Character().settings.abilitiesMinimized;\r\n    }\r\n\r\n    get_HealthMinimized() {\r\n        return this.characterService.get_Character().settings.healthMinimized;\r\n    }\r\n\r\n    get_DefenseMinimized() {\r\n        return this.characterService.get_Character().settings.defenseMinimized;\r\n    }\r\n\r\n    get_AttacksMinimized() {\r\n        return this.characterService.get_Character().settings.attacksMinimized;\r\n    }\r\n\r\n    get_SkillsMinimized() {\r\n        return this.characterService.get_Character().settings.skillsMinimized;\r\n    }\r\n\r\n    get_InventoryMinimized() {\r\n        return this.characterService.get_Character().settings.inventoryMinimized;\r\n    }\r\n\r\n    get_ActivitiesMinimized() {\r\n        return this.characterService.get_Character().settings.activitiesMinimized;\r\n    }\r\n\r\n    get_SpellbookMinimized() {\r\n        return this.characterService.get_Character().settings.spellbookMinimized;\r\n    }\r\n\r\n    get_TimeMinimized() {\r\n        return this.characterService.get_Character().settings.timeMinimized;\r\n    }\r\n\r\n    get_ClassOrder(fightingStyle: string) {\r\n        //Returns whether the fightingStyle (attacks or spells) should be first or second for this class (0 or 1).\r\n        //This checks whether you have a primary spellcasting for your class from level 1, and if so, spells should be first.\r\n        if (this.characterService.get_Character().get_DefaultSpellcasting()?.charLevelAvailable == 1) {\r\n            switch (fightingStyle) {\r\n                case \"attacks\":\r\n                    return 1;\r\n                case \"spells\":\r\n                    return 0;\r\n            }\r\n        } else {\r\n            switch (fightingStyle) {\r\n                case \"attacks\":\r\n                    return 0;\r\n                case \"spells\":\r\n                    return 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.characterService.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"character-sheet\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"character-sheet\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div id=\"charactersheet\" class=\"charactersheet\">\r\n    <div class=\"charactersheet-app charactersheet-row\" id=\"tabs\">\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()==''}\" (click)=\"toggle_Mode('')\">Show All</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Encounter'}\"\r\n            (click)=\"toggle_Mode('Encounter')\">Encounter</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Exploration'}\"\r\n            (click)=\"toggle_Mode('Exploration')\">Exploration</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Downtime'}\"\r\n            (click)=\"toggle_Mode('Downtime')\">Downtime</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='Inventory'}\"\r\n            (click)=\"toggle_Mode('Inventory')\">Inventory</button>\r\n        <button [ngClass]=\"{'fancy-button':get_ShowMode()=='ConditionsEffects'}\"\r\n            (click)=\"toggle_Mode('ConditionsEffects')\">Conditions & Effects</button>\r\n    </div>\r\n    <ng-container *ngIf=\"!still_loading() && !['Inventory','ConditionsEffects'].includes(get_ShowMode())\">\r\n        <app-time class=\"charactersheet-app charactersheet-row\" [sheetSide]=\"'center'\"\r\n            [showTurn]=\"(['','Encounter'].includes(get_ShowMode()))\" [showTime]=\"(get_ShowMode() != 'Encounter')\"\r\n            [ngClass]=\"{'minimized':(get_TimeMinimized())}\"></app-time>\r\n        <app-effects id=\"Character-effects\" class=\"charactersheet-app charactersheet-row\" [sheetSide]=\"'center'\">\r\n        </app-effects>\r\n        <div class=\"charactersheet-column-container\">\r\n            <div class=\"charactersheet-column\">\r\n                <app-general id=\"Character-general\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_GeneralMinimized())}\" *ngIf=\"(get_ShowMode() != 'Encounter')\">\r\n                </app-general>\r\n                <app-defense id=\"Character-defense\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_DefenseMinimized())}\" *ngIf=\"(get_ShowMode() == 'Encounter')\">\r\n                </app-defense>\r\n                <app-health id=\"Character-health\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [showMinimizeButton]=\"(get_ShowMode() != 'Downtime')\"\r\n                    [ngClass]=\"{'minimized':(get_HealthMinimized() || (get_ShowMode() == 'Downtime'))}\"></app-health>\r\n                <app-general id=\"Character-general\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_GeneralMinimized())}\" *ngIf=\"(get_ShowMode() == 'Encounter')\">\r\n                </app-general>\r\n                <app-abilities id=\"Character-abilities\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_AbilitiesMinimized())}\"></app-abilities>\r\n                <app-skills id=\"Character-skills\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_SkillsMinimized())}\"\r\n                    *ngIf=\"['', 'Encounter'].includes(get_ShowMode())\"></app-skills>\r\n                <app-activities id=\"Character-activities\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_ActivitiesMinimized())}\"\r\n                    *ngIf=\"['', 'Encounter'].includes(get_ShowMode())\">\r\n                </app-activities>\r\n                <app-spellbook id=\"spellbook\" class=\"charactersheet-app\" [sheetSide]=\"'left'\"\r\n                    [ngClass]=\"{'minimized':(get_SpellbookMinimized())}\" *ngIf=\"(get_ShowMode() == 'Downtime')\">\r\n                </app-spellbook>\r\n            </div>\r\n            <div class=\"charactersheet-column\">\r\n                <app-defense id=\"Character-defense\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_DefenseMinimized())}\" *ngIf=\"(get_ShowMode() == '')\"></app-defense>\r\n                <app-skills id=\"Character-skills\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_SkillsMinimized())}\"\r\n                    *ngIf=\"['Exploration','Downtime'].includes(get_ShowMode())\"></app-skills>\r\n                <ng-container *ngFor=\"let index of [0,1]; trackBy:trackByIndex;\">\r\n                    <app-attacks id=\"Character-attacks\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                        [ngClass]=\"{'minimized':(get_AttacksMinimized())}\"\r\n                        *ngIf=\"['','Encounter'].includes(get_ShowMode()) && get_ClassOrder('attacks') == index\">\r\n                    </app-attacks>\r\n                    <app-spellbook id=\"spellbook\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                        [ngClass]=\"{'minimized':(get_SpellbookMinimized())}\"\r\n                        *ngIf=\"['','Encounter'].includes(get_ShowMode()) && get_ClassOrder('spells') == index\">\r\n                    </app-spellbook>\r\n                </ng-container>\r\n                <app-activities id=\"Character-activities\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_ActivitiesMinimized())}\"\r\n                    *ngIf=\"!['', 'Encounter'].includes(get_ShowMode())\">\r\n                </app-activities>\r\n                <app-spellbook id=\"spellbook\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_SpellbookMinimized())}\" *ngIf=\"(get_ShowMode() == 'Exploration')\">\r\n                </app-spellbook>\r\n                <app-inventory id=\"Character-inventory\" class=\"charactersheet-app\" [sheetSide]=\"'right'\"\r\n                    [ngClass]=\"{'minimized':(get_InventoryMinimized())}\" *ngIf=\"(get_ShowMode() == '')\"></app-inventory>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"(get_ShowMode() == 'Inventory')\">\r\n        <app-effects id=\"Character-effects\" class=\"charactersheet-app\" [sheetSide]=\"'center'\">\r\n        </app-effects>\r\n        <div class=\"charactersheet-column charactersheet-row\">\r\n            <app-inventory id=\"Character-inventory\" class=\"charactersheet-app\" [sheetSide]=\"'center'\"\r\n                [ngClass]=\"{'minimized':(get_InventoryMinimized())}\"></app-inventory>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"(get_ShowMode() == 'ConditionsEffects')\">\r\n        <app-time class=\"charactersheet-app charactersheet-row\" [sheetSide]=\"'center'\"\r\n            [ngClass]=\"{'minimized':(get_TimeMinimized())}\"></app-time>\r\n        <div class=\"charactersheet-column charactersheet-row\">\r\n            <app-effects id=\"Character-effects\" class=\"charactersheet-app\" [fullDisplay]=\"true\" [sheetSide]=\"'center'\">\r\n            </app-effects>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n<app-items [@slideInOut]=\"get_ItemsMenuState()\" *ngIf=\"!still_loading()\">\r\n</app-items>\r\n<app-crafting [@slideInOut]=\"get_CraftingMenuState()\" *ngIf=\"!still_loading()\">\r\n</app-crafting>\r\n<app-spells [ngClass]=\"{'minimized':(get_SpellsMinimized())}\"\r\n    [@slideInOut]=\"get_SpellsMenuState()\" *ngIf=\"!still_loading()\"></app-spells>\r\n<app-spellLibrary [@slideInOut]=\"get_SpellLibraryMenuState()\"\r\n    *ngIf=\"!still_loading()\"></app-spellLibrary>\r\n<app-conditions [@slideInOut]=\"get_ConditionsMenuState()\"\r\n    *ngIf=\"!still_loading()\"></app-conditions>\r\n<app-character [ngClass]=\"{'minimized':(get_CharacterMinimized())}\"\r\n    [@slideInOut]=\"get_CharacterMenuState()\" *ngIf=\"!still_loading()\"></app-character>\r\n<app-animal-companion [ngClass]=\"{'minimized':(get_CompanionMinimized())}\"\r\n    [@slideInOut]=\"get_CompanionMenuState()\" *ngIf=\"!still_loading() && get_CompanionAvailable()\">\r\n</app-animal-companion>\r\n<app-familiar [ngClass]=\"{'minimized':(get_FamiliarMinimized())}\"\r\n    [@slideInOut]=\"get_FamiliarMenuState()\" *ngIf=\"!still_loading() && get_FamiliarAvailable()\"></app-familiar>\r\n<app-dice [@slideInOutVert]=\"get_DiceMenuState()\"></app-dice>","import { CharacterService } from './character.service';\r\nimport { Skill } from './Skill';\r\nimport { Ability } from './Ability';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { FormulaChoice } from './FormulaChoice';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { Character } from './Character';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Deity } from './Deity';\r\nimport { Speed } from './Speed';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { ItemGain } from './ItemGain';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { ProficiencyChange } from './ProficiencyChange';\r\nimport { HeritageGain } from './HeritageGain';\r\nimport { Hint } from './Hint';\r\nimport { BloodMagic } from './BloodMagic';\r\nimport { Creature } from './Creature';\r\nimport { ProficiencyCopy } from './ProficiencyCopy';\r\nimport { LanguageGain } from './LanguageGain';\r\nimport { SignatureSpellGain } from './SignatureSpellGain';\r\n\r\nexport class Feat {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityreq: any[] = [];\r\n    public access: string = \"\";\r\n    //If weaponfeatbase is true, the feat will be copied for every weapon that matches the description in the subtype:\r\n    // Advanced => Advanced Weapons\r\n    // Ancestry => Weapons with a trait that corresponds to an ancestry\r\n    // Uncommon => Weapons with the Uncommon trait\r\n    //These can be combined. Any more filters need to be hardcoded in characterService.create_WeaponFeats().\r\n    public weaponfeatbase: boolean = false;\r\n    public anathema: string[] = [];\r\n    public archetype: string = \"\";\r\n    public changeProficiency: ProficiencyChange[] = [];\r\n    public copyProficiency: ProficiencyCopy[] = [];\r\n    public bloodMagic: BloodMagic[] = [];\r\n    //Having this feat counts as fulfilling the prerequisite of having the feat named in countAsFeat. This is useful for class feats that allow you to take another of the class type choices.\r\n    public countAsFeat: string = \"\";\r\n    public data: {} = {};\r\n    public desc: string = \"\";\r\n    public effects: any[] = [];\r\n    public featreq: string[] = [];\r\n    public heritagereq: string = \"\";\r\n    //You can add requirements to the ignore list. These get evaluated and must result in \"levelreq\", \"abilityreq\", \"featreq\", \"skillreq\", \"heritagereq\" or \"dedicationlimit\" to do anything.\r\n    public ignoreRequirements: string[] = [];\r\n    public gainAbilityChoice: AbilityChoice[] = [];\r\n    public gainActivities: string[] = [];\r\n    public gainAnimalCompanion: number = 0;\r\n    public gainSpecialization: SpecializationGain[] = [];\r\n    public gainFamiliar: boolean = false;\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainFeatChoice: FeatChoice[] = [];\r\n    public gainFormulaChoice: FormulaChoice[] = [];\r\n    public gainAncestry: string[] = [];\r\n    public gainHeritage: HeritageGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public gainLanguages: LanguageGain[] = [];\r\n    public gainLoreChoice: LoreChoice[] = [];\r\n    public gainSkillChoice: SkillChoice[] = [];\r\n    public gainSpellBookSlots: { spellBookSlots: number[], className: string }[] = [];\r\n    public gainSpellListSpells: string[] = [];\r\n    public gainSpellCasting: SpellCasting[] = [];\r\n    public gainSpellChoice: SpellChoice[] = [];\r\n    public hide: boolean = false;\r\n    public hints: Hint[] = [];\r\n    public readonly internalNote: string = \"\"\r\n    public levelreq: number = 0;\r\n    public limited: number = 0;\r\n    public lorebase: string = \"\";\r\n    public name: string = \"\";\r\n    public onceEffects: any[] = [];\r\n    public senses: string[] = [];\r\n    public shortdesc: string = \"\";\r\n    public skillreq: any[] = [];\r\n    public specialdesc: string = \"\";\r\n    public specialreq: string = \"\";\r\n    public specialreqdesc: string = \"\";\r\n    public subType: string = \"\";\r\n    public subTypes: boolean = false;\r\n    public superType: string = \"\";\r\n    public tenets: string[] = [];\r\n    public traits: string[] = [];\r\n    public unlimited: boolean = false;\r\n    public usageNote: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public allowSignatureSpells: SignatureSpellGain[] = [];\r\n    public PFSnote: string = \"\";\r\n    //For feats with the same name (from different source files for example), higher overridePriority wins. If two have the same priority, the first in the list wins.\r\n    public overridePriority: number = 0;\r\n    prof(skillLevel: number) {\r\n        switch (skillLevel) {\r\n            case 2:\r\n                return \"Trained in \"\r\n            case 4:\r\n                return \"Expert in \"\r\n            case 6:\r\n                return \"Master in \"\r\n            case 8:\r\n                return \"Legendary in \"\r\n        }\r\n    }\r\n    meetsLevelReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a levelreq, check if the level beats that.\r\n        //Returns [requirement met, requirement description]\r\n        let result: { met: boolean, desc: string };\r\n        if (this.levelreq) {\r\n            if (charLevel >= this.levelreq) {\r\n                result = { met: true, desc: \"Level \" + this.levelreq };\r\n            } else {\r\n                result = { met: false, desc: \"Level \" + this.levelreq };\r\n            }\r\n        } else {\r\n            result = { met: true, desc: \"\" };\r\n        }\r\n        return result;\r\n    }\r\n    meetsAbilityReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has an abilityreq, split it into the ability and the requirement (they come in objects {ability, value}), then check if that ability's baseValue() meets the requirement.\r\n        //Ability requirements are checked without temporary bonuses or penalties\r\n        //Returns an array of [requirement met, requirement description]\r\n        let character = characterService.get_Character();\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        if (this.abilityreq.length) {\r\n            this.abilityreq.forEach(requirement => {\r\n                let requiredAbility: Ability[] = characterService.get_Abilities(requirement.ability);\r\n                let expected: number = requirement.value;\r\n                if (requiredAbility.length > 0) {\r\n                    requiredAbility.forEach(ability => {\r\n                        if (ability.baseValue(character, characterService, charLevel).result >= expected) {\r\n                            result.push({ met: true, desc: ability.name + \" \" + expected });\r\n                        } else {\r\n                            result.push({ met: false, desc: ability.name + \" \" + expected });\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsSkillReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a skillreq, first split it into all different requirements,\r\n        //Then check if each one of these requirements {skill, value} are met by the skill's level\r\n        //When evaluating the result, these should be treated as OR requirements - you never need two skillreqs for a feat.\r\n        //Returns an array of [requirement met, requirement description]\r\n        let character = characterService.get_Character();\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        let skillreq = JSON.parse(JSON.stringify(this.skillreq));\r\n        //The Versatile Performance feat allows to use Performance instead of Deception, Diplomacy or Intimidation to meet skill requirements for feats.\r\n        //If you have the feat and any of these skills are required, add Performance to the requirements with the lowest required value.\r\n        if (character.get_FeatsTaken(1, charLevel, \"Versatile Performance\").length) {\r\n            let matchingreqs = skillreq.filter(requirement => [\"Deception\", \"Diplomacy\", \"Intimidation\"].includes(requirement.skill));\r\n            if (matchingreqs.length) {\r\n                let lowest = Math.min(matchingreqs.map(requirement => requirement.value));\r\n                skillreq.push({ skill: \"Performance\", value: lowest });\r\n            }\r\n        }\r\n        if (skillreq.length) {\r\n            skillreq.forEach(requirement => {\r\n                let requiredSkillName: string = requirement.skill;\r\n                let requiredSkill: Skill[] = characterService.get_Skills(character, requiredSkillName);\r\n                let expected: number = requirement.value;\r\n                if (requiredSkill.length > 0) {\r\n                    if (requiredSkill\r\n                        .find(skill =>\r\n                            skill.level(character, characterService, charLevel, true) >= expected\r\n                        )\r\n                    ) {\r\n                        result.push({ met: true, desc: this.prof(expected) + requirement.skill });\r\n                    } else {\r\n                        result.push({ met: false, desc: this.prof(expected) + requirement.skill });\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsFeatReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a featreq, check if you meet that (or a feat that has this supertype).\r\n        //Returns [requirement met, requirement description]\r\n        //Requirements like \"Aggressive Block or Brutish Shove\" are split in get_FeatsAndFeatures().\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        if (this.featreq.length) {\r\n            this.featreq.forEach(featreq => {\r\n                //Allow to check for the Familiar's feats\r\n                let requiredFeat: Feat[]\r\n                let testcreature: Character | Familiar;\r\n                let testfeat = featreq;\r\n\r\n                if (featreq.includes(\"Familiar:\")) {\r\n                    testcreature = characterService.get_Familiar();\r\n                    testfeat = featreq.split(\"Familiar:\")[1].trim();\r\n                    requiredFeat = characterService.familiarsService.get_FamiliarAbilities(testfeat);\r\n                } else {\r\n                    testcreature = characterService.get_Character();\r\n                    requiredFeat = characterService.get_FeatsAndFeatures(testfeat, \"\", true, true);\r\n                }\r\n                if (requiredFeat.length) {\r\n                    if (requiredFeat.find(feat => feat.have(testcreature, characterService, charLevel))) {\r\n                        result.push({ met: true, desc: featreq });\r\n                    } else {\r\n                        result.push({ met: false, desc: featreq });\r\n                    }\r\n                } else {\r\n                    result.push({ met: false, desc: featreq });\r\n                }\r\n            })\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsHeritageReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a heritagereq, check if your heritage matches that.\r\n        //Requirements like \"irongut goblin heritage or razortooth goblin heritage\" are split into each heritage and succeed if either matches your heritage.\r\n        //Returns [requirement met, requirement description]\r\n        let result: Array<{ met?: boolean, desc?: string }> = [];\r\n        if (this.heritagereq) {\r\n            if (\r\n                this.heritagereq.split(\" or \").find(heritage =>\r\n                    characterService.get_Character().class?.heritage?.name.toLowerCase() == heritage.toLowerCase() ||\r\n                    characterService.get_Character().class?.additionalHeritages.find(extraHeritage => extraHeritage.name.toLowerCase() == heritage.toLowerCase())\r\n                )\r\n            ) {\r\n                result.push({ met: true, desc: this.heritagereq });\r\n            } else {\r\n                result.push({ met: false, desc: this.heritagereq });\r\n            }\r\n        } else {\r\n            result.push({ met: true, desc: \"\" });\r\n        }\r\n        return result;\r\n    }\r\n    meetsSpecialReq(characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        //If the feat has a specialreq, it comes as a string that contains a condition. Evaluate the condition to find out if the requirement is met.\r\n        //When writing the condition, take care that it only uses variables known in this method,\r\n        //and that it must remain true even after you take the feat (or the feat will be automatically removed.)\r\n        //As an example, if the requirement is:\r\n        //  (Skill_Level('Athletics') < 2)\r\n        //also include:\r\n        //  (Skill_Level('Athletics') < 4 && this.have(character, characterService, charLevel))\r\n        //\r\n        //Here we prepare variables and functions to use in specialreq evaluations.\r\n        let character: Character = characterService.get_Character();\r\n        //charLevel is usually the level on which you take the feat. If none is given, the current character level is used for calculations.\r\n        //The variable is recast here so it can be used in eval().\r\n        charLevel = charLevel;\r\n        let familiar: Familiar = characterService.get_Familiar();\r\n        let deity: Deity = character.class.deity ? characterService.get_Deities(character.class.deity)[0] : null;\r\n        function Skill_Level(creature: string, name: string) {\r\n            if (creature != \"Familiar\") {\r\n                return characterService.get_Skills(characterService.get_Creature(creature), name)[0]?.level(characterService.get_Creature(creature) as Character | AnimalCompanion, characterService, charLevel) || 0;\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Speed(creature: string, name: string) {\r\n            let speeds: Speed[] = characterService.get_Speeds(characterService.get_Creature(creature)).filter(speed => speed.name == name);\r\n            if (speeds.length) {\r\n                return speeds[0].value(characterService.get_Creature(creature), characterService, characterService.effectsService)[0];\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Has_Feat(creature: string, name: string) {\r\n            if (creature == \"Familiar\") {\r\n                return characterService.familiarsService.get_FamiliarAbilities(name).find(feat => feat.have(familiar, characterService, charLevel, false));\r\n            } else if (creature == \"Character\") {\r\n                return characterService.get_FeatsAndFeatures(name, \"\", true, true).find(feat => feat.have(character, characterService, charLevel, false));\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Has_Sense(creature: string, name: string) {\r\n            return (characterService.get_Senses(characterService.get_Creature(creature), charLevel).includes(name));\r\n        }\r\n        let result: { met: boolean, desc: string };\r\n        if (this.specialreq) {\r\n            try {\r\n                if (eval(this.specialreq)) {\r\n                    result = { met: true, desc: this.specialreqdesc };\r\n                } else {\r\n                    result = { met: false, desc: this.specialreqdesc };\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Failed evaluating feat requirement (\" + this.specialreq + \"): \" + error)\r\n                result = { met: false, desc: this.specialreqdesc };\r\n            }\r\n        } else {\r\n            result = { met: true, desc: \"\" };\r\n        }\r\n        return result;\r\n    }\r\n    canChoose(characterService: CharacterService, choiceLevel: number = characterService.get_Character().level, charLevel: number = characterService.get_Character().level, skipLevel: boolean = false, ignoreRequirementsList: string[] = []) {\r\n        //This function evaluates ALL the possible requirements for taking a feat\r\n        //Returns true only if all the requirements are true. If the feat doesn't have a requirement, it is always true.\r\n        //CharLevel is the level the character is at when the feat is taken (so the level extracted from choice.id).\r\n        //ChoiceLevel is choice.level and may differ, for example when you take a 1st-level general feat at 8th level via General Training. It is only used for the level requirement.\r\n        if (isNaN(charLevel)) {\r\n            charLevel == choiceLevel;\r\n        }\r\n        if (characterService.still_loading()) { return false }\r\n        //Don't check the level if skipLevel is set. This is used for subFeats, where the superFeat's levelreq is enough.\r\n        let levelreq: boolean = ignoreRequirementsList.includes(\"levelreq\") || skipLevel || this.meetsLevelReq(characterService, choiceLevel).met;\r\n        //Check the ability reqs. True if ALL are true.\r\n        let abilityreqs = this.meetsAbilityReq(characterService, charLevel)\r\n        let abilityreq: boolean = ignoreRequirementsList.includes(\"abilityreq\") || abilityreqs.filter(req => req.met == false).length == 0;\r\n        //Check the skill reqs. True if ANY is true.\r\n        let skillreqs = this.meetsSkillReq(characterService, charLevel)\r\n        let skillreq: boolean = ignoreRequirementsList.includes(\"skillreq\") || skillreqs.filter(req => req.met == true).length > 0;\r\n        //Check the feat reqs. True if ALL are true.\r\n        let featreqs = this.meetsFeatReq(characterService, charLevel);\r\n        let featreq: boolean = ignoreRequirementsList.includes(\"featreq\") || featreqs.filter(req => req.met == false).length == 0;\r\n        //Check the heritage reqs. True if ALL are true. (There is only one.)\r\n        let heritagereqs = this.meetsHeritageReq(characterService, charLevel);\r\n        let heritagereq: boolean = ignoreRequirementsList.includes(\"heritagereq\") || heritagereqs.filter(req => req.met == false).length == 0;\r\n        //Check the special req. True if returns true.\r\n        let specialreq: boolean = ignoreRequirementsList.includes(\"specialreq\") || this.meetsSpecialReq(characterService, charLevel).met;\r\n        //Return true if all are true\r\n        return levelreq && abilityreq && skillreq && featreq && specialreq && heritagereq;\r\n    }\r\n    have(creature: Creature, characterService: CharacterService, charLevel: number = characterService.get_Character().level, excludeTemporary: boolean = false, includeCountAs: boolean = false, minLevel: number = 1) {\r\n        if (characterService.still_loading()) { return 0 }\r\n        if (creature.type == \"Character\") {\r\n            return (creature as Character).get_FeatsTaken(minLevel, charLevel, this.name, \"\", \"\", undefined, excludeTemporary, includeCountAs)?.length || 0;\r\n        } else if (creature.type == \"Familiar\") {\r\n            return (creature as Familiar).abilities.feats.filter(gain => gain.name.toLowerCase() == this.name.toLowerCase())?.length || 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}","<div class=\"window-button-container\">\r\n    <button class=\"minimizebutton lower\"\r\n        [ngbTooltip]=\"get_Minimized() ? 'Click to show all choices and information.' : 'Click to hide finished choices and show compact information.'\"\r\n        [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n        <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n        <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n    </button>\r\n    <button class=\"tilemodebutton\" [ngClass]=\"{'fancy-button':get_TileMode()}\" (click)=\"toggle_TileMode()\"\r\n        [ngbTooltip]=\"get_TileMode() ? 'Click to enable list layout' : 'Click to enable tiled layout'\">\r\n        <!--Content is css only-->\r\n        <div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n        </div>\r\n    </button>\r\n</div>\r\n<div id=\"spells-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleSpellMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"charactersheet-column-container\">\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n                <ng-container *ngIf=\"!still_loading() && get_Character().class && get_SpellsMenuState()=='in'\">\r\n                    <div class=\"itembox-inner\">\r\n                        <div class=\"list-item\">\r\n                            <span>\r\n                                <input id=\"allowHeightened\" type=\"checkbox\" [(ngModel)]=\"allowHeightened\">\r\n                                <label for=\"allowHeightened\">&nbsp;Allow heightened spells</label>\r\n                            </span>\r\n                        </div>\r\n                        <ng-container\r\n                            *ngFor=\"let casting of get_SpellCastings(); let index = index; trackBy:trackByIndex;\">\r\n                            <header class=\"sectionHeader\">{{(casting.className + \" \" + casting.tradition +\r\n                                ((casting.castingType ==\r\n                                \"Focus\") ? (\" \" + casting.source) : \" Spells\")).trim()}}\r\n                                <span class=\"lower\" *ngIf=\"['Prepared', 'Spontaneous'].includes(casting.castingType)\">\r\n                                    <span class=\"lower\">\r\n                                        {{casting.castingType}}\r\n                                    </span>\r\n                                </span>\r\n                            </header>\r\n                            <app-tags [creature]=\"'Character'\"\r\n                                [objectName]=\"casting.className + ' ' + casting.castingType + ' Spells'\"\r\n                                [showTraits]=true [showFeats]=true [showItems]=true [showActivities]=true\r\n                                [showConditions]=true [showEffects]=true>\r\n                            </app-tags>\r\n                            <div class=\"list-item\" *ngIf=\"need_Spellbook(casting)\">\r\n                                <span>\r\n                                    <input id=\"allowBorrow\" type=\"checkbox\" [(ngModel)]=\"allowBorrow\">\r\n                                    <label for=\"allowBorrow\">Borrow\r\n                                        spells</label>\r\n                                </span>\r\n                                <span [ngbPopover]=\"'Allow selecting spells not in your spellbook'\">\r\n                                    <button class=\"lower inactive-button\">Details</button>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"list-item\" *ngIf=\"apply_SpellSubstitution(casting)\">\r\n                                <div class=\"newrow\">\r\n                                    <span>\r\n                                        <input id=\"allowSpellSubstitution\" type=\"checkbox\" [(ngModel)]=\"prepared\">\r\n                                        <label for=\"allowSpellSubstitution\">Spell\r\n                                            Substitution</label>\r\n                                    </span>\r\n                                    <span [ngbPopover]=\"'Selected spells are immediately prepared'\">\r\n                                        <button class=\"lower inactive-button\">Details</button>\r\n                                    </span>\r\n                                </div>\r\n                                <app-tags [creature]=\"'Character'\" [objectName]=\"'Spell Substitution'\" [showTraits]=true\r\n                                    [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true\r\n                                    [showEffects]=true></app-tags>\r\n                            </div>\r\n                            <ng-container\r\n                                *ngFor=\"let level of [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; trackBy:trackByIndex;\">\r\n                                <ng-container *ngIf=\"level <= get_MaxSpellLevel()\">\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level == -1 && casting.castingType == 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        Focus Spells</header>\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level == 0 && casting.castingType == 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        Focus Cantrips</header>\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level == 0 && casting.castingType != 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        Cantrips</header>\r\n                                    <header class=\"subsectionHeader\"\r\n                                        *ngIf=\"level > 0 && casting.castingType != 'Focus' && get_SpellChoices(casting, level).length\">\r\n                                        {{\"Level \"+level}}</header>\r\n                                    <!--Fixed information-->\r\n                                    <div class=\"fullsize-only list-item\"\r\n                                        *ngIf=\"get_SpellsTaken(1, get_Character().level, level, '', casting, '', '', true).length\">\r\n                                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                                            (click)=\"toggle_Choice(index+'showFixedChanges'+level)\">\r\n                                            Show fixed changes\r\n                                        </button>\r\n                                        <div class=\"list-item sublist fancy-list\"\r\n                                            *ngIf=\"get_ShowChoice()==index+'showFixedChanges'+level\">\r\n                                            <!--Fixed Spells gained-->\r\n                                            <div class=\"list-item\"\r\n                                                *ngFor=\"let spellTaken of get_SpellsTaken(1, get_Character().level, level, '', casting, '', '', true); trackBy:trackByIndex;\">\r\n                                                {{spellTaken.gain.name}} {{spellTaken.gain.source ?\r\n                                                \"(\"+spellTaken.gain.source+\")\" :\r\n                                                \"\"}}\r\n                                                <ng-container\r\n                                                    *ngFor=\"let spellID of [spellTaken.choice.id+spellTaken.gain.name+'desc']\">\r\n                                                    <button class=\"right-bound\" (click)=\"toggle_Spell(spellID)\"\r\n                                                        [ngClass]=\"{'fancy-button':get_ShowSpell()==spellID}\">\r\n                                                        {{get_ShowSpell()==spellID ? \"Hide\" : \"Show\"}} Description\r\n                                                    </button>\r\n                                                    <div class=\"newrow left-aligned\" *ngIf=\"get_ShowSpell()==spellID\">\r\n                                                        <app-spell [spell]=\"get_Spells(spellTaken.gain.name)[0]\"\r\n                                                            [spellLevel]=\"level\">\r\n                                                        </app-spell>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!--Spell choices-->\r\n                                    <ng-container\r\n                                        *ngFor=\"let choices of [get_SpellChoices(casting, level)]; trackBy:trackByIndex;\">\r\n                                        <div [ngClass]=\"{'icon-list':get_TileMode()}\" *ngIf=\"choices.length\"\r\n                                            style=\"min-height: auto\">\r\n                                            <ng-container *ngFor=\"let choice of choices; trackBy:trackByIndex;\">\r\n                                                <app-spellchoice (showChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                    (showSpellMessage)=\"receive_SpellMessage($event)\"\r\n                                                    [spellCasting]=\"casting\" [choice]=\"choice\"\r\n                                                    [allowHeightened]=\"allowHeightened\" [allowBorrow]=\"allowBorrow\"\r\n                                                    [showChoice]=\"showChoice\" [showSpell]=\"showSpell\" [level]=\"level\"\r\n                                                    [prepared]=\"prepared\" [spellbook]=\"true\" [showContent]=\"false\"\r\n                                                    [tileMode]=\"get_TileMode()\"></app-spellchoice>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div id=\"choiceArea-top\"></div>\r\n                <!--Spell Choice content-->\r\n                <ng-container *ngFor=\"let choiceContent of get_ActiveChoiceContent(); trackBy:trackByID;\">\r\n                    <app-spellchoice (showChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                        (showSpellMessage)=\"receive_SpellMessage($event)\" [spellCasting]=\"choiceContent.casting\"\r\n                        [choice]=\"choiceContent.choice\" [allowHeightened]=\"allowHeightened\" [allowBorrow]=\"allowBorrow\"\r\n                        [showChoice]=\"choiceContent.name\" [showSpell]=\"showSpell\" [level]=\"choiceContent.levelNumber\"\r\n                        [prepared]=\"prepared\" [spellbook]=\"true\" [showTitle]=\"false\">\r\n                    </app-spellchoice>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { SpellChoice } from '../SpellChoice';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spells',\r\n    templateUrl: './spells.component.html',\r\n    styleUrls: ['./spells.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellsComponent implements OnInit {\r\n\r\n    public showSpell: string = \"\";\r\n    public showChoice: string = \"\";\r\n    public allowHeightened: boolean = false;\r\n    public allowBorrow: boolean = false;\r\n    public prepared: boolean = false;\r\n    private showContent: SpellChoice = null;\r\n    private showSpellCasting: SpellCasting = null;\r\n    private showContentLevelNumber: number = 0;\r\n    \r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.spellsMinimized = !this.characterService.get_Character().settings.spellsMinimized;\r\n    }\r\n\r\n    toggle_TileMode() {\r\n        this.get_Character().settings.spellsTileMode = !this.get_Character().settings.spellsTileMode;\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.spellsMinimized;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.characterService.get_Character().settings.spellsTileMode;\r\n    }\r\n\r\n    toggleSpellMenu() {\r\n        this.characterService.toggle_Menu(\"spells\");\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.characterService.get_SpellsMenuState();\r\n    }\r\n\r\n    toggle_Spell(name: string) {\r\n        if (this.showSpell == name) {\r\n            this.showSpell = \"\";\r\n        } else {\r\n            this.showSpell = name;\r\n        }\r\n    }\r\n\r\n    toggle_Choice(name: string, levelNumber: number = 0, content: SpellChoice = null, casting: SpellCasting = null) {\r\n        //Set the currently shown list name, level number and content so that the correct choice with the correct data can be shown in the choice area.\r\n        if (this.showChoice == name &&\r\n            (!levelNumber || this.showContentLevelNumber == levelNumber) &&\r\n            (!content || JSON.stringify(this.showContent) == JSON.stringify(content))) {\r\n            this.showChoice = \"\";\r\n            this.showContentLevelNumber = 0;\r\n            this.showContent = null;\r\n            this.showSpellCasting = null;\r\n        } else {\r\n            this.showChoice = name;\r\n            this.showContentLevelNumber = levelNumber;\r\n            this.showContent = content;\r\n            this.showSpellCasting = casting;\r\n            this.reset_ChoiceArea();\r\n        }\r\n    }\r\n\r\n    reset_ChoiceArea() {\r\n        document.getElementById(\"choiceArea-top\").scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SpellChoice, casting: SpellCasting }) {\r\n        this.toggle_Choice(message.name, message.levelNumber, message.choice, message.casting);\r\n    }\r\n\r\n    receive_SpellMessage(name: string) {\r\n        this.toggle_Spell(name);\r\n    }\r\n\r\n    get_ShowSpell() {\r\n        return this.showSpell;\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    get_ActiveChoiceContent() {\r\n        //Get the currently shown spell choice with levelNumber and spellcasting.\r\n        //Also get the currently shown list name for compatibility.\r\n        if (this.showContent) {\r\n            return [{ name: this.get_ShowChoice(), levelNumber: this.showContentLevelNumber, choice: this.showContent, casting: this.showSpellCasting }];\r\n        }\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByID(index: number, obj: any): any {\r\n        //Track spell choices by id, so that when the selected choice changes, the choice area content is updated.\r\n        // The choice area content is only ever one choice, so the index would always be 0.\r\n        return obj.choice.id;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    need_Spellbook(casting: SpellCasting) {\r\n        return casting.castingType == \"Prepared\" && casting.className == \"Wizard\";\r\n    }\r\n\r\n    apply_SpellSubstitution(casting: SpellCasting) {\r\n        return casting.castingType == \"Prepared\" &&\r\n            casting.className == \"Wizard\" &&\r\n            this.get_Character().get_FeatsTaken(1, this.get_Character().level, \"Spell Substitution\").length > 0;\r\n    }\r\n\r\n    apply_ReprepareSpell(casting: SpellCasting) {\r\n        return casting.castingType == \"Prepared\" &&\r\n            casting.className == \"Wizard\" &&\r\n            this.get_Character().get_FeatsTaken(1, this.get_Character().level, \"Reprepare Spell\").length > 0;\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    get_MaxSpellLevel() {\r\n        return this.get_Character().get_SpellLevel();\r\n    }\r\n\r\n    get_SpellCastings() {\r\n        let character = this.get_Character();\r\n        return character.class.spellCasting.filter(casting => casting.charLevelAvailable && casting.charLevelAvailable <= character.level)\r\n            .sort(function (a, b) {\r\n                if (a.tradition > b.tradition) {\r\n                    return 1;\r\n                }\r\n                if (a.tradition < b.tradition) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.className > b.className) {\r\n                    return 1;\r\n                }\r\n                if (a.className < b.className) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }).sort(function (a, b) {\r\n                if (a.castingType > b.castingType || (b.castingType == \"Innate\" ? a.castingType != \"Innate\" : false)) {\r\n                    return 1;\r\n                }\r\n                if (a.castingType < b.castingType || (a.castingType == \"Innate\" ? b.castingType != \"Innate\" : false)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    get_DynamicLevel(casting: SpellCasting, choice: SpellChoice) {\r\n        return this.spellsService.get_DynamicSpellLevel(casting, choice, this.characterService);\r\n    }\r\n\r\n    get_SpellChoices(casting: SpellCasting, levelNumber: number) {\r\n        //Get all spellchoices that have this spell level and are available at this character level.\r\n        return casting.spellChoices.filter(choice => choice.charLevelAvailable <= this.get_Character().level && !choice.showOnSheet &&\r\n            ((choice.level == levelNumber && !choice.dynamicLevel) || (choice.dynamicLevel && this.get_DynamicLevel(casting, choice) == levelNumber))\r\n        )\r\n    }\r\n\r\n    get_SpellsTaken(minLevelNumber: number, maxLevelNumber: number, spellLevel: number, spellName: string, casting: SpellCasting, source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        let cantripAllowed: boolean = (spellLevel == 0);\r\n        return this.get_Character().get_SpellsTaken(this.characterService, minLevelNumber, maxLevelNumber, spellLevel, spellName, casting, \"\", \"\", \"\", source, sourceId, locked, false, cantripAllowed);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spells\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"spells\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","export class LanguageGain {\r\n    public name: string = \"\";\r\n    public source: string = \"\";\r\n    public locked: boolean = false;\r\n    public level: number = -1;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { Weapon } from '../Weapon';\r\nimport { TraitsService } from '../traits.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { WeaponRune } from '../WeaponRune';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Ammunition } from '../Ammunition';\r\nimport { ItemCollection } from '../ItemCollection';\r\nimport { Talisman } from '../Talisman';\r\nimport { AlchemicalBomb } from '../AlchemicalBomb';\r\nimport { Consumable } from '../Consumable';\r\nimport { Snare } from '../Snare';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { AlchemicalPoison } from '../AlchemicalPoison';\r\nimport { OtherConsumableBomb } from '../OtherConsumableBomb';\r\nimport { Equipment } from '../Equipment';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-attacks',\r\n    templateUrl: './attacks.component.html',\r\n    styleUrls: ['./attacks.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AttacksComponent implements OnInit {\r\n\r\n    @Input()\r\n    public creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    public onlyAttacks: string[] = [];\r\n    public forbiddenAttacks: string[] = [];\r\n    public showRestricted: boolean = false;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private traitsService: TraitsService,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        public conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 100;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 100;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.attacksMinimized = !this.characterService.get_Character().settings.attacksMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.attacksMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    get_Creature(type: string = this.creature) {\r\n        return this.characterService.get_Creature(type) as Character | AnimalCompanion;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Item(id: string) {\r\n        if (this.showItem == id) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_CritSpecialization(weapon: Weapon, range: string) {\r\n        return weapon.get_CritSpecialization(this.get_Creature(), this.characterService, range);\r\n    }\r\n\r\n    get_AttackRestrictions() {\r\n        this.onlyAttacks = [];\r\n        this.forbiddenAttacks = [];\r\n        this.characterService.get_AppliedConditions(this.get_Creature()).filter(gain => gain.apply).forEach(gain => {\r\n            let condition = this.characterService.get_Conditions(gain.name)[0];\r\n            this.onlyAttacks.push(\r\n                ...condition?.attackRestrictions\r\n                    .filter(restriction => !restriction.excluding && (!restriction.conditionChoiceFilter || restriction.conditionChoiceFilter == gain.choice))\r\n                    .map(restriction => restriction.name)\r\n            )\r\n            this.forbiddenAttacks.push(\r\n                ...condition?.attackRestrictions\r\n                    .filter(restriction => restriction.excluding && (!restriction.conditionChoiceFilter || restriction.conditionChoiceFilter == gain.choice))\r\n                    .map(restriction => restriction.name)\r\n            )\r\n        });\r\n    }\r\n\r\n    get_IsAllowed(weapon: Weapon) {\r\n        return !(this.onlyAttacks.length && !this.onlyAttacks.includes(weapon.name)) && !this.forbiddenAttacks.includes(weapon.name);\r\n    }\r\n\r\n    get_EquippedWeapons() {\r\n        this.get_AttackRestrictions();\r\n        return this.get_Creature().inventories[0].weapons.filter(weapon => weapon.equipped && weapon.equippable && !weapon.broken)\r\n            .concat(...this.get_Creature().inventories.map(inv => inv.alchemicalbombs))\r\n            .concat(...this.get_Creature().inventories.map(inv => inv.otherconsumablesbombs))\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1\r\n                }\r\n                return 0;\r\n            })\r\n            .sort(function (a, b) {\r\n                if (a.type < b.type) {\r\n                    return 1\r\n                }\r\n                if (a.type > b.type) {\r\n                    return -1\r\n                }\r\n                return 0;\r\n            })\r\n    }\r\n\r\n    get_TalismanTitle(talisman: Talisman) {\r\n        return (talisman.trigger ? \"Trigger: \" + talisman.trigger + \"\\n\\n\" : \"\") + talisman.desc;\r\n    }\r\n\r\n    get_PoisonTitle(poison: AlchemicalPoison) {\r\n        return poison.desc;\r\n    }\r\n\r\n    get_TwoHandedAllowed(weapon: Weapon) {\r\n        return (this.traitsService.have_Trait(this.characterService, weapon, \"Two-Hand\"));\r\n    }\r\n\r\n    on_EquipmentChange(item: Equipment) {\r\n        this.characterService.set_EquipmentViewChanges(this.get_Creature(), item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TalismanUse(weapon: Weapon, talisman: Talisman, index: number) {\r\n        this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), talisman);\r\n        weapon.talismans.splice(index, 1)\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_PoisonUse(weapon: Weapon, poison: AlchemicalPoison) {\r\n        this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), poison);\r\n        weapon.poisonsApplied.length = 0;\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AmmoTypes() {\r\n        let types: string[] = [];\r\n        this.get_EquippedWeapons().forEach(weapon => {\r\n            if (weapon.ammunition && !types.includes(weapon.ammunition)) {\r\n                types.push(weapon.ammunition);\r\n            }\r\n        });\r\n        return types;\r\n    }\r\n\r\n    get_Ammo(type: string) {\r\n        //Return all ammo from all inventories that has this type in its group\r\n        //We need the inventory for using up items and the name just for sorting\r\n        let ammoList: { item: Ammunition, name: string, inventory: ItemCollection }[] = [];\r\n        this.get_Creature().inventories.forEach(inv => {\r\n            inv.ammunition.filter(ammo => ammo.ammunition == type || ammo.ammunition == \"Any\").forEach(ammo => {\r\n                ammoList.push({ item: ammo, name: ammo.get_Name(), inventory: inv })\r\n            })\r\n        });\r\n        return ammoList.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });;\r\n    }\r\n\r\n    get_Snares() {\r\n        let snares: { item: Snare, name: string, inventory: ItemCollection }[] = [];\r\n        this.get_Creature().inventories.forEach(inv => {\r\n            inv.snares.forEach(snare => {\r\n                snares.push({ item: snare, name: snare.get_Name(), inventory: inv })\r\n            })\r\n        });\r\n        return snares.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });;\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.characterService.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    on_ConsumableUse(item: Ammunition | AlchemicalBomb | OtherConsumableBomb, inv: ItemCollection) {\r\n        if (item.storedSpells.length) {\r\n            let spellName = item.storedSpells[0]?.spells[0]?.name || \"\";\r\n            let spellChoice = item.storedSpells[0];\r\n            if (spellChoice && spellName) {\r\n                let spell = this.get_Spells(item.storedSpells[0]?.spells[0]?.name)[0];\r\n                if (spell) {\r\n                    let tempGain: SpellGain = new SpellGain();\r\n                    let target: string = \"\";\r\n                    if (spell.target == 'self') {\r\n                        target = \"Character\";\r\n                    }\r\n                    this.characterService.spellsService.process_Spell(this.get_Creature('Character'), target, this.characterService, this.characterService.itemsService, this.characterService.conditionsService, null, tempGain, spell, spellChoice.level, true, true, false);\r\n                }\r\n                spellChoice.spells.shift();\r\n            }\r\n        }\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), item as Consumable);\r\n        if (item.can_Stack()) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n            this.characterService.process_ToChange();\r\n        } else {\r\n            this.characterService.drop_InventoryItem(this.get_Creature(), inv, item, true);\r\n        }\r\n\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        return this.characterService.get_Skills(this.get_Creature(), name, type);\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_HintRunes(weapon: Weapon, range: string) {\r\n        //Return all runes and rune-emulating oil effects that have a hint to show\r\n        let runes: WeaponRune[] = [];\r\n        let runeSource = weapon.get_RuneSource(this.get_Creature(), range);\r\n        runes.push(...runeSource[1].propertyRunes.filter((rune: WeaponRune) => rune.hints.length) as WeaponRune[]);\r\n        runes.push(...weapon.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.hints.length).map(oil => oil.runeEffect));\r\n        if (runeSource[1].bladeAlly) {\r\n            runes.push(...runeSource[1].bladeAllyRunes.filter((rune: WeaponRune) => rune.hints.length) as WeaponRune[]);\r\n        }\r\n        return runes;\r\n    }\r\n\r\n    get_Runes(weapon: Weapon, range: string) {\r\n        //Return all runes and rune-emulating oil effects\r\n        let runes: WeaponRune[] = [];\r\n        let runeSource = weapon.get_RuneSource(this.get_Creature(), range);\r\n        runes.push(...weapon.get_RuneSource(this.get_Creature(), range)[1].propertyRunes as WeaponRune[]);\r\n        runes.push(...weapon.oilsApplied.filter(oil => oil.runeEffect).map(oil => oil.runeEffect));\r\n        if (runeSource[1].bladeAlly) {\r\n            runes.push(...runeSource[1].bladeAllyRunes as WeaponRune[]);\r\n        }\r\n        return runes;\r\n    }\r\n\r\n    get_HandwrapsOfMightyBlows(weapon: Weapon) {\r\n        if (weapon.traits.includes(\"Unarmed\")) {\r\n            let handwraps = this.get_Creature().inventories[0].wornitems.find(wornItem => wornItem.isHandwrapsOfMightyBlows && wornItem.invested);\r\n            if (handwraps) {\r\n                return [handwraps];\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_GrievousData(weapon: Weapon, rune: WeaponRune) {\r\n        let data = rune.data.filter(data => data.name == weapon.group);\r\n        if (data.length) {\r\n            return data[0].value;\r\n        }\r\n    }\r\n\r\n    get_SpecialShowon(weapon: Weapon, range: string) {\r\n        //Under certain circumstances, some Feats apply to Weapons independently of their name.\r\n        //Return names that get_FeatsShowingOn should run on\r\n        let specialNames: string[] = []\r\n        if (weapon.traits.includes(\"Monk\") && this.characterService.get_Feats(\"Monastic Weaponry\")[0].have(this.get_Creature(), this.characterService)) {\r\n            specialNames.push(\"Unarmed Attacks\");\r\n        }\r\n        let creature = this.get_Creature();\r\n        specialNames.push(weapon.get_Proficiency(creature, this.characterService, creature.level));\r\n        specialNames.push(...weapon.get_Traits(this.characterService, creature));\r\n        specialNames.push(range)\r\n        specialNames.push(weapon.weaponBase)\r\n        return specialNames;\r\n    }\r\n\r\n    get_Attacks(weapon: Weapon) {\r\n        return []\r\n            .concat((weapon.melee ? [weapon.attack(this.get_Creature(), this.characterService, this.effectsService, 'melee')] : []))\r\n            .concat(((weapon.ranged || weapon.traits.find(trait => trait.includes(\"Thrown\"))) ? [weapon.attack(this.get_Creature(), this.characterService, this.effectsService, 'ranged')] : []));\r\n    }\r\n\r\n    get_Damage(weapon: Weapon, range: string) {\r\n        return weapon.damage(this.get_Creature(), this.characterService, this.effectsService, range);\r\n    }\r\n\r\n    get_FlurryAllowed() {\r\n        let creature = this.get_Creature();\r\n        let character = this.characterService.get_Character();\r\n        if (creature.type == \"Character\" || (creature.type == \"Companion\" && character.get_FeatsTaken(1, creature.level, \"Animal Companion (Ranger)\").length)) {\r\n            return character.get_FeatsTaken(1, creature.level, \"Flurry\").length + character.get_FeatsTaken(1, creature.level, \"Manifold Edge\").length;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_MultipleAttackPenalty() {\r\n        let creature = this.get_Creature();\r\n        let conditions: string[] = this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n        .filter(gain => [\"Multiple Attack Penalty: Second Attack\", \"Multiple Attack Penalty: Third Attack\", \"Multiple Attack Penalty: Second Attack (Flurry)\", \"Multiple Attack Penalty: Third Attack (Flurry)\"].includes(gain.name) && gain.source == \"Attacks\")\r\n            .map(gain => gain.name);\r\n        if (conditions.includes(\"Multiple Attack Penalty: Third Attack (Flurry)\")) {\r\n            return \"3f\";\r\n        }\r\n        if (conditions.includes(\"Multiple Attack Penalty: Third Attack\")) {\r\n            return \"3\";\r\n        }\r\n        if (conditions.includes(\"Multiple Attack Penalty: Second Attack (Flurry)\")) {\r\n            return \"2f\";\r\n        }\r\n        if (conditions.includes(\"Multiple Attack Penalty: Second Attack\")) {\r\n            return \"2\";\r\n        }\r\n        return \"1\";\r\n    }\r\n\r\n    set_MultipleAttackPenalty(map: \"1\" | \"2\" | \"3\" | \"2f\" | \"3f\") {\r\n        let creature = this.get_Creature();\r\n        let conditions: ConditionGain[] = this.conditionsService.get_AppliedConditions(creature, this.characterService, creature.conditions, true)\r\n            .filter(gain => [\"Multiple Attack Penalty: Second Attack\", \"Multiple Attack Penalty: Third Attack\", \"Multiple Attack Penalty: Second Attack (Flurry)\", \"Multiple Attack Penalty: Third Attack (Flurry)\"].includes(gain.name) && gain.source == \"Attacks\");\r\n        let map2 = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Second Attack\");\r\n        let map3 = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Third Attack\");\r\n        let map2f = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Second Attack (Flurry)\");\r\n        let map3f = conditions.find(gain => gain.name == \"Multiple Attack Penalty: Third Attack (Flurry)\");\r\n        let mapName: string = \"\";\r\n        switch (map) {\r\n            case \"2\":\r\n                if (!map2) {\r\n                    mapName = \"Multiple Attack Penalty: Second Attack\";\r\n                }\r\n                break;\r\n            case \"3\":\r\n                if (!map3) {\r\n                    mapName = \"Multiple Attack Penalty: Third Attack\";\r\n                }\r\n                break;\r\n            case \"2f\":\r\n                if (!map2f) {\r\n                    mapName = \"Multiple Attack Penalty: Second Attack (Flurry)\";\r\n                }\r\n                break;\r\n            case \"3f\":\r\n                if (!map3f) {\r\n                    mapName = \"Multiple Attack Penalty: Third Attack (Flurry)\";\r\n                }\r\n                break;\r\n        }\r\n        if (map2 && map != \"2\") {\r\n            this.characterService.remove_Condition(creature, map2, false);\r\n        }\r\n        if (map3 && map != \"3\") {\r\n            this.characterService.remove_Condition(creature, map3, false);\r\n        }\r\n        if (map2f && map != \"2f\") {\r\n            this.characterService.remove_Condition(creature, map2f, false);\r\n        }\r\n        if (map3f && map != \"3f\") {\r\n            this.characterService.remove_Condition(creature, map3f, false);\r\n        }\r\n        if (mapName) {\r\n            let newCondition: ConditionGain = Object.assign(new ConditionGain(), { name: mapName, source: \"Attacks\", duration: 5, locked: true })\r\n            this.characterService.add_Condition(creature, newCondition, false);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"attacks\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"attacks\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-attacks-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Attacks</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Attacks'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <div class=\"list-item\">\r\n            <button class=\"newrow sublist-toggle center-aligned\" (click)=\"toggle_List('QuickStatus')\">\r\n                Quick Status\r\n            </button>\r\n            <div class=\"list-item sublist\" *ngIf=\"get_ShowList()=='QuickStatus'\">\r\n                <div class=\"list-item newrow\">\r\n                    <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '2'\"\r\n                        (click)=\"set_MultipleAttackPenalty('2')\">Multiple Attack Penalty: Second Attack</button>\r\n                    <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '2'\"\r\n                        (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                        Multiple Attack Penalty</button>\r\n                </div>\r\n                <div class=\"list-item newrow\">\r\n                    <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '3'\"\r\n                        (click)=\"set_MultipleAttackPenalty('3')\">Multiple Attack Penalty: Third Attack</button>\r\n                    <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '3'\"\r\n                        (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                        Multiple Attack Penalty</button>\r\n                </div>\r\n                <ng-container *ngIf=\"get_FlurryAllowed()\">\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '2f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('2f')\">Multiple Attack Penalty: Second Attack\r\n                            (Flurry)</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '2f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                            Multiple Attack Penalty</button>\r\n                    </div>\r\n                    <div class=\"list-item newrow\">\r\n                        <button class=\"center-aligned\" *ngIf=\"get_MultipleAttackPenalty() != '3f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('3f')\">Multiple Attack Penalty: Third Attack\r\n                            (Flurry)</button>\r\n                        <button class=\"center-aligned fancy-button\" *ngIf=\"get_MultipleAttackPenalty() == '3f'\"\r\n                            (click)=\"set_MultipleAttackPenalty('1')\">End\r\n                            Multiple Attack Penalty</button>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngFor=\"let weapon of get_EquippedWeapons(); let weaponIndex = index; trackBy:trackByIndex;\">\r\n            <div class=\"fullsize-only list-item\"\r\n                *ngIf=\"(onlyAttacks.length || forbiddenAttacks.length) && weaponIndex == 0\">\r\n                <label for=\"showRestricted\">Show restricted attacks</label>\r\n                <input id=\"showRestricted\" type=\"checkbox\" [(ngModel)]=\"showRestricted\">\r\n            </div>\r\n            <div class=\"list-item\"\r\n                [ngClass]=\"{'problem fullsize-only':!get_IsAllowed(weapon), 'invisible':!get_IsAllowed(weapon) && !showRestricted}\"\r\n                *ngFor=\"let attack of get_Attacks(weapon); trackBy:trackByIndex;\">\r\n                <div class=\"newrow\">\r\n                    <span style=\"flex-basis:auto\">\r\n                        <strong *ngIf=\"!['alchemicalbombs', 'otherconsumablesbombs'].includes(weapon.type)\">\r\n                            <span [ngbTooltip]=\"'Melee'\" *ngIf=\"attack[0] == 'melee'\"><i class='ra ra-sword'></i></span>\r\n                            <span [ngbTooltip]=\"'Ranged ' + weapon.ranged + ' feet'\"\r\n                                *ngIf=\"attack[0] == 'ranged'\"><i class='ra ra-target-arrows'></i></span> {{weapon.get_Name()}}\r\n                        </strong>\r\n                        <strong *ngFor=\"let handwraps of get_HandwrapsOfMightyBlows(weapon); trackBy:trackByIndex;\">\r\n                            ({{handwraps.get_Name()}})\r\n                        </strong>\r\n                        <button style=\"flex-basis:auto\" [disabled]=\"!weapon.amount\"\r\n                            (click)=\"on_ConsumableUse(weapon, null)\"\r\n                            *ngIf=\"['alchemicalbombs', 'otherconsumablesbombs'].includes(weapon.type)\">\r\n                            <span [ngbTooltip]=\"'Melee'\" *ngIf=\"attack[0] == 'melee'\"><i class='ra ra-sword'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Ranged ' + weapon.ranged + ' feet'\"\r\n                                *ngIf=\"attack[0] == 'ranged'\"><i class='ra ra-target-arrows'></i>&nbsp;</span>\r\n                            <span>{{(weapon.amount != undefined && weapon.amount != 1) ?\r\n                                weapon.amount+\" \" : \"\"}}{{weapon.get_Name()}}<app-actionIcons\r\n                                    [actionString]=\"weapon.actions\">\r\n                                </app-actionIcons>{{weapon.activationType ? weapon.activationType : \"\"}}\r\n                            </span>\r\n                        </button>\r\n                    </span>\r\n                    <span style=\"flex-basis:auto\">\r\n                        Attack\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"attack[2]\"\r\n                                [ngClass]=\"{'penalty':attack[4].length, 'bonus':attack[5].length, 'absolute':attack[6].length}\">\r\n                                {{attack[1]}}\r\n                            </div>\r\n                        </span>\r\n                        <ng-container *ngFor=\"let damage of [get_Damage(weapon, attack[0])]; trackBy:trackByIndex;\">\r\n                            <span *ngIf=\"!damage[0].includes('0d0')\">&nbsp;Damage&nbsp;</span>\r\n                            <ng-container *ngFor=\"let line of damage[0].split('\\n'); let index = index; trackBy:trackByIndex;\">\r\n                                <div class=\"value\" [ngbPopover]=\"damage[1]\"\r\n                                    [ngClass]=\"{'penalty':!index && damage[3].length, 'bonus':!index && damage[2].length, 'absolute':!index && damage[4].length}\"\r\n                                    *ngIf=\"!line.includes('0d0')\">{{line}}\r\n                                </div>\r\n                                <br>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </span>\r\n                </div>\r\n                <ng-container\r\n                    *ngFor=\"let traits of [weapon.get_Traits(characterService, get_Creature())]; trackBy:trackByIndex;\">\r\n                    <div class=\"fullsize-only newrow left-aligned tags\" *ngIf=\"traits.length\">\r\n                        <cite class=\"trait\" *ngFor=\"let trait of traits; trackBy:trackByIndex;\"\r\n                            [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"list-item newrow\" *ngIf=\"get_TwoHandedAllowed(weapon)\">\r\n                    <span>\r\n                        <input id=\"{{weapon.id}}twohanded\" type=\"checkbox\" [(ngModel)]=\"weapon.twohanded\"\r\n                            (ngModelChange)=on_EquipmentChange(weapon)>\r\n                        <label for=\"{{weapon.id}}twohanded\">Wield two-handed</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"fullsize-only newrow left-aligned\"\r\n                    *ngFor=\"let runes of [get_HintRunes(weapon, attack[0])]; trackBy:trackByIndex;\"\r\n                    style=\"margin-top:initial\">\r\n                    <ng-container *ngFor=\"let rune of runes; trackBy:trackByIndex;\">\r\n                        <cite class=\"rune\" *ngFor=\"let hint of rune.hints; trackBy:trackByIndex;\"\r\n                            [ngbPopover]=\"hint.desc\">{{rune.name}}</cite>\r\n                    </ng-container>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=weapon.name [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true\r\n                    [specialNames]=\"get_SpecialShowon(weapon, attack[0])\" [specialEffects]=attack[3]></app-tags>\r\n                <div class=\"fullsize-only lower newrow left-aligned\"\r\n                    *ngFor=\"let poison of weapon.poisonsApplied; let index = index; trackBy:trackByIndex;\">\r\n                    <button [ngbTooltip]=\"get_PoisonTitle(poison)\" (click)=\"on_PoisonUse(weapon, poison)\">\r\n                        <span>Spend/Remove {{poison.name}}</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"fullsize-only lower newrow left-aligned\"\r\n                    *ngFor=\"let talisman of weapon.talismans; let index = index; trackBy:trackByIndex;\">\r\n                    <button [ngbTooltip]=\"get_TalismanTitle(talisman)\"\r\n                        (click)=\"on_TalismanUse(weapon, talisman, index)\">\r\n                        <span>Activate {{talisman.name}}<app-actionIcons [actionString]=\"talisman.actions\">\r\n                            </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"fullsize-only list-item newrow\" *ngIf=\"weapon.hitEffect\">\r\n                    <button class=\"newrow sublist-toggle fancy-button\"\r\n                        (click)=\"toggle_Item(weapon.id+attack[0]+'hiteffects')\">\r\n                        Hit effect\r\n                    </button>\r\n                    <div class=\"list-item sublist fancy-list\" *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'hiteffects'\">\r\n                        <div class=\"list-item lower newrow left-aligned\">\r\n                            {{weapon.hitEffect}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fullsize-only list-item newrow\" *ngIf=\"weapon.criticalHint\">\r\n                    <button class=\"newrow sublist-toggle fancy-button\"\r\n                        (click)=\"toggle_Item(weapon.id+attack[0]+'criticalHint')\">\r\n                        Critical hit effect\r\n                    </button>\r\n                    <div class=\"list-item sublist fancy-list\"\r\n                        *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'criticalHint'\">\r\n                        <div class=\"list-item lower newrow left-aligned\">\r\n                            {{weapon.criticalHint}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngFor=\"let specs of [get_CritSpecialization(weapon, attack[0])]; trackBy:trackByIndex;\">\r\n                    <div class=\"fullsize-only list-item newrow\" *ngIf=\"specs.length\">\r\n                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                            (click)=\"toggle_Item(weapon.id+attack[0]+'criteffects')\">\r\n                            Critical specialization effects\r\n                        </button>\r\n                        <div class=\"list-item sublist fancy-list\"\r\n                            *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'criteffects'\">\r\n                            <div class=\"list-item lower newrow left-aligned\"\r\n                                *ngFor=\"let spec of get_CritSpecialization(weapon, attack[0]); trackBy:trackByIndex;\">\r\n                                {{spec.desc}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let rune of get_Runes(weapon, attack[0]); trackBy:trackByIndex;\"\r\n                    style=\"margin-top:initial\">\r\n                    <div class=\"fullsize-only list-item newrow\" *ngIf=\"rune.criticalHint\">\r\n                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                            (click)=\"toggle_Item(weapon.id+attack[0]+'criticalHint')\">\r\n                            {{rune.name}} critical hit effect\r\n                        </button>\r\n                        <div class=\"list-item sublist fancy-list left-aligned\"\r\n                            *ngIf=\"get_ShowItem()==weapon.id+attack[0]+'criticalHint'\">\r\n                            <div class=\"list-item lower newrow left-aligned\">\r\n                                <span>\r\n                                    {{rune.criticalHint}}\r\n                                    <span *ngIf=\"rune.name=='Grievous'\">{{get_GrievousData(weapon, rune)}}</span>\r\n                                </span>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.critsuccess\">\r\n                                    <strong>Critical Success</strong>&nbsp;{{rune.critsuccess}}\r\n                                </div>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.success\">\r\n                                    <strong>Success</strong>&nbsp;{{rune.success}}\r\n                                </div>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.failure\">\r\n                                    <strong>Failure</strong>&nbsp;{{rune.failure}}\r\n                                </div>\r\n                                <div class=\"newrow left-aligned\" *ngIf=\"rune.critfailure\">\r\n                                    <strong>Critical Failure</strong>&nbsp;{{rune.critfailure}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let ammoType of get_AmmoTypes(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader box-header\" *ngIf=\"index == 0\">Ammunition</header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Ammunition'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n            <ng-container *ngFor=\"let ammo of get_Ammo(ammoType); let ammoIndex = index; trackBy:trackByIndex;\">\r\n                <header class=\"subsectionHeader fullsize-only\" *ngIf=\"ammoIndex == 0\">{{ammoType}}</header>\r\n                <div class=\"list-item\">\r\n                    <strong>{{(ammo.item.amount != undefined && ammo.item.amount != 1) ? ammo.item.amount+\" \" : \"\"}}\r\n                        {{ammo.item.get_Name()}}</strong>\r\n                    <div\r\n                        [ngbTooltip]=\"ammo.item.storedSpells.length ? 'Cast spell on any target. To choose a specific target (if applicable), use the item in the inventory instead.' : ''\">\r\n                        <button [disabled]=\"!ammo.item.amount\" (click)=\"on_ConsumableUse(ammo.item, ammo.inventory)\">\r\n                            <span>Use<app-actionIcons [actionString]=\"ammo.item.actions\">\r\n                                </app-actionIcons>{{(ammo.item.activationType) ? ammo.item.activationType : \"\"}}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"get_Snares().length\">\r\n            <header class=\"sectionHeader box-header\">Deployed Snares</header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Snares'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true></app-tags>\r\n            <div class=\"list-item\" *ngFor=\"let snare of get_Snares(); let snareIndex = index; trackBy:trackByIndex;\">\r\n                <button class=\"newrow sublist-toggle\" (click)=\"toggle_Item(snare.item.id+snareIndex)\">\r\n                    {{snare.item.get_Name()}}\r\n                </button>\r\n                <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==snare.item.id+snareIndex\">\r\n                    <button class=\"newrow center-aligned\" [disabled]=\"!snare.item.amount\"\r\n                        (click)=\"on_ConsumableUse(snare.item, snare.inventory)\">\r\n                        <span>Trigger/Remove</span>\r\n                    </button>\r\n                    <app-item [item]=snare.item [itemStore]=true></app-item>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <header class=\"sectionHeader fullsize-only box-header\" *ngIf=\"!still_loading()\">Weapon Proficiencies</header>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Weapon Proficiencies'\" [showTraits]=true [showFeats]=true\r\n            [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Weapon Proficiency'); trackBy:trackByIndex;\">\r\n            <app-skill class=\"fullsize-only\" [creature]=\"creature\" [skill]=skill [showValue]=false></app-skill>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Specific Weapon Proficiency'); trackBy:trackByIndex;\">\r\n            <app-skill class=\"fullsize-only\" [creature]=\"creature\" [skill]=skill [showValue]=false></app-skill>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { ItemGain } from './ItemGain';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Hint } from './Hint';\r\n\r\nexport class AnimalCompanionAncestry {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public activities: ActivityGain[] = [];\r\n    public desc: string = \"\";\r\n    public gainItems: ItemGain[] = [];\r\n    public hitPoints: number = 0;\r\n    public name: string = \"\";\r\n    public senses: string[] = [];\r\n    public hints: Hint[] = [];\r\n    public size: number = 0;\r\n    public skillChoices: SkillChoice[] = [];\r\n    public specialdesc: string = \"\";\r\n    public speeds: {name:string, value:number}[] = [];\r\n    public supportBenefit: string = \"\";\r\n    public traits: string[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { WeaponRune } from 'src/app/WeaponRune';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { LoreChoice } from 'src/app/LoreChoice';\r\nimport { Rune } from 'src/app/Rune';\r\nimport { ArmorRune } from 'src/app/ArmorRune';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { WornItem } from 'src/app/WornItem';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { ConditionsService } from 'src/app/conditions.service';\r\n\r\n@Component({\r\n    selector: 'app-itemBladeAlly',\r\n    templateUrl: './itemBladeAlly.component.html',\r\n    styleUrls: ['./itemBladeAlly.component.scss']\r\n  })\r\n  export class ItemBladeAllyComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Equipment;\r\n    \r\n    public newPropertyRune: { rune: Rune, disabled?: boolean };\r\n    \r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private activitiesService: ActivitiesService,\r\n        private spellsService: SpellsService,\r\n        private conditionsService: ConditionsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_RuneCooldown(rune: Rune) {\r\n        //If any activity on this rune has a cooldown, return the lowest of these in a human readable format.\r\n        if (rune.activities && rune.activities.length && rune.activities.some(activity => activity.activeCooldown)) {\r\n            let lowestCooldown = Math.min(...rune.activities.filter(activity => activity.activeCooldown).map(activity => activity.activeCooldown));\r\n            return \" (Cooldown \" + this.timeService.get_Duration(lowestCooldown) + \")\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    get_InitialPropertyRunes() {\r\n        let weapon = this.item;\r\n        //Start with one empty rune to select nothing.\r\n        let allRunes: { rune: Rune, disabled?: boolean }[] = [{ rune: new WeaponRune() }];\r\n        allRunes[0].rune.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (weapon.bladeAllyRunes[0]) {\r\n            allRunes.push(this.newPropertyRune as { rune: WeaponRune });\r\n        }\r\n        return allRunes;\r\n    }\r\n\r\n    get_WeaponPropertyRunes() {\r\n        let weapon: Weapon | WornItem;\r\n        if (this.item.type == \"wornitems\") {\r\n            weapon = this.item as WornItem\r\n        } else {\r\n            weapon = this.item as Weapon\r\n        }\r\n        //In the case of Handwraps of Mighty Blows, we need to compare the rune's requirements with the Fist weapon, but its potency rune requirements with the Handwraps.\r\n        //For this purpose, we use two different \"weapon\"s.\r\n        let weapon2 = this.item;\r\n        if ((weapon as WornItem).isHandwrapsOfMightyBlows) {\r\n            weapon2 = this.get_CleanItems().weapons.filter(weapon => weapon.name == \"Fist\")[0];\r\n        }\r\n        let allRunes: { rune: Rune, disabled?: boolean }[] = [];\r\n        //Add all runes either from the item store or from the inventories.\r\n        if (this.get_Character().alignment.includes(\"Good\")) {\r\n            this.get_CleanItems().weaponrunes.filter(rune => [\"Disrupting\", \"Ghost Touch\", \"Returning\", \"Shifting\"].includes(rune.name)).forEach(rune => {\r\n                allRunes.push({ rune: rune });\r\n            });\r\n        } else if (this.get_Character().alignment.includes(\"Evil\")) {\r\n            this.get_CleanItems().weaponrunes.filter(rune => [\"Fearsome\", \"Returning\", \"Shifting\"].includes(rune.name)).forEach(rune => {\r\n                allRunes.push({ rune: rune });\r\n            });\r\n        }\r\n        //Set all runes to disabled that have the same name as any that is already equipped.\r\n        allRunes.forEach((rune: { rune: WeaponRune, disabled?: boolean }) => {\r\n            if (weapon.bladeAllyRunes\r\n                .map(propertyRune => propertyRune.name)\r\n                .includes(rune.rune.name)) {\r\n                rune.disabled = true;\r\n            }\r\n        });\r\n        //Filter all runes whose requirements are not met.\r\n        allRunes.forEach((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }, $index) => {\r\n                if (\r\n                    (\r\n                        //Show runes that require a trait if that trait is present on the weapon.\r\n                        rune.rune.traitreq ?\r\n                            weapon2.traits\r\n                                .filter(trait => trait.includes(rune.rune.traitreq)).length\r\n                            : true\r\n                    ) && (\r\n                        //Show runes that require a range if the weapon has a value for that range.\r\n                        rune.rune.rangereq ?\r\n                            weapon2[rune.rune.rangereq] > 0\r\n                            : true\r\n                    ) && (\r\n                        //Show runes that require a damage type if the weapon's dmgType contains either of the letters in the requirement.\r\n                        rune.rune.damagereq ?\r\n                            (\r\n                                (weapon2 as Weapon).dmgType &&\r\n                                (\r\n                                    rune.rune.damagereq.split(\"\")\r\n                                        .filter(req => (weapon2 as Weapon).dmgType.includes(req)).length ||\r\n                                    (weapon2 as Weapon).dmgType == \"modular\"\r\n                                )\r\n                            )\r\n                            : true\r\n                    )\r\n                ) {\r\n                    rune.disabled = false;\r\n                } else {\r\n                    rune.disabled = true;\r\n                }\r\n            })\r\n        return allRunes.sort(function (a, b) {\r\n            if (a.rune.name > b.rune.name) {\r\n                return 1;\r\n            }\r\n            if (a.rune.name < b.rune.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.rune.level - b.rune.level);\r\n    }\r\n\r\n    add_BladeAllyRune() {\r\n        let weapon = this.item;\r\n        let rune = this.newPropertyRune.rune;\r\n        if (!weapon.bladeAllyRunes[0] || rune !== weapon.bladeAllyRunes[0]) {\r\n            //If there is a rune in this slot, remove it from the item.\r\n            if (weapon.bladeAllyRunes[0]) {\r\n                this.remove_BladeAllyRune()\r\n                weapon.bladeAllyRunes.splice(0);\r\n            }\r\n            //Then add the new rune to the item.\r\n            if (rune.name != \"\") {\r\n                //Add a copy of the rune to the item\r\n                weapon.bladeAllyRunes[0] = Object.assign(new WeaponRune, JSON.parse(JSON.stringify(rune)));\r\n                weapon.bladeAllyRunes[0] = this.characterService.reassign(weapon.bladeAllyRunes[0]);\r\n                weapon.bladeAllyRunes[0].amount = 1;\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        if (rune.activities?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n        this.set_PropertyRuneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_BladeAllyRune() {\r\n        let weapon: Equipment = this.item;\r\n        let oldRune: Rune = weapon.bladeAllyRunes[0];\r\n        if (oldRune.activities?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n        //Deactivate any active toggled activities of the removed rune.\r\n        oldRune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n            this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n        })\r\n    }\r\n\r\n    set_PropertyRuneNames() {\r\n        this.newPropertyRune =\r\n            (this.item.bladeAllyRunes[0] ? { rune: this.item.bladeAllyRunes[0] } : { rune: new Rune() });\r\n        if (this.newPropertyRune.rune.name == \"New Item\") {\r\n            this.newPropertyRune.rune.name = \"\";\r\n        };\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_PropertyRuneNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Blade Ally Status-->\r\n<div class=\"list-item newrow\">\r\n\r\n    <div class=\"newrow\">\r\n        <strong>Rune Effect</strong>\r\n        <select [(ngModel)]=\"newPropertyRune\" (ngModelChange)=\"add_BladeAllyRune()\">\r\n            <ng-container\r\n                *ngFor=\"let rune of get_InitialPropertyRunes(); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                <option [ngValue]=\"rune\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.propertyRunes[0]>\r\n                    <!--Blank option to deselect-->\r\n                </option>\r\n                <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current rune\">\r\n                    <option [ngValue]=\"rune\">\r\n                        {{rune.rune.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </ng-container>\r\n            <optgroup label=\"Available runes\" *ngIf=\"get_WeaponPropertyRunes().length\">\r\n                <option *ngFor=\"let rune of get_WeaponPropertyRunes(); trackBy:trackByIndex;\" [ngValue]=\"rune\"\r\n                    [disabled]=\"rune.disabled\">\r\n                    {{rune.rune.amount > 1 ? rune.rune.amount+\" \" : \"\"}}{{rune.rune.name}}\r\n                </option>\r\n            </optgroup>\r\n        </select>\r\n    </div>\r\n</div>","import { EffectsService } from './effects.service';\r\nimport { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Effect } from './Effect';\r\n\r\nexport class Ability {\r\n    constructor(\r\n        public name: string = \"\",\r\n    ) { }\r\n    calculate(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level) {\r\n        let result = {\r\n            absolutes: (this.absolutes(creature, effectsService, this.name).length != 0) as boolean,\r\n            baseValue: this.baseValue(creature, characterService, charLevel) as { result: number, explain: string },\r\n            bonuses: this.bonuses(creature, effectsService, this.name) as boolean,\r\n            penalties: this.penalties(creature, effectsService, this.name) as boolean,\r\n            value: this.value(creature, characterService, effectsService, charLevel) as { result: number, explain: string },\r\n            mod: this.mod(creature, characterService, effectsService, charLevel) as { result: number, explain: string },\r\n            modabsolutes: (this.absolutes(creature, effectsService, this.name + \" Modifier\").length != 0) as boolean,\r\n            modbonuses: this.bonuses(creature, effectsService, this.name + \" Modifier\") as boolean,\r\n            modpenalties: this.penalties(creature, effectsService, this.name + \" Modifier\") as boolean\r\n        }\r\n        return result;\r\n    }\r\n    absolutes(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_AbsolutesOnThis(creature, name);\r\n    }\r\n    relatives(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.get_RelativesOnThis(creature, name);\r\n    }\r\n    bonuses(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_BonusesOnThis(creature, name)\r\n    }\r\n    penalties(creature: Character | AnimalCompanion, effectsService: EffectsService, name: string) {\r\n        return effectsService.show_PenaltiesOnThis(creature, name)\r\n    }\r\n    baseValue(creature: Character | AnimalCompanion, characterService, charLevel: number = characterService.get_Character().level) {\r\n        if (characterService.still_loading()) { return { result: 10, explain: \"Base value: 10\" }; }\r\n        //Get baseValues from the character if they exist, otherwise 10\r\n        let baseValue = 10;\r\n        if (creature.type == \"Character\" && (creature as Character).baseValues.length) {\r\n            (creature as Character).baseValues.filter(ownValue => ownValue.name == this.name).forEach(ownValue => {\r\n                baseValue = ownValue.baseValue;\r\n            })\r\n        }\r\n        baseValue = (baseValue) ? baseValue : 10;\r\n        let explain = \"Base value: \" + baseValue;\r\n        //Get any boosts from the character and sum them up\r\n        //Boosts are +2 until 18, then +1 for Character\r\n        //Boosts are always +2 for Companion\r\n        //Flaws are always -2\r\n        //Infos are not processed.\r\n        let boosts = creature.get_AbilityBoosts(0, charLevel, this.name);\r\n        if (boosts) {\r\n            boosts.forEach(boost => {\r\n                if (boost.type == \"Boost\") {\r\n                    let weight = (baseValue < 18 || creature.type == \"Companion\") ? 2 : 1;\r\n                    baseValue += weight;\r\n                    explain += \"\\n\" + boost.source + \": +\" + weight;\r\n                } else if (boost.type == \"Flaw\") {\r\n                    baseValue -= 2;\r\n                    explain += \"\\n\" + boost.source + \": -2\";\r\n                }\r\n            })\r\n        }\r\n        return { result: baseValue, explain: explain };\r\n    }\r\n    value(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level) {\r\n        //Calculates the ability with all active effects\r\n        let baseValue = this.baseValue(creature, characterService, charLevel);\r\n        let result: number = baseValue.result;\r\n        let explain: string = baseValue.explain;\r\n        //Add all active bonuses and penalties to the base value\r\n        this.absolutes(creature, effectsService, this.name).forEach(effect => {\r\n            result = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, this.name).forEach(effect => {\r\n            if (parseInt(effect.value) != 0) {\r\n                result += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            }\r\n        });\r\n        return { result: result, explain: explain };\r\n    }\r\n    mod(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level) {\r\n        let value = this.value(creature, characterService, effectsService, charLevel);\r\n        let result: number = value.result;\r\n        //Calculates the ability modifier from the effective ability in the usual d20 fashion - 0-1 => -5; 2-3 => -4; ... 10-11 => 0; 12-13 => 1 etc.\r\n        let modifier = Math.floor((result - 10) / 2);\r\n        let explain = this.name + \" Modifier: \" + modifier;\r\n        //Add active bonuses and penalties to the ability modifier\r\n        this.absolutes(creature, effectsService, this.name + \" Modifier\").forEach(effect => {\r\n            modifier = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        this.relatives(creature, effectsService, this.name + \" Modifier\").forEach(effect => {\r\n            if (parseInt(effect.value) >= 0) {\r\n                modifier += parseInt(effect.value);\r\n                explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n            }\r\n        });\r\n        return { result: modifier, explain: explain };\r\n    }\r\n}","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { SpellChoice } from 'src/app/SpellChoice';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Spell } from 'src/app/Spell';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { SpellCasting } from 'src/app/SpellCasting';\r\nimport { EffectsService } from 'src/app/effects.service';\r\nimport { SpellGain } from 'src/app/SpellGain';\r\nimport { SpellLearned } from 'src/app/SpellLearned';\r\nimport { SignatureSpellGain } from 'src/app/SignatureSpellGain';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spellchoice',\r\n    templateUrl: './spellchoice.component.html',\r\n    styleUrls: ['./spellchoice.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellchoiceComponent implements OnInit {\r\n\r\n    @Input()\r\n    spellCasting: SpellCasting = undefined;\r\n    @Input()\r\n    choice: SpellChoice\r\n    @Input()\r\n    allowHeightened: boolean = false;\r\n    @Input()\r\n    allowBorrow: boolean = false;\r\n    @Input()\r\n    showChoice: string = \"\";\r\n    @Input()\r\n    showSpell: string = \"\";\r\n    @Output()\r\n    showChoiceMessage = new EventEmitter<{ name: string, levelNumber: number, choice: SpellChoice, casting: SpellCasting }>();\r\n    @Output()\r\n    showSpellMessage = new EventEmitter<string>();\r\n    @Input()\r\n    level: number;\r\n    @Input()\r\n    itemSpell: boolean = false;\r\n    //Is the spell prepared after you choose it?\r\n    @Input()\r\n    prepared: boolean = false;\r\n    @Input()\r\n    showTitle: boolean = true;\r\n    @Input()\r\n    showContent: boolean = true;\r\n    @Input()\r\n    tileMode: boolean = false;\r\n    //Are we choosing character spells from the spellbook/repertoire? If not, some functions will be disabled.\r\n    @Input()\r\n    spellbook: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private spellsService: SpellsService,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_Spell(name: string) {\r\n        if (this.showSpell == name) {\r\n            this.showSpell = \"\";\r\n        } else {\r\n            this.showSpell = name;\r\n        }\r\n        this.showSpellMessage.emit(this.showSpell)\r\n    }\r\n\r\n    toggle_Choice(name: string) {\r\n        if (this.showChoice == name) {\r\n            this.showChoice = \"\";\r\n        } else {\r\n            this.showChoice = name;\r\n        }\r\n        this.showChoiceMessage.emit({ name: name, levelNumber: this.level, choice: this.choice, casting: this.spellCasting })\r\n    }\r\n\r\n    get_ShowSpell() {\r\n        return this.showSpell;\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackBySpellID(index: number, obj: any): any {\r\n        return obj.id;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.tileMode;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Level(number: number) {\r\n        return this.get_Character().class.levels[number];\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    capitalize(text: string) {\r\n        return text.charAt(0).toUpperCase() + text.slice(1);\r\n    }\r\n\r\n    get_ButtonTitle(available: number) {\r\n        let title: string = \"\";\r\n        if (this.itemSpell || this.choice.showOnSheet) {\r\n            title += \" Level \" + this.choice.level;\r\n        }\r\n        if (this.choice.frequency) {\r\n            title += \" \" + this.capitalize(this.choice.frequency);\r\n        }\r\n        if (this.choice.tradition) {\r\n            title += \" \" + this.choice.tradition;\r\n        }\r\n        if (this.is_AdaptedCantripSpell()) {\r\n            title += \" non-\" + this.spellCasting.tradition;\r\n        }\r\n        if (this.is_AdaptiveAdeptSpell()) {\r\n            title += \" non-\" + this.spellCasting.tradition;\r\n        }\r\n        if (this.choice.traitFilter.length) {\r\n            title += \" \" + this.choice.traitFilter.join(\" \");\r\n        }\r\n        if (this.choice.spellCombinationAllowed) {\r\n            title += \" Combination\";\r\n        }\r\n        if (this.choice.className) {\r\n            title += \" \" + this.choice.className;\r\n        }\r\n        if (this.choice.spellBookOnly) {\r\n            title += \" Spellbook\";\r\n        }\r\n        title += \" Spell\"\r\n        if (available != 1) {\r\n            title += \"s\";\r\n        }\r\n        if (!this.itemSpell) {\r\n            title += \" (\" + this.choice.source + \")\";\r\n        }\r\n        if (available != 1) {\r\n            title += \": \" + this.choice.spells.length + \"/\" + available;\r\n        } else {\r\n            if (this.choice.spells.length) {\r\n                title += \": \" + this.choice.spells[0].name;\r\n                if (this.choice.spells[0].combinationSpellName) {\r\n                    title += \" & \" + this.choice.spells[0].combinationSpellName;\r\n                }\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_SignatureSpellsAllowed() {\r\n        if (\r\n            this.spellCasting &&\r\n            this.choice.level > 0 &&\r\n            this.spellCasting?.castingType == \"Spontaneous\" &&\r\n            this.choice.source.includes(this.spellCasting.className + \" Spellcasting\") &&\r\n            !this.choice.showOnSheet\r\n        ) {\r\n            let signatureSpellGains: SignatureSpellGain[] = [];\r\n            this.characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.allowSignatureSpells.length && feat.have(this.get_Character(), this.characterService)).forEach(feat => {\r\n                    signatureSpellGains.push(...feat.allowSignatureSpells.filter(gain => gain.className == this.spellCasting.className))\r\n                })\r\n            if (signatureSpellGains.some(gain => gain.available == -1)) {\r\n                return -1;\r\n            } else {\r\n                return signatureSpellGains.map(gain => gain.available).reduce((a, b) => a + b, 0);\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_SignatureSpellsChosen(level: number = 0) {\r\n        //This function is used to check if a signature spell has been assigned for this spell level and returns the allowed amount (-1 for unlimited).\r\n        if (level == 0) {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.spells.some(gain => gain.signatureSpell)).length;\r\n        } else {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.level == level && choice.spells.some(gain => gain.signatureSpell)).length;\r\n        }\r\n    }\r\n\r\n    has_SignatureSpell(signatureSpellsAllowed: number) {\r\n        return signatureSpellsAllowed && this.choice.spells.some(gain => gain.signatureSpell);\r\n    }\r\n\r\n    get_CannotChooseSignatureSpell(signatureSpellsAllowed: number, taken: SpellGain) {\r\n        if (taken?.signatureSpell) {\r\n            return \"\";\r\n        } else {\r\n            if (this.get_SignatureSpellsChosen(this.choice.level)) {\r\n                return \"A signature spell has already been chosen for this level.\";\r\n            }\r\n            if ((signatureSpellsAllowed > -1 && this.get_SignatureSpellsChosen(0) >= signatureSpellsAllowed)) {\r\n                return \"The maximum amount of signature spells (\" + signatureSpellsAllowed + \") has already been chosen.\";\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    on_SignatureSpell() {\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length;\r\n    }\r\n\r\n    is_TradedIn() {\r\n        //For all spell choices that you gain from trading in another one, identify them by their source here.\r\n        // (Spell Blending, Adapted Cantrip, Infinite Possibilities, Spell Mastery, Spell Combination)\r\n        return [\r\n            \"Spell Blending\",\r\n            \"Feat: Adapted Cantrip\",\r\n            \"Feat: Adaptive Adept: Cantrip\",\r\n            \"Feat: Adaptive Adept: 1st-Level Spell\",\r\n            \"Feat: Infinite Possibilities\",\r\n            \"Feat: Spell Mastery\"\r\n        ].includes(this.choice.source) ||\r\n            this.choice.spellCombination;\r\n    }\r\n\r\n    get_SpellBlendingAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is not a cantrip or focus spell and is above level 2\r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of prepared wizard spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in (Spell Blending, Infinite Possibilities, Spell Mastery, Spell Combination)\r\n        // - You have the Spell Blending feat\r\n        return (this.choice.level > 0 && !this.choice.dynamicLevel && this.spellCasting.className == \"Wizard\" && this.spellCasting.castingType == \"Prepared\" &&\r\n            !this.is_TradedIn() &&\r\n            this.have_Feat(\"Spell Blending\"));\r\n    }\r\n\r\n    get_SpellBlendingUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in.\r\n        return (this.choice.spellBlending.reduce((sum, current) => sum + current, 0));\r\n    }\r\n\r\n    on_SpellBlending(tradeLevel: number, value: number) {\r\n        this.choice.spellBlending[tradeLevel] += value;\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_SpellBlendingUnlocked(level: number) {\r\n        //This function is used both to unlock the Spell Blending bonus spell slot (choice.source == \"Spell Blending\")\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_SpellBlendingAllowed()).\r\n        if (this.get_SpellBlendingAllowed() || this.choice.source == \"Spell Blending\") {\r\n            let highestSpellLevel = this.get_HighestSpellLevel();\r\n            //Check if there are enough spell choices that have been traded in in this spellcasting to unlock this level.\r\n            if (level == 0) {\r\n                return this.spellCasting.spellChoices.filter(choice => choice.level > 0 && choice.spellBlending[0] > 0).length * 2;\r\n            } else if (level > 0 && level <= highestSpellLevel) {\r\n                if (\r\n                    (\r\n                        this.spellCasting.spellChoices\r\n                            .filter(choice => choice.level == level - 1 && choice.spellBlending[1] > 0)\r\n                            .map(choice => choice.spellBlending[1])\r\n                            .reduce((sum, current) => sum + current, 0) >= 2\r\n                    ) ||\r\n                    (\r\n                        this.spellCasting.spellChoices\r\n                            .filter(choice => choice.level == level - 2 && choice.spellBlending[2] > 0)\r\n                            .map(choice => choice.spellBlending[2])\r\n                            .reduce((sum, current) => sum + current, 0) >= 2\r\n                    )\r\n                ) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else if (level > highestSpellLevel) {\r\n                //If the targeted spell level is not available, return -1 so there is a result, but it does not grant any spells.\r\n                return -1;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_InfinitePossibilitiesAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is not a cantrip or focus spell and is above level 2\r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of prepared wizard spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in\r\n        // - You have the Infinite Possibilities feat\r\n        return (this.choice.level > 2 && !this.choice.dynamicLevel && this.spellCasting.className == \"Wizard\" && this.spellCasting.castingType == \"Prepared\" &&\r\n            !this.is_TradedIn() &&\r\n            this.have_Feat(\"Infinite Possibilities\"));\r\n    }\r\n\r\n    get_InfinitePossibilitiesUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in (so either 0 or 1).\r\n        return (this.choice.infinitePossibilities ? 1 : 0);\r\n    }\r\n\r\n    on_InfinitePossibilities() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_InfinitePossibilitiesUnlocked(level: number = 0) {\r\n        //This function is used both to unlock the Infinite Possibilities bonus spell slot (is_InfinitePossibilitiesSpell())\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_InfinitePossibilitiesAllowed()).\r\n        if (this.get_InfinitePossibilitiesAllowed() || this.is_InfinitePossibilitiesSpell()) {\r\n            //Check if any spell slots have been traded in for IP (level == 0) or if the one on this level has been unlocked.\r\n            if (level == 0) {\r\n                return this.spellCasting.spellChoices.find(choice => choice.infinitePossibilities) ? 1 : 0;\r\n            } else {\r\n                return this.spellCasting.spellChoices.find(choice => choice.level == level + 2 && choice.infinitePossibilities) ? 1 : 0;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    is_InfinitePossibilitiesSpell() {\r\n        return this.choice.source == \"Feat: Infinite Possibilities\";\r\n    }\r\n\r\n    get_AdaptedCantripAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is a cantrip\r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of your default spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in\r\n        // - You have the Adapted Cantrip feat\r\n        return (this.choice.level == 0 && !this.choice.dynamicLevel && this.spellCasting === this.get_Character().get_DefaultSpellcasting() &&\r\n            !this.is_TradedIn() &&\r\n            this.have_Feat(\"Adapted Cantrip\"));\r\n    }\r\n\r\n    get_AdaptedCantripUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in (so either 0 or 1).\r\n        return (this.choice.adaptedCantrip ? 1 : 0);\r\n    }\r\n\r\n    on_AdaptedCantrip() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AdaptedCantripUnlocked() {\r\n        //This function is used both to unlock the Adapted Cantrip bonus spell slot (is_AdaptedCantripSpell())\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_AdaptedCantripAllowed()).\r\n        if (this.get_AdaptedCantripAllowed() || this.is_AdaptedCantripSpell()) {\r\n            //Check if any spell slots have been traded in for AC.\r\n            return this.spellCasting.spellChoices.find(choice => choice.adaptedCantrip) ? 1 : 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    is_AdaptedCantripSpell() {\r\n        return this.choice.source == \"Feat: Adapted Cantrip\";\r\n    }\r\n\r\n    get_AdaptiveAdeptAllowed() {\r\n        //You can trade in a spell slot if:\r\n        // - This choice is a cantrip and you have the Adaptive Adept: Cantrip feat \r\n        //   OR this choice is 1st level and you have the Adaptive Adept: 1st-Level Spell feat \r\n        // - This choice does not have a dynamic level\r\n        // - This choice is part of your default spellcasting\r\n        // - This choice is not itself a bonus slot gained by trading in\r\n        return (!this.choice.dynamicLevel && this.spellCasting === this.get_Character().get_DefaultSpellcasting() &&\r\n            !this.is_TradedIn() &&\r\n            (\r\n                (this.choice.level == 0 && this.have_Feat(\"Adaptive Adept: Cantrip\")) ||\r\n                (this.choice.level == 1 && this.have_Feat(\"Adaptive Adept: 1st-Level Spell\"))\r\n            )\r\n        );\r\n    }\r\n\r\n    get_AdaptiveAdeptUsed() {\r\n        //Return the amount of spell slots in this choice that have been traded in (so either 0 or 1).\r\n        return (this.choice.adaptiveAdept ? 1 : 0);\r\n    }\r\n\r\n    on_AdaptiveAdept() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AdaptiveAdeptUnlocked() {\r\n        //This function is used both to unlock the Adaptive Adept bonus spell slot (is_AdaptiveAdeptSpell())\r\n        //  and to check if the current choice can be traded in for a spell slot at the given level (get_AdaptiveAdeptAllowed()).\r\n        if (this.get_AdaptiveAdeptAllowed() || this.is_AdaptiveAdeptSpell()) {\r\n            //Check if any spell slots have been traded in for AC.\r\n            return this.spellCasting.spellChoices.find(choice => choice.adaptiveAdept) ? 1 : 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    is_AdaptiveAdeptSpell() {\r\n        return this.choice.source.includes(\"Feat: Adaptive Adept\");\r\n    }\r\n\r\n    is_EsotericPolymathSpell(choice: SpellChoice) {\r\n        return choice.source == \"Feat: Esoteric Polymath\";\r\n    }\r\n\r\n    get_EsotericPolymathAllowed(casting: SpellCasting, tradition: string) {\r\n        if (casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && this.have_Feat(\"Esoteric Polymath\")) {\r\n            if ([\"\", \"Occult\"].includes(tradition)) {\r\n                return true;\r\n            } else if (this.have_Feat(\"Impossible Polymath\")) {\r\n                let character = this.get_Character();\r\n                let skill: string = \"\";\r\n                switch (tradition) {\r\n                    case \"Arcane\":\r\n                        skill = \"Arcana\";\r\n                        break;\r\n                    case \"Divine\":\r\n                        skill = \"Religion\";\r\n                        break;\r\n                    case \"Primal\":\r\n                        skill = \"Nature\";\r\n                        break;\r\n                }\r\n                return this.characterService.get_Skills(character, skill)[0].level(character, this.characterService, character.level) >= 2\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    is_ArcaneEvolutionSpell() {\r\n        return this.choice.source == \"Feat: Arcane Evolution\";\r\n    }\r\n\r\n    is_OccultEvolutionSpell() {\r\n        return this.choice.source == \"Feat: Occult Evolution\";\r\n    }\r\n\r\n    get_CrossbloodedEvolutionAllowed() {\r\n        if (\r\n            this.choice.level > 0 &&\r\n            this.spellCasting?.className == \"Sorcerer\" &&\r\n            this.spellCasting.castingType == \"Spontaneous\" &&\r\n            this.have_Feat(\"Crossblooded Evolution\") &&\r\n            this.choice.source.includes(\"Sorcerer Spellcasting\") &&\r\n            !this.choice.showOnSheet\r\n        ) {\r\n            if (this.have_Feat(\"Greater Crossblooded Evolution\")) {\r\n                return 3;\r\n            } else {\r\n                return 1;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_CrossbloodedEvolutionUnlocked(level: number = 0) {\r\n        //This function is used to check how many crossblooded evolution spells have been assigned for this spell level or all levels.\r\n        if (level == 0) {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.crossbloodedEvolution).length;\r\n        } else {\r\n            return this.spellCasting.spellChoices.filter(choice => choice.level == level && choice.crossbloodedEvolution).length;\r\n        }\r\n    }\r\n\r\n    on_CrossbloodedEvolution() {\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_ChangeSpellLevel(amount: number) {\r\n        this.choice.level += amount;\r\n    }\r\n\r\n    on_SpellCombination() {\r\n        this.choice.spells.length = 0;\r\n        this.characterService.set_Changed(\"spellchoices\");\r\n        this.characterService.set_Changed(\"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_HighestSpellLevel() {\r\n        if (this.spellCasting) {\r\n            //Get the available spell level of this casting. This is the higest spell level of the spell choices that are available at your character level.\r\n            return Math.max(...this.spellCasting.spellChoices.filter(spellChoice => spellChoice.charLevelAvailable <= this.get_Character().level).map(spellChoice => spellChoice.dynamicLevel ? this.get_DynamicLevel(spellChoice) : spellChoice.level), 0);\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    get_DynamicLevel(choice: SpellChoice = this.choice) {\r\n        return this.spellsService.get_DynamicSpellLevel(this.spellCasting, choice, this.characterService);\r\n    }\r\n\r\n    get_CHA() {\r\n        return this.characterService.get_Abilities(\"Charisma\")[0].mod(this.get_Character(), this.characterService, this.effectsService).result;\r\n    }\r\n\r\n    get_Available() {\r\n        let choice = this.choice;\r\n        let available: number = 0;\r\n        if (choice.source == \"Divine Font\") {\r\n            available = Math.max(choice.available + this.get_CHA(), 0);\r\n        } else if (choice.source == \"Spell Blending\") {\r\n            available = Math.max(choice.available + this.get_SpellBlendingUnlocked(choice.level), 0);\r\n        } else if (this.is_InfinitePossibilitiesSpell()) {\r\n            available = Math.max(choice.available + this.get_InfinitePossibilitiesUnlocked(choice.level), 0);\r\n        } else if (this.is_AdaptedCantripSpell()) {\r\n            available = Math.max(choice.available + this.get_AdaptedCantripUnlocked(), 0);\r\n        } else if (this.is_AdaptiveAdeptSpell()) {\r\n            available = Math.max(choice.available + this.get_AdaptiveAdeptUnlocked(), 0);\r\n        } else if (\r\n            [\"Feat: Basic Wizard Spellcasting\", \"Feat: Expert Wizard Spellcasting\", \"Feat: Master Wizard Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Arcane Breadth\") - this.get_SpellBlendingUsed() - this.get_InfinitePossibilitiesUsed(), 0);\r\n        } else if (\r\n            [\"Feat: Basic Bard Spellcasting\", \"Feat: Expert Bard Spellcasting\", \"Feat: Master Bard Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Occult Breadth\"), 0);\r\n        } else if (\r\n            [\"Feat: Basic Druid Spellcasting\", \"Feat: Expert Druid Spellcasting\", \"Feat: Master Druid Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Primal Breadth\"), 0);\r\n        } else if (\r\n            [\"Feat: Basic Sorcerer Spellcasting\", \"Feat: Expert Sorcerer Spellcasting\", \"Feat: Master Sorcerer Spellcasting\"].includes(choice.source) &&\r\n            choice.level <= this.get_HighestSpellLevel() - 2\r\n        ) {\r\n            available = Math.max(choice.available + this.have_Feat(\"Bloodline Breadth\"), 0);\r\n        } else {\r\n            available = Math.max(this.choice.available - this.get_SpellBlendingUsed() - this.get_InfinitePossibilitiesUsed() - this.get_AdaptedCantripUsed() - this.get_AdaptiveAdeptUsed(), 0);\r\n        }\r\n        //If this choice has more spells than it should have (unless they are locked), remove the excess.\r\n        if (choice.spells.length > available) {\r\n            choice.spells.filter(gain => !gain.locked).forEach((gain, index) => {\r\n                if (index >= available) {\r\n                    this.on_SpellTaken(gain.name, false, false);\r\n                }\r\n            })\r\n        }\r\n        return available;\r\n    }\r\n\r\n    get_AvailableSpells() {\r\n        let choice = this.choice;\r\n        //Get spell level from the choice level or from the dynamic choice level, if set.\r\n        let spellLevel = choice.level;\r\n        if (choice.dynamicLevel) {\r\n            spellLevel = this.get_DynamicLevel();\r\n        }\r\n        let character = this.get_Character()\r\n\r\n        let allSpells: Spell[];\r\n        //Get spells from your spellbook for prepared wizard spells or if the choice requires it, otherwise get all spells.\r\n        if ((this.spellCasting?.castingType == \"Prepared\" && this.spellCasting?.className == \"Wizard\" && !this.allowBorrow) || this.choice.spellBookOnly) {\r\n            allSpells = this.spellsService.get_Spells().filter(spell =>\r\n                character.class.spellBook.find((learned: SpellLearned) => learned.name == spell.name)\r\n            );\r\n        } else {\r\n            allSpells = this.spellsService.get_Spells();\r\n        }\r\n        //Filter the list by the filter given in the choice.\r\n        if (choice.filter.length) {\r\n            allSpells = allSpells.filter(spell => choice.filter.map(filter => filter.toLowerCase()).includes(spell.name.toLowerCase()))\r\n        }\r\n        //Set up another Array to save the end result to, filtered from allSpells.\r\n        let spells: Spell[] = [];\r\n        //If this is a character spellcasting choice (and not a scroll or other item), filter the spells by the spellcasting's tradition.\r\n        //  The choice's tradition is preferred over the spellcasting's tradition, if set. If neither is set, get all spells.\r\n        if (this.spellCasting) {\r\n            let traditionFilter = choice.tradition || this.spellCasting.tradition || \"\";\r\n            //Keep either only Focus spells (and skip the tradition filter) or exclude Focus spells as needed.\r\n            if (this.spellCasting.castingType == \"Focus\") {\r\n                spells.push(...allSpells.filter(spell => spell.traits.includes(character.class.name) && spell.traditions.includes(\"Focus\")));\r\n            } else {\r\n                if (choice.source == \"Divine Font\") {\r\n                    //Divine Font only allows spells listed in your deity's divine font attribute.\r\n                    let deity = character.class.deity ? this.characterService.get_Deities(character.class.deity)[0] : null;\r\n                    spells.push(...allSpells.filter(spell =>\r\n                        deity?.divineFont.includes(spell.name)\r\n                    ));\r\n                } else if (choice.source == \"Feat: Esoteric Polymath\") {\r\n                    //With Impossible Polymath, you can choose spells of any tradition in the Esoteric Polymath choice so long as you are trained in the associated skill.\r\n                    spells.push(...allSpells.filter(spell => spell.traditions.find(tradition => this.get_EsotericPolymathAllowed(this.spellCasting, tradition)) && !spell.traditions.includes(\"Focus\")));\r\n                } else if (choice.source == \"Feat: Adapted Cantrip\") {\r\n                    //With Adapted Cantrip, you can choose spells of any tradition except your own.\r\n                    spells.push(...allSpells.filter(spell => !spell.traditions.includes(this.spellCasting.tradition) && !spell.traditions.includes(\"Focus\")));\r\n                } else if (choice.source.includes(\"Feat: Adaptive Adept\")) {\r\n                    //With Adaptive Adept, you can choose spells of the same tradition(s) as with Adapted Cantrip, but not your own.\r\n                    let adaptedcantrip = this.spellCasting.spellChoices.find(choice => choice.source == \"Feat: Adapted Cantrip\").spells[0];\r\n                    if (adaptedcantrip) {\r\n                        let originalSpell = this.spellsService.get_Spells(adaptedcantrip.name)[0];\r\n                        if (originalSpell) {\r\n                            spells.push(...allSpells.filter(spell => !spell.traditions.includes(this.spellCasting.tradition) && spell.traditions.some(tradition => originalSpell.traditions.includes(tradition)) && !spell.traditions.includes(\"Focus\")));\r\n                        }\r\n                    }\r\n                } else if (choice.crossbloodedEvolution && !(traditionFilter && choice.spells.some(takenSpell => !this.spellsService.get_Spells(takenSpell.name)[0]?.traditions.includes(traditionFilter)))) {\r\n                    //With Crossblooded Evolution, you can choose spells of any tradition, unless you already have one of a different tradition than your own.\r\n                    spells.push(...allSpells.filter(spell => !spell.traditions.includes(\"Focus\")));\r\n                } else if (traditionFilter) {\r\n                    //If the tradition filter comes from the spellcasting, also include all spells that are on the spell list regardless of their tradition.\r\n                    if (!choice.tradition && this.spellCasting.tradition) {\r\n                        spells.push(...allSpells.filter(spell =>\r\n                            (\r\n                                spell.traditions.includes(traditionFilter) ||\r\n                                this.get_Character().get_SpellListSpell(spell.name).length\r\n                            ) &&\r\n                            !spell.traditions.includes(\"Focus\")\r\n                        ));\r\n                    } else {\r\n                        spells.push(...allSpells.filter(spell =>\r\n                            spell.traditions.includes(traditionFilter) &&\r\n                            !spell.traditions.includes(\"Focus\")\r\n                        ));\r\n                    }\r\n                } else {\r\n                    spells.push(...allSpells.filter(spell => !spell.traditions.includes(\"Focus\")));\r\n                }\r\n            }\r\n        } else {\r\n            //If this is an item spell choice, only the choice's tradition is relevant. If it's not set, keep all spells except Focus spells.\r\n            let traditionFilter = choice.tradition || \"\";\r\n            if (traditionFilter) {\r\n                spells.push(...allSpells.filter(spell => spell.traditions.includes(traditionFilter) && !spell.traditions.includes(\"Focus\")));\r\n            } else {\r\n                spells.push(...allSpells.filter(spell => !spell.traditions.includes(\"Focus\")));\r\n            }\r\n        }\r\n        //If a certain target is required, filter out the spells that don't match it.\r\n        switch (choice.target) {\r\n            case \"Others\":\r\n                spells = spells.filter(spell => spell.target != \"self\");\r\n                break;\r\n            case \"Allies\":\r\n                spells = spells.filter(spell => spell.target == \"ally\");\r\n                break;\r\n            case \"Caster\":\r\n                spells = spells.filter(spell => spell.target == \"self\");\r\n                break;\r\n            case \"Enemies\":\r\n                spells = spells.filter(spell => spell.target == \"\")\r\n        }\r\n        //If a trait filter is set, keep only spells that match it, with extra handling for \"Common\".\r\n        if (choice.traitFilter.length) {\r\n            //There is no actual Common trait. If a spell choice is limited to common spells,\r\n            //  exclude all uncommon and rare spells, then process the rest of the trait filter.\r\n            if (choice.traitFilter.includes(\"Common\")) {\r\n                let traitFilter = choice.traitFilter.filter(trait => trait != \"Common\");\r\n                spells = spells.filter(spell =>\r\n                    !spell.traits.includes(\"Uncommon\") &&\r\n                    !spell.traits.includes(\"Rare\") &&\r\n                    (\r\n                        traitFilter.length ?\r\n                            spell.traits.find(trait => traitFilter.includes(trait))\r\n                            : true\r\n                    )\r\n                );\r\n            } else {\r\n                spells = spells.filter(spell => spell.traits.find(trait => choice.traitFilter.includes(trait)));\r\n            }\r\n        }\r\n        //If only spells are allowed that target a single creature or object, these are filtered here.\r\n        if (choice.singleTarget) {\r\n            spells = spells.filter(spell => spell.singleTarget);\r\n        }\r\n        //If any spells in the choice have become invalid (i.e. they aren't on the list), remove them, unless they are locked. You need to reload the spells area if this happens.\r\n        let spellNumber = choice.spells.length;\r\n        choice.spells = this.choice.spells.filter(spell => spell.locked || spells.some(availableSpell => availableSpell.name == spell.name))\r\n        if (choice.spells.length < spellNumber) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            this.characterService.process_ToChange();\r\n        }\r\n        //If any locked spells remain that aren't in the list, add them to the list.\r\n        spells.push(...allSpells.filter(spell => choice.spells.some(existingSpell => existingSpell.locked && existingSpell.name == spell.name) && !spells.some(addedSpell => addedSpell.name == spell.name)));\r\n        //If any spells are left after this, we apply secondary, mechanical filters.\r\n        if (spells.length) {\r\n            //Get only Cantrips if the spell level is 0, but keep those already taken.\r\n            if (spellLevel == 0) {\r\n                spells = spells.filter(spell => spell.traits.includes(\"Cantrip\") || this.get_SpellTakenByThis(spell.name));\r\n            } else {\r\n                spells = spells.filter(spell => !spell.traits.includes(\"Cantrip\") || this.get_SpellTakenByThis(spell.name));\r\n            }\r\n            //Spell combination spell choices have special requirements, but they are also transformed from existing spell choices, so we don't want to change their properties.\r\n            //The requirements that would usually be handled as choice properties are handled on the fly here.\r\n            //The requirements are as follows:\r\n            // - Spell Level is up to 2 lower than the spell slot\r\n            // - The spell must be able to target a single creature other than the caster. This is ensured by the \"singletarget\" property in the spell.\r\n            // - The second spell must have the same method of determining its success as the first - Attack trait, the same saving throw or neither.\r\n            if (choice.spellCombination) {\r\n                spells = spells.filter(spell =>\r\n                    (spell.levelreq <= spellLevel - 2) &&\r\n                    (!this.allowHeightened ? spell.levelreq == spellLevel - 2 : true) &&\r\n                    spell.singleTarget\r\n                )\r\n                if (choice.spells.length) {\r\n                    if (choice.spells[0].name && choice.spells[0].combinationSpellName) {\r\n                        let availableSpells: Spell[] = spells.filter(spell =>\r\n                            this.get_SpellTakenByThis(spell.name)\r\n                        );\r\n                        return availableSpells.sort(function (a, b) {\r\n                            if (choice.spells[0].name == a.name) {\r\n                                return -1;\r\n                            }\r\n                            if (choice.spells[0].name == b.name) {\r\n                                return 1;\r\n                            }\r\n                            return 0\r\n                        });\r\n                    }\r\n                    let existingSpell = this.get_Spells(choice.spells[0].name)[0];\r\n                    spells = spells.filter(spell =>\r\n                        (existingSpell.traits.includes(\"Attack\") == spell.traits.includes(\"Attack\")) &&\r\n                        (existingSpell.savingThrow.includes(\"Fortitude\") == spell.savingThrow.includes(\"Fortitude\")) &&\r\n                        (existingSpell.savingThrow.includes(\"Reflex\") == spell.savingThrow.includes(\"Reflex\")) &&\r\n                        (existingSpell.savingThrow.includes(\"Will\") == spell.savingThrow.includes(\"Will\"))\r\n                    )\r\n                }\r\n                let availableSpells: Spell[] = spells.filter(spell =>\r\n                    this.cannotTake(spell).length == 0 || this.get_SpellTakenByThis(spell.name)\r\n                )\r\n                return availableSpells\r\n                    .sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0\r\n                    });\r\n            }\r\n            //Don't show spells of a different level unless heightened spells are allowed. Never show spells of a different level if this is a level 0 choice.\r\n            if (!this.allowHeightened && (spellLevel > 0)) {\r\n                spells = spells.filter(spell => spell.levelreq == spellLevel || this.get_SpellTakenByThis(spell.name));\r\n            } else if (spellLevel > 0) {\r\n                //Still don't show higher level non-cantrip spells even if heightened spells are allowed.\r\n                spells = spells.filter(spell => spell.levelreq <= spellLevel || this.get_SpellTakenByThis(spell.name));\r\n            }\r\n            //Finally, if there are fewer spells selected than available, show all spells that individually match the requirements or that are already selected.\r\n            // If the available spells are exhausted, only show the selected ones unless showOtherOptions is true.\r\n            if (choice.spells.length < this.get_Available()) {\r\n                return spells\r\n                    .sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0\r\n                    });\r\n            } else {\r\n                let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n                let availableSpells: Spell[] = spells.filter(spell =>\r\n                    this.get_SpellTakenByThis(spell.name) || showOtherOptions\r\n                )\r\n                return availableSpells\r\n                    .sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    cleanup_ChoiceSpells(spellList: Spell[], choice: SpellChoice) {\r\n        choice.spells.forEach(gain => {\r\n            if (!spellList?.map(spell => spell.name)?.includes(gain.name)) {\r\n                if (!gain.locked) {\r\n                    this.get_Character().take_Spell(this.characterService, gain.name, false, choice, gain.locked);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    cannotTakeSome() {\r\n        let anytrue = 0;\r\n        this.choice.spells.forEach(gain => {\r\n            if (this.cannotTake(this.get_Spells(gain.name)[0]).length) {\r\n                if (!gain.locked) {\r\n                    this.get_Character().take_Spell(this.characterService, gain.name, false, this.choice, gain.locked);\r\n                } else {\r\n                    anytrue += 1;\r\n                }\r\n            }\r\n        });\r\n        this.characterService.process_ToChange();\r\n        return anytrue;\r\n    }\r\n\r\n    cannotTake(spell: Spell) {\r\n        let choice = this.choice;\r\n        let takenByThis = this.get_SpellTakenByThis(spell.name);\r\n        if (takenByThis && choice.spells.find(spellGain => spellGain.name == spell.name && spellGain.locked)) {\r\n            return [];\r\n        }\r\n        let spellLevel = choice.level;\r\n        if (choice.dynamicLevel) {\r\n            spellLevel = this.get_DynamicLevel(choice);\r\n        }\r\n        let reasons: {reason: string, explain: string}[] = [];\r\n        //Are the basic requirements (so far just level) not met?\r\n        if (!spell.canChoose(this.characterService, spellLevel)) {\r\n            reasons.push({reason: \"Requirements unmet\", \"explain\": \"The requirements are not met.\"});\r\n        }\r\n        //Has it already been taken at this level by this class, and was that not by this SpellChoice? (Only for spontaneous spellcasters.)\r\n        if (this.get_SpellTakenThisLevel(spell, spellLevel) && !takenByThis) {\r\n            reasons.push({reason: \"Already taken\", explain: \"You already have this spell on this level with this class.\"});\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    get_SpellTakenByThis(spellName: string, choice: SpellChoice = this.choice) {\r\n        //Returns the amount of times that this spell has been taken in this choice, exluding locked spells. Needs to be a number for prepared spells.\r\n        return choice.spells.filter(takenSpell => !takenSpell.locked && takenSpell.name == spellName || takenSpell.combinationSpellName == spellName).length;\r\n    }\r\n\r\n    get_SpellTakenThisLevel(spell: Spell, spellLevel: number = 0) {\r\n        //Returns whether this spell has been taken in this spellcasting at this level at all (only for spontaneous spellcasters.)\r\n        //Returns false for spontaneous spell choices that draw from your spellbook (i.e. Esoteric Polymath and Arcane Evolution) and for spell choices with a cooldown.\r\n        let choice = this.choice;\r\n        if (!spellLevel) {\r\n            spellLevel = choice.level;\r\n            if (choice.dynamicLevel) {\r\n                spellLevel = this.get_DynamicLevel(choice);\r\n            }\r\n        }\r\n        return (\r\n            !choice.spellBookOnly &&\r\n            !choice.cooldown &&\r\n            this.spellCasting?.castingType == \"Spontaneous\" &&\r\n            !this.itemSpell &&\r\n            spell.have(this.characterService, this.spellCasting, spellLevel, choice.className, false)\r\n        );\r\n    }\r\n\r\n    get_TakenSpell(spellName: string) {\r\n        //Returns the first SpellGain of this spell in this choice.\r\n        return this.choice.spells.find(takenSpell => takenSpell.name == spellName || takenSpell.combinationSpellName == spellName);\r\n    }\r\n\r\n    get_LockedSpellTakenByThis(spellName: string) {\r\n        //Returns the amount of times that this spell is included in this choice as a locked spell. Needs to be a number for prepared spells.\r\n        return this.choice.spells.filter(takenSpell => takenSpell.locked && takenSpell.name == spellName).length;\r\n    }\r\n\r\n    on_SpellTaken(spellName: string, taken: boolean, locked: boolean) {\r\n        let choice = this.choice;\r\n        //Close the menu if all slots are filled, unless it's a spell combination choice.\r\n        if (taken && this.get_Character().settings.autoCloseChoices && !choice.spellCombination && (choice.spells.length == this.get_Available() - 1)) { this.toggle_Choice(\"\") }\r\n        let prepared: boolean = this.prepared;\r\n        let character = this.get_Character();\r\n        character.take_Spell(this.characterService, spellName, taken, choice, locked, prepared);\r\n        //For the Esoteric Polymath feat and the Arcane Evolution feat, if you choose a spell that is in your repertoire (i.e. if other spell choices have this spell in it),\r\n        // the choice is turned into a signature spell choice. If you drop the spell, turn signature spell off.\r\n        if ([\"Feat: Esoteric Polymath\", \"Feat: Arcane Evolution\"].includes(choice.source)) {\r\n            if (taken) {\r\n                if (this.spellCasting.spellChoices.find(otherChoice => otherChoice !== choice && this.get_SpellTakenByThis(spellName, otherChoice))) {\r\n                    choice.spells.forEach(gain => gain.signatureSpell = true);\r\n                }\r\n            } else {\r\n                choice.spells.forEach(gain => gain.signatureSpell = false);\r\n            }\r\n        }\r\n        //The Interweave Dispel feat is dependent on having Dispel in your repertoire, so we update that here.\r\n        if (spellName == \"Dispel Magic\" && !taken) {\r\n            if (this.have_Feat(\"Interweave Dispel\")) {\r\n                this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"spells\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_SpellCombinationTaken(spellName: string, taken: boolean) {\r\n        if (taken && this.get_Character().settings.autoCloseChoices) {\r\n            this.toggle_Choice(\"\")\r\n            this.choice.spells[0].combinationSpellName = spellName;\r\n        } else {\r\n            this.choice.spells[0].combinationSpellName = \"\";\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spellchoices\", \"all\", \"Character\"].includes(target)) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature == \"Character\" && [\"spellchoices\", \"all\"].includes(view.target)) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.level) {\r\n            this.level = this.choice.level;\r\n        }\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let listID of [choice.source+choice.id]; trackBy:trackByIndex\">\r\n    <ng-container *ngFor=\"let availableSpells of [get_AvailableSpells()]; trackBy:trackByIndex;\">\r\n        <!--Remove spells that are not among the available spells anymore-->\r\n        <ng-container *ngIf=\"cleanup_ChoiceSpells(availableSpells, choice)\"></ng-container>\r\n        <ng-container *ngFor=\"let available of [get_Available()]; trackBy:trackByIndex;\">\r\n            <ng-container *ngFor=\"let buttonTitle of [get_ButtonTitle(available)]; trackBy:trackByIndex;\">\r\n                <ng-container\r\n                    *ngFor=\"let signatureSpellsAllowed of [get_SignatureSpellsAllowed()]; trackBy:trackByIndex;\">\r\n                    <div *ngIf=\"available || get_SpellBlendingUsed() || get_InfinitePossibilitiesUsed() || get_AdaptedCantripUsed() || get_AdaptiveAdeptUsed()\"\r\n                        [ngClass]=\"{'list-item': showTitle && !get_TileMode(), 'problem':(choice.spells.length > available || cannotTakeSome()), 'fullsize-only':(available == choice.spells.length)}\">\r\n                        <ng-template #ButtonTitleTemplate>\r\n                            <span [ngbTooltip]=\"'Combination spell'\" *ngIf=\"choice.spellCombinationAllowed\"><i\r\n                                    class='ra ra-frostfire'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Infinite Possibilities spell'\"\r\n                                *ngIf=\"is_InfinitePossibilitiesSpell()\"><i class='ra ra-kaleidoscope'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Signature spell'\" *ngIf=\"has_SignatureSpell(signatureSpellsAllowed)\"><i\r\n                                    class='bi-stars'></i>&nbsp;</span>\r\n                            <span [ngbTooltip]=\"'Crossblooded Evolution spell'\" *ngIf=\"choice.crossbloodedEvolution\"><i\r\n                                    class='ra ra-zigzag-leaf'></i>&nbsp;</span>\r\n                            {{buttonTitle}}\r\n                        </ng-template>\r\n                        <!--Choice button shows in title mode-->\r\n                        <!--List mode button-->\r\n                        <button class=\"newrow left-aligned sublist-toggle\"\r\n                            *ngIf=\"showTitle && (!get_TileMode() || showContent)\"\r\n                            [ngClass]=\"{'fancy-button choicecleared':(available == choice.spells.length), 'activechoice': get_ShowChoice()==listID && (choice.showOnSheet && !itemSpell)}\"\r\n                            (click)=\"toggle_Choice(listID)\">\r\n                            <ng-container *ngTemplateOutlet=\"ButtonTitleTemplate\"></ng-container>\r\n                        </button>\r\n                        <!--Tile mode button-->\r\n                        <button (click)=\"toggle_Choice(listID)\" *ngIf=\"showTitle && !showContent && get_TileMode()\"\r\n                            [ngClass]=\"{'fancy-button choicecleared':(available == choice.spells.length), 'activechoice':get_ShowChoice()==listID}\">\r\n                            <app-gridIcon [ngbTooltip]=\"ButtonTitleTemplate\" [superTitle]=\"available.toString()\"\r\n                                [title]=\"(available == 1 && choice.spells.length) ? choice.spells[0].name : ((available > 1 && choice.spells.length > 0) ? choice.spells.length.toString() : '')\"\r\n                                [ngClass]=\"{'fancy-button':(available == choice.spells.length)}\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <!--Choice title shows above content in content only mode-->\r\n                        <div class=\"newrow list-item padding-8 center-aligned\" *ngIf=\"!showTitle\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                <ng-container *ngTemplateOutlet=\"ButtonTitleTemplate\"></ng-container>\r\n                            </header>\r\n                        </div>\r\n                        <!--Choice content shows in content mode-->\r\n                        <div id=\"{{!showTitle ? 'choiceArea' : ''}}\"\r\n                            [ngClass]=\"{'list-item sublist': showTitle, 'fancy-list':showTitle && (available == choice.spells.length), 'charactersheet-app':!showTitle}\"\r\n                            *ngIf=\"showContent && get_ShowChoice()==listID\">\r\n                            <div class=\"list-item lower\">\r\n                                <!-- Heightened -->\r\n                                <div class=\"list-item gridicon-fullsizebox\" *ngIf=\"spellbook && choice.level != 0\">\r\n                                    <input class=\"character-choice\" id=\"{{choice.id}}allowHeightened\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"allowHeightened\">\r\n                                    <label for=\"{{choice.id}}allowHeightened\">\r\n                                        <strong>\r\n                                            Allow heightened spells\r\n                                        </strong>\r\n                                    </label>\r\n                                </div>\r\n                                <!-- End Heightened -->\r\n                                <!-- Adapted Cantrip -->\r\n                                <ng-container *ngIf=\"get_AdaptedCantripAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Adapted Cantrip</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_AdaptedCantripUnlocked() && !choice.adaptedCantrip\">\r\n                                            An Adapted Cantrip spell slot has already been unlocked.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_AdaptedCantripUnlocked() || choice.adaptedCantrip\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}adaptedCantrip\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.adaptedCantrip\"\r\n                                                (ngModelChange)=\"on_AdaptedCantrip()\"\r\n                                                [disabled]=\"(available <= choice.spells.length) && !choice.adaptedCantrip\">\r\n                                            <label for=\"{{choice.id}}adaptedCantrip\">\r\n                                                <strong>\r\n                                                    Trade one spell slot in for an Adapted Cantrip spell of another\r\n                                                    tradition than your own.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Adapted Cantrip -->\r\n                                <!-- Adaptive Adept -->\r\n                                <ng-container *ngIf=\"get_AdaptiveAdeptAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Adaptive Adept</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_AdaptiveAdeptUnlocked() && !choice.adaptiveAdept\">\r\n                                            An Adaptive Adept spell slot has already been unlocked.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_AdaptiveAdeptUnlocked() || choice.adaptiveAdept\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}adaptiveAdept\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.adaptiveAdept\"\r\n                                                (ngModelChange)=\"on_AdaptiveAdept()\"\r\n                                                [disabled]=\"(available <= choice.spells.length) && !choice.adaptiveAdept\">\r\n                                            <label for=\"{{choice.id}}adaptiveAdept\">\r\n                                                <strong>\r\n                                                    Trade one spell slot in for an Adaptive Adept spell slot of the same\r\n                                                    tradition as the Adapted Cantrip spell.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Adaptive Adept -->\r\n                                <!-- Spell Blending -->\r\n                                <ng-container *ngIf=\"spellbook && get_SpellBlendingAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Spell Blending</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_SpellBlendingUnlocked(0) && get_SpellBlendingUnlocked(choice.level + 1) && get_SpellBlendingUnlocked(choice.level + 2) && choice.spellBlending.toString() == '0,0,0'\">\r\n                                            No bonus spell slots can currently be unlocked by trading in this spell\r\n                                            slot.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_SpellBlendingUnlocked(0) || choice.spellBlending[0]\">\r\n                                            <span>\r\n                                                <button class=\"character-choice\" [disabled]=\"!choice.spellBlending[0]\"\r\n                                                    (click)=\"on_SpellBlending(0, -1)\">-</button>\r\n                                                <button class=\"character-choice\"\r\n                                                    [disabled]=\"get_SpellBlendingUnlocked(0) || available <= choice.spells.length\"\r\n                                                    (click)=\"on_SpellBlending(0, 1)\">+</button>\r\n                                            </span>\r\n                                            <strong>\r\n                                                {{choice.spellBlending[0]}} spell slot{{choice.spellBlending[0] ? \"\" :\r\n                                                \"s\"}} traded in for 2 cantrip slots\r\n                                            </strong>\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_SpellBlendingUnlocked(choice.level + 1) || choice.spellBlending[1]\">\r\n                                            <span>\r\n                                                <button class=\"character-choice\" [disabled]=\"!choice.spellBlending[1]\"\r\n                                                    (click)=\"on_SpellBlending(1, -1)\">-</button>\r\n                                                <button class=\"character-choice\"\r\n                                                    [disabled]=\"get_SpellBlendingUnlocked(choice.level + 1) || available <= choice.spells.length\"\r\n                                                    (click)=\"on_SpellBlending(1, 1)\">+</button>\r\n                                            </span>\r\n                                            <strong>\r\n                                                {{choice.spellBlending[1]}} spell slot{{choice.spellBlending[1] != 1 ?\r\n                                                \"s\" : \"\"}} traded in for level {{choice.level + 1}} spell slot (2 needed\r\n                                                for 1)\r\n                                            </strong>\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_SpellBlendingUnlocked(choice.level + 2) || choice.spellBlending[2]\">\r\n                                            <span>\r\n                                                <button class=\"character-choice\" [disabled]=\"!choice.spellBlending[2]\"\r\n                                                    (click)=\"on_SpellBlending(2, -1)\">-</button>\r\n                                                <button class=\"character-choice\"\r\n                                                    [disabled]=\"get_SpellBlendingUnlocked(choice.level + 2) || available <= choice.spells.length\"\r\n                                                    (click)=\"on_SpellBlending(2, 1)\">+</button>\r\n                                            </span>\r\n                                            <strong>\r\n                                                {{choice.spellBlending[2]}} spell slot{{choice.spellBlending[2] != 1 ?\r\n                                                \"s\" : \"\"}} traded in for level {{choice.level + 2}} spell slot (2 needed\r\n                                                for 1)\r\n                                            </strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Spell Blending -->\r\n                                <!-- Infinite Possibilities -->\r\n                                <ng-container *ngIf=\"spellbook && get_InfinitePossibilitiesAllowed()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong><i class='ra ra-kaleidoscope'></i>&nbsp;Infinite Possibilities</strong>\r\n                                        <div class=\"newrow\"\r\n                                            *ngIf=\"get_InfinitePossibilitiesUnlocked() && !choice.infinitePossibilities\">\r\n                                            An Infinite Possibilities spell slot has already been unlocked.\r\n                                        </div>\r\n                                        <div class=\"newrow gridicon-fullsizebox\"\r\n                                            *ngIf=\"!get_InfinitePossibilitiesUnlocked() || choice.infinitePossibilities\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}infinitePossibilities\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.infinitePossibilities\"\r\n                                                (ngModelChange)=\"on_InfinitePossibilities()\"\r\n                                                [disabled]=\"(available <= choice.spells.length) && !choice.infinitePossibilities\">\r\n                                            <label for=\"{{choice.id}}infinitePossibilities\">\r\n                                                <strong>\r\n                                                    Trade one spell slot in for a level {{choice.level - 2}} Infinite\r\n                                                    Possibilities spell slot.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Infinite Possibilities -->\r\n                                <!-- Spell Combination -->\r\n                                <ng-container *ngIf=\"choice.spellCombinationAllowed\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong><i class='ra ra-frostfire'></i>&nbsp;Spell Combination</strong>\r\n                                        <div class=\"newrow gridicon-fullsizebox\">\r\n                                            <input class=\"character-choice\" id=\"{{choice.id}}spellCombination\"\r\n                                                type=\"checkbox\" [(ngModel)]=\"choice.spellCombination\"\r\n                                                (ngModelChange)=\"on_SpellCombination()\"\r\n                                                [disabled]=\"available <= choice.spells.length\">\r\n                                            <label for=\"{{choice.id}}spellCombination\">\r\n                                                <strong>\r\n                                                    Use this spell slot as a spell combination slot.\r\n                                                </strong>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"choice.spellCombination\">\r\n                                            <p>\r\n                                                Both spells must be level {{choice.level - 2}} or lower, and both must\r\n                                                target only one creature or object or have the option to target only one\r\n                                                creature or object.\r\n                                            </p>\r\n                                            <p>\r\n                                                The second spell you choose for this spell slot must have the same means\r\n                                                of determining whether it has an effect as the first spell - both spells\r\n                                                must require a ranged spell attack roll, require the same type of saving\r\n                                                throw, or automatically affect the target.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Spell Combination -->\r\n                                <!-- Esoteric Polymath -->\r\n                                <ng-container *ngIf=\"is_EsotericPolymathSpell(choice)\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Esoteric Polymath</strong>\r\n                                        <span class=\"newrow left-aligned\">\r\n                                            <strong>Spell Level&nbsp;</strong>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(-1)\"\r\n                                                [disabled]=\"choice.level <= 1\">-</button>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(1)\"\r\n                                                [disabled]=\"choice.level >= get_HighestSpellLevel()\">+</button>\r\n                                        </span>\r\n                                        <p>\r\n                                            During your daily preparations, choose any one spell from your book of\r\n                                            occult spells. If that spell is already in your spell repertoire, you can\r\n                                            treat it as an additional signature spell that day. If it isn't in your\r\n                                            repertoire, treat it as though it were until your next daily preparations.\r\n                                        </p>\r\n                                        <p>\r\n                                            You may add all spells from your repertoire to this book for free, and you\r\n                                            can use the Occultism skill to Learn Spells (page 238) and add them to your\r\n                                            spellbook by paying the appropriate cost, similar to a wizard.\r\n                                        </p>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Esoteric Polymath -->\r\n                                <!-- Arcane Evolution -->\r\n                                <ng-container *ngIf=\"is_ArcaneEvolutionSpell()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Arcane Evolution</strong>\r\n                                        <span class=\"newrow left-aligned\">\r\n                                            <strong>Spell Level&nbsp;</strong>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(-1)\"\r\n                                                [disabled]=\"choice.level <= 1\">-</button>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(1)\"\r\n                                                [disabled]=\"choice.level >= get_HighestSpellLevel()\">+</button>\r\n                                        </span>\r\n                                        <p>\r\n                                            During your daily preparations, choose any one spell from your book of\r\n                                            arcane spells. If that spell is already in your spell repertoire, you can\r\n                                            treat it as an additional signature spell that day. If it isn't in your\r\n                                            repertoire, add it to your spell repertoire until the next time you prepare.\r\n                                        </p>\r\n                                        <p>\r\n                                            You may add all spells from your repertoire to this book for free, and you\r\n                                            can use the Arcana skill to Learn Spells (page 238) and add them to your\r\n                                            spellbook by paying the appropriate cost, similar to a wizard.\r\n                                        </p>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Arcane Evolution -->\r\n                                <!-- Occult Evolution -->\r\n                                <ng-container *ngIf=\"is_OccultEvolutionSpell()\">\r\n                                    <div class=\"list-item\">\r\n                                        <strong>Occult Evolution</strong>\r\n                                        <span class=\"newrow left-aligned\">\r\n                                            <strong>Spell Level&nbsp;</strong>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(-1)\"\r\n                                                [disabled]=\"choice.level <= 1\">-</button>\r\n                                            <button class=\"character-choice\" (click)=\"on_ChangeSpellLevel(1)\"\r\n                                                [disabled]=\"choice.level >= get_HighestSpellLevel()\">+</button>\r\n                                        </span>\r\n                                        <p>\r\n                                            Once per day, you can spend 1 minute to choose one mental occult spell you\r\n                                            don't know and add it to your spell repertoire. You lose this temporary\r\n                                            spell the next time you make your daily preparations (though you can use\r\n                                            this ability to add it again later).\r\n                                        </p>\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- End Occult Evolution -->\r\n                                <!-- Crossblooded Evolution -->\r\n                                <ng-container\r\n                                    *ngFor=\"let crossbloodedEvolutionAllowed of [get_CrossbloodedEvolutionAllowed()]; trackBy: trackByIndex\">\r\n                                    <ng-container *ngIf=\"crossbloodedEvolutionAllowed\">\r\n                                        <div class=\"list-item\">\r\n                                            <strong><i class='ra ra-zigzag-leaf'></i>&nbsp;Crossblooded\r\n                                                Evolution</strong>\r\n                                            <div class=\"newrow\"\r\n                                                *ngIf=\"get_CrossbloodedEvolutionUnlocked(choice.level) && !choice.crossbloodedEvolution\">\r\n                                                A Crossblooded Evolution spell has already been assigned for this level.\r\n                                            </div>\r\n                                            <div class=\"newrow\"\r\n                                                *ngIf=\"crossbloodedEvolutionAllowed > 1 && get_CrossbloodedEvolutionUnlocked() >= crossbloodedEvolutionAllowed && !choice.crossbloodedEvolution\">\r\n                                                The total maximum of {{crossbloodedEvolutionAllowed}} Crossblooded\r\n                                                Evolution spells has already been assigned.\r\n                                            </div>\r\n                                            <div class=\"newrow\"\r\n                                                *ngIf=\"crossbloodedEvolutionAllowed == 1 && get_CrossbloodedEvolutionUnlocked() >= crossbloodedEvolutionAllowed && !choice.crossbloodedEvolution\">\r\n                                                The Crossblooded Evolution spell has already been assigned.\r\n                                            </div>\r\n                                            <div class=\"newrow gridicon-fullsizebox\"\r\n                                                *ngIf=\"choice.crossbloodedEvolution || (!get_CrossbloodedEvolutionUnlocked(choice.level) && get_CrossbloodedEvolutionUnlocked() < crossbloodedEvolutionAllowed)\">\r\n                                                <input class=\"character-choice\" id=\"{{choice.id}}crossbloodedEvolution\"\r\n                                                    type=\"checkbox\" [(ngModel)]=\"choice.crossbloodedEvolution\"\r\n                                                    (ngModelChange)=\"on_CrossbloodedEvolution()\">\r\n                                                <label for=\"{{choice.id}}crossbloodedEvolution\">\r\n                                                    <strong>\r\n                                                        Allow a spell from another tradition in this choice.\r\n                                                    </strong>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                                <!-- End Crossblooded Evolution -->\r\n                                <div class=\"list-item\" *ngIf=\"!available && !choice.spells.length\">\r\n                                    <span>There are no spell slots available in this choice.</span>\r\n                                </div>\r\n                                <div class=\"list-item\" *ngIf=\"available && !availableSpells?.length\">\r\n                                    <span>\r\n                                        No available spell matches the requirements of this spell choice, or no spells\r\n                                        are available.\r\n                                    </span>\r\n                                    <span *ngIf=\"!allowHeightened\">\r\n                                        More spells may be found if you allow heightened spells.\r\n                                    </span>\r\n                                </div>\r\n                                <ng-container *ngFor=\"let spell of availableSpells; trackBy:trackBySpellID;\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let taken of [get_SpellTakenByThis(spell.name)]; trackBy:trackByIndex\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let checked of [taken || get_SpellTakenThisLevel(spell)]; trackBy:trackByIndex\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let cannotTake of [cannotTake(spell)]; trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let spontaneousDisabled of [(cannotTake.length || available <= choice.spells.length) && !taken]; trackBy:trackByIndex\">\r\n                                                    <ng-template #SpellChoiceDetailTemplate>\r\n                                                        <div class=\"newrow\">\r\n                                                            <header class=\"spellHeader\">{{spell.name}} <app-actionIcons\r\n                                                                    [actionString]=\"spell.actions\"></app-actionIcons>\r\n                                                            </header>\r\n                                                            <!--Spontaneous: Choose/Remove button-->\r\n                                                            <div class=\"button newrow no-animation\"\r\n                                                                *ngIf=\"spellCasting?.castingType!='Prepared'\"\r\n                                                                [ngClass]=\"{'fancy-button':taken, 'disabled':spontaneousDisabled}\">\r\n                                                                <label>\r\n                                                                    <input type=\"checkbox\"\r\n                                                                        (change)=\"on_SpellTaken(spell.name, $event.target.checked, false)\"\r\n                                                                        [checked]=\"checked\"\r\n                                                                        [disabled]=\"spontaneousDisabled || get_LockedSpellTakenByThis(spell.name) || (checked && !taken)\"\r\n                                                                        hidden>\r\n                                                                    {{taken ? \"Remove\" : \"Choose\"}}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <!--Prepared and no spell combination or first spell of spell combination: plus/minus buttons-->\r\n                                                            <div class=\"newrow left-aligned\"\r\n                                                                *ngIf=\"spellCasting?.castingType == 'Prepared' && (!choice.spellCombination || (choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)))\">\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellTaken(spell.name, false, false)\"\r\n                                                                    [disabled]=\"!taken\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellTaken(spell.name, true, false)\"\r\n                                                                    [disabled]=\"cannotTake.length || choice.spells.length >= available || (taken && choice.level == 0 && !choice.dynamicLevel)\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                                <strong>\r\n                                                                    {{taken}} prepared\r\n                                                                    <span\r\n                                                                        *ngIf=\"choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)\">&nbsp;as\r\n                                                                        first spell combination spell</span>\r\n                                                                </strong>\r\n                                                            </div>\r\n                                                            <!--Prepared and spell combination: plus/minus buttons-->\r\n                                                            <div class=\"newrow left-aligned\"\r\n                                                                *ngIf=\"spellCasting?.castingType == 'Prepared' && choice.spellCombination && choice.spells.length && choice.spells[0].name != spell.name && (!choice.spells[0].combinationSpellName || choice.spells[0].combinationSpellName == spell.name)\">\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellCombinationTaken(spell.name, false)\"\r\n                                                                    [disabled]=\"!taken\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                                <button class=\"character-choice\"\r\n                                                                    (click)=\"on_SpellCombinationTaken(spell.name, true)\"\r\n                                                                    [disabled]=\"cannotTake.length || (choice.spells.length >= available && choice.spells[0]?.combinationSpellName)\"\r\n                                                                    *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                                <strong>\r\n                                                                    {{taken}} prepared as second spell combination spell\r\n                                                                </strong>\r\n                                                            </div>\r\n                                                            <div class=\"newrow left-aligned\">\r\n                                                                <cite [ngbPopover]=\"reason.explain\" class=\"problem\"\r\n                                                                    *ngFor=\"let reason of cannotTake; trackBy:trackByIndex;\">\r\n                                                                    {{reason.reason}}\r\n                                                                </cite>\r\n                                                            </div>\r\n                                                            <app-spell [spell]=\"spell\" [spellLevel]=\"level\"></app-spell>\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                                        [ngClass]=\"{'selected':taken, 'unavailable':cannotTake.length}\">\r\n                                                        <!--Spontaneous: Checkbox-->\r\n                                                        <input class=\"character-choice\" id=\"{{choice.id+spell.name}}\"\r\n                                                            *ngIf=\"spellCasting?.castingType!='Prepared'\"\r\n                                                            type=\"checkbox\"\r\n                                                            (change)=\"on_SpellTaken(spell.name, $event.target.checked, false)\"\r\n                                                            [checked]=\"checked\"\r\n                                                            [disabled]=\"spontaneousDisabled || get_LockedSpellTakenByThis(spell.name) || (checked && !taken)\">\r\n                                                        <!--Prepared and no spell combination: plus/minus buttons-->\r\n                                                        <span\r\n                                                            *ngIf=\"spellCasting?.castingType == 'Prepared' && (!choice.spellCombination || (choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)))\">\r\n                                                            <span\r\n                                                                *ngIf=\"choice.spellCombination && (!choice.spells.length || choice.spells[0].name == spell.name)\">1&nbsp;</span>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellTaken(spell.name, false, false)\"\r\n                                                                [disabled]=\"!taken\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellTaken(spell.name, true, false)\"\r\n                                                                [disabled]=\"cannotTake.length || choice.spells.length >= available || (taken && choice.level == 0 && !choice.dynamicLevel)\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                        </span>\r\n                                                        <!--Prepared and spell combination: plus/minus buttons-->\r\n                                                        <span\r\n                                                            *ngIf=\"spellCasting?.castingType == 'Prepared' && choice.spellCombination && choice.spells.length && choice.spells[0].name != spell.name && (!choice.spells[0].combinationSpellName || choice.spells[0].combinationSpellName == spell.name)\">\r\n                                                            <span\r\n                                                                *ngIf=\"choice.spellCombination && choice.spells.length && (!choice.spells[0].combinationSpellName || choice.spells[0].combinationSpellName == spell.name)\">2&nbsp;</span>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellCombinationTaken(spell.name, false)\"\r\n                                                                [disabled]=\"!taken\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">-</button>\r\n                                                            <button class=\"character-choice\"\r\n                                                                (click)=\"on_SpellCombinationTaken(spell.name, true)\"\r\n                                                                [disabled]=\"cannotTake.length || (choice.spells.length >= available && choice.spells[0]?.combinationSpellName)\"\r\n                                                                *ngIf=\"spellCasting?.castingType=='Prepared'\">+</button>\r\n                                                        </span>\r\n                                                        <div class=\"gridicon-fullsizebox\"\r\n                                                            #SpellChoiceDetailPopover=\"ngbPopover\"\r\n                                                            [ngbPopover]=\"SpellChoiceDetailTemplate\" triggers=\"click\">\r\n                                                            <app-gridIcon [title]=\"spell.name\"\r\n                                                                [detail]=\"spell.traits.includes('Rare') ? 'Rare' : (spell.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                            </app-gridIcon>\r\n                                                            <header class=\"sectionHeader\">\r\n                                                                <!-- Signature Spells -->\r\n                                                                <ng-container *ngIf=\"taken && signatureSpellsAllowed\">\r\n                                                                    <div class=\"list-item newrow lower\"\r\n                                                                        *ngFor=\"let takenSpell of [get_TakenSpell(spell.name)]\">\r\n                                                                        <span [ngbTooltip]=\"reason\"\r\n                                                                            *ngFor=\"let reason of [get_CannotChooseSignatureSpell(signatureSpellsAllowed, takenSpell)]; trackBy:trackByIndex;\">\r\n                                                                            <input\r\n                                                                                id=\"{{choice.id+spell.name}}signaturespell\"\r\n                                                                                type=\"checkbox\"\r\n                                                                                [(ngModel)]=\"takenSpell.signatureSpell\"\r\n                                                                                (ngModelChange)=\"on_SignatureSpell()\"\r\n                                                                                [disabled]=\"reason != ''\">\r\n                                                                            <label\r\n                                                                                for=\"{{choice.id+spell.name}}signaturespell\">\r\n                                                                                &nbsp;\r\n                                                                                <i class='bi-stars'></i>\r\n                                                                                &nbsp;Choose this spell as a Signature\r\n                                                                                Spell\r\n                                                                            </label>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </ng-container>\r\n                                                                <!-- End Signature Spells -->\r\n                                                                <span\r\n                                                                    [ngbTooltip]=\"(!SpellChoiceDetailPopover.isOpen()) ? spell.shortDesc : ''\"\r\n                                                                    triggers=\"hover\" openDelay=100>\r\n                                                                    {{(spellCasting?.castingType == 'Prepared' && taken)\r\n                                                                    ? \" \" + taken + \" \" : \"\"}}{{spell.name}}&nbsp;\r\n                                                                </span>\r\n                                                                <cite>Level {{spell.levelreq}}</cite>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"spell.traits.includes('Rare')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\">Rare</cite>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"spell.traits.includes('Uncommon')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\">Uncommon</cite>\r\n                                                            </header>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { ItemCollection } from './ItemCollection';\r\nimport { Health } from './Health';\r\nimport { Speed } from './Speed';\r\nimport { Bulk } from './Bulk';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Skill } from './Skill';\r\n\r\nexport class Creature {\r\n    public name: string = \"\";\r\n    public id = uuidv1();\r\n    public type: string = \"\";\r\n    public level: number = 1;\r\n    public customSkills: Skill[] = [];\r\n    public health: Health = new Health();\r\n    public conditions: ConditionGain[] = [];\r\n    public effects: EffectGain[] = [];\r\n    public inventories: ItemCollection[] = [new ItemCollection()];\r\n    public speeds: Speed[] = [new Speed(\"Speed\"), new Speed(\"Land Speed\")];\r\n    public bulk: Bulk = new Bulk();\r\n    public notes: string = \"\";\r\n}","import { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Item } from './Item';\r\nimport { Hint } from './Hint';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Trait {\r\n    public desc: string = \"\";\r\n    public dynamic: boolean = false;\r\n    public name: string = \"\";\r\n    public hints: Hint[] = [];\r\n    public specialModifier: string[] = [];\r\n    //Return all equipped items that have this trait, or alternatively only their names.\r\n    //Some trait instances have information after the trait name, so we allow traits that include this trait's name as long as this trait is dynamic.\r\n    haveOn(creature: Creature, namesOnly: boolean = false) { \r\n        let filteredItems: Item[] = []\r\n        creature.inventories.forEach(inventory => {\r\n            filteredItems.push(...inventory.allEquipment()\r\n                .filter(item =>\r\n                    item.equipped &&\r\n                    item.traits\r\n                        .find(trait =>\r\n                            this.name == trait ||\r\n                            (\r\n                                trait.includes(this.name) &&\r\n                                this.dynamic\r\n                            )\r\n                        )\r\n                    )\r\n                );\r\n        });\r\n        if (namesOnly) {\r\n            return filteredItems.map(item => item.name);\r\n        } else {\r\n            return filteredItems;\r\n        }\r\n    };\r\n}","\r\nexport class Material {\r\n    public readonly _className: string = this.constructor.name;\r\n    public bulkPrice: number = 0;\r\n    public bulkReduction: number = 0;\r\n    public craftRequirement: string = \"\";\r\n    //This is how high your crafting level needs to be to craft with this material.\r\n    public craftingRequirement: number = 4;\r\n    public desc: string = \"\";\r\n    public level: number = 0;\r\n    public name: string = \"\";\r\n    public price: number = 0;\r\n    public runeLimit: number = 0;\r\n    public traits: string[] = [];\r\n    public extraRune: number = 0;\r\n}","import { Equipment } from './Equipment';\r\n\r\nexport class AdventuringGear extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Adventuring Gear should be type \"adventuringgear\" to be found in the database\r\n    readonly type = \"adventuringgear\";\r\n    //Adventuring Gear can usually not be equipped or invested, but with exceptions.\r\n    equippable = false;\r\n    //How many hands need to be free to use this item?\r\n    public hands: string = \"\";\r\n    //Does this item count for the \"Armored Skirt\" functionality?\r\n    public isArmoredSkirt: boolean = false;\r\n    //Some Items get bought in stacks. Stack defines how many you buy at once,\r\n    //and how many make up one instance of the items Bulk.\r\n    public stack: number = 1;\r\n    //How is this item used/worn/applied? Example: held in 1 hand\r\n    public usage: string = \"\";\r\n}","import { EffectGain } from './EffectGain';\r\n\r\nexport class Hint {\r\n    //We want the active hints to be reset when loading characters. Everything listed in neversave gets deleted during saving.\r\n    public readonly neversave: string[] = [\r\n        \"active\",\r\n        \"active2\",\r\n        \"active3\",\r\n        \"active4\",\r\n        \"active5\"\r\n    ];\r\n    public desc: string = \"\";\r\n    public showon: string = \"\";\r\n    public effects: EffectGain[] = [];\r\n    public active: boolean = false;\r\n    public active2: boolean = false;\r\n    public active3: boolean = false;\r\n    public active4: boolean = false;\r\n    public active5: boolean = false;\r\n    //If extraActivations is 1 through 4, one or two more activation boxes are shown.\r\n    public extraActivations: number = 0;\r\n}\r\n","import { Effect } from './Effect';\r\nimport { Hint } from './Hint';\r\n\r\nexport class Specialization {\r\n    public desc: string = \"\";\r\n    public effects: Effect[] = [];\r\n    public hints: Hint[] = [];\r\n    public name: string = \"\";\r\n    public type: string = \"\";\r\n}\r\n","import { Activity } from './Activity';\r\nimport { SpellCast } from './SpellCast';\r\n\r\n//ItemActivity combines Activity and ActivityGain, so that an item can have its own contained activity.\r\nexport class ItemActivity extends Activity {\r\n    public readonly _className: string = this.constructor.name;\r\n    public active: boolean = false;\r\n    public activeCooldown: number = 0;\r\n    public chargesUsed: number = 0;\r\n    //If you use a charge of an activity, and it has a sharedChargesID, all activities on the same item with the same sharedChargesID will also use a charge.\r\n    public sharedChargesID: number = 0;\r\n    //If you activate an activity, and it has an exclusiveActivityID, all activities on the same item with the same sharedChargesID are automatically deactivated.\r\n    public exclusiveActivityID: number = 0;\r\n    //The duration is copied from the activity when activated.\r\n    public duration: number = 0;\r\n    public level: number = 0;\r\n    public source: string = \"\";\r\n    //Resonant item activities are only available when the item is slotted into a wayfinder.\r\n    public resonant: boolean = false;\r\n    public data: {name:string, value:any}[] = [];\r\n    //We copy the activities castSpells here whenever we activate it, so we can store the item ID.\r\n    public castSpells: SpellCast[] = [];\r\n    //If the activity causes a condition, in order to select a choice from the activity beforehand, the choice is saved here for each condition.\r\n    public effectChoices: string[] = [];\r\n    //If the activity casts a spell, in order to select a choice from the spell before casting it, the choice is saved here for each condition for each spell, recursively.\r\n    public spellEffectChoices: string[][] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { ItemsService } from '../items.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { Weapon } from '../Weapon';\r\nimport { Armor } from '../Armor';\r\nimport { Shield } from '../Shield';\r\nimport { WornItem } from '../WornItem';\r\nimport { HeldItem } from '../HeldItem';\r\nimport { AlchemicalElixir } from '../AlchemicalElixir';\r\nimport { OtherConsumable } from '../OtherConsumable';\r\nimport { AdventuringGear } from '../AdventuringGear';\r\nimport { Item } from '../Item';\r\nimport { Consumable } from '../Consumable';\r\nimport { Equipment } from '../Equipment';\r\nimport { Potion } from '../Potion';\r\nimport { Ammunition } from '../Ammunition';\r\nimport { Scroll } from '../Scroll';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { ItemCollection } from '../ItemCollection';\r\nimport { OtherConsumableBomb } from '../OtherConsumableBomb';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-items',\r\n    templateUrl: './items.component.html',\r\n    styleUrls: ['./items.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ItemsComponent implements OnInit {\r\n\r\n    private showList: string = \"\";\r\n    private showItem: number = 0;\r\n    public id: number = 0;\r\n    public hover: number = 0;\r\n    public wordFilter: string = \"\";\r\n    public sorting: \"level\" | \"name\" = \"level\";\r\n    public creature: string = \"Character\";\r\n    public newItemType: string = \"\";\r\n    public newItem: Equipment | Consumable = null;\r\n    public cashP: number = 0;\r\n    public cashG: number = 0;\r\n    public cashS: number = 0;\r\n    public cashC: number = 0;\r\n    public purpose: \"items\" | \"formulas\" | \"scrollsavant\" | \"createcustomitem\" = \"items\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private itemsService: ItemsService,\r\n        private characterService: CharacterService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(type: string) {\r\n        if (this.showList == type) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = type;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    toggle_Item(id: number) {\r\n        if (this.showItem == id) {\r\n            this.showItem = 0;\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    toggle_Purpose(purpose: \"items\" | \"formulas\" | \"scrollsavant\" | \"createcustomitem\") {\r\n        this.purpose = purpose;\r\n    }\r\n\r\n    get_ShowPurpose() {\r\n        return this.purpose;\r\n    }\r\n\r\n    set_ItemsMenuTarget() {\r\n        this.characterService.set_ItemsMenuTarget(this.creature);\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.characterService.get_ItemsMenuState();\r\n    }\r\n\r\n    get_ItemsMenuTarget() {\r\n        this.creature = this.characterService.get_ItemsMenuTarget();\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList) {\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = \"All\";\r\n        }\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    toggleItemsMenu() {\r\n        this.characterService.toggle_Menu(\"items\");\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_SortByName(obj: Item[]) {\r\n        return obj.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    have_Funds(sum: number = 0) {\r\n        let character = this.characterService.get_Character();\r\n        if (!sum) {\r\n            sum = (this.cashP * 1000) + (this.cashG * 100) + (this.cashS * 10) + (this.cashC);\r\n        }\r\n        let funds = (character.cash[0] * 1000) + (character.cash[1] * 100) + (character.cash[2] * 10) + (character.cash[3]);\r\n        if (sum <= funds) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    change_Cash(multiplier: number = 1, sum: number = 0, changeafter: boolean = false) {\r\n        this.characterService.change_Cash(multiplier, sum, this.cashP, this.cashG, this.cashS, this.cashC);\r\n        if (changeafter) {\r\n            this.characterService.set_Changed(\"inventory\");\r\n        }\r\n    }\r\n\r\n    get_Items(newIDs: boolean = false) {\r\n        if (newIDs) {\r\n            this.id = 0;\r\n        }\r\n        if (this.get_ShowPurpose() == \"formulas\") {\r\n            return this.itemsService.get_CraftingItems();\r\n        } else {\r\n            return this.itemsService.get_Items();\r\n        }\r\n\r\n    }\r\n\r\n    get_CopyItems(type: string) {\r\n        return this.itemsService.get_CleanItems()[type].filter((item: Item) => !item.hide).sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_InventoryItems(type: string) {\r\n        let items = [];\r\n        this.characterService.get_Character().inventories.map(inventory => inventory[type]).forEach(itemSet => {\r\n            items.push(...itemSet);\r\n        })\r\n        return items.filter(item => !item.hide).sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_VisibleItems(items: Item[], creatureType: string = \"\") {\r\n        let casting: SpellCasting;\r\n        let character = this.get_Character();\r\n        if (this.purpose == \"scrollsavant\") {\r\n            casting = this.get_ScrollSavantCasting();\r\n        }\r\n        return items.filter((item: Item) =>\r\n            (\r\n                //Show companion items in the companion list and not in the character list.\r\n                (creatureType == \"Character\" && !item.traits.includes(\"Companion\")) ||\r\n                (creatureType == \"Companion\" && item.traits.includes(\"Companion\"))\r\n            ) &&\r\n            !item.hide &&\r\n            (\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        item.name.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.desc.toLowerCase().includes(this.wordFilter.toLowerCase()) ||\r\n                        item.traits.filter(trait => trait.toLowerCase().includes(this.wordFilter.toLowerCase())).length\r\n                    )\r\n                )\r\n            ) &&\r\n            (this.purpose == \"formulas\" ? item.craftable : true) &&\r\n            (\r\n                this.purpose == \"scrollsavant\" ?\r\n                    (\r\n                        creatureType == \"Character\" &&\r\n                        item.type == \"scrolls\" &&\r\n                        (item as Scroll).storedSpells[0]?.level <= character.get_SpellLevel(character.level) - 2 &&\r\n                        casting && !casting.scrollSavant.find(scroll => scroll.refId == item.id)\r\n                    )\r\n                    : true\r\n            )\r\n        ).sort((a, b) => {\r\n            if ((a.level / 100) + a.name > (b.level / 100) + b.name) {\r\n                return 1;\r\n            }\r\n\r\n            if ((a.level / 100) + a.name < (b.level / 100) + b.name) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }).sort((a, b) => {\r\n            if (a[this.sorting] > b[this.sorting]) {\r\n                return 1;\r\n            }\r\n            if (a[this.sorting] < b[this.sorting]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    can_ApplyTalismans(item: Item) {\r\n        return ([\"armors\", \"shields\", \"weapons\"].includes(item.type));\r\n    }\r\n\r\n    can_ChangeMaterial(item: Item) {\r\n        return ([\"armors\", \"shields\", \"weapons\"].includes(item.type));\r\n    }\r\n\r\n    grant_Item(creature: string = \"Character\", item: Item, pay: boolean = false) {\r\n        if (pay && (item[\"get_Price\"] ? item[\"get_Price\"](this.itemsService) : item.price)) {\r\n            this.change_Cash(-1, item.price);\r\n        }\r\n        let amount = 1;\r\n        if (item[\"stack\"]) {\r\n            amount = item[\"stack\"];\r\n        }\r\n        if (creature == \"Character\") {\r\n            this.characterService.grant_InventoryItem(this.characterService.get_Character(), this.characterService.get_Character().inventories[0], item, false, true, true, amount);\r\n        } else if (creature == \"Companion\") {\r\n            this.characterService.grant_InventoryItem(this.characterService.get_Companion(), this.characterService.get_Companion().inventories[0], item, false, true, true, amount);\r\n        }\r\n\r\n    }\r\n\r\n    get_NewItemFilter() {\r\n        return [{ name: '', key: '' }].concat(this.get_Items().names.filter(name =>\r\n            ![\r\n                \"weaponrunes\",\r\n                \"alchemicalbombs\",\r\n                \"armorrunes\",\r\n                \"alchemicaltools\",\r\n                \"scrolls\",\r\n                \"alchemicalpoisons\",\r\n                \"oils\",\r\n                \"talismans\",\r\n                \"snares\",\r\n                \"wands\"\r\n            ].includes(name.key)));\r\n    }\r\n\r\n    initialize_NewItem() {\r\n        switch (this.newItemType) {\r\n            case \"weapons\":\r\n                this.newItem = new Weapon();\r\n                break;\r\n            case \"armors\":\r\n                this.newItem = new Armor();\r\n                break;\r\n            case \"shields\":\r\n                this.newItem = new Shield();\r\n                break;\r\n            case \"wornitems\":\r\n                this.newItem = new WornItem();\r\n                break;\r\n            case \"helditems\":\r\n                this.newItem = new HeldItem();\r\n                break;\r\n            case \"alchemicalelixirs\":\r\n                this.newItem = new AlchemicalElixir();\r\n                break;\r\n            case \"potions\":\r\n                this.newItem = new Potion();\r\n                break;\r\n            case \"otherconsumables\":\r\n                this.newItem = new OtherConsumable();\r\n                break;\r\n            case \"otherconsumablesbombs\":\r\n                this.newItem = new OtherConsumableBomb();\r\n                break;\r\n            case \"adventuringgear\":\r\n                this.newItem = new AdventuringGear();\r\n                break;\r\n            case \"ammunition\":\r\n                this.newItem = new Ammunition();\r\n                break;\r\n            default:\r\n                this.newItem = null;\r\n        }\r\n        if (this.newItem) {\r\n            this.newItem = this.itemsService.initialize_Item(this.newItem, true, false, false)\r\n        }\r\n    }\r\n\r\n    get_NewItemProperties() {\r\n        function get_PropertyData(key: string, itemsService: ItemsService) {\r\n            return itemsService.get_ItemProperties().filter(property => !property.parent && property.key == key)[0];\r\n        }\r\n        return Object.keys(this.newItem).map((key) => get_PropertyData(key, this.itemsService)).filter(property => property != undefined).sort((a, b) => {\r\n            if (a.priority > b.priority) {\r\n                return 1;\r\n            }\r\n            if (a.priority < b.priority) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => {\r\n            if (a.group > b.group) {\r\n                return 1;\r\n            }\r\n            if (a.group < b.group) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    copy_Item(item: Equipment | Consumable) {\r\n        this.newItem = this.itemsService.initialize_Item(JSON.parse(JSON.stringify(item)))\r\n    }\r\n\r\n    grant_CustomItem(creature: string = \"Character\") {\r\n        if (this.newItem != null) {\r\n            this.newItem.id = \"\";\r\n            this.grant_Item(creature, this.newItem);\r\n        }\r\n    }\r\n\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.get_Character().get_FormulasLearned(id, source);\r\n    }\r\n\r\n    learn_Formula(item: Item, source: string) {\r\n        this.get_Character().learn_Formula(item, source);\r\n    }\r\n\r\n    unlearn_Formula(item: Item) {\r\n        this.get_Character().unlearn_Formula(item);\r\n    }\r\n\r\n    get_LearnedFormulaSource(source: string) {\r\n        switch (source) {\r\n            case \"alchemicalcrafting\":\r\n                return \"(learned via Alchemical Crafting)\";\r\n            case \"magicalcrafting\":\r\n                return \"(learned via Magical Crafting)\";\r\n            case \"snarecrafting\":\r\n                return \"(learned via Snare Crafting)\";\r\n            case \"snarespecialist\":\r\n                return \"(learned via Snare Specialist)\";\r\n            case \"other\":\r\n                return \"(bought, copied, invented or reverse engineered)\";\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length;\r\n    }\r\n\r\n    get_LearningAvailable() {\r\n        let result: string = \"\";\r\n        if (this.have_Feat(\"Alchemical Crafting\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'alchemicalcrafting').length;\r\n            let available = 4;\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common 1st-level alchemical items via Alchemical Crafting\";\r\n        }\r\n        if (this.have_Feat(\"Magical Crafting\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'magicalcrafting').length;\r\n            let available = 4;\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common magic items of 2nd level or lower via Magical Crafting\";\r\n        }\r\n        if (this.have_Feat(\"Snare Crafting\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarecrafting').length;\r\n            let available = 4;\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common snares via Snare Crafting\";\r\n        }\r\n        if (this.have_Feat(\"Snare Specialist\")) {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarespecialist').length;\r\n            let available = 0;\r\n            let character = this.get_Character();\r\n            let crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n            if (crafting >= 4) {\r\n                available += 3;\r\n            }\r\n            if (crafting >= 6) {\r\n                available += 3;\r\n            }\r\n            if (crafting >= 8) {\r\n                available += 3;\r\n            }\r\n            result += \"\\n\" + (available - learned) + \" of \" + available + \" common or uncommon snares via Snare Specialist\";\r\n        }\r\n        if (result) {\r\n            result = \"You can currently learn the following number of formulas through feats:\\n\" + result;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    can_Learn(item: Item, source: string) {\r\n        if (source == \"alchemicalcrafting\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'alchemicalcrafting').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Alchemical Crafting\")) {\r\n                available += 4;\r\n            }\r\n            return item.level == 1 && available > learned && !item.traits.includes(\"Uncommon\") && !item.traits.includes(\"Rare\");\r\n        }\r\n        if (source == \"magicalcrafting\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'magicalcrafting').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Magical Crafting\")) {\r\n                available += 4;\r\n            }\r\n            return item.level <= 2 && available > learned && !item.traits.includes(\"Uncommon\") && !item.traits.includes(\"Rare\");\r\n        }\r\n        if (source == \"snarecrafting\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarecrafting').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Snare Crafting\")) {\r\n                available += 4;\r\n            }\r\n            return available > learned && !item.traits.includes(\"Uncommon\") && !item.traits.includes(\"Rare\");\r\n        }\r\n        if (source == \"snarespecialist\") {\r\n            let learned: number = this.get_FormulasLearned(\"\", 'snarespecialist').length;\r\n            let available = 0;\r\n            if (this.have_Feat(\"Snare Specialist\")) {\r\n                let character = this.get_Character();\r\n                let crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n                if (crafting >= 4) {\r\n                    available += 3;\r\n                }\r\n                if (crafting >= 6) {\r\n                    available += 3;\r\n                }\r\n                if (crafting >= 8) {\r\n                    available += 3;\r\n                }\r\n            }\r\n            return available > learned && !item.traits.includes(\"Rare\");\r\n        }\r\n    }\r\n\r\n    get_ScrollSavantCasting() {\r\n        return this.get_Character().class.spellCasting\r\n            .find(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\" && casting.tradition == \"Arcane\");\r\n    }\r\n\r\n    get_ScrollSavantDCLevel() {\r\n        let character = this.get_Character();\r\n        return Math.max(...this.characterService.get_Skills(character)\r\n            .filter(skill => skill.name.includes(\"Arcane Spell DC\"))\r\n            .map(skill => skill.level(character, this.characterService, character.level)), 0)\r\n    }\r\n\r\n    get_ScrollSavantAvailable() {\r\n        let casting = this.get_ScrollSavantCasting();\r\n        if (casting) {\r\n            let result: string = \"\";\r\n            if (this.have_Feat(\"Scroll Savant\")) {\r\n                let available = this.get_ScrollSavantDCLevel() / 2;\r\n                //Remove all prepared scrolls that are of a higher level than allowed.\r\n                casting.scrollSavant\r\n                    .filter(scroll => scroll.storedSpells[0].level > this.get_Character().get_SpellLevel(this.get_Character().level))\r\n                    .forEach(scroll => {\r\n                        scroll.amount = 0;\r\n                    });\r\n                casting.scrollSavant = casting.scrollSavant.filter(scroll => scroll.amount);\r\n                while (casting.scrollSavant.length > available) {\r\n                    casting.scrollSavant.pop();\r\n                }\r\n                let prepared: number = casting.scrollSavant.length;\r\n                if (available) {\r\n                    result = \"You can currently prepare \" + (available - prepared) + \" of \" + available + \" temporary scrolls of different spell levels up to level \" + (this.get_Character().get_SpellLevel(this.get_Character().level) - 2) + \".\";\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    prepare_Scroll(scroll: Item) {\r\n        let casting = this.get_ScrollSavantCasting();\r\n        let tempInv = new ItemCollection();\r\n        let newScroll = this.characterService.grant_InventoryItem(this.characterService.get_Character(), tempInv, scroll, false, false, false, 1) as Scroll;\r\n        newScroll.expiration = -2;\r\n        newScroll.price = 0;\r\n        newScroll.storedSpells.forEach(spell => {\r\n            spell.spellBookOnly = true;\r\n            spell.spells.length = 0;\r\n        });\r\n        casting.scrollSavant.push(Object.assign(new Scroll(), newScroll));\r\n    }\r\n\r\n    unprepare_Scroll(scroll: Item, casting: SpellCasting) {\r\n        casting.scrollSavant = casting.scrollSavant.filter(oldScroll => oldScroll !== scroll);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.itemsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"items\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"items\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n}","<div id=\"items\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleItemsMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"get_ItemsMenuState()=='in'\">\r\n        <div class=\"list-item\">\r\n            <strong>Find (in Name, Description or Traits)</strong>\r\n            <span>\r\n                <input id=\"itemsWordFilter\" type=text [(ngModel)]=\"wordFilter\" (ngModelChange)=check_Filter() />\r\n                <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>Sort by</strong>\r\n            <select [(ngModel)]=\"sorting\">\r\n                <option *ngFor=\"let sort of ['Name','Level']\" [ngValue]=\"sort.toLowerCase()\">\r\n                    {{sort}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"list-item\" *ngIf=\"get_ItemsMenuTarget()\">\r\n            <strong>Give items to</strong>\r\n            <select [(ngModel)]=\"creature\" (ngModelChange)=\"set_ItemsMenuTarget()\">\r\n                <option *ngFor=\"let target of ['Character','Companion']; trackBy:trackByIndex;\" [ngValue]=\"target\">\r\n                    {{target}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"itembox-inner\">\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <div class=\"value\">{{get_Character().cash[0]}}</div>\r\n                    <strong>Gold</strong>\r\n                    <div class=\"value\">{{get_Character().cash[1]}}</div>\r\n                    <strong>Silver</strong>\r\n                    <div class=\"value\">{{get_Character().cash[2]}}</div>\r\n                    <strong>Copper</strong>\r\n                    <div class=\"value center-aligned\">{{get_Character().cash[3]}}</div>\r\n                </div>\r\n            </div>\r\n            <header class=\"subsectionHeader\">Currency</header>\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <strong>Platinum</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashP\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Gold</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashG\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Silver</strong>\r\n                    <input class=\"number4\" type=\"number\" [(ngModel)]=\"cashS\" (keypress)=\"numbersOnly($event)\">\r\n                    <strong>Copper</strong>\r\n                    <input class=\"number4 center-aligned\" type=\"number\" [(ngModel)]=\"cashC\"\r\n                        (keypress)=\"numbersOnly($event)\">\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span>\r\n                        <button (click)=\"change_Cash(1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\">Gain</button>\r\n                    </span>\r\n                    <span>\r\n                        <button (click)=\"change_Cash(-1, 0, true)\"\r\n                            [disabled]=\"cashP < 0 || cashG < 0 || cashS < 0 || cashC < 0\"\r\n                            [disabled]=\"!have_Funds()\">Spend</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"list-item\">\r\n                <button (click)=\"toggle_Purpose('items')\" [ngClass]=\"{'fancy-button':get_ShowPurpose()=='items'}\">Get\r\n                    Items</button>\r\n                <button (click)=\"toggle_Purpose('scrollsavant')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='scrollsavant'}\"\r\n                    *ngIf=\"have_Feat('Scroll Savant')\">Scroll Savant</button>\r\n                <button (click)=\"toggle_Purpose('createcustomitem')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='createcustomitem'}\">Create Custom Item</button>\r\n                <button (click)=\"toggle_Purpose('formulas')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='formulas'}\">Learn Formulas</button>\r\n            </div>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'ItemStore'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true>\r\n            </app-tags>\r\n            <ng-container *ngFor=\"let items of [get_Items(true)]; trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let creatureType of ['Character','Companion']\">\r\n                    <header class=\"sectionHeader\" *ngIf=\"get_ShowPurpose()=='items'\">Get {{creatureType == \"Companion\" ?\r\n                        \"Animal Companion \" : \"\"}}Items\r\n                    </header>\r\n                    <header class=\"sectionHeader\"\r\n                        *ngIf=\"get_ShowPurpose()=='scrollsavant' && creatureType == 'Character'\">Prepare Scrolls\r\n                    </header>\r\n                    <header class=\"sectionHeader\" *ngIf=\"get_ShowPurpose()=='formulas'\">Learn {{creatureType ==\r\n                        \"Companion\" ? \"Animal Companion \" : \"\"}}Formulas\r\n                    </header>\r\n                    <!--Formulas available through feats-->\r\n                    <ng-container *ngIf=\"get_ShowPurpose()=='formulas' && creatureType == 'Character'\">\r\n                        <ng-container *ngFor=\"let descblock of [get_LearningAvailable()]; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                        <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n                                    </ul>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <!--End available formulas-->\r\n                    <!--Scroll Savant-->\r\n                    <ng-container *ngIf=\"get_ShowPurpose()=='scrollsavant' && creatureType == 'Character'\">\r\n                        <ng-container *ngFor=\"let casting of [get_ScrollSavantCasting()]; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let descblock of [get_ScrollSavantAvailable()]; trackBy:trackByIndex;\">\r\n                                <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                    <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                        <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                            <button class=\"list-item fancy-button\">\r\n                                <header class=\"sectionHeader\">Prepared Scrolls</header>\r\n                            </button>\r\n                            <div class=\"list-item\" *ngIf=\"!casting.scrollSavant.length\">\r\n                                No scrolls prepared.\r\n                            </div>\r\n                            <div class=\"list-item\" *ngIf=\"casting.scrollSavant.length\">\r\n                                <ng-container\r\n                                    *ngFor=\"let scroll of get_SortByName(casting.scrollSavant); trackBy:trackByIndex;\">\r\n                                    0.3=........... <div class=\"list-item\"\r\n                                        *ngFor=\"let inventoryID of ['scrollsavant'+scroll.id]; trackBy:trackByIndex;\">\r\n                                        <button class=\"newrow sublist-toggle fancy-button\"\r\n                                            (click)=\"toggle_Item(inventoryID)\">\r\n                                            <span>{{(scroll.get_Name) ? scroll.get_Name() : scroll.name}}</span>\r\n                                            <span>{{(scroll.level) ? \"Level \"+scroll.level :\r\n                                                \"&nbsp;\"}}</span>\r\n                                        </button>\r\n                                        <div class=\"list-item sublist lower fancy-list\"\r\n                                            *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"unprepare_Scroll(scroll, casting)\">\r\n                                                Deselect from daily creation\r\n                                            </button>\r\n                                            <app-item [item]=scroll [itemStore]=true></app-item>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <!--End Scroll Savant-->\r\n                    <ng-container *ngIf=\"get_ShowPurpose()!='createcustomitem'\">\r\n                        <ng-container *ngFor=\"let itemSet of items.names; let index = index; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let listID of [creatureType+(index*1000+1000)]; trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let visibleItems of [get_VisibleItems(items[itemSet.key], creatureType)]; trackBy:trackByIndex;\">\r\n                                    <button class=\"list-item\"\r\n                                        [ngStyle]=\"{'display':!visibleItems.length ? 'none' : 'flex' }\"\r\n                                        (click)=\"toggle_List(listID)\">\r\n                                        <header class=\"sectionHeader\">{{get_ShowPurpose()=='scrollsavant' ? \"Available \"\r\n                                            : \"\"}}{{itemSet.name}}</header>\r\n                                    </button>\r\n                                    <div class=\"list-item\"\r\n                                        [ngStyle]=\"{'display':!visibleItems.length ? 'none' : 'flex' }\"\r\n                                        *ngIf=\"get_ShowList()==listID||get_ShowList()=='All'||get_ShowPurpose()=='scrollsavant'\">\r\n                                        <ng-container *ngFor=\"let item of visibleItems; trackBy:trackByIndex;\">\r\n                                            <div class=\"list-item\"\r\n                                                *ngFor=\"let inventoryID of [listID+item.id]; trackBy:trackByIndex;\">\r\n                                                <button class=\"newrow sublist-toggle\"\r\n                                                    [ngClass]=\"{'fancy-button':get_ShowPurpose()=='formulas' && get_FormulasLearned(item.id).length}\"\r\n                                                    (click)=\"toggle_Item(inventoryID)\">\r\n                                                    <span>{{(item.get_Name) ? item.get_Name() : item.name}}</span>\r\n                                                    <span *ngIf=\"item.type == 'armors'\">{{([\"Light Barding\",\r\n                                                        \"Heavy Barding\"] .includes(item.prof)) ? item.prof :\r\n                                                        item.prof.split(\" \")[0]}} {{item.group}} {{(item.type==\"armors\"\r\n                                                        && (![\"Unarmored Defense\",\"Light Barding\",\r\n                                                        \"Heavy Barding\"].includes(item.prof))) ? \"Armor\" : \"\"}}</span>\r\n                                                    <span *ngIf=\"item.type == 'weapons'\">{{(item.prof ==\r\n                                                        'Unarmed Attacks') ? item.prof : item.prof.substr(0,\r\n                                                        item.prof.length - 8)}} {{item.group}}</span>\r\n                                                    <span>{{(item.level) ? \"Level \"+item.level :\r\n                                                        \"&nbsp;\"}}</span>\r\n                                                </button>\r\n                                                <div class=\"list-item sublist lower\"\r\n                                                    [ngClass]=\"{'fancy-list':get_ShowPurpose()=='formulas' && get_FormulasLearned(item.id).length}\"\r\n                                                    *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                                    <ng-container *ngIf=\"get_ShowPurpose()=='items'\">\r\n                                                        <div class=\"list-item\" *ngIf=\"itemSet.name == 'Snares'\">\r\n                                                            Snares cannot be bought or sold. They must be crafted and\r\n                                                            are immediately deployed upon creation.\r\n                                                        </div>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"grant_Item(creature, item)\">\r\n                                                            Gift {{item.stack && item.stack > 1 ? item.stack+\" \" :\r\n                                                            \"\"}}to {{creature}}\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"grant_Item(creature, item, true)\"\r\n                                                            [disabled]=\"!have_Funds(get_Price(item)) || !get_Price(item)\"\r\n                                                            *ngIf=\"itemSet.name != 'Snares'\">\r\n                                                            Buy {{item.stack && item.stack > 1 ? item.stack+\" \" :\r\n                                                            \"\"}}for {{creature}}\r\n                                                        </button>\r\n                                                        <app-itemMaterial [item]=item [craftingStation]=\"false\"\r\n                                                            *ngIf=\"can_ChangeMaterial(item)\"></app-itemMaterial>\r\n                                                        <app-itemRunes [item]=item [itemStore]=true></app-itemRunes>\r\n                                                        <app-itemTalismans [item]=item [itemStore]=true\r\n                                                            *ngIf=\"can_ApplyTalismans(item)\"></app-itemTalismans>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"get_ShowPurpose()=='scrollsavant'\">\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"prepare_Scroll(item)\"\r\n                                                            [disabled]=\"get_ScrollSavantCasting().scrollSavant.length >= get_ScrollSavantDCLevel() / 2\">\r\n                                                            Select scroll for daily creation\r\n                                                        </button>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"get_ShowPurpose()=='formulas'\">\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'alchemicalcrafting')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'alchemicalcrafting')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Alchemical Crafting') && item.traits.includes('Alchemical')\">\r\n                                                            Learn formula via Alchemical Crafting\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'magicalcrafting')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'magicalcrafting')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Magical Crafting') && item.traits.includes('Magical')\">\r\n                                                            Learn formula via Magical Crafting\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'snarecrafting')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'snarecrafting')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Snare Crafting') && item.traits.includes('Snare')\">\r\n                                                            Learn formula via Snare Crafting\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'snarespecialist')\"\r\n                                                            [disabled]=\"!can_Learn(item, 'snarespecialist')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length && have_Feat('Snare Specialist') && item.traits.includes('Snare')\">\r\n                                                            Learn formula via Snare Specialist\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"learn_Formula(item, 'other')\"\r\n                                                            *ngIf=\"!get_FormulasLearned(item.id).length\"\r\n                                                            [ngbTooltip]=\"'You must manually expend the necessary cost to learn the formula this way.'\">\r\n                                                            Learn formula (buy, copy, invent or reverse engineer)\r\n                                                        </button>\r\n                                                        <button class=\"newrow center-aligned\"\r\n                                                            (click)=\"unlearn_Formula(item)\"\r\n                                                            *ngFor=\"let learned of get_FormulasLearned(item.id); trackBy:trackByIndex;\">\r\n                                                            Unlearn formula {{get_LearnedFormulaSource(learned.source)}}\r\n                                                        </button>\r\n                                                    </ng-container>\r\n                                                    <app-item [item]=item [itemStore]=true></app-item>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"get_ShowPurpose()=='createcustomitem'\">\r\n                    <header class=\"sectionHeader\">Create custom item</header>\r\n                    <ng-container *ngFor=\"let listID of [get_ID()*1000]; trackBy:trackByIndex;\">\r\n                        <div class=\"list-item\">\r\n                            <span><strong>Type</strong></span>\r\n                            <span><select [(ngModel)]=\"newItemType\" (ngModelChange)=\"initialize_NewItem()\">\r\n                                    <option *ngFor=\"let name of get_NewItemFilter(); trackBy:trackByIndex;\"\r\n                                        [ngValue]=\"name.key\">\r\n                                        {{name.name}}\r\n                                    </option>\r\n                                </select></span>\r\n                        </div>\r\n                        <ng-container *ngIf=\"newItem\">\r\n                            <div class=\"list-item\" *ngFor=\"let inventoryID of [listID+get_ID()]; trackBy:trackByIndex;\">\r\n                                <button class=\"newrow sublist-toggle center-aligned\" (click)=\"toggle_Item(inventoryID)\">\r\n                                    Copy existing item\r\n                                </button>\r\n                                <div class=\"list-item sublist lower\" *ngIf=\"get_ShowItem()==inventoryID\">\r\n                                    <header class=\"subsectionHeader\">New Items</header>\r\n                                    <div class=\"list-item\"\r\n                                        *ngFor=\"let item of get_CopyItems(newItemType); trackBy:trackByIndex;\">\r\n                                        {{(item.get_Name) ? item.get_Name() : item.name}}\r\n                                        <button class=\"newrow center-aligned\" (click)=\"copy_Item(item);toggle_Item(0)\">\r\n                                            Copy\r\n                                        </button>\r\n                                    </div>\r\n                                    <header class=\"subsectionHeader\">Inventory Items</header>\r\n                                    <div class=\"list-item\"\r\n                                        *ngFor=\"let item of get_InventoryItems(newItemType); trackBy:trackByIndex;\">\r\n                                        {{(item.get_Name) ? item.get_Name() : item.name}}\r\n                                        <button class=\"newrow center-aligned\" (click)=\"copy_Item(item);toggle_Item(0)\">\r\n                                            Copy\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let property of get_NewItemProperties(); trackBy:trackByIndex;\">\r\n                                <ng-container *ngIf=\"!(property.key == 'equippable' && !newItem['allowEquippable'])\">\r\n                                    <app-newItemProperty [propertyData]=property [propertyKey]=property.key\r\n                                        [newItem]=newItem></app-newItemProperty>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <div class=\"list-item newrow\" *ngIf=\"newItem['moddable'] && can_ChangeMaterial(newItem)\">\r\n                                <strong>Material</strong>\r\n                                <app-itemMaterial class=\"newrow\" [item]=\"newItem\" [craftingStation]=\"false\"\r\n                                    [customItemStore]=\"true\"></app-itemMaterial>\r\n                            </div>\r\n                            <div class=\"list-item newrow\" *ngIf=\"newItem['moddable']\">\r\n                                <strong>Runes</strong>\r\n                                <app-itemRunes class=\"newrow\" [item]=\"newItem\" [itemStore]=\"true\"\r\n                                    [customItemStore]=\"true\">\r\n                                </app-itemRunes>\r\n                            </div>\r\n                            <div class=\"list-item newrow\">\r\n                                <button class=\"newrow center-aligned\" (click)=\"grant_CustomItem(creature)\">\r\n                                    Get this item\r\n                                </button>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { ItemGain } from './ItemGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nexport class SpellGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Set if sustained spell is activated\r\n    public active: boolean = false;\r\n    public activeCooldown: number = 0;\r\n    //Copied from SpellChoice. How often the spell can be used, human readable for display.\r\n    public frequency: string = \"\";\r\n    public prepared: boolean = false;\r\n    //Copied from SpellChoice. Turns * 10 to wait before casting again.\r\n    public cooldown: number = 0;\r\n    //In order to select a choice from the spell before casting it, the choice is saved here for each condition.\r\n    public choices: string[] = [];\r\n    //Set to spell's duration when activated, and automatically deactivate if it runs out by ticking time\r\n    public duration: number = 0;\r\n    //Any items granted by this spell are stored here with their id so they can be removed when the spell ends.\r\n    public gainItems: ItemGain[] = [];\r\n    public locked: boolean = false;\r\n    public name: string = \"\";\r\n    public combinationSpellName: string = \"\";\r\n    //Signature Spells are automatically available as heightened spells on every lower and higher level (down to its minimum)\r\n    public signatureSpell: boolean = false;\r\n    public source: string = \"\";\r\n    //Copied from SpellChoice. For looking up details in the Choice - ideally always include the choice in the function so we don't have to look it up.\r\n    public sourceId: string = \"\";\r\n    //For sustained spells, the target (\"Character\", \"Companion\", \"Familiar\") is saved here so any conditions can be removed when the spell ends.\r\n    public target: string = \"\";\r\n    //Condition gains save this id so they can end the spell when the condition ends.\r\n    public id = uuidv1();\r\n}","export class ProficiencyCopy {\r\n    //Which skill gets to copy proficiency levels? Can include weapon traits, e.g. \"Goblin\" for goblin weapon proficiency.\r\n    public name: string = \"\";\r\n    //What type of skill increase gets copied? E.g. \"Weapon Proficiency\", \"Skill\"...\r\n    public type: string = \"\";\r\n    //If featuresOnly is true, skill increases with source \"Feat: *\" are not copied.\r\n    public featuresOnly: boolean = false;\r\n    //Minimum skill level needed to apply (usually Trained).\r\n    public minLevel: number = 2;\r\n}","<ng-container *ngFor=\"let hint of get_Hints(object.hints, objectName); trackBy:trackByIndex;\">\r\n    <ng-template #HintContent>\r\n        {{hint.desc ? hint.desc : object.desc}}\r\n        <div class=\"list-item\" *ngIf=\"get_HintsShowMore() && get_ObjectType()\">\r\n            <header class=\"spellHeader\">{{object.name}}</header>\r\n            <app-feat *ngIf=\"get_ObjectType()=='Feat'\" [feat]=\"object\"></app-feat>\r\n            <app-condition *ngIf=\"get_ObjectType()=='Condition'\" [condition]=\"object\"></app-condition>\r\n            <app-activity *ngIf=\"get_ObjectType()=='Activity'\" [allowActivate]=\"false\" [activity]=\"object\">\r\n            </app-activity>\r\n            <app-item *ngIf=\"get_ObjectType()=='Item'\" [allowActivate]=\"false\" [item]=\"object\"></app-item>\r\n            <div class=\"newrow left-aligned\" *ngIf=\"get_ObjectType()=='DescOnly'\">\r\n                <p>\r\n                    {{object.desc}}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <cite triggers=\"hover\">\r\n        <span #popover1=\"ngbPopover\" [ngbPopover]=\"HintContent\" triggers=\"click\">\r\n            <span [ngbPopover]=\"!popover1.isOpen() && (hint.desc ? hint.desc : object.desc)\">\r\n                {{description}}\r\n            </span>\r\n        </span>\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length\" [ngbTooltip]=\"'Activate any effects of this hint.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active2\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 0\"\r\n            [ngbTooltip]=\"'Activate the second level of this hint\\'s effects.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active3\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 1\"\r\n            [ngbTooltip]=\"'Activate the third level of this hint\\'s effects.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active4\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 2\"\r\n            [ngbTooltip]=\"'Activate the fourth level of this hint\\'s effects.'\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"hint.active5\" (ngModelChange)=\"on_ActivateEffect()\"\r\n            *ngIf=\"hint.effects && hint.effects.length && hint.extraActivations > 3\"\r\n            [ngbTooltip]=\"'Activate the fifth level of this hint\\'s effects.'\">\r\n    </cite>\r\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Hint } from 'src/app/Hint';\r\n\r\n@Component({\r\n    selector: 'app-hint',\r\n    templateUrl: './hint.component.html',\r\n    styleUrls: ['./hint.component.scss']\r\n})\r\nexport class HintComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    object: any = null;\r\n    @Input()\r\n    objectName: string = \"\";\r\n    @Input()\r\n    description: string = \"\";\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        tooltipConfig.container = \"body\";\r\n        tooltipConfig.triggers = \"hover\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_HintsShowMore() {\r\n        return this.characterService.get_Character().settings.hintsShowMoreInformation;\r\n    }\r\n\r\n    get_Hints(hints: Hint[], name: string) {\r\n        return hints\r\n            .filter(hint =>\r\n                hint.showon.split(\",\")\r\n                    .some(showon =>\r\n                        showon.trim().toLowerCase() == name.toLowerCase() ||\r\n                        showon.trim().toLowerCase() == (this.creature + \":\" + name).toLowerCase() ||\r\n                        (\r\n                            name.toLowerCase().includes(\"lore\") &&\r\n                            showon.trim().toLowerCase() == \"lore\"\r\n                        )\r\n                    )\r\n            )\r\n    }\r\n\r\n    on_ActivateEffect() {\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_ObjectType() {\r\n        switch (this.object?.constructor.name) {\r\n            case \"Feat\":\r\n                return \"Feat\";\r\n            case \"Activity\":\r\n                return \"Activity\";\r\n            case \"ItemActivity\":\r\n                return \"Activity\";\r\n            case \"Condition\":\r\n                return \"Condition\";\r\n            case \"AnimalCompanionSpecialization\":\r\n                return \"DescOnly\";\r\n            case \"Specialization\":\r\n                return \"DescOnly\";\r\n        }\r\n        if (this.object.constructor.__proto__.__proto__.name == \"Item\" || this.object.constructor.__proto__.name == \"Item\") {\r\n            return \"Item\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { SkillIncrease } from './SkillIncrease';\r\nimport { SkillChoice } from './SkillChoice';\r\n\r\nexport class LoreChoice extends SkillChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    public available: number = 0;\r\n    public id: string = \"\";\r\n    public increases: SkillIncrease[] = [];\r\n    public initialIncreases: number = 1;\r\n    public loreDesc: string = \"\";\r\n    public loreName: string = \"\";\r\n    public maxRank: number = 0;\r\n    public source: string = \"\";\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Speed {\r\n    public readonly _className = this.constructor.name;\r\n    constructor (\r\n        public name: string = \"\"\r\n    ) {};\r\n    public source: string = \"\";\r\n    relatives(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.get_RelativesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.get_RelativesOnThis(creature, name);\r\n        }\r\n    }\r\n    absolutes(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.get_AbsolutesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.get_AbsolutesOnThis(creature, name);\r\n        }\r\n    }\r\n    bonuses(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.show_BonusesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.show_BonusesOnThis(creature, name);\r\n        }\r\n    }\r\n    penalties(creature: Creature, effectsService: EffectsService, name: string, both: boolean = false) {\r\n        if (both && name != \"Speed\") {\r\n            return effectsService.show_PenaltiesOnThese(creature, [name, \"Speed\"]);\r\n        } else {\r\n            return effectsService.show_PenaltiesOnThis(creature, name);\r\n        }\r\n    }\r\n    baseValue(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n    //Gets the basic speed and adds all effects\r\n        if (characterService.still_loading()) { return 0; }\r\n        let sum = 0;\r\n        let explain: string = \"\";\r\n        //Penalties cannot lower a speed below 5. We need to track if one ever reaches 5, then never let it get lower again.\r\n        let above5 = false;\r\n        //Get the base land speed from the ancestry\r\n        if (creature.type == \"Familiar\") {\r\n            if (this.name == creature.speeds[1].name) {\r\n                sum = 25;\r\n                explain = \"\\nBase speed: \"+sum;\r\n            }\r\n        } else {\r\n            if ((creature as AnimalCompanion|Character).class.ancestry.name) {\r\n                (creature as AnimalCompanion|Character).class.ancestry.speeds.filter(speed => speed.name == this.name).forEach(speed => {\r\n                    sum = speed.value;\r\n                    explain = \"\\n\"+(creature as AnimalCompanion|Character).class.ancestry.name+\" base speed: \"+sum;\r\n                });\r\n            }\r\n        }\r\n        //Absolutes completely replace the baseValue. They are sorted so that the highest value counts last.\r\n        let absolutes = this.absolutes(creature, effectsService, this.name).filter(effect => effect.setValue);\r\n        absolutes.forEach(effect => {\r\n            sum = parseInt(effect.setValue)\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        let isNull: boolean = (sum == 0)\r\n        this.relatives(creature, effectsService, this.name).forEach(effect => {\r\n            sum += parseInt(effect.value);\r\n            explain += \"\\n\"+effect.source+\": \"+effect.value;\r\n        });\r\n        if (!isNull && sum < 5 && this.name != \"Speed\") {\r\n            sum = 5;\r\n            explain += \"\\nEffects cannot lower a speed below 5.\"\r\n        }\r\n        explain = explain.trim();\r\n        return [sum, explain];\r\n    }\r\n    value(creature: Creature, characterService: CharacterService, effectsService: EffectsService): [number, string] {\r\n        //If there is a general speed penalty (or bonus), it applies to all speeds. We apply it to the base speed here so we can still\r\n        // copy the base speed for effects (e.g. \"You gain a climb speed equal to your land speed\") and not apply the general penalty twice.\r\n        let baseValue = this.baseValue(creature, characterService, effectsService)\r\n        let sum = baseValue[0];\r\n        let explain: string = baseValue[1];\r\n        let isNull: boolean = (sum == 0)\r\n        if (this.name != \"Speed\") {\r\n            this.relatives(creature, effectsService, \"Speed\").forEach(effect => {\r\n                sum += parseInt(effect.value);\r\n                explain += \"\\n\"+effect.source+\": \"+effect.value;\r\n            });\r\n        }\r\n        if (!isNull && sum < 5 && this.name != \"Speed\") {\r\n            sum = 5;\r\n            explain += \"\\nEffects cannot lower a speed below 5.\"\r\n        }\r\n        explain = explain.trim();\r\n        return [sum, explain];\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n    title = 'P.E.C.S.';\r\n}","<app-top-bar></app-top-bar>\r\n\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { ItemGain } from './ItemGain';\r\nimport { SpellCast } from './SpellCast';\r\n\r\nexport class ActivityGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public active: boolean = false;\r\n    public activeCooldown: number = 0;\r\n    public chargesUsed: number = 0;\r\n    //If you use a charge of an activity on an item, and it has a sharedChargesID, all activities on the same item with the same sharedChargesID will also use a charge.\r\n    public sharedChargesID: number = 0;\r\n    //If you activate an activity, and it has an exclusiveActivityID, all activities on the same item with the same sharedChargesID are automatically deactivated.\r\n    public exclusiveActivityID: number = 0;\r\n    //The duration is copied from the activity when activated.\r\n    public duration: number = 0;\r\n    //The character level where this activity becomes available\r\n    public level: number = 0;\r\n    public name: string = \"\";\r\n    public source: string = \"\";\r\n    //Some activities come with notes to make, like a custom trigger for Trickster's Ace. These can be filled out on the activities app, with name as the title and value as the note.\r\n    public data: { name: string, value: string }[] = [];\r\n    //We copy the activities ItemGains here whenever we activate it, so we can store the item ID.\r\n    public gainItems: ItemGain[] = [];\r\n    //We copy the activities castSpells here whenever we activate it, so we can store its duration.\r\n    public castSpells: SpellCast[] = [];\r\n    //If the activity causes a condition, in order to select a choice from the activity beforehand, the choice is saved here for each condition.\r\n    public effectChoices: string[] = [];\r\n    //If the activity casts a spell, in order to select a choice from the spell before casting it, the choice is saved here for each condition for each spell, recursively.\r\n    public spellEffectChoices: string[][] = [];\r\n}","import { CharacterService } from './character.service';\r\nimport { Creature } from './Creature';\r\nimport { Equipment } from './Equipment';\r\n\r\nexport class Shield extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Shields should be type \"shields\" to be found in the database\r\n    readonly type = \"shields\";\r\n    //Shields are usually moddable as shield, which means they get material but no runes\r\n    moddable = \"shield\" as \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\";\r\n    //The shield's AC bonus received when raising it\r\n    public acbonus: number = 0;\r\n    //Is the shield currently raised in order to deflect damage?\r\n    public raised: boolean = false;\r\n    //The penalty to all speeds while equipping this shield\r\n    public speedpenalty: number = 0;\r\n    //Are you currently taking cover behind the shield?\r\n    public takingCover: boolean = false;\r\n    public brokenThreshold: number = 0;\r\n    //The additional AC bonus received when taking cover behind the shield\r\n    public coverbonus: number = 0;\r\n    public damage: number = 0;\r\n    public hardness: number = 0;\r\n    public hitpoints: number = 0;\r\n    //What kind of shield is this based on?\r\n    public shieldBase: string = \"\";\r\n    public $shieldAlly: boolean = false;\r\n    //Shoddy shields take a -2 penalty to AC.\r\n    public $shoddy: number = 0;\r\n    get_Shoddy(creature: Creature, characterService: CharacterService) {\r\n        //Shoddy items have a -2 penalty to AC, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n        if (this.shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && this.crafted) {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        } else if (this.shoddy) {\r\n            this.$shoddy = -2;\r\n            return -2;\r\n        } else {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        }\r\n    }\r\n    get_ShieldAlly(creature: Creature, characterService: CharacterService) {\r\n        this.$shieldAlly = characterService.get_Feats(\"Divine Ally: Shield Ally\")[0]?.have(creature, characterService) && true;\r\n        return this.$shieldAlly;\r\n    }\r\n    get_Hardness() {\r\n        return this.hardness + (this.$shieldAlly ? 2 : 0);\r\n    }\r\n    get_MaxHP() {\r\n        return this.hitpoints + (this.$shieldAlly ? (Math.floor(this.hitpoints / 2)) : 0);\r\n    }\r\n    get_BrokenThreshold() {\r\n        return this.brokenThreshold + (this.$shieldAlly ? (Math.floor(this.brokenThreshold / 2)) : 0);\r\n    }\r\n    get_ACBonus() {\r\n        return this.acbonus + this.$shoddy;\r\n    }\r\n    get_HitPoints() {\r\n        this.damage = Math.max(Math.min(this.get_MaxHP(), this.damage), 0);\r\n        let hitpoints: number = this.get_MaxHP() - this.damage;\r\n        if (hitpoints < this.get_BrokenThreshold()) {\r\n            this.broken = true;\r\n        }\r\n        return hitpoints;\r\n    }\r\n}","import { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { FeatChoice } from './FeatChoice';\r\n\r\nexport class Background {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public feat: string = \"\";\r\n    public featChoices: FeatChoice[] = [];\r\n    public loreChoices: LoreChoice[] = [];\r\n    public loreName: string = \"\";\r\n    public name: string = \"\";\r\n    public skill: string = \"\";\r\n    public skillChoices: SkillChoice[] = [];\r\n    public specialLore: string = \"\";\r\n    public subType: string = \"\";\r\n    public subTypes: boolean = false;\r\n    public superType: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public region: string = \"\";\r\n    public adventurePath: string = \"\";\r\n    public prerequisites: string = \"\";\r\n    public inputRequired: string = \"\";\r\n    public traits: string[] = [];\r\n}","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { EffectsService } from '../effects.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { TimeService } from '../time.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { Effect } from '../Effect';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { Condition } from '../Condition';\r\n\r\n@Component({\r\n    selector: 'app-effects',\r\n    templateUrl: './effects.component.html',\r\n    styleUrls: ['./effects.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EffectsComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public fullDisplay: boolean = false;\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    public showApplied: boolean = true;\r\n    public showNotApplied: boolean = false;\r\n    public showHidden: boolean = false;\r\n    public showItem: string = \"\";\r\n    public Math = Math;\r\n    public parseInt = parseInt;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        private characterService: CharacterService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.effectsMinimized = !this.characterService.get_Character().settings.effectsMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.effectsMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_Darkmode() {\r\n        return this.characterService.get_Darkmode();\r\n    }\r\n\r\n    receive_ItemMessage(name: string) {\r\n        this.toggle_Item(name);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByConditionGainID(index: number, obj: ConditionGain): string {\r\n        return obj.id;\r\n    }\r\n\r\n    trackByUniqueEffect(index: number, obj: Effect): string {\r\n        return obj.target + obj.setValue + obj.value + (obj.toggle ? \"true\" : \"false\") + (obj.penalty ? \"true\" : \"false\") + index.toString();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    toggle_Applied() {\r\n        this.showApplied = !this.showApplied;\r\n    }\r\n\r\n    toggle_NotApplied() {\r\n        this.showNotApplied = !this.showNotApplied;\r\n    }\r\n\r\n    toggle_Hidden() {\r\n        this.showHidden = !this.showHidden;\r\n    }\r\n\r\n    get_ToggledCount() {\r\n        return ((this.showApplied && 1) + (this.showNotApplied && 1) + (this.showHidden && 1));\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Effects() {\r\n        return this.effectsService.get_Effects(this.creature);\r\n    }\r\n\r\n    get_Conditions(name: string = \"\") {\r\n        return this.characterService.get_Conditions(name);\r\n    }\r\n\r\n    get_AppliedEffects() {\r\n        return this.get_Effects().all.filter(effect => effect.creature == this.get_Creature().id && effect.apply && effect.show).sort(function (a, b) {\r\n            if (a.value > b.value) {\r\n                return 1;\r\n            }\r\n            if (a.value < b.value) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (a.setValue > b.setValue) {\r\n                return 1;\r\n            }\r\n            if (a.setValue < b.setValue) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (a.target > b.target) {\r\n                return 1;\r\n            }\r\n            if (a.target < b.target) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_NotAppliedEffects() {\r\n        return this.get_Effects().all.filter(effect => effect.creature == this.get_Creature().id && !effect.apply);\r\n    }\r\n\r\n    get_HiddenEffects() {\r\n        return this.get_Effects().all.filter(effect => effect.creature == this.get_Creature().id && effect.apply && !effect.show);\r\n    }\r\n\r\n    get_AppliedConditions(apply: boolean) {\r\n        return this.characterService.get_AppliedConditions(this.get_Creature()).filter(condition => condition.apply == apply).sort(function (a, b) {\r\n            if (a.name + a.value + a.choice > b.name + b.value + b.choice) {\r\n                return 1;\r\n            }\r\n            if (a.name + a.value + a.choice < b.name + b.value + b.choice) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_Duration(duration: number) {\r\n        return this.timeService.get_Duration(duration);\r\n    }\r\n\r\n    get_IsInformationalCondition(conditionGain: ConditionGain, condition: Condition) {\r\n        //Return whether the condition is purely informational, i.e. has no effects and is not currently causing any conditions.\r\n        return !condition.effects?.length && !condition.hints.some(hint => hint.effects?.length) && !this.characterService.get_AppliedConditions(this.get_Creature(), \"\", \"\", true).some(existingCondition => existingCondition.parentID == conditionGain.id);\r\n    }\r\n\r\n    calculate_InventoryEffects() {\r\n        let speedRune: boolean = false;\r\n        let enfeebledRune: boolean = false;\r\n        if (this.creature != \"Familiar\") {\r\n            this.get_Creature().inventories.forEach(inventory => {\r\n                inventory.allEquipment().forEach(item => {\r\n                    item.propertyRunes.forEach(rune => {\r\n                        if (rune.name == \"Speed\" && (item.equipped || (item.can_Invest() && item.invested))) {\r\n                            speedRune = true;\r\n                        }\r\n                        if (rune[\"alignmentPenalty\"]) {\r\n                            if (this.characterService.get_Character().alignment.includes(rune[\"alignmentPenalty\"])) {\r\n                                enfeebledRune = true;\r\n                            }\r\n                        }\r\n                    });\r\n                    item.oilsApplied.forEach(oil => {\r\n                        if (oil.runeEffect && oil.runeEffect.name == \"Speed\" && (item.equipped || (item.can_Invest() && item.invested))) {\r\n                            speedRune = true;\r\n                        }\r\n                        if (oil.runeEffect && oil.runeEffect.alignmentPenalty) {\r\n                            if (this.characterService.get_Character().alignment.includes(oil.runeEffect.alignmentPenalty)) {\r\n                                enfeebledRune = true;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            })\r\n            if (this.get_Creature().inventories[0].weapons.find(weapon => weapon.large && weapon.equipped) && (this.characterService.get_AppliedConditions(this.get_Creature(), \"Clumsy\", \"Large Weapon\").length == 0)) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Clumsy\", value: 1, source: \"Large Weapon\", apply: true }), true)\r\n            } else if (!this.get_Creature().inventories[0].weapons.find(weapon => weapon.large && weapon.equipped) && (this.characterService.get_AppliedConditions(this.get_Creature(), \"Clumsy\", \"Large Weapon\").length > 0)) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Clumsy\", value: 1, source: \"Large Weapon\", apply: true }), true)\r\n            }\r\n            if (speedRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Quickened\", \"Speed Rune\").length == 0) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Quickened\", value: 0, source: \"Speed Rune\", apply: true }), true)\r\n            } else if (!speedRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Quickened\", \"Speed Rune\").length > 0) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Quickened\", value: 0, source: \"Speed Rune\", apply: true }), true)\r\n            }\r\n            if (enfeebledRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Enfeebled\", \"Alignment Rune\").length == 0) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Enfeebled\", value: 2, source: \"Alignment Rune\", apply: true }), true)\r\n            } else if (!enfeebledRune && this.characterService.get_AppliedConditions(this.get_Creature(), \"Enfeebled\", \"Alignment Rune\").length > 0) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Enfeebled\", value: 2, source: \"Alignment Rune\", apply: true }), true)\r\n            }\r\n        }\r\n    }\r\n\r\n    calculate_Bulk() {\r\n        if (this.creature != \"Familiar\") {\r\n            let bulk = this.get_Creature().bulk;\r\n            let calculatedBulk = bulk.calculate((this.get_Creature() as Character|AnimalCompanion), this.characterService, this.effectsService);\r\n            if (calculatedBulk.current.value > calculatedBulk.encumbered.value && this.characterService.get_AppliedConditions(this.get_Creature(), \"Encumbered\", \"Bulk\").length == 0) {\r\n                this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Encumbered\", value: 0, source: \"Bulk\", apply: true }), true)\r\n            }\r\n            if (calculatedBulk.current.value <= calculatedBulk.encumbered.value && this.characterService.get_AppliedConditions(this.get_Creature(), \"Encumbered\", \"Bulk\").length > 0) {\r\n                this.characterService.remove_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Encumbered\", value: 0, source: \"Bulk\", apply: true }), true)\r\n            }\r\n        }\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.characterService.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"effects\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                        this.calculate_InventoryEffects();\r\n                        this.calculate_Bulk();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"effects\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                        this.calculate_InventoryEffects();\r\n                        this.calculate_Bulk();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<div id=\"{{creature}}-effects-height\" class=\"attributeBox\" [ngClass]=\"{'snug':!fullDisplay}\">\r\n    <ng-template #conditionTemplate let-conditionGain=\"conditionGain\">\r\n        <div style=\"display:flex\"\r\n            [ngClass]=\"{'attention':(conditionGain.duration == 1) || (conditionGain.nextStage == -1)}\"\r\n            *ngFor=\"let condition of [get_Conditions(conditionGain.name)[0]]; trackBy:trackByIndex;\">\r\n            <ng-template #conditionContent>\r\n                <app-condition class=\"newrow\" (showChoiceMessage)=\"receive_ItemMessage($event)\" [creature]=\"creature\"\r\n                    [conditionGain]=\"conditionGain\" [condition]=\"condition\" [showItem]=\"get_ShowItem()\"\r\n                    [fullDisplay]=\"fullDisplay\"></app-condition>\r\n            </ng-template>\r\n            <app-gridIcon class=\"condition\" [ngClass]=\"{'penalty':!condition.buff, 'bonus':condition.buff}\"\r\n                placement=\"right bottom top\" [condition]=\"conditionGain\" [originalCondition]=\"condition\"\r\n                [ngbPopover]=\"conditionContent\"\r\n                [superTitle]=\"get_IsInformationalCondition(conditionGain, condition) ? 'icon-bi-info-circle' : ''\"\r\n                ngbTooltip=\"{{conditionGain.name}}\" container=\"body\" *ngIf=\"!fullDisplay\">\r\n            </app-gridIcon>\r\n            <div class=\"list-item gridicon-fullsizebox\" *ngIf=\"fullDisplay\">\r\n                <app-gridIcon class=\"condition\" [condition]=\"conditionGain\" [originalCondition]=\"condition\"\r\n                    [superTitle]=\"get_IsInformationalCondition(conditionGain, condition) ? 'icon-bi-info-circle' : ''\"\r\n                    [ngClass]=\"{'penalty':!condition.buff, 'bonus':condition.buff}\">\r\n                </app-gridIcon>\r\n                <ng-container *ngTemplateOutlet=\"conditionContent\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #effectTemplate let-effect=\"effect\">\r\n        <ng-template #effectContent>\r\n            <div class=\"newrow\">\r\n                <span>\r\n                    <strong\r\n                        [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\">{{effect.target}}\r\n                        {{parseInt(effect.value) ? effect.value : ''}}{{effect.setValue ? \"= \"+effect.setValue : ''}}\r\n                    </strong>\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"effect.type != 'untyped' && !effect.toggle && !effect.setValue\">\r\n                <span>\r\n                    <strong>Type</strong> {{effect.type + \" \" + (effect.penalty ? 'penalty' : 'bonus')}}</span>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"effect.duration\">\r\n                <span>\r\n                    <strong>Duration</strong> {{effect.duration ? get_Duration(effect.duration) : ''}}\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow\">\r\n                <span><strong>Source&nbsp;</strong>{{effect.source.includes('conditional, ') ? effect.source.substr(13)\r\n                    : effect.source}}</span>\r\n            </div>\r\n            <div class=\"newrow\" *ngIf=\"effect.source.includes('conditional, ')\">\r\n                <span><strong>Conditional&nbsp;</strong>This effect only applies for certain actions or under specific\r\n                    circumstances.</span>\r\n            </div>\r\n        </ng-template>\r\n        <app-gridIcon class=\"effect\" [effect]=\"effect\" placement=\"left bottom top\"\r\n            [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\"\r\n            [ngbPopover]=\"effectContent\" ngbTooltip=\"{{effect.target}}\r\n        {{parseInt(effect.value) ? effect.value : ''}}{{effect.setValue ? '= '+effect.setValue :\r\n        ''}}\" container=\"body\" *ngIf=\"!fullDisplay\"></app-gridIcon>\r\n        <div class=\"list-item gridicon-fullsizebox\" *ngIf=\"fullDisplay\">\r\n            <app-gridIcon class=\"effect\" [effect]=\"effect\"\r\n                [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\">\r\n            </app-gridIcon>\r\n            <div class=\"gridicon-sidebar\">\r\n                <ng-container *ngTemplateOutlet=\"effectContent\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <app-tags [creature]=\"creature\" [objectName]=\"'Effects'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n        [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n    <div [ngClass]=\"{'charactersheet-column-container padding-8':!fullDisplay}\">\r\n        <div>\r\n            <header class=\"subsectionHeader\" *ngIf=\"fullDisplay\">\r\n                Active Conditions\r\n            </header>\r\n            <div [ngClass]=\"{'icon-list left-aligned dashed-border':!fullDisplay}\">\r\n                <div class=\"icon-list-title\" style=\"right: 0\" *ngIf=\"!fullDisplay\">\r\n                    <header class=\"sectionHeader box-header\">Conditions</header>\r\n                </div>\r\n                <ng-container\r\n                    *ngFor=\"let conditionGain of get_AppliedConditions(true); trackBy:trackByConditionGainID;\">\r\n                    <ng-container *ngTemplateOutlet=\"conditionTemplate;context:{conditionGain:conditionGain}\">\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <header class=\"subsectionHeader\" *ngIf=\"fullDisplay\">\r\n                Active Effects\r\n            </header>\r\n            <div [ngClass]=\"{'icon-list right-aligned dashed-border':!fullDisplay}\">\r\n                <div class=\"icon-list-title\" style=\"left: 0\" *ngIf=\"!fullDisplay\">\r\n                    <header class=\"sectionHeader box-header\">Effects</header>\r\n                </div>\r\n                <ng-container *ngFor=\"let effect of get_AppliedEffects(); trackBy:trackByUniqueEffect;\">\r\n                    <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngIf=\"fullDisplay\">\r\n        <div>\r\n            <header class=\"subsectionHeader\">\r\n                Inactive Conditions\r\n            </header>\r\n            <div class=\"notapplied\">\r\n                <ng-container\r\n                    *ngFor=\"let conditionGain of get_AppliedConditions(false); trackBy:trackByConditionGainID;\">\r\n                    <ng-container *ngTemplateOutlet=\"conditionTemplate;context:{conditionGain:conditionGain}\">\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <header class=\"subsectionHeader\">\r\n                Inactive Effects\r\n            </header>\r\n            <div class=\"notapplied\">\r\n                <ng-container *ngFor=\"let effect of get_NotAppliedEffects(); trackBy:trackByUniqueEffect;\">\r\n                    <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <header class=\"subsectionHeader\">\r\n            Hidden Effects\r\n        </header>\r\n        <div>\r\n            <ng-container *ngFor=\"let effect of get_HiddenEffects(); trackBy:trackByUniqueEffect;\">\r\n                <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Rune } from './Rune';\r\nimport { EffectGain } from './EffectGain';\r\n\r\nexport class ArmorRune extends Rune {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Armor Runes should be type \"armorrunes\" to be found in the database\r\n    readonly type = \"armorrunes\";\r\n    public resilient: number = 0;\r\n    //Can only be applied to an armor with this proficiency\r\n    public profreq: string[] = [];\r\n    //Can only be applied to a nonmetallic armor\r\n    public nonmetallic: boolean = false;\r\n    public effects: EffectGain[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { ClassesService } from '../classes.service';\r\nimport { Class } from '../Class';\r\nimport { Level } from '../Level';\r\nimport { AbilitiesService } from '../abilities.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { FeatsService } from '../feats.service';\r\nimport { Feat } from '../Feat';\r\nimport { HistoryService } from '../history.service';\r\nimport { Ancestry } from '../Ancestry';\r\nimport { Heritage } from '../Heritage';\r\nimport { ItemsService } from '../items.service';\r\nimport { Background } from '../Background';\r\nimport { LoreChoice } from '../LoreChoice';\r\nimport { Ability } from '../Ability';\r\nimport { AbilityChoice } from '../AbilityChoice';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { Deity } from '../Deity';\r\nimport { DeitiesService } from '../deities.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { AnimalCompanionAncestry } from '../AnimalCompanionAncestry';\r\nimport { ItemGain } from '../ItemGain';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { AnimalCompanionsService } from '../animalcompanions.service';\r\nimport { AnimalCompanionClass } from '../AnimalCompanionClass';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { AnimalCompanionSpecialization } from '../AnimalCompanionSpecialization';\r\nimport { Familiar } from '../Familiar';\r\nimport { SavegameService } from '../savegame.service';\r\nimport { Savegame } from '../Savegame';\r\nimport { TraitsService } from '../traits.service';\r\nimport { FamiliarsService } from '../familiars.service';\r\nimport { Item } from '../Item';\r\nimport { FeatChoice } from '../FeatChoice';\r\nimport { Spell } from '../Spell';\r\nimport { Character } from '../Character';\r\nimport { NgbActiveModal, NgbModal, NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SkillChoice } from '../SkillChoice';\r\nimport { Activity } from '../Activity';\r\n\r\n@Component({\r\n    selector: 'app-character',\r\n    templateUrl: './character.component.html',\r\n    styleUrls: ['./character.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CharacterComponent implements OnInit {\r\n\r\n    public newClass: Class = new Class();\r\n    private showLevel: number = 0;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n    private showContent: any | FeatChoice | SkillChoice | AbilityChoice = null;\r\n    private showContentLevelNumber: number = 0;\r\n    private showFixedChangesLevelNumber: number = 0;\r\n    public adventureBackgrounds: Boolean = true;\r\n    public regionalBackgrounds: Boolean = true;\r\n    public blankCharacter: Character = new Character();\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public classesService: ClassesService,\r\n        public abilitiesService: AbilitiesService,\r\n        public effectsService: EffectsService,\r\n        public featsService: FeatsService,\r\n        public historyService: HistoryService,\r\n        private itemsService: ItemsService,\r\n        private activitiesService: ActivitiesService,\r\n        private deitiesService: DeitiesService,\r\n        private spellsService: SpellsService,\r\n        private animalCompanionsService: AnimalCompanionsService,\r\n        private conditionsService: ConditionsService,\r\n        private savegameService: SavegameService,\r\n        private traitsService: TraitsService,\r\n        private familiarsService: FamiliarsService,\r\n        private modalService: NgbModal,\r\n        public modal: NgbActiveModal,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.characterMinimized = !this.characterService.get_Character().settings.characterMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.characterMinimized;\r\n    }\r\n\r\n    toggleCharacterMenu() {\r\n        this.characterService.toggle_Menu(\"character\");\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterService.get_CharacterMenuState();\r\n    }\r\n\r\n    toggle_Level(levelNumber: number) {\r\n        if (this.showLevel == levelNumber) {\r\n            this.showLevel = 0;\r\n        } else {\r\n            this.showLevel = levelNumber;\r\n        }\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string, levelNumber: number = 0, content: any = null) {\r\n        //Set the currently shown list name, level number and content so that the correct choice with the correct data can be shown in the choice area.\r\n        if (this.showList == name &&\r\n            (!levelNumber || this.showContentLevelNumber == levelNumber) &&\r\n            (!content || JSON.stringify(this.showContent) == JSON.stringify(content))) {\r\n            this.showList = \"\";\r\n            this.showContentLevelNumber = 0;\r\n            this.showContent = null;\r\n        } else {\r\n            this.showList = name;\r\n            this.showContentLevelNumber = levelNumber;\r\n            this.showContent = content;\r\n            this.reset_ChoiceArea();\r\n        }\r\n    }\r\n\r\n    reset_ChoiceArea() {\r\n        document.getElementById(\"choiceArea-top\").scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SkillChoice }) {\r\n        this.toggle_List(message.name, message.levelNumber, message.choice);\r\n    }\r\n\r\n    receive_FeatMessage(name: string) {\r\n        this.toggle_Item(name);\r\n    }\r\n\r\n    get_ShowLevel() {\r\n        return this.showLevel;\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    get_ActiveChoiceContent(choiceType: string = \"\") {\r\n        //For choices that have a class of their own (AbilityChoice, SkillChoice, FeatChoice), get the currently shown content with levelNumber if it is of that same class.\r\n        //Also get the currently shown list name for compatibility.\r\n        if (this.showContent?.constructor.name == choiceType) {\r\n            return [{ name: this.get_ShowList(), levelNumber: this.get_ShowContentLevelNumber(), choice: this.get_ShowContent() }];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    get_ActiveSpecialChoiceShown(choiceType: string = \"\") {\r\n        if (this.get_ShowList() == choiceType) {\r\n            //For choices that don't have a class and can only show up once per level, get the currently shown list name with levelNumber if the list name matches the choice type.\r\n            //Also get a \"choice\" object with a unique ID (the list name and the level number) for compatibility with TrackByID(), unless there is a current content with an id property.\r\n            return [{ name: choiceType, levelNumber: this.get_ShowContentLevelNumber(), choice: this.get_ShowContent()?.id ? this.get_ShowContent() : { id: choiceType + this.get_ShowContentLevelNumber().toString() } }]\r\n        }\r\n    }\r\n\r\n    get_ShowContent() {\r\n        return this.showContent;\r\n    }\r\n\r\n    get_ShowContentLevelNumber() {\r\n        return this.showContentLevelNumber;\r\n    }\r\n\r\n    toggle_FixedChangesLevelNumber(levelNumber: number) {\r\n        if (this.showFixedChangesLevelNumber == levelNumber) {\r\n            this.showFixedChangesLevelNumber = 0;\r\n        } else {\r\n            this.showFixedChangesLevelNumber = levelNumber;\r\n        }\r\n    }\r\n\r\n    get_ShowFixedChangesLevelNumber() {\r\n        return this.showFixedChangesLevelNumber;\r\n    }\r\n\r\n    set_Accent() {\r\n        this.characterService.set_Accent();\r\n    }\r\n\r\n    set_Darkmode() {\r\n        this.characterService.set_Darkmode();\r\n    }\r\n\r\n    toggle_TileMode() {\r\n        this.get_Character().settings.characterTileMode = !this.get_Character().settings.characterTileMode;\r\n        this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n        this.characterService.set_ToChange(\"Character\", \"skillchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.get_Character().settings.characterTileMode;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByID(index: number, obj: any): any {\r\n        //Track ability, skiil or feat choices choices by id, so that when the selected choice changes, the choice area content is updated.\r\n        // The choice area content is only ever one choice, so the index would always be 0.\r\n        return obj.choice.id;\r\n    }\r\n\r\n    on_NewCharacter() {\r\n        this.characterService.reset_Character();\r\n    }\r\n\r\n    get_Savegames() {\r\n        return this.savegameService.get_Savegames().sort(function (a, b) {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (a.partyName > b.partyName) {\r\n                return 1;\r\n            }\r\n            if (a.partyName < b.partyName) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort(function (a, b) {\r\n            if (b.partyName == \"No Party\" && a.partyName != \"No Party\") {\r\n                return 1;\r\n            }\r\n            if (a.partyName == \"No Party\" && b.partyName != \"No Party\") {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_SavegameTitle(savegame: Savegame) {\r\n        let title = \"\";\r\n        if (savegame.heritage) {\r\n            title += \" | \" + savegame.heritage;\r\n            if (savegame.ancestry) {\r\n                if (!savegame.heritage.includes(savegame.ancestry)) {\r\n                    title += \" \" + savegame.ancestry;\r\n                }\r\n            }\r\n        } else {\r\n            if (savegame.ancestry) {\r\n                title += \" | \" + savegame.ancestry;\r\n            }\r\n        }\r\n        if (savegame.class) {\r\n            title += \" | \";\r\n            if (savegame.classChoice) {\r\n                title += savegame.classChoice + \" \";\r\n            }\r\n            title += savegame.class;\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_Parties() {\r\n        return Array.from(new Set(this.get_Savegames().map(savegame => savegame.partyName)));\r\n    }\r\n\r\n    load_CharacterFromDB(savegame: Savegame) {\r\n        this.toggleCharacterMenu();\r\n        this.characterService.reset_Character(savegame.id);\r\n    }\r\n\r\n    delete_CharacterFromDB(savegame: Savegame) {\r\n        this.characterService.delete_Character(savegame);\r\n    }\r\n\r\n    save_CharacterToDB() {\r\n        this.characterService.save_Character();\r\n    }\r\n\r\n    open_DeleteModal(content, savegame: Savegame) {\r\n        this.modalService.open(content, { centered: true, ariaLabelledBy: 'modal-title' }).result.then((result) => {\r\n            if (result == \"Ok click\") {\r\n                this.delete_CharacterFromDB(savegame);\r\n            }\r\n        }, (reason) => {\r\n            //Do nothing if cancelled.\r\n        });\r\n    }\r\n\r\n    get_IsBlankCharacter() {\r\n        let character = this.get_Character();\r\n        return (\r\n            !character.class?.name &&\r\n            !character.name &&\r\n            !character.partyName &&\r\n            !character.experiencePoints &&\r\n            !character.alignment &&\r\n            !character.baseValues.length &&\r\n            character.inventories.length == 1 &&\r\n            character.inventories[0].allItems().length <= 2\r\n        )\r\n    }\r\n\r\n    get_Alignments() {\r\n        //Champions and Clerics need to pick an alignment matching their deity\r\n        let deity: Deity = this.get_Character().class?.deity ? this.get_AvailableDeities(this.get_Character().class.deity)[0] : null;\r\n        let alignments = [\r\n            \"\",\r\n            \"Lawful Good\",\r\n            \"Neutral Good\",\r\n            \"Chaotic Good\",\r\n            \"Lawful Neutral\",\r\n            \"Neutral\",\r\n            \"Chaotic Neutral\",\r\n            \"Lawful Evil\",\r\n            \"Neutral Evil\",\r\n            \"Chaotic Evil\"\r\n        ]\r\n        if (deity && [\"Champion\", \"Cleric\"].includes(this.get_Character().class.name)) {\r\n            return alignments.filter(alignment =>\r\n                !deity.followerAlignments ||\r\n                deity.followerAlignments.includes(alignment) ||\r\n                alignment == \"\"\r\n            )\r\n        } else {\r\n            return alignments;\r\n        }\r\n\r\n    }\r\n\r\n    get_Level(number: number) {\r\n        return this.get_Character().class.levels[number];\r\n    }\r\n\r\n    on_BaseValueChange() {\r\n        let baseValues = this.get_Character().baseValues;\r\n        if (baseValues.length) {\r\n            baseValues.length = 0;\r\n        } else {\r\n            this.get_Abilities().forEach(ability => {\r\n                baseValues.push({ name: ability.name, baseValue: 10 })\r\n            });\r\n            //Remove all Level 1 ability boosts that are now illegal\r\n            if (this.get_Character().class.name) {\r\n                this.get_Character().class.levels[1].abilityChoices.filter(choice => choice.available).forEach(choice => {\r\n                    choice.boosts.length = Math.min(choice.available - choice.baseValuesLost, choice.boosts.length);\r\n                });\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_AbilityChange(name: string) {\r\n        this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualskills\", name);\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        if (name == \"Strength\") {\r\n            this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        if (name == \"Dexterity\") {\r\n            this.characterService.set_ToChange(\"Character\", \"defense\");\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        if (name == \"Constitution\") {\r\n            this.characterService.set_ToChange(\"Character\", \"health\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_Changed(target: string = \"\") {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    on_LanguageChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_NameChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"top-bar\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_AlignmentChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    numbersOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    on_LevelUp() {\r\n        let character = this.get_Character();\r\n        let oldLevel = character.level;\r\n        character.level += 1;\r\n        character.experiencePoints -= 1000;\r\n        this.on_LevelChange(oldLevel);\r\n    }\r\n\r\n    on_LevelChange(oldLevel: number) {\r\n        let character = this.get_Character();\r\n        let newLevel = character.level;\r\n        //If we went up levels, repeat any onceEffects of Feats that apply inbetween, such as recovering Focus Points for a larger Focus Pool\r\n        if (newLevel > oldLevel) {\r\n            this.get_FeatsAndFeatures().filter(feat => feat.onceEffects.length && feat.have(character, this.characterService, newLevel, true, false, oldLevel))\r\n                .forEach(feat => {\r\n                    feat.onceEffects.forEach(effect => {\r\n                        this.characterService.process_OnceEffect(character, effect);\r\n                    })\r\n                })\r\n        }\r\n\r\n        //Find all the differences between the levels and refresh components accordingly.\r\n        let lowerLevel = Math.min(oldLevel, newLevel);\r\n        let higherLevel = Math.max(oldLevel, newLevel);\r\n\r\n        character.class.levels.filter(level => level.number >= lowerLevel && level.number <= higherLevel).forEach(level => {\r\n            level.featChoices.forEach(choice => {\r\n                if (choice.showOnSheet) {\r\n                    this.characterService.set_ToChange(\"Character\", \"activities\");\r\n                }\r\n            })\r\n        })\r\n        character.class.levels.forEach(level => {\r\n            level.featChoices.forEach(choice => {\r\n                if (choice.dynamicLevel) {\r\n                    this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n                }\r\n            })\r\n        })\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"character-sheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        this.characterService.set_ToChange(\"Character\", \"top-bar\");\r\n        this.characterService.set_ToChange(\"Character\", \"health\");\r\n        this.characterService.set_ToChange(\"Character\", \"defense\");\r\n        this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        this.characterService.set_ToChange(\"Character\", \"general\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n        this.characterService.set_ToChange(\"Character\", \"individualspells\", \"all\");\r\n        this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        this.characterService.set_ToChange(\"Character\", \"spells\");\r\n        this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        if (character.get_AbilityBoosts(lowerLevel, higherLevel).length) {\r\n            this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n        }\r\n        if (character.get_SkillIncreases(this.characterService, lowerLevel, higherLevel)) {\r\n            this.characterService.set_ToChange(\"Character\", \"skillchoices\");\r\n            this.characterService.set_ToChange(\"Character\", \"skills\");\r\n        }\r\n        this.get_FeatsAndFeatures().filter(feat => feat.hints.length && feat.have(character, this.characterService, higherLevel, true, false, lowerLevel))\r\n            .forEach(feat => {\r\n                feat.hints.forEach(hint => {\r\n                    this.characterService.set_TagsToChange(\"Character\", hint.showon);\r\n                })\r\n                if (feat.gainAbilityChoice.length) {\r\n                    this.characterService.set_ToChange(\"Character\", \"abilities\");\r\n                }\r\n                if (feat.gainSpellCasting.length || feat.gainSpellChoice.length) {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                } else if (feat.gainSpellChoice.length) {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                }\r\n                if (feat.superType == \"Adopted Ancestry\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"general\");\r\n                } else if (feat.name == \"Different Worlds\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"general\");\r\n                }\r\n            });\r\n        //Reload spellbook if spells were learned between the levels\r\n        if (character.get_SpellsLearned().some(learned => learned.level >= lowerLevel && learned.level <= higherLevel)) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            //if spells were taken between the levels\r\n        } else if (character.get_SpellsTaken(this.characterService, lowerLevel, higherLevel).length) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            //if any spells have a dynamic level dependent on the character level\r\n        } else if (character.get_SpellsTaken(this.characterService, 0, 20).some(taken => taken.choice.dynamicLevel.toLowerCase().includes(\"level\"))) {\r\n            this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            //or if you have the cantrip connection or spell battery familiar ability.\r\n        } else if (this.characterService.get_FamiliarAvailable()) {\r\n            this.characterService.set_ToChange(\"Familiar\", \"all\");\r\n            this.get_Familiar().abilities.feats.map(gain => this.familiarsService.get_FamiliarAbilities(gain.name)[0]).filter(feat => feat).forEach(feat => {\r\n                if (feat.name == \"Cantrip Connection\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                }\r\n                if (feat.name == \"Spell Battery\") {\r\n                    this.characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                }\r\n            })\r\n        }\r\n        if (this.characterService.get_CompanionAvailable()) {\r\n            this.get_Companion().set_Level(this.characterService);\r\n        }\r\n        if (this.characterService.get_FamiliarAvailable(newLevel)) {\r\n            this.characterService.set_ToChange(\"Familiar\", \"featchoices\");\r\n        }\r\n\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_LanguagesAvailable(levelNumber: number = 0) {\r\n        let character = this.get_Character()\r\n        if (character.class.ancestry.name) {\r\n            if (levelNumber) {\r\n                //If level is given, check if any new languages have been added on this level. If not, don't get any languages at this point.\r\n                let newLanguages: number = 0;\r\n                newLanguages += this.get_FeatsAndFeatures().filter(feat => feat.effects.some(effect => effect.affected == \"Max Languages\") && feat.have(character, this.characterService, levelNumber, false, false, levelNumber)).length\r\n                newLanguages += character.get_AbilityBoosts(levelNumber, levelNumber, \"Intelligence\").length;\r\n                if (!newLanguages) {\r\n                    return false;\r\n                }\r\n            }\r\n            return character.class.languages.length ? true : false;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get_CurrentLanguages(levelNumber: number) {\r\n        //Return the amount of languages are available up to the current level\r\n        return this.get_Character().class.languages.filter(language => language.level <= levelNumber || !language.level).length;\r\n    }\r\n\r\n    get_BlankLanguages(levelNumber: number) {\r\n        //Return the amount of languages that haven't been filled out\r\n        return this.get_Character().class.languages.filter(language => !language.name && language.level <= levelNumber).length;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_MaxAvailable(choice: AbilityChoice) {\r\n        return choice.maxAvailable(this.get_Character());\r\n    }\r\n\r\n    get_AbilityChoiceTitle(choice: AbilityChoice) {\r\n        let maxAvailable = this.get_MaxAvailable(choice);\r\n        let title = \"Ability \" + (choice.infoOnly ? \"Choice (no Boost)\" : \"Boost\");\r\n        if (maxAvailable > 1) {\r\n            title += \"s\";\r\n        }\r\n        title += \" (\" + choice.source + \")\";\r\n        if (maxAvailable > 1) {\r\n            title += \": \" + choice.boosts.length + \"/\" + maxAvailable;\r\n        } else {\r\n            if (choice.boosts.length) {\r\n                title += \": \" + choice.boosts[0].name;\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_AbilityTakenByThis(ability: Ability, choice: AbilityChoice, levelNumber: number) {\r\n        return this.get_AbilityBoosts(levelNumber, levelNumber, ability.name, (choice.infoOnly ? 'Info' : 'Boost'), choice.source).length\r\n    }\r\n\r\n    get_Abilities(name: string = \"\") {\r\n        return this.characterService.get_Abilities(name)\r\n    }\r\n\r\n    get_AvailableAbilities(choice: AbilityChoice, levelNumber: number) {\r\n        let abilities = this.get_Abilities('');\r\n        if (choice.filter.length) {\r\n            //If there is a filter, we need to find out if any of the filtered Abilities can actually be boosted.\r\n            let cannotBoost = 0;\r\n            choice.filter.forEach(filter => {\r\n                if (this.cannotBoost(this.get_Abilities(filter)[0], levelNumber, choice).length) {\r\n                    cannotBoost += 1;\r\n                }\r\n            });\r\n            //If any can be boosted, filter the list by the filter (and show the already selected abilities so you can unselect them if you like).\r\n            //If none can be boosted, the list just does not get filtered.\r\n            if (cannotBoost < choice.filter.length) {\r\n                abilities = abilities.filter(ability => choice.filter.includes(ability.name) || this.abilityBoostedByThis(ability, choice))\r\n            }\r\n        }\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        if (abilities.length) {\r\n            return abilities.filter(ability => (\r\n                showOtherOptions ||\r\n                this.abilityBoostedByThis(ability, choice) ||\r\n                (choice.boosts.length < choice.available - ((this.get_Character().baseValues.length > 0) ? choice.baseValuesLost : 0))\r\n            ));\r\n        }\r\n    }\r\n\r\n    someAbilitiesIllegal(choice: AbilityChoice, levelNumber: number) {\r\n        let anytrue = 0;\r\n        choice.boosts.forEach(boost => {\r\n            if (this.abilityIllegal(levelNumber, this.get_Abilities(boost.name)[0])) {\r\n                if (!boost.locked) {\r\n                    this.get_Character().boost_Ability(this.characterService, boost.name, false, choice, boost.locked);\r\n                    this.characterService.process_ToChange();\r\n                } else {\r\n                    anytrue += 1;\r\n                }\r\n            }\r\n        });\r\n        return anytrue;\r\n    }\r\n\r\n    abilityIllegal(levelNumber: number, ability: Ability) {\r\n        let illegal = false;\r\n        if (levelNumber == 1 && ability.baseValue(this.get_Character(), this.characterService, levelNumber).result > 18) {\r\n            illegal = true;\r\n        }\r\n        return illegal;\r\n    }\r\n\r\n    cannotBoost(ability: Ability, levelNumber: number, choice: AbilityChoice) {\r\n        //Returns a string of reasons why the ability cannot be boosted, or \"\". Test the length of the return if you need a boolean.\r\n        //Info only choices that don't grant a boost (like for the key ability for archetypes) don't need to be checked.\r\n        if (choice.infoOnly) { return [] };\r\n        let reasons: string[] = [];\r\n        let sameBoostsThisLevel = this.get_AbilityBoosts(levelNumber, levelNumber, ability.name, \"Boost\", choice.source);\r\n        if (sameBoostsThisLevel.length > 0 && sameBoostsThisLevel[0].source == choice.source) {\r\n            //The ability may have been boosted by the same source, but as a fixed rule (e.g. fixed ancestry boosts vs. free ancestry boosts).\r\n            //This does not apply to flaws - you can boost a flawed ability.\r\n            if (sameBoostsThisLevel[0].locked) {\r\n                let locked = \"Fixed boost by \" + sameBoostsThisLevel[0].source + \".\";\r\n                reasons.push(locked);\r\n            } else\r\n                //If an ability has been raised by a source of the same name, but not the same id, it cannot be raised again.\r\n                //This is the case with backgrounds: You get a choice of two abilities, and then a free one.\r\n                if (sameBoostsThisLevel[0].sourceId != choice.id) {\r\n                    let exclusive = \"Boosted by \" + sameBoostsThisLevel[0].source + \".\";\r\n                    reasons.push(exclusive);\r\n                }\r\n        }\r\n        //On level 1, boosts are not allowed to raise the ability above 18.\r\n        //This is only relevant if you haven't boosted the ability on this level yet.\r\n        //If you have, we don't want to hear that it couldn't be boosted again right away.\r\n        let cannotBoostHigher = \"\";\r\n        if (levelNumber == 1 && ability.baseValue(this.get_Character(), this.characterService, levelNumber).result > 16 && sameBoostsThisLevel.length == 0) {\r\n            cannotBoostHigher = \"Cannot boost above 18 on level 1.\";\r\n            reasons.push(cannotBoostHigher);\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    abilityBoostedByThis(ability: Ability, choice: AbilityChoice) {\r\n        return choice.boosts.filter(boost => [\"Boost\", \"Info\"].includes(boost.type) && boost.name == ability.name).length\r\n    }\r\n\r\n    get_AbilityBoosts(minLevelNumber: number, maxLevelNumber: number, abilityName: string = \"\", type: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        return this.get_Character().get_AbilityBoosts(minLevelNumber, maxLevelNumber, abilityName, type, source, sourceId, locked);\r\n    }\r\n\r\n    on_AbilityBoost(abilityName: string, boost: boolean, choice: AbilityChoice, locked: boolean) {\r\n        if (boost && this.get_Character().settings.autoCloseChoices && choice.boosts.length == choice.available - ((this.get_Character().baseValues.length > 0) ? choice.baseValuesLost : 0) - 1) { this.toggle_List(\"\"); }\r\n        this.get_Character().boost_Ability(this.characterService, abilityName, boost, choice, locked);\r\n        this.characterService.set_AbilityToChange(\"Character\", abilityName);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_SkillIncreases(minLevelNumber: number, maxLevelNumber: number, skillName: string, source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        return this.get_Character().get_SkillIncreases(this.characterService, minLevelNumber, maxLevelNumber, skillName, source, sourceId, locked);\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        return this.characterService.get_Skills(this.get_Character(), name, type, locked)\r\n    }\r\n\r\n    size(size: number) {\r\n        switch (size) {\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\";\r\n            case 1:\r\n                return \"Large\";\r\n        }\r\n    }\r\n\r\n    get_INT(levelNumber: number) {\r\n        if (!levelNumber) {\r\n            return 0;\r\n        }\r\n        //We have to calculate the modifier instead of getting .mod() because we don't want any effects in the character building interface.\r\n        let intelligence: number = this.get_Abilities(\"Intelligence\")[0].baseValue(this.get_Character(), this.characterService, levelNumber).result;\r\n        let INT: number = Math.floor((intelligence - 10) / 2);\r\n        return INT;\r\n    }\r\n\r\n    get_SkillINTBonus(choice: SkillChoice, levelNumber: number) {\r\n        //Allow INT more skills if INT has been raised since the last level.\r\n        if (choice.source == \"Intelligence\") {\r\n            return this.get_INT(levelNumber) - this.get_INT(levelNumber - 1);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_SkillChoices(level: Level) {\r\n        return level.skillChoices.filter(choice => !choice.showOnSheet && (choice.available + this.get_SkillINTBonus(choice, level.number) > 0))\r\n    }\r\n\r\n    get_FeatChoices(level: Level, specialChoices: boolean = undefined) {\r\n        let ancestry = this.get_Character().class.ancestry?.name || \"\";\r\n        return level.featChoices.filter(choice =>\r\n            choice.available &&\r\n            (ancestry || choice.type != \"Ancestry\") &&\r\n            !choice.showOnSheet &&\r\n            !choice.showOnCurrentLevel &&\r\n            (specialChoices == undefined || choice.specialChoice == specialChoices)\r\n        ).concat(this.get_FeatChoicesShownOnCurrentLevel(level, specialChoices));\r\n    }\r\n\r\n    get_FeatChoicesShownOnCurrentLevel(level: Level, specialChoices: boolean = undefined) {\r\n        let ancestry = this.get_Character().class.ancestry?.name || \"\";\r\n        if (this.get_Character().level == level.number) {\r\n            let choices: FeatChoice[] = []\r\n            this.get_Character().class.levels.forEach(level => {\r\n                choices.push(...level.featChoices\r\n                    .filter(choice =>\r\n                        (ancestry || choice.type != \"Ancestry\") &&\r\n                        !choice.showOnSheet &&\r\n                        choice.showOnCurrentLevel &&\r\n                        (specialChoices == undefined || choice.specialChoice == specialChoices)\r\n                    )\r\n                );\r\n            })\r\n            return choices;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    on_LoreChange(boost: boolean, choice: LoreChoice) {\r\n        if (boost) {\r\n            if (this.get_Character().settings.autoCloseChoices && (choice.increases.length == choice.available - 1)) { this.toggle_List(\"\"); }\r\n            this.get_Character().add_Lore(this.characterService, choice);\r\n        } else {\r\n            this.get_Character().remove_Lore(this.characterService, choice);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_LoreNameChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Feats(name: string = \"\", type: string = \"\") {\r\n        return this.featsService.get_Feats(this.get_Character().customFeats, name, type);\r\n    }\r\n\r\n    get_FeatsAndFeatures(name: string = \"\", type: string = \"\") {\r\n        return this.featsService.get_All(this.get_Character().customFeats, name, type);\r\n    }\r\n\r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\") {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellLevel(levelNumber: number) {\r\n        return Math.ceil(levelNumber / 2);\r\n    }\r\n\r\n    get_DifferentWorldsFeat(levelNumber: number) {\r\n        if (this.get_Character().get_FeatsTaken(levelNumber, levelNumber, \"Different Worlds\").length) {\r\n            return this.get_Character().customFeats.filter(feat => feat.name == \"Different Worlds\");\r\n        }\r\n    }\r\n\r\n    get_BlessedBloodFeat(levelNumber: number) {\r\n        return this.get_Character().get_FeatsTaken(levelNumber, levelNumber, \"Blessed Blood\").length\r\n    }\r\n\r\n    get_BlessedBloodDeitySpells() {\r\n        let deity = this.characterService.get_Deities(this.get_Character().class.deity)[0];\r\n        if (deity) {\r\n            return deity.clericSpells.map(spell => this.get_Spells(spell.name)[0]).filter(spell => spell && (this.get_Character().settings.showOtherOptions ? true : this.get_BlessedBloodHaveSpell(spell)));\r\n        }\r\n    }\r\n\r\n    get_BlessedBloodSpells() {\r\n        return this.get_Character().get_SpellListSpell(\"\", \"Feat: Blessed Blood\").length\r\n    }\r\n\r\n    get_BlessedBloodHaveSpell(spell: Spell) {\r\n        return this.get_Character().get_SpellListSpell(spell.name, \"Feat: Blessed Blood\").length\r\n    }\r\n\r\n    on_BlessedBloodSpellTaken(spell: Spell, levelNumber: number, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.get_Character().add_SpellListSpell(spell.name, \"Feat: Blessed Blood\", levelNumber);\r\n        } else {\r\n            this.get_Character().remove_SpellListSpell(spell.name, \"Feat: Blessed Blood\", levelNumber);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"spells\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AdditionalHeritagesAvailable(levelNumber: number) {\r\n        return [].concat(...this.get_FeatsAndFeatures()\r\n            .filter(\r\n                feat => feat.gainHeritage.length &&\r\n                    this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length\r\n            ).map(feat => feat.gainHeritage))\r\n    }\r\n\r\n    get_AdditionalHeritageIndex(source: string) {\r\n        let oldHeritage = this.get_Character().class.additionalHeritages.find(heritage => heritage.source == source);\r\n        if (oldHeritage) {\r\n            return [this.get_Character().class.additionalHeritages.indexOf(oldHeritage)];\r\n        } else {\r\n            return [this.get_Character().class.additionalHeritages.length]\r\n        }\r\n    }\r\n\r\n    on_AdditionalHeritageChange(heritage: Heritage, taken: boolean, index: number, source: string) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Heritage(heritage, index, source);\r\n        } else {\r\n            this.characterService.change_Heritage(new Heritage(), index, source);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_DifferentWorldsBackgroundChange(levelNumber: number, feat: Feat, background: Background, taken: boolean) {\r\n        let character = this.get_Character();\r\n        let level = character.class.levels[levelNumber];\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            feat.data[\"background\"] = background.name;\r\n            background.loreChoices.forEach(choice => {\r\n                let newChoice: LoreChoice = character.add_LoreChoice(level, choice);\r\n                newChoice.source = \"Different Worlds\";\r\n                if (newChoice.loreName) {\r\n                    if (this.characterService.get_Skills(this.get_Character(), 'Lore: ' + newChoice.loreName).length) {\r\n                        let increases = character.get_SkillIncreases(this.characterService, 1, 20, 'Lore: ' + newChoice.loreName).filter(increase =>\r\n                            increase.sourceId.includes(\"-Lore-\")\r\n                        );\r\n                        if (increases.length) {\r\n                            let oldChoice = character.get_LoreChoice(increases[0].sourceId);\r\n                            if (oldChoice.available == 1) {\r\n                                character.remove_Lore(this.characterService, oldChoice);\r\n                            }\r\n                        }\r\n                    }\r\n                    character.add_Lore(this.characterService, newChoice);\r\n                }\r\n            })\r\n        } else {\r\n            feat.data[\"background\"] = \"\";\r\n            let oldChoices: LoreChoice[] = level.loreChoices.filter(choice => choice.source == \"Different Worlds\");\r\n            //Remove the lore granted by Different Worlds.\r\n            if (oldChoices.length) {\r\n                let oldChoice = oldChoices[0];\r\n                if (oldChoice.increases.length) {\r\n                    character.remove_Lore(this.characterService, oldChoice);\r\n                }\r\n                level.loreChoices = level.loreChoices.filter(choice => choice.source != \"Different Worlds\");\r\n            }\r\n        }\r\n    }\r\n\r\n    get_FuseStanceFeat(levelNumber: number) {\r\n        if (this.get_Character().get_FeatsTaken(levelNumber, levelNumber, \"Fuse Stance\").length) {\r\n            return this.get_Character().customFeats.filter(feat => feat.name == \"Fuse Stance\");\r\n        }\r\n    }\r\n\r\n    get_StancesToFuse(levelNumber: number, fuseStanceFeat: Feat) {\r\n        //Return all stances that you own.\r\n        //Since Fuse Stance can't use two stances that only allow one type of attack each, we check if one of the previously selected stances does that,\r\n        // and if so, make a note for each available stance with a restriction that it isn't available.\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        let unique: string[] = [];\r\n        let stances: { activity: Activity, restricted: boolean, reason: string }[] = [];\r\n        let restrictedConditions = this.get_Conditions().filter(condition => condition.attackRestrictions.length).map(condition => condition.name);\r\n        let activities = this.activitiesService.get_Activities().filter(activity => activity.traits.includes(\"Stance\"));\r\n        let existingStances: Activity[] = [];\r\n        (fuseStanceFeat.data[\"stances\"] as string[]).forEach(stance => {\r\n            existingStances.push(activities.find(example => example.name == stance));\r\n        })\r\n        let restrictedStances = existingStances.some(example => example.gainConditions.some(gain => restrictedConditions.includes(gain.name)));\r\n        this.characterService.get_OwnedActivities(this.get_Character(), levelNumber)\r\n            .map(activity => activities.find(example => example.name == activity.name))\r\n            .filter(activity => activity && activity.name != \"Fused Stance\")\r\n            .forEach(activity => {\r\n                if (!unique.includes(activity.name) && (showOtherOptions || fuseStanceFeat.data[\"stances\"].length < 2 || fuseStanceFeat.data[\"stances\"].includes(activity.name))) {\r\n                    let restricted = activity.gainConditions.some(gain => restrictedConditions.includes(gain.name));\r\n                    if (restricted && restrictedStances && !fuseStanceFeat.data[\"stances\"].includes(activity.name)) {\r\n                        unique.push(activity.name);\r\n                        stances.push({ activity: activity, restricted: restricted, reason: \"Incompatible restrictions.\" });\r\n                    } else {\r\n                        unique.push(activity.name);\r\n                        stances.push({ activity: activity, restricted: restricted, reason: \"\" });\r\n                    }\r\n                }\r\n            });\r\n        return stances;\r\n    }\r\n\r\n    on_FuseStanceNameChange() {\r\n        this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_FuseStanceStanceChange(feat: Feat, stance: string, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices && feat.data[\"stances\"].length == 1 && feat.data[\"name\"]) { this.toggle_List(\"\"); }\r\n            feat.data[\"stances\"].push(stance);\r\n        } else {\r\n            feat.data[\"stances\"] = feat.data[\"stances\"].filter((existingStance: string) => existingStance != stance);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_FeatsTaken(minLevelNumber: number, maxLevelNumber: number, featName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, filter: string = \"\") {\r\n        let character = this.get_Character();\r\n        return this.get_Character().get_FeatsTaken(minLevelNumber, maxLevelNumber, featName, source, sourceId, locked)\r\n            .filter(taken => filter == \"feature\" ? taken.source == character.class.name : (filter == \"feat\" ? taken.source != character.class.name : true));\r\n    }\r\n\r\n    get_Classes(name: string = \"\") {\r\n        return this.characterService.get_Classes(name);\r\n    }\r\n\r\n    get_AvailableClasses() {\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Classes()\r\n            .filter($class => showOtherOptions || !this.get_Character().class?.name || $class.name == this.get_Character().class.name)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    onClassChange($class: Class, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Class($class);\r\n        } else {\r\n            this.characterService.change_Class(new Class());\r\n        }\r\n    }\r\n\r\n    get_Ancestries(name: string = \"\") {\r\n        return this.historyService.get_Ancestries(name);\r\n    }\r\n\r\n    get_AvailableAncestries() {\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Ancestries()\r\n            .filter(ancestry => showOtherOptions || !this.get_Character().class.ancestry?.name || ancestry.name == this.get_Character().class.ancestry.name)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    onAncestryChange(ancestry: Ancestry, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Ancestry(ancestry, this.itemsService);\r\n        } else {\r\n            this.characterService.change_Ancestry(new Ancestry(), this.itemsService);\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_AvailableDeities(name: string = \"\") {\r\n        let currentDeity = this.get_Character().class?.deity || \"\";\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        //Champions and Clerics need to choose a deity matching their alignment.\r\n        if (![\"Champion\", \"Cleric\"].includes(this.get_Character().class.name)) {\r\n            return this.deitiesService.get_Deities(name).filter(deity => showOtherOptions || !currentDeity || deity.name == currentDeity)\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                });\r\n        } else {\r\n            return this.deitiesService.get_Deities(name).filter((deity: Deity) => (showOtherOptions || !currentDeity || deity.name == currentDeity) && (!this.get_Character().alignment || deity.followerAlignments.includes(this.get_Character().alignment)))\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1\r\n                    }\r\n                    return 0\r\n                });\r\n        }\r\n    }\r\n\r\n    on_DeityChange(deity: Deity, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Deity(deity);\r\n        } else {\r\n            this.characterService.change_Deity(new Deity());\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Conditions(name: string = \"\") {\r\n        return this.conditionsService.get_Conditions(name);\r\n    }\r\n\r\n    get_Heritages(name: string = \"\", ancestryName: string = \"\") {\r\n        return this.historyService.get_Heritages(name, ancestryName);\r\n    }\r\n\r\n    get_SubHeritageNames(heritage: Heritage) {\r\n        return heritage.subTypes.map(subheritage => subheritage.name);\r\n    }\r\n\r\n    get_AvailableHeritages(name: string = \"\", ancestryName: string = \"\", index: number = -1) {\r\n        let heritage = this.get_Character().class.heritage;\r\n        if (index != -1) {\r\n            heritage = this.get_Character().class.additionalHeritages[index];\r\n        }\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Heritages(name, ancestryName)\r\n            .filter(availableHeritage =>\r\n            (\r\n                showOtherOptions ||\r\n                !heritage?.name ||\r\n                availableHeritage.name == heritage.name ||\r\n                availableHeritage.subTypes?.some(subType => subType.name == heritage.name))\r\n            )\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_HaveHeritage(name: string = \"\") {\r\n        return this.get_Character().class.heritage.name == name || this.get_Character().class.additionalHeritages.some(heritage => heritage.name == name);\r\n    }\r\n\r\n    onHeritageChange(heritage: Heritage, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Heritage(heritage);\r\n        } else {\r\n            this.characterService.change_Heritage(new Heritage());\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Backgrounds(name: string = \"\") {\r\n        return this.historyService.get_Backgrounds(name).filter(background =>\r\n            !background.subType &&\r\n            (!this.adventureBackgrounds ? !background.adventurePath : true) &&\r\n            (!this.regionalBackgrounds ? !background.region : true)\r\n        );\r\n    }\r\n\r\n    get_AvailableBackgrounds() {\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.get_Backgrounds().filter(background =>\r\n            showOtherOptions ||\r\n            !this.get_Character().class.background?.name ||\r\n            background.name == this.get_Character().class.background.name ||\r\n            background.name == this.get_Character().class.background.superType\r\n        )\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_SubBackgrounds(superType: string = \"\") {\r\n        return this.historyService.get_Backgrounds().filter(background => background.superType == superType);\r\n    }\r\n\r\n    get_SubBackgroundNames(superType: string) {\r\n        return this.get_SubBackgrounds(superType).map(subbackground => subbackground.name);\r\n    }\r\n\r\n    onBackgroundChange(background: Background, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.characterService.change_Background(background);\r\n        } else {\r\n            this.characterService.change_Background(new Background());\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_CompanionAvailable(levelNumber: number) {\r\n        //Return the number of feats taken this level that granted you an animal companion\r\n        return this.get_FeatsAndFeatures().filter(feat => (feat.gainAnimalCompanion == 1) && this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length).length;\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Character().class.animalCompanion;\r\n    }\r\n\r\n    on_NewCompanion() {\r\n        if (this.characterService.get_Character().class.animalCompanion) {\r\n            let character = this.characterService.get_Character();\r\n            character.class.animalCompanion = new AnimalCompanion();\r\n            character.class.animalCompanion.class = new AnimalCompanionClass();\r\n            this.characterService.initialize_AnimalCompanion();\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    get_AvailableCompanionTypes() {\r\n        let existingCompanionName: string = this.get_Companion().class.ancestry.name;\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        return this.animalCompanionsService.get_CompanionTypes()\r\n            .filter(type => showOtherOptions || !existingCompanionName || type.name == existingCompanionName)\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    on_CompanionTypeChange(type: AnimalCompanionAncestry, taken: boolean) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices) { this.toggle_List(\"\"); }\r\n            this.get_Companion().class.on_ChangeAncestry(this.characterService);\r\n            this.animalCompanionsService.change_Type(this.get_Companion(), type);\r\n            this.get_Companion().class.on_NewAncestry(this.characterService, this.itemsService);\r\n        } else {\r\n            this.get_Companion().class.on_ChangeAncestry(this.characterService);\r\n            this.animalCompanionsService.change_Type(this.get_Companion(), new AnimalCompanionAncestry());\r\n        }\r\n        this.characterService.set_ToChange(\"Companion\", \"all\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_SpecializationChange(spec: AnimalCompanionSpecialization, taken: boolean, levelNumber: number) {\r\n        if (taken) {\r\n            if (this.get_Character().settings.autoCloseChoices && this.get_Companion().class.specializations.filter(spec => spec.level == levelNumber).length == this.get_CompanionSpecializationsAvailable(levelNumber) - 1) {\r\n                this.toggle_List(\"\");\r\n            }\r\n            this.animalCompanionsService.add_Specialization(this.get_Companion(), spec, levelNumber);\r\n        } else {\r\n            this.animalCompanionsService.remove_Specialization(this.get_Companion(), spec);\r\n        }\r\n        this.characterService.set_ToChange(\"Companion\", \"abilities\");\r\n        this.characterService.set_ToChange(\"Companion\", \"skills\");\r\n        this.characterService.set_ToChange(\"Companion\", \"attacks\");\r\n        this.characterService.set_ToChange(\"Companion\", \"defense\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_CompanionSpecializationsAvailable(levelNumber: number) {\r\n        //Return the number of feats taken this level that granted you an animal companion specialization (i.e. gainAnimalCompanion == 6)\r\n        return this.characterService.get_FeatsAndFeatures().filter(feat => (feat.gainAnimalCompanion == 6) && this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length).length;\r\n    }\r\n\r\n    get_AvailableCompanionSpecializations(levelNumber: number) {\r\n        let existingCompanionSpecs: AnimalCompanionSpecialization[] = this.get_Companion().class.specializations;\r\n        let available = this.get_CompanionSpecializationsAvailable(levelNumber);\r\n        let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n        //Get all specializations that were either taken on this level (so they can be deselected) or that were not yet taken if the choice is not exhausted.\r\n        return this.animalCompanionsService.get_CompanionSpecializations().filter(type =>\r\n            showOtherOptions ||\r\n            existingCompanionSpecs.find(spec => spec.name == type.name && spec.level == levelNumber) ||\r\n            (existingCompanionSpecs.filter(spec => spec.level == levelNumber).length < available) &&\r\n            !existingCompanionSpecs.find(spec => spec.name == type.name)\r\n        )\r\n            .sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    get_TakenCompanionSpecializations(levelNumber: number) {\r\n        return this.get_Companion().class.specializations.filter(spec => spec.level == levelNumber).map(spec => spec.name);\r\n    }\r\n\r\n    have_CompanionSpecialization(name: string) {\r\n        return this.get_Companion().class.specializations.some(spec => spec.name == name);\r\n    }\r\n\r\n    get_FamiliarAvailable(levelNumber: number) {\r\n        //Return the number of feats taken this level that granted you a familiar\r\n        return this.characterService.get_FeatsAndFeatures().filter(feat => feat.gainFamiliar && this.get_Character().get_FeatsTaken(levelNumber, levelNumber, feat.name).length).length;\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Character().class.familiar;\r\n    }\r\n\r\n    on_NewFamiliar() {\r\n        if (this.get_Character().class.familiar) {\r\n            let character = this.characterService.get_Character();\r\n            //Preserve the origin class and set it again after resetting\r\n            let originClass = character.class.familiar.originClass;\r\n            this.characterService.cleanup_Familiar();\r\n            character.class.familiar = new Familiar();\r\n            character.class.familiar.originClass = originClass;\r\n            this.characterService.initialize_Familiar();\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    on_FamiliarSpeedChange(taken: boolean) {\r\n        if (taken) {\r\n            this.get_Familiar().speeds[1].name = \"Swim Speed\";\r\n        } else {\r\n            this.get_Familiar().speeds[1].name = \"Land Speed\";\r\n        }\r\n        this.characterService.set_ToChange(\"Familiar\", \"general\");\r\n        this.characterService.set_ToChange(\"Familiar\", \"familiarabilities\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    is_FamiliarSwimmer() {\r\n        return this.get_Familiar().speeds[1].name == \"Swim Speed\"\r\n    }\r\n\r\n    get_ItemFromGain(gain: ItemGain) {\r\n        return this.characterService.get_CleanItems()[gain.type].filter((item: Item) => item.name.toLowerCase() == gain.name.toLowerCase());\r\n    }\r\n\r\n    get_AnimalCompanionAbilities(type: AnimalCompanionAncestry) {\r\n        let abilities: [{ name: string, modifier: string }] = [{ name: \"\", modifier: \"\" }];\r\n        this.characterService.get_Abilities().forEach(ability => {\r\n            let name = ability.name.substr(0, 3);\r\n            let modifier = 0;\r\n            let classboosts = this.get_Companion().class.levels[1].abilityChoices[0].boosts.filter(boost => boost.name == ability.name)\r\n            let ancestryboosts = type.abilityChoices[0].boosts.filter(boost => boost.name == ability.name);\r\n            modifier = ancestryboosts.concat(classboosts).filter(boost => boost.type == \"Boost\").length - ancestryboosts.concat(classboosts).filter(boost => boost.type == \"Flaw\").length;\r\n            abilities.push({ name: name, modifier: (modifier > 0 ? \"+\" : \"\") + modifier.toString() })\r\n        })\r\n        abilities.shift();\r\n        return abilities;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"character\", \"all\", \"charactersheet\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"charactersheet\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div class=\"window-button-container\">\r\n    <button class=\"minimizebutton lower\"\r\n        [ngbTooltip]=\"get_Minimized() ? 'Click to show all choices and information.' : 'Click to hide finished choices and show compact information.'\"\r\n        [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n        <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n        <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n    </button>\r\n    <button class=\"tilemodebutton\" [ngClass]=\"{'fancy-button':get_TileMode()}\" (click)=\"toggle_TileMode()\"\r\n        [ngbTooltip]=\"get_TileMode() ? 'Click to enable list layout' : 'Click to enable tiled layout'\">\r\n        <!--Content is css only-->\r\n        <div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n            <div> </div>\r\n        </div>\r\n    </button>\r\n</div>\r\n<div id=\"character-height\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleCharacterMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"charactersheet-column-container\">\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n                <!--Management list mode-->\r\n                <ng-container *ngIf=\"!get_TileMode()\">\r\n                    <div class=\"list-item\">\r\n                        <button class=\"newrow\" (click)=\"on_NewCharacter()\">\r\n                            New Character\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"list-item\">\r\n                        <button class=\"newrow\" (click)=\"toggle_List('load')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='load'}\">\r\n                            Load Character\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"list-item\" [ngbTooltip]=\"!get_Savegames() ? 'Database connection failed.' : ''\">\r\n                        <button class=\"newrow\" (click)=\"save_CharacterToDB()\" *ngIf=\"!still_loading()\"\r\n                            [disabled]=\"!get_Savegames() || get_IsBlankCharacter()\">\r\n                            Save Character\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"list-item\">\r\n                        <button class=\"newrow\" (click)=\"toggle_List('settings')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='settings'}\">\r\n                            Settings\r\n                        </button>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Management tile mode-->\r\n                <div class=\"newrow list-item\" *ngIf=\"get_TileMode()\">\r\n                    <div class=\"icon-list\">\r\n                        <button (click)=\"on_NewCharacter()\">\r\n                            <app-gridIcon [ngbTooltip]=\"'New Character'\" [title]=\"'N E W'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <button class=\"sublist-toggle\" (click)=\"toggle_List('load')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='load'}\">\r\n                            <app-gridIcon [ngbTooltip]=\"'Load Character'\" [title]=\"'L O A D'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <button (click)=\"save_CharacterToDB()\" *ngIf=\"!still_loading()\"\r\n                            [disabled]=\"!get_Savegames() || get_IsBlankCharacter()\">\r\n                            <app-gridIcon\r\n                                [ngbTooltip]=\"!get_Savegames() ? 'Database connection failed.' : (get_IsBlankCharacter() ? 'No changes to character yet.' : 'Save Character')\"\r\n                                [title]=\"'S A V E'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                        <button (click)=\"toggle_List('settings')\"\r\n                            [ngClass]=\"{'activechoice':get_ShowList()=='settings'}\">\r\n                            <app-gridIcon [ngbTooltip]=\"'Settings'\" [title]=\"'C O N F'\">\r\n                            </app-gridIcon>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"!still_loading() && get_CharacterMenuState() == 'in'\">\r\n                    <div class=\"list-item\">\r\n                        <strong>Experience Points</strong>\r\n                        <span>\r\n                            <button (click)=\"on_LevelUp()\"\r\n                                *ngIf=\"get_Character().experiencePoints >= 1000 && get_Character().level < 20\">Level\r\n                                Up</button>\r\n                            <input type=\"number\" class=\"number4\" id=\"experiencePoints\"\r\n                                [(ngModel)]=\"get_Character().experiencePoints\" (keypress)=\"numbersOnly($event)\"\r\n                                maxLength=\"4\"\r\n                                [ngbTooltip]=\"(get_Character().experiencePoints >= 1000 && get_Character().level < 20) ? 'You are ready to level up!' : ''\"\r\n                                [ngClass]=\"{'bonus':(get_Character().experiencePoints >= 1000 && get_Character().level < 20)}\">\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"list-item\" *ngFor=\"let oldLevel of [get_Character().level]; trackBy:trackByIndex;\">\r\n                        <strong>\r\n                            Level\r\n                        </strong>\r\n                        <span>\r\n                            <select [(ngModel)]=\"get_Character().level\" (ngModelChange)=\"on_LevelChange(oldLevel)\">\r\n                                <option\r\n                                    *ngFor=\"let level of [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]; trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"level\">\r\n                                    {{level}}\r\n                                </option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <header class=\"subsectionHeader\">Show Level</header>\r\n                    <!--Level selection-->\r\n                    <div class=\"list-item\">\r\n                        <div id=\"levelBox\" class=\"fullwidth levelBoxTop\">\r\n                            <button class=\"center-aligned\" (click)=\"toggle_Level(0)\"\r\n                                [ngClass]=\"{'fancy-button':get_ShowLevel()==0}\">Everything</button>\r\n                            <button class=\"center-aligned\" (click)=\"toggle_Level(-1)\"\r\n                                [ngClass]=\"{'fancy-button':get_ShowLevel()==-1}\">History</button>\r\n                        </div>\r\n                        <div id=\"levelBox\" class=\"fullwidth\">\r\n                            <button class=\"center-aligned\"\r\n                                *ngFor=\"let levelNumber of [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]; trackBy:trackByIndex;\"\r\n                                (click)=\"toggle_Level(levelNumber)\" [disabled]=\"!get_Character().class.name\"\r\n                                [ngClass]=\"{'fancy-button':get_ShowLevel()==levelNumber}\">{{levelNumber}}</button>\r\n                        </div>\r\n                    </div>\r\n                    <app-tags [creature]=\"'Character'\" [objectName]=\"'Character'\" [showTraits]=true [showFeats]=true\r\n                        [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n                    <div [ngClass]=\"{'invisible':get_ShowLevel() > 0}\">\r\n                        <header class=\"sectionHeader\">History</header>\r\n                        <div class=\"list-item\">\r\n                            <strong>Name</strong>\r\n                            <span>\r\n                                <input type=\"text\" id=\"charactername\" [(ngModel)]=\"get_Character().name\"\r\n                                    (blur)=\"on_NameChange()\" maxLength=\"100\">\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <div class=\"newrow\">\r\n                                <strong>Party name</strong>\r\n                                <span>\r\n                                    <input type=\"text\" id=\"partyname\" [(ngModel)]=\"get_Character().partyName\"\r\n                                        maxLength=\"100\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"newrow\">\r\n                                <span></span>\r\n                                <span>\r\n                                    <select [(ngModel)]=\"get_Character().partyName\">\r\n                                        <option *ngFor=\"let partyName of get_Parties(); trackBy:trackByIndex;\"\r\n                                            [ngValue]=\"partyName\">\r\n                                            {{partyName}}\r\n                                        </option>\r\n                                    </select>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>\r\n                                Alignment\r\n                            </strong>\r\n                            <span>\r\n                                <select [(ngModel)]=\"get_Character().alignment\" (ngModelChange)=\"on_AlignmentChange()\">\r\n                                    <option *ngFor=\"let alignment of get_Alignments(); trackBy:trackByIndex;\"\r\n                                        [ngValue]=\"alignment\">\r\n                                        {{alignment}}\r\n                                    </option>\r\n                                </select>\r\n                            </span>\r\n                        </div>\r\n                        <!--Available Ancestry Feats-->\r\n                        <div class=\"list-item fullsize-only\" *ngIf=\"get_Character().class.ancestry.name\">\r\n                            <strong>Available Ancestry Feats</strong>\r\n                            <div class=\"newrow left-aligned\" *ngIf=\"get_Character().class.ancestry?.ancestries.length\">\r\n                                <cite class=\"trait\"\r\n                                    *ngFor=\"let ancestry of get_Character().class.ancestry.ancestries; trackBy:trackByIndex;\">{{ancestry}}&nbsp;</cite>\r\n                            </div>\r\n                        </div>\r\n                        <!--History list mode-->\r\n                        <ng-container *ngIf=\"!get_TileMode()\">\r\n                            <!--BaseValues-->\r\n                            <div class=\"list-item\">\r\n                                <button class=\"newrow fancy-button\"\r\n                                    [ngClass]=\"{'choicecleared':get_Character().baseValues.length, 'activechoice':get_ShowList()=='alternativeBaseValues'}\"\r\n                                    (click)=\"toggle_List('alternativeBaseValues')\">\r\n                                    Alternative Ability Values: {{(get_Character().baseValues.length) ? \"Used\" : \"Not\r\n                                    Used\"}}\r\n                                </button>\r\n                            </div>\r\n                            <!--Class-->\r\n                            <div class=\"list-item\" [ngClass]=\"{'fullsize-only':get_Character().class.name}\">\r\n                                <button class=\"newrow\"\r\n                                    [ngClass]=\"{'fancy-button choicecleared':get_Character().class.name, 'activechoice':get_ShowList()=='class'}\"\r\n                                    (click)=\"toggle_List('class')\">\r\n                                    Class{{(get_Character().class.name) ? \": \"+ get_Character().class.name : \"\"}}\r\n                                </button>\r\n                            </div>\r\n                            <!--Ancestry-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <div class=\"list-item list-header\"\r\n                                    [ngClass]=\"{'fullsize-only':get_Character().class.ancestry.name}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':get_Character().class.ancestry.name, 'activechoice':get_ShowList()=='ancestry'}\"\r\n                                        (click)=\"toggle_List('ancestry')\">\r\n                                        Ancestry{{(get_Character().class.ancestry.name) ? \": \"+\r\n                                        get_Character().class.ancestry.name : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Heritage-->\r\n                            <ng-container *ngIf=\"get_Character().class.ancestry.name\">\r\n                                <div class=\"list-item\"\r\n                                    [ngClass]=\"{'fullsize-only':get_Character().class.heritage.name}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':get_Character().class.heritage.name, 'activechoice':get_ShowList()=='heritage'}\"\r\n                                        (click)=\"toggle_List('heritage')\">\r\n                                        Heritage{{(get_Character().class.heritage.name) ? \": \"+\r\n                                        get_Character().class.heritage.name : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Languages-->\r\n                            <ng-container\r\n                                *ngFor=\"let currentLanguages of [get_CurrentLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let blankLanguages of [get_BlankLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                    <div class=\"list-item\" [ngClass]=\"{'fullsize-only':!blankLanguages}\"\r\n                                        *ngIf=\"get_LanguagesAvailable()\">\r\n                                        <button class=\"newrow\"\r\n                                            [ngClass]=\"{'fancy-button choicecleared':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==get_Character().level}\"\r\n                                            (click)=\"toggle_List('languages', get_Character().level)\">\r\n                                            Languages\r\n                                        </button>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <!--Background-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <div class=\"list-item\"\r\n                                    [ngClass]=\"{'fullsize-only':(get_Character().class.background.name)}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':((get_Character().class.background.name)), 'activechoice':get_ShowList()=='background'}\"\r\n                                        (click)=\"toggle_List('background')\">\r\n                                        Background{{(get_Character().class.background.name) ? \": \"+\r\n                                        get_Character().class.background.name : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Deity-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <div class=\"list-item\" [ngClass]=\"{'fullsize-only':get_Character().class.deity}\">\r\n                                    <button class=\"newrow\"\r\n                                        [ngClass]=\"{'fancy-button choicecleared':get_Character().class.deity, 'activechoice':get_ShowList()=='deity'}\"\r\n                                        (click)=\"toggle_List('deity')\">\r\n                                        Deity{{get_Character().class.deity ? \": \"+get_Character().class.deity : \"\"}}\r\n                                    </button>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                        <!--History tile mode-->\r\n                        <div class=\"list-item icon-list\" *ngIf=\"get_TileMode()\">\r\n                            <!--BaseValues-->\r\n                            <button class=\"fancy-button\"\r\n                                [ngClass]=\"{'choicecleared':get_Character().baseValues.length, 'activechoice':get_ShowList()=='alternativeBaseValues'}\"\r\n                                (click)=\"toggle_List('alternativeBaseValues')\">\r\n                                <app-gridIcon class=\"fancy-button\"\r\n                                    [ngbTooltip]=\"'Alternative Ability Values: ' + (get_Character().baseValues.length ? 'Used' : 'Not Used')\"\r\n                                    [title]=\"'A B I'\">\r\n                                </app-gridIcon>\r\n                            </button>\r\n                            <!--Class-->\r\n                            <button\r\n                                [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.name, 'activechoice':get_ShowList()=='class'}\"\r\n                                (click)=\"toggle_List('class')\">\r\n                                <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.name}\"\r\n                                    [ngbTooltip]=\"'Class' + (get_Character().class.name ? ': ' + get_Character().class.name : '')\"\r\n                                    [title]=\"get_Character().class.name ? get_Character().class.name : 'C L A S'\">\r\n                                </app-gridIcon>\r\n                            </button>\r\n                            <!--Ancestry-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.ancestry.name, 'activechoice':get_ShowList()=='ancestry'}\"\r\n                                    (click)=\"toggle_List('ancestry')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.ancestry.name}\"\r\n                                        [ngbTooltip]=\"'Ancestry' + (get_Character().class.ancestry.name ? ': ' + get_Character().class.ancestry.name : '')\"\r\n                                        [title]=\"get_Character().class.ancestry.name ? get_Character().class.ancestry.name : 'A N C E'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                            <!--Heritage-->\r\n                            <ng-container *ngIf=\"get_Character().class.ancestry.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.heritage.name, 'activechoice':get_ShowList()=='heritage'}\"\r\n                                    (click)=\"toggle_List('heritage')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.heritage.name}\"\r\n                                        [ngbTooltip]=\"'Heritage' + (get_Character().class.heritage.name ? ': ' + get_Character().class.heritage.name : '')\"\r\n                                        [title]=\"get_Character().class.heritage.name ? get_Character().class.heritage.name : 'H E R I'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                            <!--Languages-->\r\n                            <ng-container\r\n                                *ngFor=\"let currentLanguages of [get_CurrentLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let blankLanguages of [get_BlankLanguages(get_Character().level)]; trackBy:trackByIndex\">\r\n                                    <button\r\n                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==get_Character().level}\"\r\n                                        (click)=\"toggle_List('languages', get_Character().level)\"\r\n                                        *ngIf=\"get_LanguagesAvailable()\">\r\n                                        <app-gridIcon\r\n                                            [ngClass]=\"{'fancy-button':!blankLanguages}\"\r\n                                            [ngbTooltip]=\"'Languages'\" [title]=\"'L A N G'\"\r\n                                            [superTitle]=\"currentLanguages.toString()\">\r\n                                        </app-gridIcon>\r\n                                    </button>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <!--Background-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':((get_Character().class.background.name)), 'activechoice':get_ShowList()=='background'}\"\r\n                                    (click)=\"toggle_List('background')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.background.name}\"\r\n                                        [ngbTooltip]=\"'Background' + (get_Character().class.background.name ? ': ' + get_Character().class.background.name : '')\"\r\n                                        [title]=\"get_Character().class.background.name ? get_Character().class.background.name : 'B A C K'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                            <!--Deity-->\r\n                            <ng-container *ngIf=\"get_Character().class.name\">\r\n                                <button\r\n                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':get_Character().class.deity, 'activechoice':get_ShowList()=='deity'}\"\r\n                                    (click)=\"toggle_List('deity')\">\r\n                                    <app-gridIcon [ngClass]=\"{'fancy-button':get_Character().class.deity}\"\r\n                                        [ngbTooltip]=\"'Deity' + (get_Character().class.deity ? ': ' + get_Character().class.deity : '')\"\r\n                                        [title]=\"get_Character().class.deity ? get_Character().class.deity : 'D E I T'\">\r\n                                    </app-gridIcon>\r\n                                </button>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                    <!--Levels-->\r\n                    <ng-container *ngIf=\"get_Character().class\">\r\n                        <ng-container *ngFor=\"let level of get_Character().class.levels; trackBy:trackByIndex;\">\r\n                            <div\r\n                                [ngClass]=\"{'invisible':!(level.number > 0 && [0,level.number].includes(get_ShowLevel()))}\">\r\n                                <header class=\"sectionHeader levelHeader\" *ngIf=\"level.number > 0\">Level\r\n                                    {{level.number}}</header>\r\n                                <div [ngClass]=\"{'character-choice-grid':get_TileMode()}\">\r\n                                    <div [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let fixedAbilityBoosts of [get_AbilityBoosts(level.number, level.number, '', '', '', '', true)]; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let fixedSkillIncreases of [get_SkillIncreases(level.number, level.number, '', '', '', true)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let fixedFeats of [get_FeatsTaken(level.number, level.number, '', '', '', true, 'feat')]; trackBy:trackByIndex;\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let fixedFeatures of [get_FeatsTaken(level.number, level.number, '', '', '', true, 'feature')]; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngIf=\"fixedAbilityBoosts.length + fixedSkillIncreases.length + fixedFeatures.length + fixedFeats.length > 0\">\r\n                                                            <!--Fixed information list mode-->\r\n                                                            <div class=\"fullsize-only list-item\"\r\n                                                                *ngIf=\"!get_TileMode()\">\r\n                                                                <button class=\"newrow sublist-toggle fancy-button\"\r\n                                                                    (click)=\"toggle_List('fixedchanges', level.number, {abilityBoosts:fixedAbilityBoosts, skillIncreases:fixedSkillIncreases, features:fixedFeatures, feats:fixedFeats})\"\r\n                                                                    [ngClass]=\"{'activechoice':get_ShowList()=='fixedchanges' && get_ShowContentLevelNumber()==level.number}\">\r\n                                                                    Show fixed changes\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            <!--Fixed information tile mode-->\r\n                                                            <div class=\"fullsize-only\" *ngIf=\"get_TileMode()\">\r\n                                                                <button\r\n                                                                    [ngClass]=\"{'fancy-button activechoice':get_ShowFixedChangesLevelNumber()==level.number}\"\r\n                                                                    (click)=\"toggle_FixedChangesLevelNumber(level.number)\">\r\n                                                                    <app-gridIcon\r\n                                                                        [ngClass]=\"{'fancy-button':get_ShowFixedChangesLevelNumber()==level.number}\"\r\n                                                                        [ngbTooltip]=\"(get_ShowFixedChangesLevelNumber()==level.number ? 'Hide' : 'Show') + ' fixed changes'\"\r\n                                                                        [title]=\"'F I X'\">\r\n                                                                    </app-gridIcon>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Ability boosts-->\r\n                                    <div id=\"abilityboosts\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed ability boosts-->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let boost of get_AbilityBoosts(level.number, level.number, '', '', '', '', true); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedAbilityBoostContent>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>{{boost.type == 'Flaw' ? 'Flaw' :\r\n                                                            'Boost'}}&nbsp;</strong>\r\n                                                        {{boost.name}}\r\n                                                    </div>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong> {{boost.source}}\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedAbilityPopover=\"ngbPopover\"\r\n                                                    [ngbPopover]=\"FixedAbilityBoostContent\" triggers=\"click\">\r\n                                                    <app-gridIcon class=\"abilityboost\"\r\n                                                        [ngbTooltip]=\"!FixedAbilityPopover.isOpen() && ((boost.type == 'Flaw' ? 'Flaw: ' : 'Boost: ') + boost.name)\"\r\n                                                        [title]=\"boost.name\" [superTitle]=\"'icon-bi-lock-fill'\"\r\n                                                        [detail]=\"(boost.type == 'Flaw' ? 'Flaw' : 'Boost')\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of level.abilityChoices; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let maxAvailable of [get_MaxAvailable(choice)]; trackBy:trackByIndex;\">\r\n                                                <!--List mode ability boost buttons-->\r\n                                                <div class=\"list-item\" *ngIf=\"maxAvailable && !get_TileMode()\"\r\n                                                    [ngClass]=\"{'problem':(choice.boosts.length > maxAvailable || someAbilitiesIllegal(choice, level.number)), 'fullsize-only':choice.boosts.length == maxAvailable}\">\r\n                                                    <button class=\"newrow sublist-toggle abilityboost\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':choice.boosts.length == maxAvailable, 'activechoice':get_ShowList()==choice.id}\"\r\n                                                        (click)=\"toggle_List(choice.id, level.number, choice)\">\r\n                                                        {{get_AbilityChoiceTitle(choice)}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <!--Tile mode ability boost buttons-->\r\n                                                <button class=\"abilityboost\" *ngIf=\"maxAvailable && get_TileMode()\"\r\n                                                    (click)=\"toggle_List(choice.id, level.number, choice)\"\r\n                                                    [ngClass]=\"{'problem':(choice.boosts.length > maxAvailable || someAbilitiesIllegal(choice, level.number)), 'fancy-button fullsize-only choicecleared':choice.boosts.length == maxAvailable, 'activechoice':get_ShowList()==choice.id}\">\r\n                                                    <app-gridIcon class=\"abilityboost\"\r\n                                                        [ngbTooltip]=\"get_AbilityChoiceTitle(choice)\"\r\n                                                        [superTitle]=\"maxAvailable.toString()\"\r\n                                                        [title]=\"(maxAvailable == 1 && choice.boosts.length) ? choice.boosts[0].name : ((maxAvailable > 1 && choice.boosts.length > 0) ? choice.boosts.length.toString() : '')\"\r\n                                                        [ngClass]=\"{'fancy-button':choice.boosts.length == maxAvailable}\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Skill Increases-->\r\n                                    <div id=\"skillincreases\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed skill increases -->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let skillIncrease of get_SkillIncreases(level.number, level.number, '', '', '', true); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedSkillIncreaseContent>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>{{skillIncrease.name}}</strong>\r\n                                                    </div>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong> {{skillIncrease.source}}\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedSkillPopover=\"ngbPopover\"\r\n                                                    [ngbPopover]=\"FixedSkillIncreaseContent\" triggers=\"click\">\r\n                                                    <app-gridIcon class=\"skillincrease\"\r\n                                                        [ngbTooltip]=\"!FixedSkillPopover.isOpen() && skillIncrease.name\"\r\n                                                        [title]=\"skillIncrease.name\" [superTitle]=\"'icon-bi-lock-fill'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Skill Choices handle tile mode internally-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of get_SkillChoices(level); let index = index; trackBy:trackByIndex;\">\r\n                                            <app-skillchoice (showSkillChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                [choice]=\"choice\" [showChoice]=\"get_ShowList()\"\r\n                                                [levelNumber]=\"level.number\" [showContent]=\"false\"\r\n                                                [excludeTemporary]=\"true\" [tileMode]=\"get_TileMode()\">\r\n                                            </app-skillchoice>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Feat choices-->\r\n                                    <div id=\"featchoices\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed feats-->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let feat of get_FeatsTaken(level.number, level.number, '', '', '', true, 'feat'); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedFeatContent>\r\n                                                    <header class=\"spellHeader\">{{feat.name}}</header>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong>\r\n                                                        {{feat.source}}\r\n                                                    </div>\r\n                                                    <app-feat [feat]=\"get_FeatsAndFeatures(feat.name)[0]\"\r\n                                                        [choice]=\"null\" [levelNumber]=\"level.number\">\r\n                                                    </app-feat>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedFeatPopover=\"ngbPopover\" [ngbPopover]=\"FixedFeatContent\"\r\n                                                    triggers=\"click\">\r\n                                                    <app-gridIcon class=\"featchoice\"\r\n                                                        [ngbTooltip]=\"!FixedFeatPopover.isOpen() && feat.name\"\r\n                                                        [title]=\"feat.name\" [superTitle]=\"'icon-bi-lock-fill'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Feat Choices handle tile mode internally-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of get_FeatChoices(level, false); let index = index; trackBy:trackByIndex;\">\r\n                                            <app-featchoice (showFeatChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"choice\"\r\n                                                [levelNumber]=\"level.number\" [showContent]=\"false\"\r\n                                                [showFeat]=\"get_ShowItem()\" [showChoice]=\"get_ShowList()\"\r\n                                                [unavailableFeats]=\"get_Character().settings.unavailableFeats\"\r\n                                                [lowerLevelFeats]=\"get_Character().settings.lowerLevelFeats\"\r\n                                                [higherLevelFeats]=\"get_Character().settings.higherLevelFeats\"\r\n                                                [archetypeFeats]=\"get_Character().settings.archetypeFeats\"\r\n                                                [tileMode]=\"get_TileMode()\">\r\n                                            </app-featchoice>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <!--Special choices-->\r\n                                    <div id=\"specialchoices\" [ngClass]=\"{'icon-list vertical':get_TileMode()}\">\r\n                                        <!--Tile mode fixed features-->\r\n                                        <ng-container\r\n                                            *ngIf=\"get_TileMode() && get_ShowFixedChangesLevelNumber()==level.number\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let feature of get_FeatsTaken(level.number, level.number, '', '', '', true, 'feature'); trackBy:trackByIndex;\">\r\n                                                <ng-template #FixedFeatureContent>\r\n                                                    <header class=\"spellHeader\">{{feature.name}}</header>\r\n                                                    <div class=\"newrow left-aligned\">\r\n                                                        <strong>Source&nbsp;</strong>\r\n                                                        {{feature.source}}\r\n                                                    </div>\r\n                                                    <app-feat [feat]=\"get_FeatsAndFeatures(feature.name)[0]\"\r\n                                                        [choice]=\"null\" [levelNumber]=\"level.number\">\r\n                                                    </app-feat>\r\n                                                </ng-template>\r\n                                                <button class=\"fullsize-only inactive-button\"\r\n                                                    #FixedFeaturePopover=\"ngbPopover\" [ngbPopover]=\"FixedFeatureContent\"\r\n                                                    triggers=\"click\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngbTooltip]=\"!FixedFeaturePopover.isOpen() && feature.name\"\r\n                                                        [title]=\"feature.name\" [superTitle]=\"'icon-bi-lock-fill'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Languages - show if you have gained languages this level-->\r\n                                        <ng-container *ngIf=\"level.number > 0 && get_LanguagesAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let currentLanguages of [get_CurrentLanguages(level.number)]; trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let blankLanguages of [get_BlankLanguages(level.number)]; trackBy:trackByIndex\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':!blankLanguages}\">\r\n                                                        <button class=\"newrow specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                            (click)=\"toggle_List('languages', level.number)\">\r\n                                                            Languages: {{currentLanguages -\r\n                                                            blankLanguages}}/{{currentLanguages}}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':!blankLanguages, 'activechoice':get_ShowList()=='languages' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('languages', level.number)\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':!blankLanguages}\"\r\n                                                            [ngbTooltip]=\"'Languages: ' + (currentLanguages - blankLanguages) + '/' + currentLanguages\"\r\n                                                            [title]=\"blankLanguages ? blankLanguages.toString() : currentLanguages.toString()\"\r\n                                                            [superTitle]=\"'icon-ra ra-speech-bubbles'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--\"Specialchoice\" feat choices (feats handle tile mode internally)-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let choice of get_FeatChoices(level, true); let index = index; trackBy:trackByIndex;\">\r\n                                            <app-featchoice (showFeatChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                                                (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"choice\"\r\n                                                [levelNumber]=\"level.number\" [showContent]=\"false\"\r\n                                                [showFeat]=\"get_ShowItem()\" [showChoice]=\"get_ShowList()\"\r\n                                                [unavailableFeats]=\"get_Character().settings.unavailableFeats\"\r\n                                                [lowerLevelFeats]=\"get_Character().settings.lowerLevelFeats\"\r\n                                                [higherLevelFeats]=\"get_Character().settings.higherLevelFeats\"\r\n                                                [archetypeFeats]=\"get_Character().settings.archetypeFeats\"\r\n                                                [tileMode]=\"get_TileMode()\">\r\n                                            </app-featchoice>\r\n                                        </ng-container>\r\n                                        <!--Animal Companion-->\r\n                                        <ng-container *ngIf=\"get_CompanionAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let companion of [get_Companion()]; trackBy:trackByIndex\">\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':(companion.name && companion.species && companion.class.ancestry.name)}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':(companion.name && companion.species && companion.class.ancestry.name), 'activechoice':get_ShowList()=='animalcompanion' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('animalcompanion', level.number)\">\r\n                                                        Animal Companion{{(companion.class.ancestry.name) ? \": \"+\r\n                                                        companion.class.ancestry.name : \"\"}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':(companion.name && companion.species && companion.class.ancestry.name), 'activechoice':get_ShowList()=='animalcompanion' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('animalcompanion', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':(companion.name && companion.species && companion.class.ancestry.name)}\"\r\n                                                        [ngbTooltip]=\"'Animal Companion' + ((companion.class.ancestry.name) ? ': ' + companion.class.ancestry.name : '')\"\r\n                                                        [title]=\"companion.class.ancestry.name || ''\"\r\n                                                        [superTitle]=\"'icon-ra ra-wolf-howl'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Animal Specializations-->\r\n                                        <ng-container *ngIf=\"get_CompanionSpecializationsAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let available of [get_CompanionSpecializationsAvailable(level.number)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let takenSpecializations of [get_TakenCompanionSpecializations(level.number)]; trackBy:trackByIndex\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':takenSpecializations.length == available}\">\r\n                                                        <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':(takenSpecializations.length == available), 'activechoice':get_ShowList()=='companionspecialization' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                            (click)=\"toggle_List('companionspecialization', level.number)\">\r\n                                                            Animal Companion Specialization{{available > 1 ? \": \"+\r\n                                                            takenSpecializations.length +\"/\"+ available :\r\n                                                            (takenSpecializations.length == 1) ? \": \"+\r\n                                                            takenSpecializations[0] : \"\"}}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':(takenSpecializations.length == available), 'activechoice':get_ShowList()=='companionspecialization' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('companionspecialization', level.number)\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':(takenSpecializations.length == available)}\"\r\n                                                            [ngbTooltip]=\"'Animal Companion Specialization' + (available > 1 ? ': ' + takenSpecializations.length + '/' + available : (takenSpecializations.length == 1 ? ': ' + takenSpecializations[0] : ''))\"\r\n                                                            [title]=\"(available > 1) ? takenSpecializations.length.toString() + '/' + available.toString() : (takenSpecializations.length ? takenSpecializations[0] : '')\"\r\n                                                            [superTitle]=\"'icon-ra ra-love-howl'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Familiar-->\r\n                                        <ng-container *ngIf=\"get_FamiliarAvailable(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let finished of [get_Familiar().name && get_Familiar().species]; trackBy:trackByIndex;\">\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='familiar' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('familiar', level.number)\">\r\n                                                        Familiar\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='familiar' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('familiar', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':finished}\" [ngbTooltip]=\"'Familiar'\"\r\n                                                        [superTitle]=\"'icon-ra ra-raven'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Different Worlds-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let differentWorldsFeat of get_DifferentWorldsFeat(level.number); trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let finished of [differentWorldsFeat.data.name && differentWorldsFeat.data.background]; trackBy:trackByIndex;\">\r\n                                                <!--Different Worlds-->\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='differentworlds' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('differentworlds', level.number)\">\r\n                                                        Different Worlds{{(differentWorldsFeat.data.background) ? \": \" +\r\n                                                        differentWorldsFeat.data.background : \"\"}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='differentworlds' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('differentworlds', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':finished}\"\r\n                                                        [ngbTooltip]=\"'Different Worlds' + (differentWorldsFeat.data.background ? ': ' + differentWorldsFeat.data.background : '')\"\r\n                                                        [title]=\"differentWorldsFeat.data.background\"\r\n                                                        [superTitle]=\"'icon-ra ra-arcane-mask'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Blessed Blood-->\r\n                                        <ng-container *ngIf=\"get_BlessedBloodFeat(level.number)\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let blessedBloodSpells of [get_BlessedBloodSpells()]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let finished of [blessedBloodSpells >= 3]; trackBy:trackByIndex;\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                        <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='blessedblood' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                            (click)=\"toggle_List('blessedblood', level.number)\">\r\n                                                            Blessed Blood Deity Spells: {{blessedBloodSpells}}/3\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='blessedblood' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('blessedblood', level.number)\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':finished}\"\r\n                                                            [ngbTooltip]=\"'Blessed Blood Deity Spells: ' + blessedBloodSpells.toString() + '/3'\"\r\n                                                            [title]=\"finished ? '3' : blessedBloodSpells.toString() + '/3'\"\r\n                                                            [superTitle]=\"'icon-ra ra-burning-eye'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Additional Heritages-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let heritageGain of get_AdditionalHeritagesAvailable(level.number); trackBy:trackByIndex\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let heritageIndex of get_AdditionalHeritageIndex(heritageGain.source); trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let finished of [get_Character().class.additionalHeritages[heritageIndex].name]; trackBy:trackByIndex\">\r\n                                                    <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                        [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                        <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button choicecleared':get_Character().class.additionalHeritages[heritageIndex].name, 'activechoice':get_ShowList()=='additionalheritage' && get_ShowContentLevelNumber()==level.number && this.get_ShowContent()?.id==heritageGain.source}\"\r\n                                                            (click)=\"toggle_List('additionalheritages', level.number, {id: 'additionalheritage'+level.number+heritageGain.source, source: heritageGain.source})\">\r\n                                                            Heritage\r\n                                                            ({{heritageGain.source}}){{finished ? \": \"+\r\n                                                            get_Character().class.additionalHeritages[heritageIndex].name\r\n                                                            : \"\"}}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='additionalheritage' && get_ShowContentLevelNumber()==level.number && this.get_ShowContent()?.id==heritageGain.source}\"\r\n                                                        (click)=\"toggle_List('additionalheritages', level.number, {id: 'additionalheritage'+level.number+heritageGain.source, source: heritageGain.source})\">\r\n                                                        <app-gridIcon class=\"specialchoice\"\r\n                                                            [ngClass]=\"{'fancy-button':finished}\"\r\n                                                            [ngbTooltip]=\"'Heritage (' + heritageGain.source + ')' + (finished ? ': ' + get_Character().class.additionalHeritages[heritageIndex].name : '')\"\r\n                                                            [title]=\"finished ? get_Character().class.additionalHeritages[heritageIndex].name : ''\"\r\n                                                            [superTitle]=\"'icon-ra ra-sprout-emblem'\">\r\n                                                        </app-gridIcon>\r\n                                                    </button>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Fuse Stance-->\r\n                                        <ng-container\r\n                                            *ngFor=\"let feat of get_FuseStanceFeat(level.number); trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let finished of [feat.data.stances.length == 2 && feat.data.name]; trackBy:trackByIndex\">\r\n                                                <div class=\"list-item\" *ngIf=\"!get_TileMode()\"\r\n                                                    [ngClass]=\"{'fullsize-only':finished}\">\r\n                                                    <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button choicecleared':finished, 'activechoice':get_ShowList()=='fusestance' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                        (click)=\"toggle_List('fusestance', level.number)\">\r\n                                                        Fuse Stance{{(finished) ? \": \"+\r\n                                                        feat.data.name + \" (\" + feat.data.stances.join(', ') + \")\" :\r\n                                                        \"\"}}\r\n                                                    </button>\r\n                                                </div>\r\n                                                <button class=\"specialchoice\" *ngIf=\"get_TileMode()\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared fullsize-only':finished, 'activechoice':get_ShowList()=='fusestance' && get_ShowContentLevelNumber()==level.number}\"\r\n                                                    (click)=\"toggle_List('fusestance', level.number)\">\r\n                                                    <app-gridIcon class=\"specialchoice\"\r\n                                                        [ngClass]=\"{'fancy-button':finished}\"\r\n                                                        [ngbTooltip]=\"'Fuse Stance' + (finished ? ': ' + feat.data.name + ' (' + feat.data.stances.join(', ') + ')' : '')\"\r\n                                                        [title]=\"finished ? feat.data.name : ''\"\r\n                                                        [superTitle]=\"'icon-ra ra-double-team'\">\r\n                                                    </app-gridIcon>\r\n                                                </button>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                        <!--Lore Training-->\r\n                                        <ng-container *ngFor=\"let choice of level.loreChoices; trackBy:trackByIndex;\">\r\n                                            <div class=\"list-item\" *ngIf=\"choice.available && !get_TileMode()\"\r\n                                                [ngClass]=\"{'problem':(choice.increases.length > choice.available), 'fullsize-only':choice.increases.length == choice.available}\">\r\n                                                <button class=\"newrow sublist-toggle specialchoice\"\r\n                                                    [ngClass]=\"{'fancy-button choicecleared':choice.increases.length == choice.available, 'activechoice':get_ShowList()==choice.id}\"\r\n                                                    (click)=\"toggle_List(choice.id, level.number, choice)\">\r\n                                                    Lore Training\r\n                                                    ({{choice.source}}){{(choice.increases.length) ? \": \"+\r\n                                                    choice.increases[0].name : \"\"}}\r\n                                                </button>\r\n                                            </div>\r\n                                            <button class=\"specialchoice\" *ngIf=\"choice.available && get_TileMode()\"\r\n                                                [ngClass]=\"{'fancy-button choicecleared fullsize-only':choice.increases.length == choice.available, 'activechoice':get_ShowList()=='choice.id'}\"\r\n                                                (click)=\"toggle_List(choice.id, level.number, choice)\">\r\n                                                <app-gridIcon class=\"specialchoice\"\r\n                                                    [ngClass]=\"{'fancy-button':choice.increases.length == choice.available}\"\r\n                                                    [ngbTooltip]=\"'Lore Training (' + choice.source + ')' + ((choice.increases.length) ? ': ' + choice.loreName : '')\"\r\n                                                    [title]=\"choice.increases.length == choice.available ? choice.loreName : ''\"\r\n                                                    [superTitle]=\"'icon-ra ra-book'\">\r\n                                                </app-gridIcon>\r\n                                            </button>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"charactersheet-column\">\r\n            <div class=\"itembox-inner\">\r\n                <div id=\"choiceArea-top\"></div>\r\n                <!--Choice content and templates-->\r\n                <!--Load character content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='load'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Load Character</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"list-item\" *ngIf=\"get_Savegames() && !get_Savegames().length\">\r\n                            No characters available in database.\r\n                        </div>\r\n                        <div class=\"list-item\" *ngIf=\"!get_Savegames()\">\r\n                            Database connection failed.\r\n                        </div>\r\n                        <ng-container\r\n                            *ngFor=\"let savegame of get_Savegames(); let index = index; trackBy:trackByIndex;\">\r\n                            <ng-template #SavegameDeleteModal let-modal>\r\n                                <div class=\"modal-header\">\r\n                                    <header class=\"sectionHeader modal-title\" id=\"modal-title\">Delete Character\r\n                                    </header>\r\n                                    <button type=\"button\" class=\"close\" aria-label=\"close\"\r\n                                        (click)=\"modal.dismiss('Cross click')\" ngbAutofocus>\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <p>Are you sure you want to delete <strong>{{savegame.name}}</strong>?</p>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        (click)=\"modal.dismiss('Cancel click')\">Cancel</button>\r\n                                    <button type=\"button\" class=\"btn btn-danger\"\r\n                                        (click)=\"modal.close('Ok click')\">Ok</button>\r\n                                </div>\r\n                            </ng-template>\r\n                            <header class=\"sectionHeader center-aligned\"\r\n                                *ngIf=\"index == 0 || get_Savegames()[index].partyName != get_Savegames()[index-1].partyName\">\r\n                                {{savegame.partyName}}</header>\r\n                            <div class=\"list-item newrow\">\r\n                                <span>\r\n                                    <strong>{{savegame.name}}</strong> Level {{savegame.level}}\r\n                                    <span>{{get_SavegameTitle(savegame)}}</span>\r\n                                </span>\r\n                                <span style=\"flex-basis: auto; flex-grow: 0;\">\r\n                                    <button (click)=\"load_CharacterFromDB(savegame)\">Load</button>\r\n                                    <button style=\"margin-left: .3em;\"\r\n                                        (click)=\"open_DeleteModal(SavegameDeleteModal, savegame)\">Delete</button>\r\n                                </span>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Settings-->\r\n                <ng-container *ngIf=\"get_ShowList()=='settings'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Settings</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"list-item\">\r\n                            <strong>Look</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input id=\"accent\" type=\"color\" class=\"character-choice\" id=\"coloraccent\"\r\n                                    style=\"padding:0 2px\" [(ngModel)]=\"get_Character().settings.accent\"\r\n                                    (ngModelChange)=\"set_Accent()\" maxLength=\"7\">\r\n                                <label for=\"accent\"><strong>Color Accent</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input id=\"darkmode\" class=\"character-choice\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.darkmode\" (ngModelChange)=\"set_Darkmode()\">\r\n                                <label for=\"darkmode\"><strong>Dark mode</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>Tags</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"hintsShowMoreInformation\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.hintsShowMoreInformation\">\r\n                                <label for=\"hintsShowMoreInformation\"><strong>Clicking a tag shows additional\r\n                                        information, if available</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>Choices</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"autoCloseChoices\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.autoCloseChoices\">\r\n                                <label for=\"autoCloseChoices\"><strong>Automatically close choices when they are\r\n                                        finished</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"showOtherOptions\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.showOtherOptions\">\r\n                                <label for=\"showOtherOptions\"><strong>Keep showing the other options in finished\r\n                                        choices</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <strong>Feats</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"unavailableFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.unavailableFeats\">\r\n                                <label for=\"unavailableFeats\"><strong>Show unavailable feats</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"lowerLevelFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.lowerLevelFeats\">\r\n                                <label for=\"lowerLevelFeats\"><strong>Show lower level feats</strong></label>\r\n                            </div>\r\n                            <div class=\"fullwidth\" [ngbCollapse]=\"!get_Character().settings.unavailableFeats\">\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"higherLevelFeats\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"get_Character().settings.higherLevelFeats\">\r\n                                    <label for=\"higherLevelFeats\"><strong>Show higher level feats</strong></label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"archetypeFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"get_Character().settings.archetypeFeats\">\r\n                                <label for=\"archetypeFeats\"><strong>Show archetype feats</strong></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <!--History content-->\r\n                <!--Alternative Ability Values content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='alternativeBaseValues'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Alternative Ability Values:\r\n                            {{get_Character().baseValues.length ? 'Used' : 'Not used'}}</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"list-item\">\r\n                            <p>\r\n                                You can roll your own ability scores and enter them here. If you use these values, your\r\n                                character gets one fewer free ability boosts than normal from their ancestry and from\r\n                                their\r\n                                background. These ability boosts cannot raise a score above 18. If this would happen,\r\n                                you can put the ability boost into another ability score instead, as if it were a free\r\n                                ability boost. The character does not get any more free ability boosts on level 1.\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\">\r\n                            <input id=\"useAlternativeBaseValues\" class=\"character-choice\" type=\"checkbox\"\r\n                                (change)=\"on_BaseValueChange()\" [checked]=\"get_Character().baseValues.length\">\r\n                            <label for=\"useAlternativeBaseValues\">\r\n                                <strong>Enter your own Ability scores</strong>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\"\r\n                            *ngFor=\"let ability of get_Character().baseValues; trackBy:trackByIndex;\">\r\n                            <input type=\"number\" class=\"number2\" [(ngModel)]=\"ability.baseValue\"\r\n                                (blur)=\"on_AbilityChange(ability.name)\" maxlength=\"2\" (keypress)=\"numbersOnly($event)\">\r\n                            <strong>{{ability.name}}</strong>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Class choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='class'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Class{{(get_Character().class.name) ? \": \"+ get_Character().class.name : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container *ngFor=\"let class of get_AvailableClasses(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [class.name === get_Character().class.name]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.name && (class.name != get_Character().class.name)]; trackBy:trackByIndex\">\r\n                                    <ng-template #ClassChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{class.name}}</header>\r\n                                        <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"onClassChange(class, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" :\r\n                                                \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned tags\">\r\n                                            <cite class=\"trait\"\r\n                                                *ngFor=\"let trait of class.traits; trackBy:trackByIndex;\"\r\n                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\" openDelay=100>{{trait}}</cite>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"class.sourceBook\">\r\n                                            <strong>Source</strong><i>&nbsp;{{class.sourceBook}}</i>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\"\r\n                                            *ngFor=\"let desc of class.desc; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let text of desc.value.split('\\n\\n'); let textIndex = index; trackBy:trackByIndex;\">\r\n                                                <header class=\"featureHeader\" *ngIf=\"textIndex == 0\">{{desc.name}}\r\n                                                </header>\r\n                                                <p *ngIf=\"text.split('\\n').length == 1\">\r\n                                                    {{text}}\r\n                                                </p>\r\n                                                <ul *ngIf=\"text.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of text.split('\\n'); trackBy:trackByIndex;\">\r\n                                                        {{line}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input id=\"{{class.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"onClassChange(class, $event.target.checked)\" [checked]=\"checked\"\r\n                                            [disabled]=\"disabled\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"ClassChoiceDetailsTemplate\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"class.name\"></app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>\r\n                                                    {{class.name}}\r\n                                                </span>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Ancestry choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='ancestry'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Ancestry{{(get_Character().class.ancestry.name) ? \": \"+ get_Character().class.ancestry.name\r\n                            : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container *ngFor=\"let ancestry of get_AvailableAncestries(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [ancestry.name === get_Character().class.ancestry.name]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.ancestry.name && (ancestry.name != get_Character().class.ancestry.name)]; trackBy:trackByIndex\">\r\n                                    <ng-template #AncestryChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{ancestry.name}}</header>\r\n                                        <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"onAncestryChange(ancestry, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" : \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned tags\">\r\n                                            <cite class=\"trait\"\r\n                                                *ngFor=\"let trait of ancestry.traits; trackBy:trackByIndex;\"\r\n                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\" openDelay=100>{{trait}}</cite>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"ancestry.sourceBook\">\r\n                                            <strong>Source</strong><i>&nbsp;{{ancestry.sourceBook}}</i>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\"\r\n                                            *ngFor=\"let desc of ancestry.desc; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let text of desc.value.split('\\n\\n'); let textIndex = index; trackBy:trackByIndex;\">\r\n                                                <header class=\"featureHeader\" *ngIf=\"textIndex == 0\">\r\n                                                    {{desc.name}}\r\n                                                </header>\r\n                                                <p *ngIf=\"text.split('\\n').length == 1\">\r\n                                                    {{text}}\r\n                                                </p>\r\n                                                <ul *ngIf=\"text.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of text.split('\\n'); trackBy:trackByIndex;\">\r\n                                                        {{line}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input id=\"{{ancestry.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"onAncestryChange(ancestry, $event.target.checked)\"\r\n                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"AncestryChoiceDetailsTemplate\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"ancestry.name\"\r\n                                                [detail]=\"ancestry.traits.includes('Rare') ? 'Rare' : (ancestry.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{ancestry.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\" *ngIf=\"ancestry.traits.includes('Rare')\"\r\n                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\" openDelay=100>Rare</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"ancestry.traits.includes('Uncommon')\"\r\n                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                    openDelay=100>Uncommon</cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Heritage choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='heritage'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Heritage{{(get_Character().class.heritage.name) ? \": \"+ get_Character().class.heritage.name\r\n                            : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container\r\n                            *ngFor=\"let heritage of get_AvailableHeritages('', get_Character().class.ancestry.name); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let selected of [heritage.name == get_Character().class.heritage.name]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [selected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [!selected && (checked || get_Character().class.heritage.name)]; trackBy:trackByIndex\">\r\n                                        <ng-template #HeritageChoiceDetailsTemplate>\r\n                                            <header class=\"spellHeader\">{{heritage.name}}</header>\r\n                                            <div class=\"button newrow no-animation\"\r\n                                                *ngIf=\"!disabled && !heritage.subTypes.length\"\r\n                                                [ngClass]=\"{'fancy-button':selected, 'disabled':disabled}\">\r\n                                                <label>\r\n                                                    <input type=\"checkbox\"\r\n                                                        (change)=\"onHeritageChange(heritage, $event.target.checked)\"\r\n                                                        [checked]=\"selected\" [disabled]=\"disabled\" hidden>{{selected ?\r\n                                                    \"Remove\" : \"Choose\"}}\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned tags\">\r\n                                                <cite class=\"trait\"\r\n                                                    *ngFor=\"let trait of heritage.traits; trackBy:trackByIndex;\"\r\n                                                    [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                    openDelay=100>{{trait}}</cite>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned\" *ngIf=\"heritage.sourceBook\">\r\n                                                <strong>Source</strong><i>&nbsp;{{heritage.sourceBook}}</i>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let desc of heritage.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                        <li\r\n                                                            *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                            {{line}}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                            <ng-container\r\n                                                *ngFor=\"let activityName of heritage.gainActivities; trackBy:trackByIndex;\">\r\n                                                <div class=\"newrow left-aligned\"\r\n                                                    *ngFor=\"let activity of get_Activities(activityName); trackBy:trackByIndex;\">\r\n                                                    <header class=\"spellHeader left-aligned\">{{activity.name}}\r\n                                                        <app-actionIcons [actionString]=\"activity.actions\">\r\n                                                        </app-actionIcons>\r\n                                                        {{(activity.activationType) ? activity.activationType : \"\"}}\r\n                                                    </header>\r\n                                                    <app-activity class=\"newrow\" [activity]=activity\r\n                                                        [allowActivate]=false>\r\n                                                    </app-activity>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                            <!--Subheritages-->\r\n                                            <ng-container\r\n                                                *ngFor=\"let subheritage of heritage.subTypes; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let subheritageSelected of [subheritage.name === get_Character().class.heritage.name]; trackBy:trackByIndex;\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let subheritageChecked of [subheritageSelected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let subheritageDisabled of [!subheritageSelected && (subheritageChecked || get_Character().class.heritage.name)]; trackBy:trackByIndex;\">\r\n                                                            <div class=\"list-item\"\r\n                                                                [ngClass]=\"{'selected':subheritageSelected}\">\r\n                                                                <div class=\"gridicon-fullsizebox lower\">\r\n                                                                    <input id=\"{{subheritage.name}}\" type=\"checkbox\"\r\n                                                                        class=\"character-choice\"\r\n                                                                        (change)=\"onHeritageChange(subheritage, $event.target.checked)\"\r\n                                                                        [checked]=\"subheritageChecked\"\r\n                                                                        [disabled]=\"subheritageDisabled\">\r\n                                                                    <label for=\"{{subheritage.name}}\">\r\n                                                                        <strong>{{subheritage.subType}}</strong>\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                            <!--End Subheritages-->\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':selected}\">\r\n                                            <input *ngIf=\"!heritage.subTypes.length\" id=\"{{heritage.name}}\"\r\n                                                type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"onHeritageChange(heritage, $event.target.checked)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <button class=\"character-choice\" *ngIf=\"heritage.subTypes.length\"\r\n                                                (click)=\"HeritageChoiceDetailsPopover.toggle()\">+</button>\r\n                                            <div class=\"gridicon-fullsizebox\" #HeritageChoiceDetailsPopover=\"ngbPopover\"\r\n                                                [ngbPopover]=\"HeritageChoiceDetailsTemplate\" triggers=\"click\">\r\n                                                <app-gridIcon [title]=\"heritage.name\"\r\n                                                    [detail]=\"heritage.traits.includes('Rare') ? 'Rare' : (heritage.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>{{heritage.name}}&nbsp;</span>\r\n                                                    <cite class=\"trait\" *ngIf=\"heritage.traits.includes('Rare')\"\r\n                                                        [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                        openDelay=100>Rare</cite>\r\n                                                    <cite class=\"trait\" *ngIf=\"heritage.traits.includes('Uncommon')\"\r\n                                                        [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                        openDelay=100>Uncommon</cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Languages content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='languages'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">Languages</header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <div class=\"newrow list-item left-aligned\">\r\n                            <strong *ngIf=\"get_Character().class.ancestry.recommendedLanguages.length\">\r\n                                Recommended Languages\r\n                            </strong>\r\n                            {{get_Character().class.ancestry.recommendedLanguages.join(', ')}}\r\n                        </div>\r\n                        <ng-container *ngFor=\"let language of get_Character().class.languages; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\"\r\n                                *ngIf=\"language.locked || language.level <= get_ShowContentLevelNumber()\">\r\n                                <ng-template #LanguageSource>\r\n                                    <div class=\"newrow\">\r\n                                        <span>\r\n                                            <strong>Source</strong>\r\n                                            {{language.source}}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"newrow\" *ngIf=\"language.level > 0\">\r\n                                        <span>\r\n                                            <strong>Level</strong>\r\n                                            {{language.level}}\r\n                                        </span>\r\n                                    </div>\r\n                                </ng-template>\r\n                                <div class=\"newrow\" [ngbPopover]=\"language.source ? LanguageSource : null\">\r\n                                    <input class=\"newrow\" type=\"text\" [(ngModel)]=\"language.name\"\r\n                                        (blur)=\"on_LanguageChange()\" [disabled]=\"language.locked\">\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Background choice content-->\r\n                <ng-container *ngIf=\"get_ShowList()=='background'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Background{{(get_Character().class.background.name) ? \": \"+\r\n                            get_Character().class.background.name : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <!-- Filter -->\r\n                        <div class=\"list-item lower\">\r\n                            <strong>Filter</strong>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"adventureBackgroundsFilter\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"adventureBackgrounds\">\r\n                                <label for=\"adventureBackgroundsFilter\"><strong>Show adventure\r\n                                        backgrounds</strong></label>\r\n                            </div>\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"regionalBackgroundsFilter\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"regionalBackgrounds\">\r\n                                <label for=\"regionalBackgroundsFilter\"><strong>Show regional\r\n                                        backgrounds</strong></label>\r\n                            </div>\r\n                        </div>\r\n                        <!-- End Filter -->\r\n                        <ng-container *ngFor=\"let background of get_AvailableBackgrounds(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [background.name === get_Character().class.background.name || background.name === get_Character().class.background.superType]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.background.name && (background.name != get_Character().class.background.name)]; trackBy:trackByIndex\">\r\n                                    <ng-template #BackgroundChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{background.name}}</header>\r\n                                        <div class=\"button newrow no-animation\"\r\n                                            *ngIf=\"!disabled && !background.subTypes\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"onBackgroundChange(background, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" : \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned tags\">\r\n                                            <cite class=\"trait\"\r\n                                                *ngFor=\"let trait of background.traits; trackBy:trackByIndex;\"\r\n                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\" openDelay=100>{{trait}}</cite>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"background.sourceBook\">\r\n                                            <strong>Source</strong><i>&nbsp;{{background.sourceBook}}</i>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"background.prerequisites\">\r\n                                            <strong>Prerequisites</strong>&nbsp;{{background.prerequisites}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\" *ngIf=\"background.region\">\r\n                                            <strong>Region</strong>&nbsp;{{background.region}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let desc of background.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                    <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                        {{line}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        <div class=\"list-item lower newrow problem\" *ngIf=\"background.inputRequired\">\r\n                                            <strong>Player input required:</strong>\r\n                                            <div class=\"newrow left-aligned\">\r\n                                                <p\r\n                                                    *ngFor=\"let inputRequired of background.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                                                    {{inputRequired}}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!--Subbackgrounds-->\r\n                                        <div class=\"list-item\"\r\n                                            [ngClass]=\"{'selected':subbackground.name === get_Character().class.background.name}\"\r\n                                            *ngFor=\"let subbackground of get_SubBackgrounds(background.name); trackBy:trackByIndex;\">\r\n                                            <div class=\"gridicon-fullsizebox lower\">\r\n                                                <input id=\"{{subbackground.name}}\" type=\"checkbox\"\r\n                                                    class=\"character-choice\"\r\n                                                    (change)=\"onBackgroundChange(subbackground, $event.target.checked)\"\r\n                                                    [checked]=\"subbackground.name === get_Character().class.background.name\"\r\n                                                    [disabled]=\"get_Character().class.background.name && (subbackground.name != get_Character().class.background.name)\">\r\n                                                <label for=\"{{subbackground.name}}\">\r\n                                                    <strong>{{subbackground.subType}}</strong>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!--End Subbackgrounds-->\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input *ngIf=\"!background.subTypes\" id=\"{{background.name}}\" type=\"checkbox\"\r\n                                            class=\"character-choice\"\r\n                                            (change)=\"onBackgroundChange(background, $event.target.checked)\"\r\n                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                        <button class=\"character-choice\" *ngIf=\"background.subTypes\"\r\n                                            (click)=\"BackgroundChoiceDetailsPopover.toggle()\">+</button>\r\n                                        <div class=\"gridicon-fullsizebox\" #BackgroundChoiceDetailsPopover=\"ngbPopover\"\r\n                                            [ngbPopover]=\"BackgroundChoiceDetailsTemplate\" triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"background.name\"\r\n                                                [detail]=\"background.traits.includes('Rare') ? 'Rare' : (background.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{background.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\" *ngIf=\"background.traits.includes('Rare')\"\r\n                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\" openDelay=100>Rare</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"background.traits.includes('Uncommon')\"\r\n                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                    openDelay=100>Uncommon</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"background.adventurePath\"\r\n                                                    [ngbPopover]=\"get_Traits('Adventure')[0]?.desc\"\r\n                                                    openDelay=100>Adventure</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"background.region\"\r\n                                                    [ngbPopover]=\"get_Traits('Regional')[0]?.desc\"\r\n                                                    openDelay=100>Regional</cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"get_ShowList()=='deity'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Deity{{get_Character().class.deity ? \": \"+get_Character().class.deity : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container *ngFor=\"let deity of get_AvailableDeities(); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [deity.name === get_Character().class.deity]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [get_Character().class.deity && (deity.name != get_Character().class.deity)]; trackBy:trackByIndex\">\r\n                                    <ng-template #DeityChoiceDetailsTemplate>\r\n                                        <header class=\"spellHeader\">{{deity.name}}</header>\r\n                                        <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input type=\"checkbox\"\r\n                                                    (change)=\"on_DeityChange(deity, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{checked ?\r\n                                                \"Remove\" : \"Choose\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Follower\r\n                                                Alignments&nbsp;</strong>{{deity.followerAlignments.join(\", \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Divine Ability&nbsp;</strong>{{deity.divineAbility.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Divine Font&nbsp;</strong>{{deity.divineFont.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Divine Skill&nbsp;</strong>{{deity.divineSkill.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Favored Weapon&nbsp;</strong>{{deity.favoredWeapon.join(\" or \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Domains&nbsp;</strong>{{deity.domains.join(\", \")}}\r\n                                        </div>\r\n                                        <div class=\"newrow left-aligned\">\r\n                                            <strong>Cleric Spells</strong>\r\n                                        </div>\r\n                                        <div class=\"list-item lower left-aligned\"\r\n                                            *ngFor=\"let spell of deity.clericSpells; trackBy:trackByIndex;\">\r\n                                            <strong>Level {{spell.level}}&nbsp;</strong>\r\n                                            {{spell.name}}{{(spell.note ? \"(\"+spell.note+\")\" : \"\")}}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                        <input id=\"{{deity.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"on_DeityChange(deity, $event.target.checked)\" [checked]=\"checked\"\r\n                                            [disabled]=\"disabled\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"DeityChoiceDetailsTemplate\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"deity.name\" [detail]=\"deity.alignment\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{deity.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\">{{deity.alignment}}</cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Level content-->\r\n                <!--Fixed content template (list mode only)-->\r\n                <ng-container *ngIf=\"get_ShowList()=='fixedchanges'\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Level {{this.get_ShowContentLevelNumber()}} fixed changes\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <!--Fixed Ability boosts-->\r\n                        <header class=\"sectionHeader center-aligned\"\r\n                            *ngIf=\"this.get_ShowContent()?.abilityBoosts?.length\">\r\n                            Ability Boosts\r\n                        </header>\r\n                        <ng-container *ngFor=\"let boost of this.get_ShowContent().abilityBoosts; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item abilityboost\">\r\n                                <div>\r\n                                    <span>\r\n                                        <strong>\r\n                                            {{(boost.type == 'Flaw') ? 'Flaw' : 'Boost'}}\r\n                                        </strong>\r\n                                        {{boost.name}}\r\n                                    </span>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{boost.source}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                        <!--Fixed Skill Increases-->\r\n                        <header class=\"sectionHeader center-aligned\"\r\n                            *ngIf=\"this.get_ShowContent()?.skillIncreases?.length\">\r\n                            Skill Increases\r\n                        </header>\r\n                        <ng-container\r\n                            *ngFor=\"let skillIncrease of this.get_ShowContent().skillIncreases; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item skillincrease\">\r\n                                <div>\r\n                                    <strong>\r\n                                        {{skillIncrease.name}}\r\n                                    </strong>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{skillIncrease.source}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                        <!--Fixed Feats-->\r\n                        <header class=\"sectionHeader center-aligned\" *ngIf=\"this.get_ShowContent()?.feats?.length\">\r\n                            Feats\r\n                        </header>\r\n                        <ng-container *ngFor=\"let feat of this.get_ShowContent().feats; trackBy:trackByIndex;\">\r\n                            <ng-template #FixedFeatDetail>\r\n                                <header class=\"spellHeader\">{{feat.name}}</header>\r\n                                <app-feat [feat]=\"get_FeatsAndFeatures(feat.name)[0]\" [choice]=\"null\"\r\n                                    [levelNumber]=\"this.get_ShowContentLevelNumber()\">\r\n                                </app-feat>\r\n                            </ng-template>\r\n                            <div class=\"list-item featchoice\">\r\n                                <div>\r\n                                    <strong>\r\n                                        {{feat.name}}\r\n                                    </strong>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{feat.source}}\r\n                                    </span>\r\n                                </div>\r\n                                <button class=\"lower inactive-button\" [ngbPopover]=\"FixedFeatDetail\"\r\n                                    triggers=\"click\">Details</button>\r\n                            </div>\r\n                        </ng-container>\r\n                        <!--Fixed Features-->\r\n                        <header class=\"sectionHeader center-aligned\" *ngIf=\"this.get_ShowContent()?.features?.length\">\r\n                            Features\r\n                        </header>\r\n                        <ng-container *ngFor=\"let feature of this.get_ShowContent().features; trackBy:trackByIndex;\">\r\n                            <ng-template #FixedFeatureDetail>\r\n                                <header class=\"spellHeader\">{{feature.name}}</header>\r\n                                <app-feat [feat]=\"get_FeatsAndFeatures(feature.name)[0]\" [choice]=\"null\"\r\n                                    [levelNumber]=\"this.get_ShowContentLevelNumber()\">\r\n                                </app-feat>\r\n                            </ng-template>\r\n                            <div class=\"list-item specialchoice\">\r\n                                <div>\r\n                                    <strong>\r\n                                        {{feature.name}}\r\n                                    </strong>\r\n                                    <span class=\"newrow left-aligned\">\r\n                                        <strong>\r\n                                            Source&nbsp;\r\n                                        </strong>\r\n                                        {{feature.source}}\r\n                                    </span>\r\n                                </div>\r\n                                <button class=\"lower inactive-button\" [ngbPopover]=\"FixedFeatureDetail\"\r\n                                    triggers=\"click\">Details</button>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Ability Choice Content-->\r\n                <ng-container\r\n                    *ngFor=\"let abilityContent of get_ActiveChoiceContent('AbilityChoice'); trackBy:trackByID\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            {{get_AbilityChoiceTitle(abilityContent.choice)}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container\r\n                            *ngFor=\"let ability of get_AvailableAbilities(abilityContent.choice, abilityContent.levelNumber); trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let checked of [get_AbilityTakenByThis(ability, abilityContent.choice, abilityContent.levelNumber)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [this.cannotBoost(ability, abilityContent.levelNumber, abilityContent.choice).length || (abilityContent.choice.boosts.length == get_MaxAvailable(abilityContent.choice) && !checked)]; trackBy:trackByIndex\">\r\n                                    <div class=\"newrow list-item\"\r\n                                        [ngClass]=\"{'selected':checked, 'problem':abilityIllegal(abilityContent.levelNumber, ability)}\">\r\n                                        <div class=\"gridicon-fullsizebox\">\r\n                                            <input id=\"{{ability.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"on_AbilityBoost(ability.name, $event.target.checked, abilityContent.choice, false)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\"\r\n                                                *ngFor=\"let baseValue of [ability.baseValue(get_Character(), characterService, abilityContent.levelNumber)]; trackBy:trackByIndex;\">\r\n                                                <app-gridIcon [title]=\"ability.name\" [ngbPopover]=\"baseValue.explain\"\r\n                                                    triggers=\"hover:click\" openDelay=1\r\n                                                    [superTitle]=\"baseValue.result.toString()\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>{{ability.name}}&nbsp;</span>\r\n                                                    <cite class=\"problem\"\r\n                                                        *ngFor=\"let reason of cannotBoost(ability, abilityContent.levelNumber, abilityContent.choice); trackBy:trackByIndex;\">\r\n                                                        {{reason}}\r\n                                                    </cite>\r\n                                                    <cite class=\"problem\"\r\n                                                        *ngIf=\"abilityIllegal(abilityContent.levelNumber, ability)\"\r\n                                                        [ngbPopover]=\"'Abilities cannot be raised above 18 on level 1.'\">\r\n                                                        Limit reached&nbsp;\r\n                                                    </cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Skill Choice Content-->\r\n                <ng-container *ngFor=\"let skillContent of get_ActiveChoiceContent('SkillChoice'); trackBy:trackByID;\">\r\n                    <app-skillchoice (showSkillChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                        [choice]=\"skillContent.choice\" [levelNumber]=\"skillContent.levelNumber\" [showTitle]=\"false\"\r\n                        [showChoice]=\"skillContent.name\" [excludeTemporary]=\"true\">\r\n                    </app-skillchoice>\r\n                </ng-container>\r\n                <!--Feat Choice Content-->\r\n                <ng-container *ngFor=\"let featContent of get_ActiveChoiceContent('FeatChoice'); trackBy:trackByID;\">\r\n                    <app-featchoice (showFeatChoiceMessage)=\"receive_ChoiceMessage($event)\"\r\n                        (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"featContent.choice\"\r\n                        [levelNumber]=\"featContent.levelNumber\" [showTitle]=\"false\" [showFeat]=\"get_ShowItem()\"\r\n                        [showChoice]=\"featContent.name\" [unavailableFeats]=\"get_Character().settings.unavailableFeats\"\r\n                        [lowerLevelFeats]=\"get_Character().settings.lowerLevelFeats\"\r\n                        [higherLevelFeats]=\"get_Character().settings.higherLevelFeats\"\r\n                        [archetypeFeats]=\"get_Character().settings.archetypeFeats\">\r\n                    </app-featchoice>\r\n                </ng-container>\r\n                <!--Lore Training content-->\r\n                <ng-container *ngFor=\"let loreContent of get_ActiveChoiceContent('LoreChoice'); trackBy:trackByID\">\r\n                    <div class=\"newrow list-item padding-8 center-aligned\">\r\n                        <header class=\"box-header sectionHeader\">\r\n                            Lore Training ({{loreContent.choice.source}}){{(loreContent.choice.increases.length) ? \": \"+\r\n                            loreContent.choice.loreName : \"\"}}\r\n                        </header>\r\n                    </div>\r\n                    <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                        <ng-container\r\n                            *ngFor=\"let checked of [get_SkillIncreases(loreContent.levelNumber, loreContent.levelNumber, 'Lore: '+loreContent.choice.loreName, loreContent.choice.source, loreContent.choice.id).length]; trackBy:trackByIndex\">\r\n                            <ng-container\r\n                                *ngFor=\"let illegal of [get_Skills('Lore: '+loreContent.choice.loreName).length && !checked]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let disabled of [!loreContent.choice.loreName || illegal]; trackBy:trackByIndex\">\r\n                                    <div class=\"newrow left-aligned list-item\">\r\n                                        <strong>Lore Type&nbsp;</strong>{{loreContent.choice.loreDesc}}\r\n                                    </div>\r\n                                    <div class=\"newrow list-item gridicon-fullsizebox\">\r\n                                        <div class=\"button no-animation\" style=\"max-width: fit-content;\"\r\n                                            [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                            <label>\r\n                                                <input id=\"{{loreContent.choice.id}}\" type=\"checkbox\"\r\n                                                    (change)=\"on_LoreChange($event.target.checked, loreContent.choice)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                {{checked ? \"Change\" : \"Save\"}}\r\n                                            </label>\r\n                                        </div>\r\n                                        <header class=\"sectionHeader\">\r\n                                            <input id=\"LoreName\" type=\"text\" [(ngModel)]=\"loreContent.choice.loreName\"\r\n                                                [disabled]=\"checked\" (blur)=\"on_LoreNameChange\" maxLength=\"20\">\r\n                                            <cite class=\"problem\" *ngIf=\"illegal\">\r\n                                                Lore already trained\r\n                                            </cite>\r\n                                        </header>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n                <!--Animal Companion Content-->\r\n                <ng-container\r\n                    *ngFor=\"let companionContent of get_ActiveSpecialChoiceShown('animalcompanion'); trackBy:trackByID\">\r\n                    <ng-container *ngFor=\"let companion of [get_Companion()]; trackBy: trackByIndex\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Animal Companion{{(companion.class.ancestry.name) ? \": \"+ companion.class.ancestry.name\r\n                                : \"\"}}\r\n                            </header>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <div class=\"newrow list-item\">\r\n                                <button class=\"newrow list-item\" (click)=\"on_NewCompanion()\">\r\n                                    <header class=\"sectionHeader\">Reset Animal Companion</header>\r\n                                </button>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Name&nbsp;\r\n                                        <input id=\"CompanionName\" type=\"text\" [(ngModel)]=\"companion.name\"\r\n                                            maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Animal&nbsp;\r\n                                        <input id=\"CompanionSpecies\" type=\"text\" [(ngModel)]=\"companion.species\"\r\n                                            maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"list-item transparent\">\r\n                                <header class=\"sectionHeader\">Type</header>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let type of get_AvailableCompanionTypes(); trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [type.name == companion.class.ancestry.name]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [companion.class.ancestry.name && (type.name != companion.class.ancestry.name)]; trackBy:trackByIndex\">\r\n                                        <ng-template #AnimalCompanionDetailsTemplate>\r\n                                            <header class=\"spellHeader\">{{type.name}}</header>\r\n                                            <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                                [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                                <label>\r\n                                                    <input type=\"checkbox\"\r\n                                                        (change)=\"on_CompanionTypeChange(type, $event.target.checked)\"\r\n                                                        [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                    {{checked ? \"Remove\" : \"Choose\"}}\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"newrow left-aligned\">\r\n                                                <div class=\"newrow left-aligned tags\">\r\n                                                    <cite class=\"trait\"\r\n                                                        *ngFor=\"let trait of type.traits; trackBy:trackByIndex;\"\r\n                                                        [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                        openDelay=100>{{trait}}</cite>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"type.sourceBook\">\r\n                                                    <strong>Source</strong><i>&nbsp;{{type.sourceBook}}</i>\r\n                                                </div>\r\n                                                <ng-container\r\n                                                    *ngFor=\"let desc of type.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                    <p *ngIf=\"desc.split('\\n').length == 1\">\r\n                                                        {{desc}}\r\n                                                    </p>\r\n                                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                        <li\r\n                                                            *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                            {{line}}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </ng-container>\r\n                                                <p>\r\n                                                    <strong>Size</strong> {{size(type.size)}}\r\n                                                </p>\r\n                                                <ng-container\r\n                                                    *ngFor=\"let gain of type.gainItems; trackBy:trackByIndex;\">\r\n                                                    <p\r\n                                                        *ngFor=\"let item of get_ItemFromGain(gain); trackBy:trackByIndex;\">\r\n                                                        <strong>Melee</strong>\r\n                                                        {{item.displayName}},\r\n                                                        <strong>Damage</strong>\r\n                                                        {{item.dicenum+\"d\"+item.dicesize}}\r\n                                                    </p>\r\n                                                </ng-container>\r\n                                                <p>\r\n                                                    <span\r\n                                                        *ngFor=\"let ability of get_AnimalCompanionAbilities(type); let index = index; trackBy:trackByIndex;\">\r\n                                                        {{index ? \", \" : \"\"}}<strong>{{ability.name}}</strong>\r\n                                                        {{ability.modifier}}\r\n                                                    </span>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Hit Points</strong>\r\n                                                    {{type.hitpoints}}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Skill</strong>\r\n                                                    {{type.skillChoices[0].increases[0].name}}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Senses</strong>\r\n                                                    {{type.senses.join(\",\r\n                                                    \")}}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Speed</strong>\r\n                                                    <span\r\n                                                        *ngFor=\"let speed of type.speeds; let index = index; trackBy:trackByIndex;\">\r\n                                                        {{index > 0 ? \", \" : \"\"}}{{speed.name.split(' ')[0] + \" \" +\r\n                                                        speed.value + \" feet\"}}\r\n                                                    </span>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Support Benefit</strong>\r\n                                                    {{type.supportBenefit}}\r\n                                                </p>\r\n                                                <p *ngIf=\"type.specialdesc.length\">\r\n                                                    <strong>Special</strong>\r\n                                                    {{type.specialdesc}}\r\n                                                </p>\r\n                                            </div>\r\n                                            <ng-container\r\n                                                *ngFor=\"let gain of [type.activities[1]]; trackBy:trackByIndex;\">\r\n                                                <div class=\"newrow left-aligned\"\r\n                                                    *ngFor=\"let activity of get_Activities(gain.name); trackBy:trackByIndex;\">\r\n                                                    <header class=\"spellHeader left-aligned\">\r\n                                                        Advanced Maneuver: {{activity.name}}\r\n                                                        <app-actionIcons [actionString]=\"activity.actions\">\r\n                                                        </app-actionIcons>\r\n                                                        {{(activity.activationType) ? activity.activationType : \"\"}}\r\n                                                    </header>\r\n                                                    <app-activity class=\"newrow\" [activity]=activity\r\n                                                        [allowActivate]=false>\r\n                                                    </app-activity>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                            <input id=\"{{type.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"on_CompanionTypeChange(type, $event.target.checked)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\">\r\n                                                <app-gridIcon [title]=\"type.name\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span [ngbPopover]=\"AnimalCompanionDetailsTemplate\"\r\n                                                        triggers=\"click\">{{type.name}}</span>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Companion Specialization Content-->\r\n                <ng-container\r\n                    *ngFor=\"let companionSpecializationContent of get_ActiveSpecialChoiceShown('companionspecialization'); trackBy:trackByID\">\r\n                    <ng-container *ngFor=\"let companion of [get_Companion()]; trackBy:trackByIndex\">\r\n                        <ng-container\r\n                            *ngFor=\"let available of [get_CompanionSpecializationsAvailable(companionSpecializationContent.levelNumber)]; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let takenSpecializations of [get_TakenCompanionSpecializations(companionSpecializationContent.levelNumber)]; trackBy:trackByIndex\">\r\n                                <div class=\"newrow list-item padding-8 center-aligned\">\r\n                                    <header class=\"box-header sectionHeader\">\r\n                                        Animal Companion Specialization{{available > 1 ? \": \"+\r\n                                        takenSpecializations.length +\"/\"+ available : (takenSpecializations.length == 1)\r\n                                        ? \": \"+ takenSpecializations[0] : \"\"}}\r\n                                    </header>\r\n                                </div>\r\n                                <div class=\"list-item\">\r\n                                    <p>\r\n                                        The first time an animal gains a specialization, it gains the following: Its\r\n                                        proficiency rank for unarmed attacks increases to expert. Its proficiency ranks\r\n                                        for saving throws and Perception increase to master. Increase its Dexterity\r\n                                        modifier by 1 and its Intelligence modifier by 2. Its unarmed attack damage\r\n                                        increases from two dice to three dice, and it increases its additional damage\r\n                                        with unarmed attacks from 2 to 4 or from 3 to 6.\r\n                                    </p>\r\n                                </div>\r\n                                <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let spec of get_AvailableCompanionSpecializations(companionSpecializationContent.levelNumber); trackBy:trackByIndex;\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let taken of [takenSpecializations.includes(spec.name)]; trackBy:trackByIndex\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let checked of [taken || have_CompanionSpecialization(spec.name)]; trackBy:trackByIndex\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let disabled of [(have_CompanionSpecialization(spec.name) || (takenSpecializations.length == available)) && !taken]; trackBy:trackByIndex\">\r\n                                                    <ng-template #CompanionSpecializationDetailsTemplate>\r\n                                                        <header class=\"spellHeader\">{{spec.name}}</header>\r\n                                                        <div class=\"button newrow no-animation\"\r\n                                                            *ngIf=\"!disabled && (taken || !checked)\"\r\n                                                            [ngClass]=\"{'fancy-button':taken}\">\r\n                                                            <label>\r\n                                                                <input type=\"checkbox\"\r\n                                                                    (change)=\"on_SpecializationChange(spec, $event.target.checked, companionSpecializationContent.levelNumber)\"\r\n                                                                    [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                                {{checked ? \"Remove\" : \"Choose\"}}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\">\r\n                                                            <cite class=\"problem\" *ngIf=\"checked && !taken\">\r\n                                                                Already taken\r\n                                                            </cite>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\">\r\n                                                            <p>\r\n                                                                {{spec.desc}}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                                        [ngClass]=\"{'selected':taken}\">\r\n                                                        <input id=\"{{spec.name}}\" type=\"checkbox\"\r\n                                                            class=\"character-choice\"\r\n                                                            (change)=\"on_SpecializationChange(spec, $event.target.checked, companionSpecializationContent.levelNumber)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                                        <div class=\"gridicon-fullsizebox\">\r\n                                                            <app-gridIcon [title]=\"spec.name\">\r\n                                                            </app-gridIcon>\r\n                                                            <header class=\"sectionHeader\">\r\n                                                                <span\r\n                                                                    [ngbPopover]=\"CompanionSpecializationDetailsTemplate\"\r\n                                                                    triggers=\"click\">{{spec.name}}</span>\r\n                                                            </header>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Familiar Content-->\r\n                <ng-container\r\n                    *ngFor=\"let familiarContent of get_ActiveSpecialChoiceShown('familiar'); trackBy:trackByID\">\r\n                    <ng-container *ngFor=\"let familiar of [get_Familiar()]; trackBy:trackByIndex\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Familiar\r\n                            </header>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <div class=\"newrow list-item\">\r\n                                <button class=\"newrow list-item\" (click)=\"on_NewFamiliar()\">\r\n                                    <header class=\"sectionHeader\">Reset Familiar</header>\r\n                                </button>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Name&nbsp;\r\n                                        <input id=\"FamiliarName\" type=\"text\" [(ngModel)]=\"familiar.name\" maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>\r\n                                        Creature&nbsp;\r\n                                        <input id=\"FamiliarCreature\" type=\"text\" [(ngModel)]=\"familiar.species\"\r\n                                            maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"FamiliarSwimmer\" type=\"checkbox\"\r\n                                        (click)=\"on_FamiliarSpeedChange($event.target.checked)\"\r\n                                        [checked]=\"is_FamiliarSwimmer()\">\r\n                                    <label for=\"FamiliarSwimmer\">\r\n                                        <strong>\r\n                                            Gain Swim Speed instead of Land Speed\r\n                                        </strong>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Different Worlds content-->\r\n                <ng-container\r\n                    *ngFor=\"let differentWorldsContent of get_ActiveSpecialChoiceShown('differentworlds'); trackBy:trackByID\">\r\n                    <ng-container\r\n                        *ngFor=\"let differentWorldsFeat of get_DifferentWorldsFeat(differentWorldsContent.levelNumber); trackBy:trackByIndex;\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Different Worlds{{(differentWorldsFeat.data.background) ? \": \"+\r\n                                differentWorldsFeat.data.background : \"\"}}\r\n                            </header>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <div class=\"newrow list-item\">\r\n                                <div class=\"newrow list-item\">\r\n                                    <strong>Alternative name&nbsp;\r\n                                        <input type=\"text\" [(ngModel)]=\"differentWorldsFeat.data.name\"\r\n                                            (blur)=on_NameChange() maxLength=\"30\">\r\n                                    </strong>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"list-item transparent\">\r\n                                <header class=\"sectionHeader\">Alternative background</header>\r\n                            </div>\r\n                            <!-- Filter -->\r\n                            <div class=\"list-item lower\">\r\n                                <strong>Filter</strong>\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"adventureBackgroundsFilter\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"adventureBackgrounds\">\r\n                                    <label for=\"adventureBackgroundsFilter\"><strong>Show adventure\r\n                                            backgrounds</strong></label>\r\n                                </div>\r\n                                <div class=\"list-item gridicon-fullsizebox\">\r\n                                    <input class=\"character-choice\" id=\"regionalBackgroundsFilter\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"regionalBackgrounds\">\r\n                                    <label for=\"regionalBackgroundsFilter\"><strong>Show regional\r\n                                            backgrounds</strong></label>\r\n                                </div>\r\n                            </div>\r\n                            <!-- End Filter -->\r\n                            <ng-container *ngFor=\"let background of get_Backgrounds(); trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let selected of [background.name === differentWorldsFeat.data.background]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let checked of [selected || background.name === get_Character().class.background.name || background.name === get_Character().class.background.superType]; trackBy:trackByIndex\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let disabled of [!selected && (checked || differentWorldsFeat.data.background)]; trackBy:trackByIndex\">\r\n                                            <ng-template #DifferentWorldsBackgroundChoiceDetailsTemplate>\r\n                                                <header class=\"spellHeader\">{{background.name}}</header>\r\n                                                <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                                    [ngClass]=\"{'fancy-button':selected, 'disabled':disabled}\">\r\n                                                    <label>\r\n                                                        <input type=\"checkbox\"\r\n                                                            (change)=\"on_DifferentWorldsBackgroundChange(differentWorldsContent.levelNumber, differentWorldsFeat, background, $event.target.checked)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\" hidden>{{selected\r\n                                                        ? \"Remove\" : \"Choose\"}}\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned tags\">\r\n                                                    <cite class=\"trait\"\r\n                                                        *ngFor=\"let trait of background.traits; trackBy:trackByIndex;\"\r\n                                                        [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                        openDelay=100>{{trait}}</cite>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"background.sourceBook\">\r\n                                                    <strong>Source</strong><i>&nbsp;{{background.sourceBook}}</i>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"background.prerequisites\">\r\n                                                    <strong>Prerequisites</strong>&nbsp;{{background.prerequisites}}\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\" *ngIf=\"background.region\">\r\n                                                    <strong>Region</strong>&nbsp;{{background.region}}\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let desc of background.desc.split('\\n\\n'); let index = index; trackBy:trackByIndex;\">\r\n                                                        <ng-container *ngIf=\"index == 0\">\r\n                                                            <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                                <li\r\n                                                                    *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                                    {{line}}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"background.loreChoices[0]?.loreName != ''\">\r\n                                                        <p>\r\n                                                            You're trained in {{background.loreChoices[0].loreName}}\r\n                                                            Lore.\r\n                                                        </p>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"background.loreChoices[0]?.loreDesc != ''\">\r\n                                                        <p>\r\n                                                            You're trained in\r\n                                                            {{background.loreChoices[0].loreDesc.substr(0,1).toLowerCase()}}{{background.loreChoices[0].loreDesc.substr(1)}}.\r\n                                                        </p>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                            </ng-template>\r\n                                            <div class=\"list-item gridicon-fullsizebox\"\r\n                                                [ngClass]=\"{'selected':selected}\">\r\n                                                <input id=\"{{background.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                    (change)=\"on_DifferentWorldsBackgroundChange(differentWorldsContent.levelNumber, differentWorldsFeat, background, $event.target.checked)\"\r\n                                                    [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                                <div class=\"gridicon-fullsizebox\"\r\n                                                    [ngbPopover]=\"DifferentWorldsBackgroundChoiceDetailsTemplate\"\r\n                                                    triggers=\"click\">\r\n                                                    <app-gridIcon [title]=\"background.name\"\r\n                                                        [detail]=\"background.traits.includes('Rare') ? 'Rare' : (background.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                    </app-gridIcon>\r\n                                                    <header class=\"sectionHeader\">\r\n                                                        <span>{{background.name}}&nbsp;</span>\r\n                                                        <cite class=\"trait\" *ngIf=\"background.traits.includes('Rare')\"\r\n                                                            [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                            openDelay=100>Rare</cite>\r\n                                                        <cite class=\"trait\"\r\n                                                            *ngIf=\"background.traits.includes('Uncommon')\"\r\n                                                            [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                            openDelay=100>Uncommon</cite>\r\n                                                    </header>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Blessed Blood Content-->\r\n                <ng-container\r\n                    *ngFor=\"let blessedBloodContent of get_ActiveSpecialChoiceShown('blessedblood'); trackBy:trackByID;\">\r\n                    <ng-container *ngFor=\"let blessedBloodSpells of [get_BlessedBloodSpells()]; trackBy:trackByIndex;\">\r\n                        <div class=\"newrow list-item padding-8 center-aligned\">\r\n                            <header class=\"box-header sectionHeader\">\r\n                                Blessed Blood Deity Spells: {{blessedBloodSpells}}/3\r\n                            </header>\r\n                        </div>\r\n                        <div class=\"list-item\">\r\n                            <p>\r\n                                Add up to three of your deity's spells (spells your deity grants to clerics) to your\r\n                                spell list. They are not automatically added to your repertoire, but you can select them\r\n                                just as you would spells normally on the divine spell list.\r\n                            </p>\r\n                        </div>\r\n                        <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                            <ng-container *ngFor=\"let spell of get_BlessedBloodDeitySpells(); trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [get_BlessedBloodHaveSpell(spell)]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [blessedBloodSpells >= 3 && !checked]; trackBy:trackByIndex\">\r\n                                        <ng-template #BlessedBloodChoiceDetailsTemplate>\r\n                                            <header class=\"spellHeader newrow\">\r\n                                                <span style=\"flex-grow:10\">\r\n                                                    {{spell.name}}\r\n                                                    <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons>\r\n                                                    {{(spell.castType) ? spell.castType : \"\"}}\r\n                                                </span>\r\n                                                <span style=\"flex-basis:auto; flex-shrink:0\">\r\n                                                    Spell {{spell.levelreq}}\r\n                                                </span>\r\n                                            </header>\r\n                                            <div class=\"button newrow no-animation\" *ngIf=\"!disabled\"\r\n                                                [ngClass]=\"{'fancy-button':checked, 'disabled':disabled}\">\r\n                                                <label>\r\n                                                    <input type=\"checkbox\"\r\n                                                        (change)=\"on_BlessedBloodSpellTaken(spell, blessedBloodContent.levelNumber, $event.target.checked)\"\r\n                                                        [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                    {{checked ? \"Remove\" : \"Choose\"}}\r\n                                                </label>\r\n                                            </div>\r\n                                            <app-spell class=\"newrow\" [spell]=spell [spellLevel]=\"spell.levelreq\">\r\n                                            </app-spell>\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\" [ngClass]=\"{'selected':checked}\">\r\n                                            <input id=\"{{spell.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                                (change)=\"on_BlessedBloodSpellTaken(spell, blessedBloodContent.levelNumber, $event.target.checked)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\"\r\n                                                [ngbPopover]=\"BlessedBloodChoiceDetailsTemplate\" triggers=\"click\">\r\n                                                <app-gridIcon [title]=\"spell.name\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>{{spell.name}}</span>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Fuse Stance content-->\r\n                <ng-container\r\n                    *ngFor=\"let fuseStanceContent of get_ActiveSpecialChoiceShown('fusestance'); trackBy:trackByID;\">\r\n                    <ng-container\r\n                        *ngFor=\"let fuseStanceFeat of get_FuseStanceFeat(fuseStanceContent.levelNumber); trackBy:trackByIndex\">\r\n                        <ng-container\r\n                            *ngFor=\"let finished of [fuseStanceFeat.data.stances.length == 2]; trackBy:trackByIndex\">\r\n                            <div class=\"newrow list-item padding-8 center-aligned\">\r\n                                <header class=\"box-header sectionHeader\">\r\n                                    Fuse Stance{{(finished && fuseStanceFeat.data.name) ? \": \"+\r\n                                    fuseStanceFeat.data.name + \" (\" + fuseStanceFeat.data.stances.join(', ') + \")\" :\r\n                                    \"\"}}\r\n                                </header>\r\n                            </div>\r\n                            <div class=\"list-item\">\r\n                                <p>\r\n                                    Choose two stances you know and combine them into a single fused stance. Give your\r\n                                    new fused stance a unique name. When you enter your fused stance, you gain all the\r\n                                    effects of both stances, including the requirements and restrictions.\r\n                                </p>\r\n                                <p>\r\n                                    You can't fuse stances with fundamentally incompatible requirements or restrictions\r\n                                    (such as Mountain Stance and Crane Stance, which both require using only one type of\r\n                                    Strike).\r\n                                </p>\r\n                            </div>\r\n                            <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                                <div class=\"newrow list-item\">\r\n                                    <div class=\"newrow list-item\">\r\n                                        <strong>Stance name&nbsp;\r\n                                            <input type=\"text\" [(ngModel)]=\"fuseStanceFeat.data.name\"\r\n                                                (blur)=\"on_FuseStanceNameChange()\" maxLength=\"30\">\r\n                                        </strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"list-item transparent\">\r\n                                    <header class=\"sectionHeader\">Fused Stances</header>\r\n                                </div>\r\n                                <ng-container\r\n                                    *ngFor=\"let stance of get_StancesToFuse(fuseStanceContent.levelNumber, fuseStanceFeat); trackBy:trackByIndex;\">\r\n                                    <ng-template #FuseStanceChoiceDetailsPopover>\r\n                                        <header class=\"spellHeader\">{{stance.activity.name}}\r\n                                            <app-actionIcons [actionString]=\"stance.activity.actions\">\r\n                                            </app-actionIcons>{{(stance.activity.activationType) ?\r\n                                            stance.activity.activationType\r\n                                            : \"\"}}\r\n                                        </header>\r\n                                        <app-activity [creature]=\"'Character'\" [activity]=stance.activity\r\n                                            [allowActivate]=false>\r\n                                        </app-activity>\r\n                                    </ng-template>\r\n                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                        [ngClass]=\"{'unavailable':stance.reason, 'selected':fuseStanceFeat.data.stances.includes(stance.activity.name)}\">\r\n                                        <input id=\"{{stance.activity.name}}\" type=\"checkbox\" class=\"character-choice\"\r\n                                            (change)=\"on_FuseStanceStanceChange(fuseStanceFeat, stance.activity.name, $event.target.checked)\"\r\n                                            [checked]=\"fuseStanceFeat.data.stances.includes(stance.activity.name)\"\r\n                                            [disabled]=\"(finished || stance.reason) && !fuseStanceFeat.data.stances.includes(stance.activity.name)\">\r\n                                        <div class=\"gridicon-fullsizebox\" [ngbPopover]=\"FuseStanceChoiceDetailsPopover\"\r\n                                            triggers=\"click\">\r\n                                            <app-gridIcon [title]=\"stance.activity.name\"\r\n                                                [superTitle]=\"stance.restricted ? 'icon-ra ra-bird-claw' : ''\">\r\n                                            </app-gridIcon>\r\n                                            <header class=\"sectionHeader\">\r\n                                                <span>{{stance.activity.name}}&nbsp;</span>\r\n                                                <cite class=\"trait\" *ngIf=\"stance.restricted\"\r\n                                                    [ngbPopover]=\"'While in this stance, you can only use the stance\\'s special attack. You can only add one stance of this type to the fused stance.'\"\r\n                                                    openDelay=100>\r\n                                                    Attack restrictions\r\n                                                </cite>\r\n                                                <cite class=\"problem\" *ngIf=\"stance.reason\">\r\n                                                    {{stance.reason}}\r\n                                                </cite>\r\n                                            </header>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!--Additional Heritages content-->\r\n                <ng-container\r\n                    *ngFor=\"let additionalHeritagesContent of get_ActiveSpecialChoiceShown('additionalheritages'); trackBy:trackByID;\">\r\n                    <ng-container\r\n                        *ngFor=\"let heritageGain of get_AdditionalHeritagesAvailable(additionalHeritagesContent.levelNumber); trackBy:trackByIndex\">\r\n                        <ng-container\r\n                            *ngFor=\"let heritageIndex of get_AdditionalHeritageIndex(heritageGain.source); trackBy:trackByIndex\">\r\n                            <ng-container *ngIf=\"heritageGain.source == additionalHeritagesContent.choice.source\">\r\n                                <div class=\"newrow list-item padding-8 center-aligned\">\r\n                                    <header class=\"box-header sectionHeader\">\r\n                                        Heritage\r\n                                        ({{heritageGain.source}}){{(get_Character().class.additionalHeritages[heritageIndex].name)\r\n                                        ? \": \"+ get_Character().class.additionalHeritages[heritageIndex].name : \"\"}}\r\n                                    </header>\r\n                                </div>\r\n                                <div id=\"choiceArea\" class=\"charactersheet-app\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let heritage of get_AvailableHeritages('', heritageGain.ancestry, heritageIndex); trackBy:trackByIndex;\">\r\n                                        <ng-container\r\n                                            *ngFor=\"let selected of [heritage.name === get_Character().class.additionalHeritages[heritageIndex].name]; trackBy:trackByIndex;\">\r\n                                            <ng-container\r\n                                                *ngFor=\"let checked of [selected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex;\">\r\n                                                <ng-container\r\n                                                    *ngFor=\"let disabled of [!selected && (checked || get_Character().class.additionalHeritages[heritageIndex].name)]; trackBy:trackByIndex;\">\r\n                                                    <ng-template #HeritageChoiceDetailsTemplate>\r\n                                                        <header class=\"spellHeader\">{{heritage.name}}</header>\r\n                                                        <div class=\"button newrow no-animation\"\r\n                                                            *ngIf=\"!disabled && !heritage.subTypes.length\"\r\n                                                            [ngClass]=\"{'fancy-button':selected, 'disabled':disabled}\">\r\n                                                            <label>\r\n                                                                <input type=\"checkbox\"\r\n                                                                    (change)=\"on_AdditionalHeritageChange(heritage, $event.target.checked, heritageIndex, heritageGain.source)\"\r\n                                                                    [checked]=\"checked\" [disabled]=\"disabled\"\r\n                                                                    hidden>{{checked ? \"Remove\" : \"Choose\"}}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned tags\">\r\n                                                            <cite class=\"trait\"\r\n                                                                *ngFor=\"let trait of heritage.traits; trackBy:trackByIndex;\"\r\n                                                                [ngbPopover]=\"get_Traits(trait)[0]?.desc\"\r\n                                                                openDelay=100>{{trait}}</cite>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\" *ngIf=\"heritage.sourceBook\">\r\n                                                            <strong>Source</strong><i>&nbsp;{{heritage.sourceBook}}</i>\r\n                                                        </div>\r\n                                                        <div class=\"newrow left-aligned\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let desc of heritage.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                                                <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                                                <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                                                    <li\r\n                                                                        *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">\r\n                                                                        {{line}}\r\n                                                                    </li>\r\n                                                                </ul>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let activityName of heritage.gainActivities; trackBy:trackByIndex;\">\r\n                                                            <div class=\"newrow left-aligned\"\r\n                                                                *ngFor=\"let activity of get_Activities(activityName); trackBy:trackByIndex;\">\r\n                                                                <header class=\"spellHeader left-aligned\">\r\n                                                                    {{activity.name}}\r\n                                                                    <app-actionIcons [actionString]=\"activity.actions\">\r\n                                                                    </app-actionIcons>\r\n                                                                    {{(activity.activationType) ?\r\n                                                                    activity.activationType :\r\n                                                                    \"\"}}\r\n                                                                </header>\r\n                                                                <app-activity class=\"newrow\" [activity]=activity\r\n                                                                    [allowActivate]=false>\r\n                                                                </app-activity>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                        <!--Subheritages-->\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let subheritage of heritage.subTypes; trackBy:trackByIndex;\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let subheritageSelected of [subheritage.name === get_Character().class.additionalHeritages[heritageIndex].name]; trackBy:trackByIndex;\">\r\n                                                                <ng-container\r\n                                                                    *ngFor=\"let subheritageChecked of [subheritageSelected || get_HaveHeritage(heritage.name)]; trackBy:trackByIndex;\">\r\n                                                                    <ng-container\r\n                                                                        *ngFor=\"let subheritageDisabled of [!subheritageSelected && (subheritageChecked || get_Character().class.additionalHeritages[heritageIndex].name)]; trackBy:trackByIndex;\">\r\n                                                                        <div class=\"list-item\"\r\n                                                                            [ngClass]=\"{'selected':subheritageSelected}\">\r\n                                                                            <div class=\"gridicon-fullsizebox lower\">\r\n                                                                                <input id=\"{{subheritage.name}}\"\r\n                                                                                    type=\"checkbox\"\r\n                                                                                    class=\"character-choice\"\r\n                                                                                    (change)=\"on_AdditionalHeritageChange(subheritage, $event.target.checked, heritageIndex, heritageGain.source)\"\r\n                                                                                    [checked]=\"subheritageChecked\"\r\n                                                                                    [disabled]=\"subheritageDisabled\">\r\n                                                                                <label for=\"{{subheritage.name}}\">\r\n                                                                                    <strong>{{subheritage.subType}}</strong>\r\n                                                                                </label>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </ng-container>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                        <!--End Subheritages-->\r\n                                                    </ng-template>\r\n                                                    <div class=\"list-item gridicon-fullsizebox\"\r\n                                                        [ngClass]=\"{'selected':selected}\">\r\n                                                        <input *ngIf=\"!heritage.subTypes.length\" id=\"{{heritage.name}}\"\r\n                                                            type=\"checkbox\" class=\"character-choice\"\r\n                                                            (change)=\"on_AdditionalHeritageChange(heritage, $event.target.checked, heritageIndex, heritageGain.source)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                                        <button class=\"character-choice\"\r\n                                                            *ngIf=\"heritage.subTypes.length\"\r\n                                                            (click)=\"HeritageChoiceDetailsPopover.toggle()\">+</button>\r\n                                                        <div class=\"gridicon-fullsizebox\"\r\n                                                            #HeritageChoiceDetailsPopover=\"ngbPopover\"\r\n                                                            [ngbPopover]=\"HeritageChoiceDetailsTemplate\"\r\n                                                            triggers=\"click\">\r\n                                                            <app-gridIcon [title]=\"heritage.name\"\r\n                                                                [detail]=\"heritage.traits.includes('Rare') ? 'Rare' : (heritage.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                            </app-gridIcon>\r\n                                                            <header class=\"sectionHeader\">\r\n                                                                <span>{{heritage.name}}&nbsp;</span>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"heritage.traits.includes('Rare')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                                    openDelay=100>Rare</cite>\r\n                                                                <cite class=\"trait\"\r\n                                                                    *ngIf=\"heritage.traits.includes('Uncommon')\"\r\n                                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                                    openDelay=100>Uncommon</cite>\r\n                                                            </header>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export class FormulaLearned {\r\n    public id: string = \"\";\r\n    public source: string = \"\";\r\n    public snareSpecialistPrepared: number = 0;\r\n    public snareSpecialistAvailable: number = 0;\r\n}\r\n","import { Consumable } from './Consumable';\r\n\r\nexport class OtherConsumable extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Other Consumables should be type \"otherconsumables\" to be found in the database\r\n    readonly type = \"otherconsumables\";\r\n}","<div id=\"dice\" class=\"diceBox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleDiceMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"list-item\" style=\"gap:8px;\">\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 4)\" [ngbTooltip]=\"'Roll 1d4'\">\r\n                <app-diceIcons_D4></app-diceIcons_D4>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 4)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd4'\">\r\n                {{diceNum}}d4\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 6)\" [ngbTooltip]=\"'Roll 1d6'\">\r\n                <app-diceIcons_D6></app-diceIcons_D6>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 6)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd6'\">\r\n                {{diceNum}}d6\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 8)\" [ngbTooltip]=\"'Roll 1d8'\">\r\n                <app-diceIcons_D8></app-diceIcons_D8>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 8)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd8'\">\r\n                {{diceNum}}d8\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 10)\" [ngbTooltip]=\"'Roll 1d10'\">\r\n                <app-diceIcons_D10></app-diceIcons_D10>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 10)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd10'\">\r\n                {{diceNum}}d10\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 12)\" [ngbTooltip]=\"'Roll 1d12'\">\r\n                <app-diceIcons_D12></app-diceIcons_D12>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 12)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd12'\">\r\n                {{diceNum}}d12\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <button class=\"center-aligned\" (click)=\"roll(1, 20)\" [ngbTooltip]=\"'Roll 1d20'\">\r\n                <app-diceIcons_D20></app-diceIcons_D20>\r\n            </button>\r\n            <br>\r\n            <button class=\"center-aligned newrow\" style=\"margin-top:8px;\" (click)=\"roll(diceNum, 20)\"\r\n                [ngbTooltip]=\"'Roll ' + diceNum + 'd20'\">\r\n                {{diceNum}}d20\r\n            </button>\r\n        </div>\r\n        <div class=\"newrow\">\r\n            <strong style=\"flex-basis: 7.5em; flex-grow:0;\">Dice number</strong> <input class=\"slider\" type=\"range\"\r\n                min=\"1\" max=\"20\" [(ngModel)]=\"diceNum\">\r\n        </div>\r\n    </div>\r\n    <div [ngbCollapse]=\"cleared\">\r\n        <div class=\"list-item center-aligned\">\r\n            <header class=\"sectionHeader box-header dice-result\">{{get_DiceSum()}}</header>\r\n            <div class=\"newrow center-aligned\" *ngIf=\"diceResult.length > 1\">\r\n                <span>\r\n                    <span *ngFor=\"let result of diceResult; let index = index; trackBy:trackByIndex\">\r\n                        {{index != 0 ? \"+ \" : \"\"}}\r\n                        <span [ngbTooltip]=\"result.roll\">{{result.result}}</span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow center-aligned\" *ngIf=\"diceResult.length <= 1\">&nbsp;</div>\r\n            <div class=\"newrow center-aligned\">\r\n                <span>\r\n                    ({{get_DiceSummary()}})\r\n                </span>\r\n            </div>\r\n            <div class=\"newrow center-aligned\">\r\n                <button class=\"center-aligned\" (click)=\"clear()\">\r\n                    <header class=\"sectionHeader\">Clear</header>\r\n                </button>\r\n            </div>\r\n            <ng-container *ngFor=\"let creatureType of ['Character','Companion','Familiar']; trackBy:trackByIndex\">\r\n                <div class=\"newrow center-aligned\" *ngFor=\"let creature of get_Creature(creatureType); trackBy:trackByIndex\">\r\n                    <button class=\"center-aligned\" (click)=\"on_Heal(creature)\">\r\n                        Heal {{creature.name || creatureType}}\r\n                    </button>\r\n                    <button class=\"center-aligned\" (click)=\"on_TakeDamage(creature)\">\r\n                        Damage {{creature.name || creatureType}}\r\n                    </button>\r\n                    <button class=\"center-aligned\" (click)=\"set_TempHP(creature)\">\r\n                        Temp HP for {{creature.name || creatureType}}\r\n                    </button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CharacterService } from '../character.service';\r\nimport { Creature } from '../Creature';\r\n\r\n@Component({\r\n    selector: 'app-dice',\r\n    templateUrl: './dice.component.html',\r\n    styleUrls: ['./dice.component.css']\r\n})\r\nexport class DiceComponent implements OnInit {\r\n\r\n    public diceResult: { roll: string, result: number }[] = [];\r\n    public diceNum: number = 5;\r\n    public cleared: boolean = true;\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggleDiceMenu() {\r\n        this.characterService.toggle_Menu(\"dice\");\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    roll(amount: number, size: number) {\r\n        for (let index = 0; index < amount; index++) {\r\n            this.diceResult.push({ roll: \"d\" + size, result: Math.ceil(Math.random() * size) });\r\n        }\r\n        if (this.cleared) { this.cleared = false; }\r\n    }\r\n\r\n    get_DiceSummary() {\r\n        let summary: string[] = [];\r\n        [\"d4\", \"d6\", \"d8\", \"d10\", \"d12\", \"d20\"].forEach(die => {\r\n            let count = this.diceResult.filter(result => result.roll == die).length;\r\n            if (count) {\r\n                summary.push(count + die);\r\n            }\r\n        })\r\n        return summary.join(\", \");\r\n    }\r\n\r\n    get_Creature(creatureType: string) {\r\n        if (creatureType == \"Companion\") {\r\n            return this.characterService.get_CompanionAvailable() ? [this.characterService.get_Creature(creatureType)] : [];\r\n        }\r\n        if (creatureType == \"Familiar\") {\r\n            return this.characterService.get_FamiliarAvailable() ? [this.characterService.get_Creature(creatureType)] : [];\r\n        }\r\n        return [this.characterService.get_Creature(creatureType)];\r\n    }\r\n\r\n    on_Heal(creature: Creature) {\r\n        let amount = this.get_DiceSum();\r\n        let dying = creature.health.dying(creature, this.characterService);\r\n        creature.health.heal(creature, this.characterService, this.characterService.effectsService, amount, true, true, dying);\r\n        this.characterService.set_ToChange(creature.type, \"health\");\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TakeDamage(creature: Creature) {\r\n        let amount = this.get_DiceSum();\r\n        let wounded = creature.health.wounded(creature, this.characterService);\r\n        let dying = creature.health.dying(creature, this.characterService);\r\n        creature.health.takeDamage(creature, this.characterService, this.characterService.effectsService, amount, false, wounded, dying);\r\n        this.characterService.set_ToChange(creature.type, \"health\");\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_TempHP(creature: Creature) {\r\n        let amount = this.get_DiceSum();\r\n        creature.health.temporaryHP[0] = { amount: amount, source: \"Manual\", sourceId: \"\" };\r\n        creature.health.temporaryHP.length = 1;\r\n        this.characterService.set_ToChange(creature.type, \"health\");\r\n        this.characterService.set_ToChange(creature.type, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_DiceSum() {\r\n        return this.diceResult.reduce((a, b) => a + b.result, 0);\r\n    }\r\n\r\n    clear() {\r\n        this.cleared = true;\r\n        setTimeout(() => {\r\n            this.diceResult.length = 0;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Skill } from './Skill';\r\nimport * as json_skills from '../assets/json/skills';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SkillsService {\r\n    private skills: Skill[] = []; \r\n    private loading: boolean = true;\r\n    \r\n    constructor() { }\r\n\r\n    get_Skills(customSkills: Skill[], name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        if (!this.still_loading()) {\r\n            let skills: Skill[] = this.skills.concat(customSkills);\r\n            if (name == \"Lore\") {\r\n                return skills.filter(skill => \r\n                (\r\n                    skill.name.toLowerCase().includes(name.toLowerCase())\r\n                ) && (\r\n                    type ? skill.type.toLowerCase() == type.toLowerCase() : true\r\n                ) && (\r\n                    locked != undefined ? skill.locked == locked : true\r\n                ));\r\n            }\r\n            return skills.filter(skill => \r\n                (\r\n                    name ? skill.name.toLowerCase() == name.toLowerCase() : true\r\n                ) && (\r\n                    type ? skill.type.toLowerCase() == type.toLowerCase() : true\r\n                ) && (\r\n                    locked != undefined ? skill.locked == locked : true\r\n                ));\r\n        } else { return [new Skill()] }\r\n    }\r\n\r\n    get_SkillLevelName(level: number, short: boolean = false) {\r\n        if (short) {\r\n            return [\"U\", \"U\", \"T\", \"T\", \"E\", \"E\", \"M\", \"M\", \"L\"][level]\r\n        } else {\r\n            return [\"Untrained\", \"Untrained\", \"Trained\", \"Trained\", \"Expert\", \"Expert\", \"Master\", \"Master\", \"Legendary\"][level]\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.skills.length) {\r\n            this.loading = true;\r\n            this.load_Skills();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Skills() {\r\n        this.skills = [];\r\n        Object.keys(json_skills).forEach(key => {\r\n            this.skills.push(...json_skills[key].map(obj => Object.assign(new Skill(), obj)));\r\n        });\r\n    }\r\n    \r\n}","import core from './core.json';\r\nimport advanced_character_guide from './advanced_character_guide.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    advanced_character_guide,\r\n    custom_kitsune\r\n};","import { Level } from './Level';\r\nimport { Ancestry } from './Ancestry';\r\nimport { Heritage } from './Heritage';\r\nimport { Background } from './Background';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemsService } from './items.service';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { Skill } from './Skill';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { Equipment } from './Equipment';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SpellGain } from './SpellGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { SpellLearned } from './SpellLearned';\r\nimport { FormulaLearned } from './FormulaLearned';\r\nimport { LanguageGain } from './LanguageGain';\r\n\r\nexport class Class {\r\n    public readonly _className: string = this.constructor.name;\r\n    public activities: ActivityGain[] = [];\r\n    public ancestry: Ancestry = new Ancestry();\r\n    public anathema: string[] = [];\r\n    public animalCompanion: AnimalCompanion = new AnimalCompanion();\r\n    public background: Background = new Background();\r\n    public customSkills: Skill[] = [];\r\n    public deity: string = \"\";\r\n    public desc: {name:string, value:string}[] = [];\r\n    public familiar: Familiar = new Familiar();\r\n    public focusPoints: number = 0;\r\n    public focusPointsLast: number = 0;\r\n    public gainItems: ItemGain[] = [];\r\n    public heritage: Heritage = new Heritage();\r\n    public additionalHeritages: Heritage[] = [];\r\n    public hitPoints: number = 0;\r\n    public languages: LanguageGain[] = [];\r\n    public levels: Level[] = [];\r\n    public name: string = \"\";\r\n    public sourceBook: string = \"\";\r\n    public spellCasting: SpellCasting[] = [];\r\n    public spellBook: SpellLearned[] = [];\r\n    public spellList: SpellLearned[] = [];\r\n    public formulaBook: FormulaLearned[] = [];\r\n    on_ChangeClass(characterService: CharacterService) {\r\n        let character = characterService.get_Character();\r\n        //Of each granted Item, find the item with the stored id and drop it.\r\n        this.gainItems.forEach((freeItem: ItemGain) => {\r\n            if (freeItem.id) {\r\n                character.inventories.forEach(inv => {\r\n                    inv[freeItem.type].filter((item: Equipment) => item.id == freeItem.id).forEach(item => {\r\n                        characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                        freeItem.id = \"\";\r\n                    });\r\n                })\r\n            }\r\n        });\r\n        //Some feats get specially processed when taken.\r\n        //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n        this.levels.forEach(level => {\r\n            level.featChoices.filter(choice => choice.available).forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, false);\r\n                });\r\n            });\r\n        });\r\n        this.customSkills.forEach(skill => {\r\n            character.customSkills = character.customSkills.filter(customSkill => customSkill.name != skill.name);\r\n        });\r\n    }\r\n    on_NewClass(characterService: CharacterService, itemsService: ItemsService) {\r\n        if (this.name) {\r\n            let character = characterService.get_Character();\r\n            //Grant all items and save their id in the ItemGain.\r\n            this.gainItems.forEach((freeItem: ItemGain) => {\r\n                let item: Equipment = itemsService.get_Items()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                if (item) {\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            this.levels.forEach(level => {\r\n                level.featChoices.forEach(choice => {\r\n                    let count: number = 0;\r\n                    choice.feats.forEach(feat => {\r\n                        count++;\r\n                        character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                    });\r\n                    choice.feats.splice(0, count);\r\n                });\r\n            });\r\n            this.customSkills.forEach(skill => {\r\n                character.customSkills.push(Object.assign(new Skill(), skill));\r\n            });\r\n        }\r\n    }\r\n    on_ChangeAncestry(characterService: CharacterService) {\r\n        if (this.ancestry.name) {\r\n            let character = characterService.get_Character();\r\n            let level = this.levels[1];\r\n            this.languages = this.languages.filter(language => language.source != this.ancestry.name);\r\n            characterService.set_ToChange(\"Character\", \"general\");\r\n            level.abilityChoices = level.abilityChoices.filter(availableBoost => availableBoost.source != \"Ancestry\")\r\n            //Of each granted Item, find the item with the stored id and drop it.\r\n            this.ancestry.gainItems.forEach((freeItem: ItemGain) => {\r\n                if (freeItem.id) {\r\n                    character.inventories.forEach(inv => {\r\n                        inv[freeItem.type].filter((item: Equipment) => item.id == freeItem.id).forEach(item => {\r\n                            characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                            freeItem.id = \"\";\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n            this.ancestry.featChoices.filter(choice => choice.available).forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, false);\r\n                });\r\n            });\r\n            this.levels.forEach(level => {\r\n                //Remove all Adopted Ancestry feats\r\n                level.featChoices.filter(choice => choice.feats.filter(feat => feat.name.includes(\"Adopted Ancestry\")).forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, feat.locked)\r\n                }));\r\n            });\r\n        }\r\n    }\r\n    on_NewAncestry(characterService: CharacterService, itemsService: ItemsService) {\r\n        if (this.ancestry.name) {\r\n            let character = characterService.get_Character();\r\n            let level = this.levels[1];\r\n            this.languages.push(...this.ancestry.languages.map(language => Object.assign(new LanguageGain(), {name:language, locked:true, source:this.ancestry.name})));\r\n            characterService.set_ToChange(\"Character\", \"general\");\r\n            level.abilityChoices.push(...this.ancestry.abilityChoices);\r\n            level.featChoices.push(...this.ancestry.featChoices);\r\n            characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n            //Grant all items and save their id in the ItemGain.\r\n            this.ancestry.gainItems.forEach((freeItem: ItemGain) => {\r\n                let item: Equipment = itemsService.get_Items()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                if (item) {\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            level.featChoices.filter(choice => choice.source == \"Ancestry\").forEach(choice => {\r\n                let count: number = 0;\r\n                choice.feats.forEach(feat => {\r\n                    count++;\r\n                    character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                });\r\n                choice.feats.splice(0, count);\r\n            });\r\n        }\r\n    }\r\n    on_ChangeHeritage(characterService: CharacterService, index: number = -1) {\r\n        let heritage: Heritage = this.heritage;\r\n        if (index != -1) {\r\n            heritage = this.additionalHeritages[index];\r\n        }\r\n        if (heritage?.name) {\r\n            let level = this.levels[1];\r\n            let character = characterService.get_Character();\r\n            heritage.ancestries.forEach(ancestryListing => {\r\n                let a = this.ancestry.ancestries;\r\n                a.splice(a.indexOf(ancestryListing), 1);\r\n            })\r\n            heritage.traits.forEach(traitListing => {\r\n                this.ancestry.traits = this.ancestry.traits.filter(trait => trait != traitListing)\r\n                characterService.set_ToChange(\"Character\", \"general\");\r\n                characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n            })\r\n            //Of each granted Item, find the item with the stored id and drop it.\r\n            heritage.gainItems.forEach((freeItem: ItemGain) => {\r\n                if (freeItem.id) {\r\n                    character.inventories.forEach(inv => {\r\n                        inv[freeItem.type].filter((item: Equipment) => item.id == freeItem.id).forEach(item => {\r\n                            characterService.drop_InventoryItem(character, inv, item, false, true, true, freeItem.amount);\r\n                            freeItem.id = \"\";\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n            heritage.featChoices.filter(choice => choice.available).forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                    character.take_Feat(character, characterService, undefined, feat.name, false, choice, false);\r\n                });\r\n            });\r\n            level.featChoices = level.featChoices.filter(choice => choice.source != heritage.name);\r\n            level.skillChoices = level.skillChoices.filter(choice => choice.source != heritage.name);\r\n            //Also remove the 1st and 5th level skill increase from Skilled Heritage if you are removing Skilled Heritage\r\n            if (heritage.name == \"Skilled Heritage\") {\r\n                this.levels[5].skillChoices = this.levels[5].skillChoices.filter(choice => choice.source != heritage.name);\r\n            }\r\n            heritage.gainActivities.forEach((gainActivity: string) => {\r\n                let oldGain = character.class.activities.find(gain => gain.name == gainActivity && gain.source == heritage.name);\r\n                if (oldGain) {\r\n                    character.lose_Activity(characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, characterService.activitiesService, oldGain);\r\n                }\r\n            });\r\n            //Gain Spell or Spell Option\r\n            heritage.spellChoices.forEach(oldSpellChoice => {\r\n                character.remove_SpellChoice(characterService, oldSpellChoice);\r\n            });\r\n            //Undo all Wellspring Gnome changes, where we turned Primal spells into other traditions.\r\n            //We collect all Gnome feats that grant a primal spell, and for all of those spells that you own, set the spell tradition to Primal on the character:\r\n            if (heritage.name.includes(\"Wellspring Gnome\")) {\r\n                let feats: string[] = characterService.get_Feats(\"\", \"Gnome\")\r\n                    .filter(feat => \r\n                        feat.gainSpellChoice.filter(choice => \r\n                            choice.castingType == \"Innate\" &&\r\n                            choice.tradition == \"Primal\"\r\n                        ).length)\r\n                    .map(feat => feat.name);\r\n                this.spellCasting.find(casting => casting.castingType == \"Innate\")\r\n                    .spellChoices.filter(choice => feats.includes(choice.source.substr(6))).forEach(choice => {\r\n                    choice.tradition = \"Primal\";\r\n                    if (choice.available) {\r\n                        choice.spells.length = 0;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    on_NewHeritage(characterService: CharacterService, itemsService: ItemsService, index: number = -1) {\r\n        let heritage: Heritage = this.heritage;\r\n        if (index != -1) {\r\n            heritage = this.additionalHeritages[index];\r\n        }\r\n        if (heritage?.name) {\r\n            let character = characterService.get_Character();\r\n            let level = this.levels[1];\r\n            this.ancestry.traits.push(...heritage.traits)\r\n            this.ancestry.ancestries.push(...heritage.ancestries);\r\n            level.featChoices.push(...heritage.featChoices);\r\n            level.skillChoices.push(...heritage.skillChoices);\r\n            //Grant all items and save their id in the ItemGain.\r\n            heritage.gainItems.forEach((freeItem: ItemGain) => {\r\n                let item: Equipment = itemsService.get_CleanItems()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                if (item) {\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Character(), characterService.get_Character().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                }\r\n            });\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            level.featChoices.filter(choice => choice.source == heritage.name).forEach(choice => {\r\n                let count: number = 0;\r\n                choice.feats.forEach(feat => {\r\n                    count++;\r\n                    character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                });\r\n                choice.feats.splice(0, count);\r\n            });\r\n            //You may get a skill training from a heritage.\r\n            //If you have already trained this skill from another source:\r\n            //Check if it is a free training (not locked). If so, remove it and reimburse the skill point, then replace it with the heritage's.\r\n            //If it is locked, we better not replace it. Instead, you get a free Heritage skill increase.\r\n            if (heritage.skillChoices.length && heritage.skillChoices[0].increases.length) {\r\n                let existingIncreases = character.get_SkillIncreases(characterService, 1, 1, heritage.skillChoices[0].increases[0].name, '');\r\n                if (existingIncreases.length) {\r\n                    let existingIncrease = existingIncreases[0];\r\n                    let existingSkillChoice: SkillChoice = character.get_SkillChoice(existingIncrease.sourceId);\r\n                    if (existingSkillChoice !== heritage.skillChoices[0]) {\r\n                        if (!existingIncrease.locked) {\r\n                            character.increase_Skill(characterService, existingIncrease.name, false, existingSkillChoice, false);\r\n                        } else {\r\n                            heritage.skillChoices[0].increases.pop();\r\n                            heritage.skillChoices[0].available = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            heritage.gainActivities.forEach((gainActivity: string) => {\r\n                character.gain_Activity(characterService, Object.assign(new ActivityGain(), {name:gainActivity, source:heritage.name}), 1);\r\n            });\r\n            //Gain Spell or Spell Option\r\n            heritage.spellChoices.forEach(newSpellChoice => {\r\n                let insertSpellChoice = Object.assign(new SpellChoice(), JSON.parse(JSON.stringify(newSpellChoice)));\r\n                insertSpellChoice.spells.forEach((gain: SpellGain) => {\r\n                    gain.sourceId = insertSpellChoice.id;\r\n                    gain.source = insertSpellChoice.source;\r\n                    gain.frequency = insertSpellChoice.frequency;\r\n                    gain.cooldown = insertSpellChoice.cooldown;\r\n                })\r\n                character.add_SpellChoice(characterService, level.number, insertSpellChoice);\r\n            });\r\n            //Wellspring Gnome changes primal spells to another tradition.\r\n            //We collect all Gnome feats that grant a primal spell and set that spell to the same tradition as the heritage:\r\n            if (heritage.name.includes(\"Wellspring Gnome\")) {\r\n                let feats: string[] = characterService.get_Feats(\"\", \"Gnome\")\r\n                    .filter(feat => feat.gainSpellChoice.some(choice => choice.castingType == \"Innate\" && choice.tradition == \"Primal\")).map(feat => feat.name);\r\n                this.spellCasting.find(casting => casting.castingType == \"Innate\")\r\n                    .spellChoices.filter(choice => feats.includes(choice.source.substr(6))).forEach(choice => {\r\n                    choice.tradition = heritage.subType;\r\n                    if (choice.available) {\r\n                        choice.spells.length = 0;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    on_ChangeBackground(characterService: CharacterService) {\r\n        if (this.background.name) {\r\n            let level = this.levels[1];\r\n            let character = characterService.get_Character();\r\n            level.skillChoices = level.skillChoices.filter(choice => choice.source != \"Background\");\r\n            level.abilityChoices = level.abilityChoices.filter(availableBoost => availableBoost.source != \"Background\");\r\n            //Some feats get specially processed when taken.\r\n            //We can't just delete these feats, but must specifically un-take them to undo their effects.\r\n            level.featChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                choice.feats.forEach(feat => {\r\n                character.take_Feat(character, characterService, undefined, feat.name, false, choice, feat.locked);\r\n                });\r\n            });\r\n            level.featChoices = level.featChoices.filter(availableBoost => availableBoost.source != \"Background\");\r\n            //Remove all Lores\r\n            let oldChoices: LoreChoice[] = level.loreChoices.filter(choice => choice.source == \"Background\");\r\n            let oldChoice = oldChoices[oldChoices.length - 1];\r\n            if (oldChoice.increases.length) {\r\n                character.remove_Lore(characterService, oldChoice);\r\n            }\r\n            level.loreChoices = level.loreChoices.filter(choice => choice.source != \"Background\");\r\n            //Process skill choices in case any custom skills need to be removed.\r\n            this.background.skillChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                choice.increases.forEach(increase => {\r\n                    character.process_Skill(characterService, increase.name, false, choice, true)\r\n                })\r\n            });\r\n            \r\n        }\r\n    }\r\n    on_NewBackground(characterService: CharacterService) {\r\n        if (this.background.name) {\r\n            let level = this.levels[1];\r\n            let character = characterService.get_Character();\r\n            level.abilityChoices.push(...this.background.abilityChoices);\r\n            level.skillChoices.push(...this.background.skillChoices);\r\n            level.featChoices.push(...this.background.featChoices);\r\n            level.loreChoices.push(...this.background.loreChoices);\r\n            //Some feats get specially processed when taken.\r\n            //We have to explicitly take these feats to process them.\r\n            //So we remove them and then \"take\" them again.\r\n            level.featChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                let count: number = 0;\r\n                choice.feats.forEach(feat => {\r\n                    count++;\r\n                    character.take_Feat(character, characterService, undefined, feat.name, true, choice, feat.locked);\r\n                });\r\n                choice.feats.splice(0, count);\r\n            });\r\n            //Process the new skill choices in case any new skill needs to be created.\r\n            level.skillChoices.filter(choice => choice.source == \"Background\").forEach(choice => {\r\n                choice.increases.forEach(increase => {\r\n                    character.process_Skill(characterService, increase.name, true, choice, true)\r\n                })\r\n            });\r\n            if (this.background.loreChoices[0].loreName) {\r\n                if (characterService.get_Skills(character, 'Lore: '+this.background.loreChoices[0].loreName).length) {\r\n                    let increases = character.get_SkillIncreases(characterService, 1, 20, 'Lore: '+this.background.loreChoices[0].loreName).filter(increase => \r\n                        increase.sourceId.includes(\"-Lore-\")\r\n                        );\r\n                    if (increases.length) {\r\n                        let oldChoice = character.get_LoreChoice(increases[0].sourceId)\r\n                        if (oldChoice.available == 1) {\r\n                            character.remove_Lore(characterService, oldChoice);\r\n                        }\r\n                    }\r\n                }\r\n                character.add_Lore(characterService, this.background.loreChoices[0])\r\n            }\r\n            if (this.background.skillChoices[0].increases.length) {\r\n                let existingIncreases = character.get_SkillIncreases(characterService, 1, 1, this.background.skillChoices[0].increases[0].name, '');\r\n                if (existingIncreases.length) {\r\n                    let existingIncrease = existingIncreases[0];\r\n                    let existingSkillChoice: SkillChoice = character.get_SkillChoice(existingIncrease.sourceId);\r\n                    //If you have already trained this skill from another source:\r\n                    //Check if it is a free training (not locked). If so, remove it and reimburse the skill point, then replace it with the background's.\r\n                    //If it is locked, we better not replace it. Instead, you get a free Background skill increase.\r\n                    if (existingSkillChoice !== this.background.skillChoices[0]) {\r\n                        if (!existingIncrease.locked) {\r\n                            character.increase_Skill(characterService, existingIncrease.name, false, existingSkillChoice, false);\r\n                        } else {\r\n                            this.background.skillChoices[0].increases.pop();\r\n                            this.background.skillChoices[0].available = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Trait } from './Trait';\r\nimport { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport * as json_traits from '../assets/json/traits';\r\nimport { Creature } from './Creature';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TraitsService {\r\n\r\n    private traits: Trait[] = [];\r\n    private loading: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            //Some trait instances have information after the trait name, so we allow traits that are included in the name as long as they have the dynamic attribute.\r\n            let traits = this.traits\r\n                .filter(trait =>\r\n                    traitName == \"\" ||\r\n                    trait.name == traitName ||\r\n                    (\r\n                        traitName.includes(trait.name) &&\r\n                        trait.dynamic\r\n                    )\r\n                )\r\n            if (traits.length) {\r\n                return traits;\r\n            } else {\r\n                console.error(\"Trait missing: \" + traitName)\r\n                return [Object.assign(new Trait(), {name: (\"Trait missing: \" + traitName), desc: \"This trait does not exist in the database.\"})]\r\n            }\r\n        } else {\r\n            return [new Trait()];\r\n        }\r\n    }\r\n\r\n    get_TraitsForThis(creature: Creature, name: string) {\r\n        if (!this.still_loading()) {\r\n            //Return all traits that are set to SHOW ON this named object and that are on any equipped equipment in your inventory\r\n            //uses the haveOn() method of Trait that returns any equipment that has this trait\r\n            let traits = this.traits;\r\n            return traits.filter(trait =>\r\n                trait.hints.find(hint => hint.showon.toLowerCase().includes(name.toLowerCase()))\r\n                && trait.haveOn(creature).length > 0\r\n            )\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    have_Trait(characterService: CharacterService, object: any, traitName: string) {\r\n        //Find out if this object - could be anything - has this trait. Sounds easy enough, but some items get traits added by certain circumstances, so here we are.\r\n        //Traits can have additional information, so we compare only the first word - but if the given traitName includes spaces, we compare the entire string.\r\n        return (object.get_Traits ? object.get_Traits(characterService, characterService.get_Character()) : object.traits)\r\n            .some((trait: string) =>\r\n                (\r\n                    traitName.includes(\" \") &&\r\n                    traitName == trait\r\n                ) || \r\n                (\r\n                    !traitName.includes(\" \") &&\r\n                    trait.split(\" \")[0].toLowerCase() == traitName.toLowerCase()\r\n                )\r\n            )\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.traits.length) {\r\n            this.loading = true;\r\n            this.load_Traits();\r\n            this.loading = false;\r\n        } else {\r\n            this.traits.forEach(trait => {\r\n                trait.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Traits() {\r\n        this.traits = [];\r\n        Object.keys(json_traits).forEach(key => {\r\n            this.traits.push(...json_traits[key].map(obj => Object.assign(new Trait(), obj)));\r\n        });\r\n    }\r\n\r\n}","export class Savegame {\r\n    public readonly _className: string = this.constructor.name;\r\n    name: string;\r\n    id: string;\r\n    dbId: string;\r\n    class: string;\r\n    classChoice: string;\r\n    heritage: string;\r\n    ancestry: string;\r\n    level: number;\r\n    partyName: string;\r\n}","import { EffectGain } from './EffectGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { SpellCast } from './SpellCast';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Hint } from './Hint';\r\nimport { CharacterService } from './character.service';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Activity {\r\n    public actions: string = \"1A\";\r\n    public activationType: string = \"\";\r\n    public castSpells: SpellCast[] = [];\r\n    public cooldown: number = 0;\r\n    //For Conditions that are toggled, if cooldownAfterEnd is set, the cooldown starts only after the active duration is finished.\r\n    // This is relevant for activities that cannot be used for X time after finishing.\r\n    // All others start ticking down their cooldown as soon as they start.\r\n    public cooldownAfterEnd: boolean = false;\r\n    public cost: string = \"\";\r\n    public maxDuration: number = 0;\r\n    public sustained: boolean = false;\r\n    //How often can you activate the activity? 0 is one activation per cooldown, or infinite activations if no cooldown is given. Use maxCharges() to read.\r\n    private charges: number = 0;\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public desc: string = \"\";\r\n    public effects: EffectGain[] = [];\r\n    public failure: string = \"\";\r\n    public frequency: string = \"\";\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public hints: Hint[] = [];\r\n    public inputRequired: string = \"\";\r\n    public name: string = \"\";\r\n    public onceEffects: EffectGain[] = [];\r\n    public requirements: string = \"\";\r\n    public showActivities: string[] = [];\r\n    public showSpells: string[] = [];\r\n    public specialdesc: string = \"\";\r\n    public success: string = \"\";\r\n    public toggle: boolean = false;\r\n    public traits: string[] = [];\r\n    public trigger: string = \"\";\r\n    //$cooldown is a calculated cooldown that it set by get_Cooldown() so that it can be used by can_Activate() without passing parameters.\r\n    public $cooldown: number = 0;\r\n    //Set displayOnly if the activity should not be used, but displayed for information, e.g. for ammunition\r\n    public displayOnly: boolean = false;\r\n    //If a gained condition has choices, these are shown on the activity. You can hide them with hideChoice.\r\n    public hideChoices: boolean = false;\r\n    can_Activate() {\r\n        //Test any circumstance under which this can be activated\r\n        let isStance: boolean = (this.traits.includes(\"Stance\"))\r\n        return isStance || this.gainItems.length || this.castSpells.length || this.gainConditions.length || this.cooldown || this.$cooldown || this.toggle || this.effects.length || this.onceEffects.length;\r\n    }\r\n    maxCharges(creature: Creature, characterService: CharacterService) {\r\n        //Add any effects to the number of charges you have. If you have none, start with 1, and if the result then remains 1, return 0.\r\n        let charges = this.charges;\r\n        let startWithZero: boolean = false;\r\n        if (charges == 0) {\r\n            startWithZero = true;\r\n            charges = 1;\r\n        }\r\n        characterService.effectsService.get_AbsolutesOnThis(creature, this.name + \" Charges\")\r\n            .forEach(effect => {\r\n                charges = parseInt(effect.setValue);\r\n            })\r\n        characterService.effectsService.get_RelativesOnThis(creature, this.name + \" Charges\")\r\n            .forEach(effect => {\r\n                charges += parseInt(effect.value);\r\n            })\r\n        if (startWithZero && charges == 1) {\r\n            return 0;\r\n        } else {\r\n            return charges;\r\n        }\r\n    }\r\n    get_Cooldown(creature: Creature, characterService: CharacterService) {\r\n        //Add any effects to the activity's cooldown.\r\n        let cooldown = this.cooldown;\r\n        //Use get_AbsolutesOnThese() because it allows to prefer lower values. We still sort the effects in descending setValue.\r\n        characterService.effectsService.get_AbsolutesOnThese(creature, [this.name + \" Cooldown\"], true)\r\n            .sort((a, b) => parseInt(b.setValue) - parseInt(a.setValue))\r\n            .forEach(effect => {\r\n                cooldown = parseInt(effect.setValue);\r\n            })\r\n        //Use get_RelativesOnThese() because it allows to prefer lower values. We still sort the effects in descending value.\r\n        characterService.effectsService.get_RelativesOnThese(creature, [this.name + \" Cooldown\"], true)\r\n            .sort((a, b) => parseInt(b.value) - parseInt(a.value))\r\n            .forEach(effect => {\r\n                cooldown += parseInt(effect.value);\r\n            })\r\n        //If the cooldown has changed from the original, update all activity gains that refer to this condition to lower their cooldown if necessary.\r\n        this.$cooldown = cooldown;\r\n        if (this.cooldown != cooldown) {\r\n            characterService.get_OwnedActivities(creature, 20, true).filter(gain => gain.name == this.name).forEach(gain => {\r\n                gain.activeCooldown = Math.min(gain.activeCooldown, cooldown);\r\n            })\r\n        }\r\n        return cooldown;\r\n    }\r\n}","import { Equipment } from './Equipment';\r\n\r\nexport class HeldItem extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Worn Items cannot be equipped or unequipped\r\n    readonly equippable = false;\r\n    //Held Items should be type \"helditems\" to be found in the database\r\n    readonly type = \"helditems\";\r\n    //How is this item held when used? Example: \"held in one hand\"\r\n    public usage: string = \"\";\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Spell } from './Spell';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemsService } from './items.service';\r\nimport { SpellGain } from './SpellGain';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Item } from './Item';\r\nimport { ItemGain } from './ItemGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Character } from './Character';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { ConditionsService } from './conditions.service';\r\nimport * as json_spells from '../assets/json/spells';\r\nimport { Creature } from './Creature';\r\nimport { SpellChoice } from './SpellChoice';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SpellsService {\r\n\r\n    private spells: Spell[] = [];\r\n    private loading: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.spells.filter(spell =>\r\n                (spell.name.toLowerCase() == (name.toLowerCase()) || name == \"\") &&\r\n                (spell.traits.includes(type) || type == \"\") &&\r\n                (spell.traditions.includes(tradition) || tradition == \"\")\r\n            );\r\n        } else {\r\n            return [new Spell()];\r\n        }\r\n    }\r\n\r\n    get_DynamicSpellLevel(casting: SpellCasting, choice: SpellChoice, characterService: CharacterService) {\r\n        //highestSpellLevel is used in the eval() process.\r\n        let highestSpellLevel = 1;\r\n        let Character = characterService.get_Character();\r\n        function Skill_Level(name: string) {\r\n            return characterService.get_Skills(Character, name)[0]?.level(Character, characterService);\r\n        }\r\n        //Get the available spell level of this casting. This is the highest spell level of the spell choices that are available at your character level (and don't have a dynamic level).\r\n        highestSpellLevel = Math.max(...casting.spellChoices.filter(spellChoice => spellChoice.charLevelAvailable <= Character.level).map(spellChoice => spellChoice.level));\r\n        try {\r\n            return parseInt(eval(choice.dynamicLevel));\r\n        } catch (e) {\r\n            console.log(\"Error parsing spell level requirement (\" + choice.dynamicLevel + \"): \" + e)\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    process_Spell(creature: Creature, target: string = \"\", characterService: CharacterService, itemsService: ItemsService, conditionsService: ConditionsService, casting: SpellCasting, gain: SpellGain, spell: Spell, level: number, activated: boolean, manual: boolean = false, changeAfter: boolean = true) {\r\n\r\n        //Cantrips and Focus spells are automatically heightened to your maximum available spell level.\r\n        //If a spell is cast with a lower level than its minimum, the level is raised to the minimum.\r\n        let spellLevel: number = spell.get_EffectiveSpellLevel(creature, level, characterService, characterService.effectsService);\r\n\r\n        //If this spell was cast by an activity, it may have a specified duration. Keep that here before the duration is changed to keep the spell active (or not).\r\n        let customDuration: number = 0;\r\n        if (activated && gain.duration) {\r\n            customDuration = gain.duration;\r\n        }\r\n\r\n        if (activated) {\r\n            //Start cooldown\r\n            if (gain.cooldown && !gain.activeCooldown) {\r\n                gain.activeCooldown = gain.cooldown;\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n        }\r\n\r\n        if (activated && spell.sustained) {\r\n            gain.active = true;\r\n            if (spell.sustained) {\r\n                gain.duration = customDuration || spell.sustained;\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n            gain.target = target;\r\n        } else {\r\n            gain.active = false;\r\n            gain.duration = 0;\r\n            gain.target = \"\";\r\n        }\r\n\r\n        //Find out if target was given. If no target is set, most effects will not be applied.\r\n        let targetCreature: Creature | null = null;\r\n        switch (target) {\r\n            case \"Character\":\r\n                targetCreature = characterService.get_Character();\r\n                break;\r\n            case \"Companion\":\r\n                targetCreature = characterService.get_Companion();\r\n                break;\r\n            case \"Familiar\":\r\n                targetCreature = characterService.get_Familiar();\r\n                break;\r\n        }\r\n\r\n        //Apply conditions.\r\n        //Remove conditions only if the spell was deactivated manually, i.e. if you want the condition to end.\r\n        //If the spell ends by the time running out, the condition will also have a timer and run out by itself.\r\n        //This allows us to manually change the duration for a condition and keep it running when the spell runs out\r\n        //  (because it's much more difficult to change the spell duration -and- the condition duration).\r\n        if (spell.get_HeightenedConditions(spellLevel)) {\r\n            if (activated) {\r\n                let choicesIndex = 0;\r\n                spell.get_HeightenedConditions(spellLevel).forEach(conditionGain => {\r\n                    let newConditionGain = Object.assign(new ConditionGain(), conditionGain);\r\n                    let condition = conditionsService.get_Conditions(conditionGain.name)[0]\r\n                    //If this condition has choices, and the gain has choices prepared, apply the choice from the gain.\r\n                    // The order of gain.choices maps directly onto the order of the spell conditions that have choices.\r\n                    if (gain.choices.length >= choicesIndex - 1) {\r\n                        if (condition?.get_Choices(characterService, true, spellLevel).length && condition.$choices.includes(gain.choices[choicesIndex])) {\r\n                            newConditionGain.choice = gain.choices[choicesIndex];\r\n                            choicesIndex++;\r\n                        }\r\n                    }\r\n                    //If there is a choiceBySubType value, and you have a feat with superType == choiceBySubType, set the choice to that feat's subType as long as it's a valid choice for the condition. This overrides any manual choice.\r\n                    if (newConditionGain.choiceBySubType) {\r\n                        let subType = (characterService.get_FeatsAndFeatures(newConditionGain.choiceBySubType, \"\", true, true).find(feat => feat.superType == newConditionGain.choiceBySubType && feat.have(creature, characterService, creature.level, false)));\r\n                        if (subType && condition.choices.map(choice => choice.name).includes(subType.subType)) {\r\n                            newConditionGain.choice = subType.subType;\r\n                        }\r\n                    }\r\n                    //Pass the spell level in case that condition effects change with level\r\n                    newConditionGain.heightened = spellLevel;\r\n                    //Pass the spellcasting ability in case the condition needs to use the modifier\r\n                    if (casting) {\r\n                        newConditionGain.spellCastingAbility = casting.ability;\r\n                    }\r\n                    newConditionGain.spellSource = gain?.source || \"\";\r\n                    newConditionGain.spellGainID = gain?.id || \"\";\r\n                    //If this spell was cast by an activity, it may have a specified duration. Apply that here.\r\n                    if (customDuration) {\r\n                        newConditionGain.duration = customDuration;\r\n                    }\r\n                    let conditionTarget = targetCreature;\r\n                    if (conditionGain.targetFilter == \"caster\") {\r\n                        conditionTarget = creature;\r\n                    }\r\n                    //Form Control changes the duration of the Wild Shape spell and the condition in various ways.\r\n                    if (spell.name == \"Wild Shape\") {\r\n                        //If Form Control is activated,\r\n                        // 1. The duration is permanent if you have Perfect Form Control\r\n                        // 2. Otherwise, the duration is 1 hour\r\n                        if (conditionsService.get_AppliedConditions(creature, characterService, creature.conditions, true).some(gain => gain.name == \"Form Control\")) {\r\n                            if (creature.type == \"Character\" && (creature as Character).get_FeatsTaken(1, creature.level, \"Perfect Form Control\").length) {\r\n                                gain.duration = -1;\r\n                                newConditionGain.duration = gain.duration;\r\n                            } else {\r\n                                gain.duration = 6000;\r\n                                newConditionGain.duration = gain.duration;\r\n                            }\r\n                        //Without Form Control, Pest Form is 10 minutes, and every other form remains at 1 minute.\r\n                        } else {\r\n                            if (newConditionGain.choice == \"Pest Form\") {\r\n                                gain.duration = 1000;\r\n                                newConditionGain.duration = gain.duration;\r\n                            }\r\n                        }\r\n                        //If you have Insect Shape and use wild shape to polymorph into the non-flying insect form listed in pest form, the duration is 24 hours instead of 10 minutes.\r\n                        if (gain.duration != -1 && creature.type == \"Character\" && (creature as Character).get_FeatsTaken(1, creature.level, \"Insect Shape\").length) {\r\n                            if (newConditionGain.choice == \"Pest Form (non-flying insect)\") {\r\n                                gain.duration = 144000;\r\n                                newConditionGain.duration = gain.duration;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (conditionTarget) {\r\n                        characterService.add_Condition(conditionTarget, newConditionGain, false);\r\n                    }\r\n                });\r\n            } else if (manual) {\r\n                spell.get_HeightenedConditions(spellLevel).forEach(conditionGain => {\r\n                    let conditionTarget = targetCreature;\r\n                    if (conditionGain.targetFilter == \"caster\") {\r\n                        conditionTarget = creature;\r\n                    }\r\n                    if (conditionTarget) {\r\n                        characterService.get_AppliedConditions(conditionTarget, conditionGain.name)\r\n                            .filter(existingConditionGain => existingConditionGain.source == conditionGain.source)\r\n                            .forEach(existingConditionGain => {\r\n                                characterService.remove_Condition(conditionTarget, existingConditionGain, false);\r\n                            });\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        if (changeAfter) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    rest(character: Character, characterService: CharacterService) {\r\n        //Get all owned spell gains that have a cooldown active.\r\n        //If its cooldown is exactly one day or until rest (-2), the spell gain's cooldown is reset.\r\n        character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.activeCooldown).forEach(taken => {\r\n            if ([-2, 144000].includes(taken.gain.cooldown)) {\r\n                taken.gain.activeCooldown = 0;\r\n            }\r\n        });\r\n        character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\").forEach(casting => {\r\n            casting.spellChoices.forEach(choice => {\r\n                choice.spells.forEach(gain => {\r\n                    gain.prepared = true;\r\n                });\r\n            });\r\n        });\r\n        character.class.spellCasting.filter(casting => casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\").forEach(casting => {\r\n            casting.spellChoices.filter(choice => choice.source == \"Feat: Occult Evolution\").forEach(choice => {\r\n                choice.spells.length = 0;\r\n                characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n            })\r\n        })\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n\r\n    refocus(character: Character, characterService: CharacterService) {\r\n        //Get all owned spell gains that have a cooldown active.\r\n        //If its cooldown is until refocus (-3), the spell gain's cooldown is reset.\r\n        character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.activeCooldown).forEach(taken => {\r\n            if (taken.gain.cooldown == -3) {\r\n                taken.gain.activeCooldown = 0;\r\n            }\r\n        });\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n\r\n    tick_Spells(character: Character, characterService: CharacterService, itemsService: ItemsService, conditionsService: ConditionsService, turns: number = 10) {\r\n        character.get_SpellsTaken(characterService, 0, 20).filter(taken => taken.gain.activeCooldown || taken.gain.duration).forEach(taken => {\r\n            //Tick down the duration and the cooldown.\r\n            if (taken.gain.duration > 0) {\r\n                taken.gain.duration = Math.max(taken.gain.duration - turns, 0)\r\n                if (taken.gain.duration == 0) {\r\n                    let spell: Spell = this.get_Spells(taken.gain.name)[0];\r\n                    if (spell) {\r\n                        this.process_Spell(character, taken.gain.target, characterService, itemsService, conditionsService, null, taken.gain, spell, 0, false, false)\r\n                    }\r\n                }\r\n            }\r\n            characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            if (taken.gain.activeCooldown) {\r\n                taken.gain.activeCooldown = Math.max(taken.gain.activeCooldown - turns, 0)\r\n            }\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.spells.length) {\r\n            this.loading = true;\r\n            this.load_Spells();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Spells() {\r\n        this.spells = [];\r\n        Object.keys(json_spells).forEach(key => {\r\n            this.spells.push(...json_spells[key].map(obj => Object.assign(new Spell(), obj)));\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { Shield } from 'src/app/Shield';\r\nimport { WeaponMaterial } from 'src/app/WeaponMaterial';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { Material } from 'src/app/Material';\r\n\r\n@Component({\r\n    selector: 'app-itemMaterial',\r\n    templateUrl: './itemMaterial.component.html',\r\n    styleUrls: ['./itemMaterial.component.css']\r\n})\r\nexport class ItemMaterialComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Weapon | Armor | Shield;\r\n    @Input()\r\n    craftingStation: boolean = false;\r\n    @Input()\r\n    customItemStore: boolean = false;\r\n\r\n    public newWeaponMaterial: { material: Material, disabled?: boolean }[];\r\n    public inventories: string[] = [];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_InitialWeaponMaterials() {\r\n        let weapon = this.item as Weapon;\r\n        //Start with one empty rune to select nothing.\r\n        let allWeaponMaterials: { material: WeaponMaterial, disabled?: boolean }[] = [{ material: new WeaponMaterial() }];\r\n        allWeaponMaterials[0].material.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (weapon.material[0]) {\r\n            allWeaponMaterials.push(this.newWeaponMaterial[0] as { material: WeaponMaterial });\r\n        }\r\n        return allWeaponMaterials;\r\n    }\r\n\r\n    get_WeaponMaterials() {\r\n        let weapon: Weapon = this.item as Weapon;\r\n        let allWeaponMaterials: { material: WeaponMaterial, disabled?: boolean }[] = [];\r\n        this.itemsService.get_WeaponMaterials().forEach(material => {\r\n            allWeaponMaterials.push({ material: material });\r\n        })\r\n        //Set all materials to disabled that have the same name as any that is already equipped.\r\n        allWeaponMaterials.forEach((material: { material: WeaponMaterial, disabled?: boolean }) => {\r\n            if (weapon.material[0] && weapon.material[0].name == material.material.name) {\r\n                material.disabled = true;\r\n            }\r\n        });\r\n        let charLevel = 0;\r\n        let crafting = 0;\r\n        if (this.craftingStation) {\r\n            let character = this.get_Character();\r\n            charLevel = character.level;\r\n            crafting = this.characterService.get_Skills(character, \"Crafting\")[0]?.level(character, this.characterService, character.level) || 0;\r\n        }\r\n        //Disable all materials whose requirements are not met.\r\n        allWeaponMaterials.forEach(material => {\r\n            if (\r\n                (\r\n                    //If you are crafting this item yourself, you must fulfill the crafting skill requirement.\r\n                    !this.craftingStation ||\r\n                    material.material.craftingRequirement <= crafting && material.material.level <= charLevel\r\n                ) &&\r\n                (\r\n                    //You can't change to a material that doesn't support the currently equipped runes.\r\n                    material.material.runeLimit ?\r\n                        (\r\n                            !this.item.propertyRunes.find(rune => rune.level > material.material.runeLimit) &&\r\n                            (this.item.potencyRune == 1 ? material.material.runeLimit >= 2 : true) &&\r\n                            (this.item.potencyRune == 2 ? material.material.runeLimit >= 10 : true) &&\r\n                            (this.item.potencyRune == 3 ? material.material.runeLimit >= 16 : true) &&\r\n                            (this.item.strikingRune == 1 ? material.material.runeLimit >= 4 : true) &&\r\n                            (this.item.strikingRune == 2 ? material.material.runeLimit >= 12 : true) &&\r\n                            (this.item.strikingRune == 3 ? material.material.runeLimit >= 19 : true)\r\n                        )\r\n                        : true\r\n                )\r\n            ) {\r\n                material.disabled = false;\r\n            } else {\r\n                material.disabled = true;\r\n            }\r\n        });\r\n        return allWeaponMaterials.sort(function (a, b) {\r\n            if (a.material.name > b.material.name) {\r\n                return 1;\r\n            }\r\n            if (a.material.name < b.material.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.material.level - b.material.level);\r\n    }\r\n\r\n    add_WeaponMaterial() {\r\n        let weapon = this.item as Weapon;\r\n        let material = this.newWeaponMaterial[0].material;\r\n        if (!weapon.material[0] || material !== weapon.material[0]) {\r\n            //If there is a material in this slot, remove the old material from the item.\r\n            if (weapon.material[0]) {\r\n                weapon.material.shift();\r\n            }\r\n            //Then add the new material to the item.\r\n            if (material.name != \"\") {\r\n                //Add a copy of the material to the item\r\n                weapon.material.push(Object.assign(new WeaponMaterial, JSON.parse(JSON.stringify(material))));\r\n            }\r\n        }\r\n        this.set_MaterialNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Title(material: Material) {\r\n        if (!this.craftingStation && material.price) {\r\n            return \"Price \" + this.get_Price(material.price) + (material.bulkPrice ? \" (+\" + this.get_Price(material.bulkPrice) + \" per Bulk)\" : \"\");\r\n        }\r\n        if (this.craftingStation && material.craftingRequirement) {\r\n            switch (material.craftingRequirement) {\r\n                case 4:\r\n                    return \"Requires Crafting E and Level \" + material.level;\r\n                case 6:\r\n                    return \"Requires Crafting M and Level \" + material.level;\r\n                case 8:\r\n                    return \"Requires Crafting L and Level \" + material.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    get_Price(price: number) {\r\n        if (price == 0) {\r\n            return \"\";\r\n        } else {\r\n            let priceString: string = \"\";\r\n            if (price >= 100) {\r\n                priceString += Math.floor(price / 100)+\"gp\";\r\n                price %= 100;\r\n                if (price >= 10) {priceString += \" \";}\r\n            }\r\n            if (price >= 10) {\r\n                priceString += Math.floor(price / 10)+\"sp\";\r\n                price %= 10;\r\n                if (price >= 1) {priceString += \" \";}\r\n            }\r\n            if (price >= 1) {\r\n                priceString += price+\"cp\";\r\n            }\r\n            return priceString;\r\n        }\r\n    }\r\n\r\n    set_MaterialNames() {\r\n        if (this.item.constructor == Weapon) {\r\n            let weapon = this.item as Weapon;\r\n            this.newWeaponMaterial =\r\n                (weapon.material ? [\r\n                    (weapon.material[0] ? { material: weapon.material[0] } : { material: new WeaponMaterial() })\r\n                ] : [{ material: new WeaponMaterial() }])\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_MaterialNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Weapon Material-->\r\n<div class=\"list-item\" *ngIf=\"['weapon', 'armor'].includes(item.moddable) || customItemStore\">\r\n    <ng-container *ngIf=\"item.material && ((item.moddable=='weapon' && item.constructor.name == 'Weapon') || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon'))\">\r\n        <div class=\"newrow\">\r\n            <strong>Material</strong>\r\n            <select [(ngModel)]=\"newWeaponMaterial[0]\" (ngModelChange)=\"add_WeaponMaterial()\">\r\n                <ng-container *ngFor=\"let material of get_InitialWeaponMaterials(); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                    <option [ngValue]=\"material\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.material[0]>\r\n                        \r\n                    </option>\r\n                    <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current material\">\r\n                        <option [ngValue]=\"material\">\r\n                            {{material.material.name}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n                <optgroup label=\"Available materials\" *ngIf=\"get_WeaponMaterials().length\">\r\n                    <option *ngFor=\"let material of get_WeaponMaterials(); trackBy:trackByIndex;\" [ngValue]=\"material\" [disabled]=\"material.disabled\"\r\n                    title=\"{{get_Title(material.material)}}\">\r\n                        {{material.material.name}}\r\n                    </option>\r\n                </optgroup>\r\n            </select>\r\n        </div>\r\n        <ng-container *ngIf=\"craftingStation\">\r\n            <ng-container *ngFor=\"let material of item.material\">\r\n                <div class=\"newrow\" *ngIf=\"material.craftRequirement\">\r\n                    <span>\r\n                        <strong>Craft Requirement&nbsp;</strong>\r\n                        <span>{{material.craftRequirement}}</span>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Consumable } from './Consumable';\r\n\r\nexport class Ammunition extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Ammunition should be type \"ammunition\" to be found in the database\r\n    readonly type = \"ammunition\";\r\n    actions = \"\";\r\n    activationType = \"\";\r\n    //The ammunition group, in order to identify suitable weapons. Same as the weapon type: Arrows, Blowgun Darts, Bolts, Sling Bullets or Any\r\n    public ammunition: string = \"\";\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName\r\n        } else if (this.storedSpells[0]?.spells?.length) {\r\n            return this.name+\" of \"+this.storedSpells[0].spells[0].name;\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D20',\r\n  templateUrl: './D20.svg',\r\n  styleUrls: ['./diceIcons_D20.component.css']\r\n})\r\nexport class DiceIcons_D20Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D20\"\r\n        d=\"M 5.00,17.00\r\n           C 5.00,17.00 32.00,1.00 32.00,1.00\r\n             32.00,1.00 59.00,17.00 59.00,17.00\r\n             59.00,17.00 59.00,47.00 59.00,47.00\r\n             59.00,47.00 32.00,63.00 32.00,63.00\r\n             32.00,63.00 5.00,47.00 5.00,47.00\r\n             5.00,47.00 5.00,17.00 5.00,17.00 Z\r\n           M 32.00,14.00\r\n           C 32.00,14.00 48.00,42.00 48.00,42.00\r\n             48.00,42.00 16.00,42.00 16.00,42.00\r\n             16.00,42.00 32.00,14.00 32.00,14.00 Z\r\n           M 48.00,42.00\r\n           C 48.00,42.00 32.00,63.00 32.00,63.00\r\n             32.00,63.00 16.00,42.00 16.00,42.00\r\n             16.00,42.00 5.00,17.00 5.00,17.00\r\n             5.00,17.00 32.00,14.00 32.00,14.00\r\n             32.00,14.00 59.00,17.00 59.00,17.00\r\n             59.00,17.00 48.00,42.00 48.00,42.00 Z\r\n           M 48.00,42.00\r\n           C 48.00,42.00 59.00,47.00 59.00,47.00M 16.00,42.00\r\n           C 16.00,42.00 5.00,47.00 5.00,47.00M 32.00,14.00\r\n           C 32.00,14.00 32.00,1.00 32.00,1.00\" />\r\n   </g>\r\n</svg>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AbilitiesComponent } from './abilities/abilities.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { SkillsComponent } from './skills/skills.component';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { CharacterSheetComponent } from './character-sheet/character-sheet.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { CharacterComponent } from './character/character.component';\r\nimport { AttacksComponent } from './attacks/attacks.component';\r\nimport { EffectsComponent } from './effects/effects.component';\r\nimport { DefenseComponent } from './defense/defense.component';\r\nimport { ProficiencyFormComponent } from './proficiency-form/proficiency-form.component';\r\nimport { SkillComponent } from './skill/skill.component';\r\nimport { HealthComponent } from './health/health.component';\r\nimport { GeneralComponent } from './general/general.component';\r\nimport { ActivitiesComponent } from './activities/activities.component';\r\nimport { SpellsComponent } from './spells/spells.component';\r\nimport { SpellbookComponent } from './spellbook/spellbook.component';\r\nimport { ConditionsComponent } from './conditions/conditions.component';\r\nimport { TimeComponent } from './time/time.component';\r\nimport { ActivityComponent } from './activity/activity.component';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { SpellComponent } from './spell/spell.component';\r\nimport { TagsComponent } from './tags/tags.component';\r\nimport { NewItemPropertyComponent } from './items/newItemProperty/newItemProperty.component';\r\nimport { ItemRunesComponent } from './item/itemRunes/itemRunes.component';\r\nimport { AnimalCompanionComponent } from './animal-companion/animal-companion.component';\r\nimport { SpellchoiceComponent } from './spells/spellchoice/spellchoice.component';\r\nimport { FamiliarComponent } from './familiar/familiar.component';\r\nimport { FeatchoiceComponent } from './character/featchoice/featchoice.component';\r\nimport { FamiliarabilitiesComponent } from './familiar/familiarabilities/familiarabilities.component';\r\nimport { ItemOilsComponent } from './item/itemOils/itemOils.component';\r\nimport { ItemAeonStonesComponent } from './item/itemAeonStones/itemAeonStones.component';\r\nimport { ActionIconsComponent } from './actionIcons/actionIcons.component';\r\nimport { FeatComponent } from './character/feat/feat.component';\r\nimport { SpellLibraryComponent } from './spellLibrary/spellLibrary.component';\r\nimport { ItemTalismansComponent } from './item/itemTalismans/itemTalismans.component';\r\nimport { CraftingComponent } from './crafting/crafting.component';\r\nimport { ItemMaterialComponent } from './item/itemMaterial/itemMaterial.component';\r\nimport { ItemPoisonsComponent } from './item/itemPoisons/itemPoisons.component';\r\nimport { DiceComponent } from './dice/dice.component';\r\nimport { DiceIcons_D4Component } from './dice/diceIcons_D4/diceIcons_D4.component';\r\nimport { DiceIcons_D6Component } from './dice/diceIcons_D6/diceIcons_D6.component';\r\nimport { DiceIcons_D8Component } from './dice/diceIcons_D8/diceIcons_D8.component';\r\nimport { DiceIcons_D10Component } from './dice/diceIcons_D10/diceIcons_D10.component';\r\nimport { DiceIcons_D12Component } from './dice/diceIcons_D12/diceIcons_D12.component';\r\nimport { DiceIcons_D20Component } from './dice/diceIcons_D20/diceIcons_D20.component';\r\nimport { SkillchoiceComponent } from './character/skillchoice/skillchoice.component';\r\nimport { ItemBladeAllyComponent } from './item/itemBladeAlly/itemBladeAlly.component';\r\nimport { HintComponent } from './tags/hint/hint.component';\r\nimport { ConditionComponent } from './effects/condition/condition.component';\r\nimport { NgbActiveModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GridIconComponent } from './gridIcon/gridIcon.component';\r\n\r\n@NgModule({\r\n   declarations: [\t\r\n      AppComponent,\r\n      AbilitiesComponent,\r\n      TopBarComponent,\r\n      SkillsComponent,\r\n      ItemsComponent,\r\n      CharacterSheetComponent,\r\n      InventoryComponent,\r\n      CharacterComponent,\r\n      AttacksComponent,\r\n      EffectsComponent,\r\n      DefenseComponent,\r\n      ProficiencyFormComponent,\r\n      SkillComponent,\r\n      HealthComponent,\r\n      GeneralComponent,\r\n      ActivitiesComponent,\r\n      SpellsComponent,\r\n      SpellbookComponent,\r\n      ConditionsComponent,\r\n      TimeComponent,\r\n      ActivityComponent,\r\n      ItemComponent,\r\n      SpellComponent,\r\n      TagsComponent,\r\n      NewItemPropertyComponent,\r\n      ItemRunesComponent,\r\n      AnimalCompanionComponent,\r\n      SpellchoiceComponent,\r\n      FamiliarComponent,\r\n      FeatchoiceComponent,\r\n      FamiliarabilitiesComponent,\r\n      ItemOilsComponent,\r\n      ItemAeonStonesComponent,\r\n      ActionIconsComponent,\r\n      FeatComponent,\r\n      SpellLibraryComponent,\r\n      ItemTalismansComponent,\r\n      CraftingComponent,\r\n      ItemMaterialComponent,\r\n      ItemPoisonsComponent,\r\n      DiceComponent,\r\n      DiceIcons_D4Component,\r\n      DiceIcons_D6Component,\r\n      DiceIcons_D8Component,\r\n      DiceIcons_D10Component,\r\n      DiceIcons_D12Component,\r\n      DiceIcons_D20Component,\r\n      SkillchoiceComponent,\r\n      ItemBladeAllyComponent,\r\n      HintComponent,\r\n      ConditionComponent,\r\n      GridIconComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      AppRoutingModule,\r\n      HttpClientModule,\r\n      NgbModule\r\n   ],\r\n   providers: [\r\n      NgbActiveModal\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-diceIcons_D6',\r\n  templateUrl: './D6.svg',\r\n  styleUrls: ['./diceIcons_D6.component.css']\r\n})\r\nexport class DiceIcons_D6Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     width=\"64px\" height=\"64px\" stroke-linejoin=\"round\"\r\n     viewBox=\"0 0 64 64\">\r\n  <g fill=\"none\" stroke=\"#000000\" stroke-width=\"4\">\r\n  <path id=\"D6\"\r\n        d=\"M 8.00,8.00\r\n           C 8.00,8.00 56.00,8.00 56.00,8.00\r\n             56.00,8.00 56.00,56.00 56.00,56.00\r\n             56.00,56.00 8.00,56.00 8.00,56.00\r\n             8.00,56.00 8.00,8.00 8.00,8.00 Z\" />\r\n   </g>\r\n</svg>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TraitsService } from '../traits.service';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { AdventuringGear } from '../AdventuringGear';\r\nimport { CharacterService } from '../character.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { Item } from '../Item';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { SpellsService } from '../spells.service';\r\nimport { Talisman } from '../Talisman';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { AlchemicalPoison } from '../AlchemicalPoison';\r\nimport { Weapon } from '../Weapon';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-item',\r\n    templateUrl: './item.component.html',\r\n    styleUrls: ['./item.component.css']\r\n})\r\nexport class ItemComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    item;\r\n    @Input()\r\n    allowActivate: boolean = false;\r\n    @Input()\r\n    armoredSkirt: AdventuringGear;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    @Input()\r\n    isSubItem: boolean = false;\r\n\r\n    constructor(\r\n        private traitsService: TraitsService,\r\n        private activitiesService: ActivitiesService,\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private spellsService: SpellsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Creature(type: string = this.creature) {\r\n        return this.characterService.get_Creature(type) as Character|AnimalCompanion;\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    get_FullPrice(item: Item) {\r\n        if (item[\"get_Price\"]) {\r\n            return item[\"get_Price\"](this.itemsService);\r\n        } else {\r\n            return item.price;\r\n        }\r\n    }\r\n\r\n    get_Price(item: Item) {\r\n        if (this.get_FullPrice(item)) {\r\n            if (item.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = this.get_FullPrice(item);\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100)+\"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) {priceString += \" \";}\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10)+\"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) {priceString += \" \";}\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price+\"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    get_BulkDifference(item: Item) {\r\n        if (!isNaN(+item.get_Bulk()) && !isNaN(+item.bulk)) {\r\n            return parseInt(item.get_Bulk()) - parseInt(item.bulk)\r\n        } else if (!isNaN(+item.get_Bulk()) && isNaN(+item.bulk)) {\r\n            return 1\r\n        } else if (isNaN(+item.get_Bulk()) && !isNaN(+item.bulk)) {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\", type: string = \"\", tradition: string = \"\") {\r\n        return this.spellsService.get_Spells(name, type, tradition);\r\n    }\r\n\r\n    on_TalismanUse(talisman: Talisman, index: number) {\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), talisman);\r\n        this.item.talismans.splice(index, 1)\r\n        if ([\"armors\", \"shields\"].includes(this.item.type)) {\r\n            this.characterService.set_ToChange(this.creature, \"defense\");\r\n        }\r\n        if (this.item.constructor == Weapon) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_PoisonUse(poison: AlchemicalPoison) {\r\n        this.characterService.on_ConsumableUse(this.get_Creature(), poison);\r\n        if (this.item.constructor == Weapon) {\r\n            this.item.poisonsApplied.length = 0;\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_DoublingRingsOptions(ring:string) {\r\n        switch (ring) {\r\n            case \"gold\":\r\n                return this.get_Creature().inventories[0].weapons.filter(weapon => weapon.melee && weapon.potencyRune);\r\n            case \"iron\":\r\n                return this.get_Creature().inventories[0].weapons.filter(weapon => weapon.melee && weapon.moddable == \"weapon\");\r\n        }\r\n    }\r\n\r\n    on_DoublingRingsChange() {\r\n        this.characterService.set_ToChange(this.creature, \"inventory\");\r\n        let ironItem = this.get_DoublingRingsOptions(\"iron\").find(weapon => weapon.id == this.item.data[0].value);\r\n        if (ironItem && this.item.invested) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n            this.characterService.set_EquipmentViewChanges(this.get_Creature(), ironItem);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_ItemSpell(item: Item) {\r\n        if (item.storedSpells.length && item.storedSpells[0].spells.length) {\r\n            let spell = this.get_Spells(item.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return [spell];\r\n            } else {\r\n                return [];\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_StoredSpells(item: Item) {\r\n        return item.storedSpells.filter(choice => choice.available);\r\n    }\r\n\r\n    get_StoredSpellsTaken(item: Item) {\r\n        return item.storedSpells.filter(choice => choice.spells.length);\r\n    }\r\n\r\n    on_SpellItemUse(item: Item) {\r\n        let spellName = item.storedSpells[0]?.spells[0]?.name || \"\";\r\n        let spellChoice = item.storedSpells[0];\r\n        if (spellChoice && spellName) {\r\n            let spell = this.get_Spells(item.storedSpells[0]?.spells[0]?.name)[0];\r\n            let target = \"\";\r\n            if (spell.target == \"self\") {\r\n                target = \"Character\";\r\n            }\r\n            if (spell) {\r\n                let tempGain: SpellGain = new SpellGain();\r\n                this.spellsService.process_Spell(this.get_Creature(\"Character\"), target, this.characterService, this.itemsService, this.characterService.conditionsService, null, tempGain, spell, spellChoice.level, true, true, false);\r\n            }\r\n            spellChoice.spells.shift();\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\")\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if ([\"weaponrunes\", \"armorrunes\", \"oils\"].includes(this.item.type) && !this.isSubItem) {\r\n            this.allowActivate = false;\r\n        }\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let traits of [(item.get_Traits ? item.get_Traits(characterService, get_Creature()) : item.traits)]; trackBy:trackByIndex\">\r\n    <div class=\"newrow left-aligned tags\" *ngIf=\"traits.length\">\r\n        <cite class=\"trait\" *ngFor=\"let trait of traits; trackBy:trackByIndex;\" [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n    </div>\r\n</ng-container>\r\n\r\n<div class=\"newrow left-aligned tags\">\r\n    <app-tags [creature]=\"creature\" [objectName]=\"item.name\" [showTraits]=true [showFeats]=true [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n</div>\r\n<div class=\"newrow left-aligned\" *ngIf=\"item.sourceBook\">\r\n    <span>\r\n        <strong>Source</strong>\r\n        <i>&nbsp;{{item.sourceBook}}</i>\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <span *ngIf=\"item.price\">\r\n        <strong>Price</strong>\r\n        {{get_Price(item)}}{{item.stack && item.stack > 1 ? \" per \"+item.stack : \"\"}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.dicenum\">\r\n        <strong>Damage</strong>\r\n        {{item.dicenum}}d{{item.dicesize}} {{item.dmgType}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.acbonus\">\r\n        <strong>AC Bonus</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':item.get_ACBonus && (item.get_ACBonus() < item.acbonus), 'bonus':item.get_ACBonus && (item.get_ACBonus() > item.acbonus)}\">\r\n            {{item.get_ACBonus ? item.get_ACBonus() : item.acbonus}}{{item.coverbonus ? \" (\" +\r\n            (item.acbonus+item.coverbonus) + \")\" : \"\"}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"(item.type == 'armors' && (item.get_DexCap ? item.get_DexCap() != -1 : item.dexcap != -1))\">\r\n        <strong>Dex Cap</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':item.get_DexCap() < item.dexcap, 'bonus':item.get_DexCap() > item.dexcap || (!item.get_DexCap() && item.dexcap)}\">\r\n            &nbsp;{{(item.get_DexCap ? item.get_DexCap() : item.dexcap)}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.skillpenalty\">\r\n        <strong>Check Penalty</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':item.get_SkillPenalty() < item.skillpenalty, 'bonus':item.get_SkillPenalty() > item.skillpenalty}\">\r\n            &nbsp;{{(item.get_SkillPenalty ? item.get_SkillPenalty() : item.skillpenalty)}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.speedpenalty\">\r\n        <strong>Speed Penalty</strong>\r\n        {{item.speedpenalty}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"(item.get_Strength ? item.get_Strength() : item.strength)\">\r\n        <strong>Strength</strong>\r\n        <span [ngClass]=\"{'penalty':item.get_Strength() > item.strength, 'bonus':item.get_Strength() < item.strength}\">\r\n            {{(item.get_Strength ? item.get_Strength() : item.strength)}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.usage\">\r\n        <strong>Usage</strong>\r\n        {{item.usage}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.storeBulk\">\r\n        <strong>Bulk</strong>\r\n        {{item.storeBulk}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.get_Bulk()\">\r\n        <strong>Bulk{{item.carryingBulk && !item.equipped ? \" (unequipped)\" : \"\"}}</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':(get_BulkDifference(item) > 0), 'bonus':(get_BulkDifference(item) < 0)}\">&nbsp;{{item.get_Bulk()}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.carryingBulk && item.equipped\">\r\n        <strong>Bulk (unequipped)</strong>\r\n        {{item.carryingBulk}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.hardness\">\r\n        <strong>Hardness</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':(item.get_Hardness() < item.hardness), 'bonus':(item.get_Hardness() > item.hardness)}\">&nbsp;{{item.get_Hardness\r\n            ? item.get_Hardness() : item.hardness}}&nbsp;\r\n        </span>\r\n    </span>\r\n    <span *ngIf=\"item.hitpoints\">\r\n        <strong>HP</strong><strong *ngIf=\"item.brokenThreshold\"> (BT)</strong>\r\n        <span\r\n            [ngClass]=\"{'penalty':(item.get_MaxHP() < item.hitpoints), 'bonus':(item.get_MaxHP() > item.hitpoints)}\">&nbsp;{{item.get_MaxHP\r\n            ? item.get_MaxHP() : item.hitpoints}}\r\n        </span>\r\n    <span *ngIf=\"item.brokenThreshold\" [ngClass]=\"{'penalty':(item.get_BrokenThreshold() < item.brokenThreshold), 'bonus':(item.get_BrokenThreshold() > item.brokenThreshold)}\">({{item.get_BrokenThreshold\r\n            ? item.get_BrokenThreshold() : item.brokenThreshold}})\r\n        </span> &nbsp;\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <span *ngIf=\"item.hands\">\r\n        <strong>Hands</strong>\r\n        {{item.hands}}&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.ranged\">\r\n        <strong>Range</strong>\r\n        {{item.ranged}} ft.&nbsp;\r\n    </span>\r\n    <span *ngIf=\"item.reload\">\r\n        <strong>Reload</strong>\r\n        {{item.reload}}&nbsp;\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <p *ngIf=\"(item.activationType || (item.actions && item.actions != ' ')) && (!item.trigger && !item.requirements)\">\r\n        <strong>Activate</strong>\r\n        <app-actionIcons [actionString]=\"item.actions\">\r\n        </app-actionIcons>{{item.activationType}}\r\n        <span *ngIf=\"item.trigger\">\r\n            <strong>Trigger</strong>\r\n            {{item.trigger}}\r\n        </span>\r\n        <span *ngIf=\"item.requirements\">\r\n            <strong>Requirements</strong>\r\n            {{item.requirements}}\r\n        </span>\r\n        <span *ngIf=\"item.frequency\">\r\n            <strong>Frequency</strong>\r\n            {{item.frequency}}\r\n        </span>\r\n        <span *ngIf=\"item.effect\">\r\n            <strong>Effect</strong>\r\n            {{item.effect}}\r\n        </span>\r\n    </p>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <span *ngIf=\"item.ammunition\">\r\n        <strong>Ammunition</strong>\r\n        {{item.ammunition}}&nbsp;\r\n    </span>\r\n</div>\r\n<div class=\"newrow left-aligned\">\r\n    <hr class=\"newrow\">\r\n    <ng-container *ngFor=\"let desc of item.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n        </ul>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"item.name == 'Grievous'\">\r\n        <p *ngFor=\"let data of item.data; trackBy:trackByIndex;\">\r\n            <strong>{{data.name}}&nbsp;</strong>{{data.value}}\r\n        </p>\r\n    </ng-container>\r\n    <p *ngIf=\"item.benefit\">\r\n        <strong>Benefit</strong> {{item.benefit}}\r\n    </p>\r\n    <p *ngIf=\"item.drawback\">\r\n        <strong>Drawback</strong> {{item.drawback}}\r\n    </p>\r\n    <p *ngIf=\"item.savingThrow || item.maxDuration || item.stages?.length\">\r\n        <span *ngIf=\"item.savingThrow\"><strong>Saving Throw&nbsp;</strong>{{item.savingThrow}}&nbsp;</span>\r\n        <span *ngIf=\"item.stages[0]\"><strong>Onset&nbsp;</strong>{{item.stages[0]}}&nbsp;</span>\r\n        <span *ngIf=\"item.maxDuration\"><strong>Maximum Duration&nbsp;</strong>{{item.maxDuration}}&nbsp;</span>\r\n        <ng-container *ngFor=\"let stage of item.stages; let stageIndex = index; trackBy:trackByIndex;\">\r\n            <span *ngIf=\"stageIndex > 0\">\r\n                <strong>Stage {{stageIndex}}&nbsp;</strong>{{item.stages[stageIndex]}}&nbsp;\r\n            </span>\r\n        </ng-container>\r\n    </p>\r\n    <p *ngIf=\"(item.activationType || (item.actions && item.actions != ' ')) && (item.trigger || item.requirements)\">\r\n        <strong>Activate</strong>\r\n        <app-actionIcons [actionString]=\"item.actions\">\r\n        </app-actionIcons>{{item.activationType}}\r\n        <span *ngIf=\"item.trigger\">\r\n            <strong>Trigger</strong>\r\n            {{item.trigger}}\r\n        </span>\r\n        <span *ngIf=\"item.requirements\">\r\n            <strong>Requirements</strong>\r\n            {{item.requirements}}\r\n        </span>\r\n    </p>\r\n    <p *ngIf=\"item.subType\">\r\n        <strong>{{item.subType}}</strong> {{item.subTypeDesc}}\r\n    </p>\r\n    <p *ngIf=\"item.craftRequirement\">\r\n        <strong>Craft Requirement</strong> {{item.craftRequirement}}\r\n    </p>\r\n    <p *ngIf=\"item.critsuccess\">\r\n        <strong>Critical Success</strong> {{item.critsuccess}}\r\n    </p>\r\n    <p *ngIf=\"item.success\">\r\n        <strong>Success</strong> {{item.success}}\r\n    </p>\r\n    <p *ngIf=\"item.failure\">\r\n        <strong>Failure</strong> {{item.failure}}\r\n    </p>\r\n    <p *ngIf=\"item.critfailure\">\r\n        <strong>Critical Failure</strong> {{item.critfailure}}\r\n    </p>\r\n    <div class=\"list-item newrow problem\" *ngIf=\"item.inputRequired\">\r\n        <strong>Player input required:</strong>\r\n        <div class=\"newrow left-aligned\">\r\n            <p *ngFor=\"let inputRequired of item.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                {{inputRequired}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"newrow\" *ngIf=\"item.isDoublingRings && !itemStore\">\r\n    <header class=\"spellHeader\">Doubling Rings</header>\r\n    <div class=\"newrow\">\r\n        <strong>Weapon wielded in the gold ring hand</strong>\r\n        <select [(ngModel)]=\"item.data[0].value\" (ngModelChange)=\"on_DoublingRingsChange()\">\r\n            <option *ngFor=\"let weapon of get_DoublingRingsOptions('gold'); trackBy:trackByIndex;\"\r\n                [ngValue]=\"weapon.id\">\r\n                {{weapon.get_Name()}}</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow\">\r\n        <strong>Weapon wielded in the iron ring hand</strong>\r\n        <select [(ngModel)]=\"item.data[1].value\" (ngModelChange)=\"on_DoublingRingsChange()\">\r\n            <option *ngFor=\"let weapon of get_DoublingRingsOptions('iron'); trackBy:trackByIndex;\"\r\n                [ngValue]=\"weapon.id\">\r\n                {{weapon.get_Name()}}</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow left-aligned\" *ngIf=\"item.isDoublingRings == 'Doubling Rings (Greater)'\">\r\n        <input id=\"{{item.id}}doublingRingsApplyPropertyRunes\" type=\"checkbox\" [(ngModel)]=\"item.data[2]\" (ngModelChange)=\"on_DoublingRingsChange()\">\r\n        <label for=\"{{item.id}}doublingRingsApplyPropertyRunes\">&nbsp;Apply property runes</label>\r\n    </div>\r\n</div>\r\n<app-itemAeonStones class=\"list-item\" [item]=item [itemStore]=itemStore *ngIf=\"item.isWayfinder\"></app-itemAeonStones>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let cast of item.castSpells; trackBy:trackByIndex;\">\r\n    <div *ngFor=\"let spell of get_Spells(cast.name); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">{{spell.name}}\r\n            <app-actionIcons [actionString]=\"spell.actions\">\r\n            </app-actionIcons> {{spell.castType.toString()}}</header>\r\n        <app-spell [spell]=spell [spellLevel]=\"(cast.level) ? cast.level : 0\"></app-spell>\r\n    </div>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let material of item.material\">\r\n    <header class=\"spellHeader\">{{material.name}}</header>\r\n    <ng-container *ngFor=\"let desc of material.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n        </ul>\r\n    </ng-container>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngIf=\"armoredSkirt\">\r\n    <header class=\"spellHeader\">Armored Skirt</header>\r\n    <app-item [item]=armoredSkirt></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let choice of get_StoredSpells(item); trackBy:trackByIndex;\">\r\n    <app-spellchoice [choice]=\"choice\" [allowHeightened]=\"true\" [level]=\"choice.level\" [itemSpell]=\"true\">\r\n    </app-spellchoice>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let choice of get_StoredSpellsTaken(item); trackBy:trackByIndex;\">\r\n    <ng-container *ngFor=\"let taken of choice.spells; trackBy:trackByIndex;\">\r\n        <div *ngFor=\"let spell of get_Spells(taken.name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader\">{{spell.name}}\r\n                <app-actionIcons [actionString]=\"spell.actions\">\r\n                </app-actionIcons> {{spell.castType.toString()}}</header>\r\n            <app-spell [spell]=spell [spellLevel]=\"(taken.level) ? taken.level : (choice.level ? choice.level : 0)\"></app-spell>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n\r\n<div class=\"list-item left-aligned\" *ngFor=\"let activity of item.activities; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\" *ngIf=\"activity.name\">\r\n        {{activity.name}}\r\n        <app-actionIcons [actionString]=\"activity.actions\">\r\n        </app-actionIcons>{{(activity.activationType) ? activity.activationType : \"\"}}\r\n    </header>\r\n    <app-activity [creature]=\"creature\" [activity]=activity [gain]=activity [allowActivate]=\"allowActivate && !item.broken && (activity.resonant ? isSubItem : true)\" [isSubItem]=isSubItem>\r\n    </app-activity>\r\n</div>\r\n<ng-container *ngFor=\"let gain of item.gainActivities; trackBy:trackByIndex;\">\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let activity of get_Activities(gain.name); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">\r\n            {{activity.name}}\r\n            <app-actionIcons [actionString]=\"activity.actions\">\r\n            </app-actionIcons>{{(activity.activationType) ? activity.activationType : \"\"}}\r\n        </header>\r\n        <app-activity [creature]=\"creature\" [activity]=activity [gain]=gain [allowActivate]=allowActivate [isSubItem]=isSubItem></app-activity>\r\n    </div>\r\n</ng-container>\r\n<ng-container *ngFor=\"let activityName of item.showActivities; trackBy:trackByIndex;\">\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let activity of get_Activities(activityName); trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">\r\n            {{activity.name}}\r\n            <app-actionIcons [actionString]=\"activity.actions\">\r\n            </app-actionIcons>{{(activity.activationType) ? activity.activationType : \"\"}}\r\n        </header>\r\n        <app-activity [creature]=\"creature\" [activity]=activity [gain]=null [allowActivate]=false [isSubItem]=isSubItem>\r\n        </app-activity>\r\n    </div>\r\n</ng-container>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let oil of item.oilsApplied; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{oil.get_Name()}}</header>\r\n    <app-item [creature]=\"creature\" [item]=oil [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let poison of item.poisonsApplied; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{poison.name}}</header>\r\n    <button class=\"newrow left-aligned\" (click)=\"on_PoisonUse(poison)\" *ngIf=\"allowActivate\">\r\n        <span>Spend/Remove</span>\r\n    </button>\r\n    <app-item [creature]=\"creature\" [item]=poison [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngIf=\"item.runeEffect\">\r\n    <header class=\"spellHeader\">Rune Effect: {{item.runeEffect.name}}</header>\r\n    <app-item [creature]=\"creature\" [item]=item.runeEffect [allowActivate]=allowActivate [isSubItem]=isSubItem>\r\n    </app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let rune of item.propertyRunes; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{rune.name}} Rune</header>\r\n    <ng-container *ngFor=\"let spell of get_ItemSpell(rune)\">\r\n        <button class=\"newrow center-aligned\" (click)=\"on_SpellItemUse(rune)\">\r\n            <span>Use<app-actionIcons [actionString]=\"spell.actions\">\r\n                </app-actionIcons> (Cast spell)\r\n            </span>\r\n        </button>\r\n    </ng-container>\r\n    <app-item [creature]=\"creature\" [item]=rune [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<ng-container *ngIf=\"item.bladeAlly\">\r\n    <div class=\"list-item left-aligned\" *ngFor=\"let rune of item.bladeAllyRunes; trackBy:trackByIndex;\">\r\n        <header class=\"spellHeader\">{{rune.name}} Rune</header>\r\n        <app-item [creature]=\"creature\" [item]=rune [allowActivate]=\"allowActivate\" [isSubItem]=true></app-item>\r\n    </div>\r\n</ng-container>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let stone of item.aeonStones; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{stone.name}}</header>\r\n    <app-item [creature]=\"creature\" [item]=stone [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>\r\n<div class=\"list-item left-aligned\" *ngFor=\"let talisman of item.talismans; let index = index; trackBy:trackByIndex;\">\r\n    <header class=\"spellHeader\">{{talisman.name}}</header>\r\n    <button class=\"newrow left-aligned\" (click)=\"on_TalismanUse(talisman, index)\" *ngIf=\"allowActivate\">\r\n        <span>Activate<app-actionIcons [actionString]=\"talisman.actions\">\r\n            </app-actionIcons>{{(talisman.activationType) ? talisman.activationType : \"\"}}\r\n        </span>\r\n    </button>\r\n    <app-item [creature]=\"creature\" [item]=talisman [allowActivate]=allowActivate [isSubItem]=true></app-item>\r\n</div>","import core from './core.json';\r\nexport {\r\n    core\r\n};","export class ItemGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public amount: number = 1;\r\n    //Only for on==rest: Gain this amount per level additionally to the amount.\r\n    public amountPerLevel: number = 0;\r\n    public expiration: number = 0;\r\n    //The id is copied from the item after granting it, so that it can be removed again.\r\n    public id: string = \"\";\r\n    public name: string = \"Fist\";\r\n    public on: \"grant\"|\"equip\"|\"use\"|\"rest\"|\"\" = \"grant\";\r\n    public type: string = \"weapons\";\r\n    //Spells choose from multiple item gains those that match their level.\r\n    //For example, if a spell has an ItemGain with heightenedFilter 1 and one with heightenedFilter 2, and the spell is cast at 2nd level, only the heightenedFilter 2 ItemGain is used.\r\n    public heightenedFilter: number = 0;\r\n    //For conditions that grant an item only on a certain choice, set conditionChoiceFilter.\r\n    public conditionChoiceFilter: string = \"\";\r\n}\r\n","import core from './core.json';\r\nimport advanced_character_guide from './advanced_character_guide.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    advanced_character_guide,\r\n    custom_kitsune\r\n};","<div class=\"fullsize-only newrow left-aligned\">\r\n    <ng-container *ngFor=\"let trait of get_TraitsForThis(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'trait'\" [object]=\"trait\" [objectName]=\"objectName\"\r\n            [description]=\"trait.name +' ('+ trait.haveOn(get_Creature(), this.characterService, true) + ')'\">\r\n        </app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let trait of get_TraitsForThis(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'trait'\" [object]=\"trait\" [objectName]=\"specialName\"\r\n                [description]=\"trait.name +' ('+ trait.haveOn(get_Creature(), this.characterService, true) + ')'\">\r\n            </app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let feat of get_FeatsShowingOn(objectName, showFeats); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'feat'\" [object]=\"feat\" [objectName]=\"objectName\"\r\n            [description]=\"feat.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let feat of get_FeatsShowingOn(specialName, true); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'feat'\" [object]=\"feat\" [objectName]=\"specialName\"\r\n                [description]=\"feat.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let item of get_ItemsShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"item\" [objectName]=\"objectName\"\r\n            [description]=\"item.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let item of get_ItemsShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"item\" [objectName]=\"specialName\"\r\n                [description]=\"item.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let spec of get_SpecializationsShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"spec\" [objectName]=\"objectName\"\r\n            [description]=\"spec.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let spec of get_SpecializationsShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'item'\" [object]=\"spec\" [objectName]=\"specialName\"\r\n                [description]=\"spec.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let activity of get_ActivitiesShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'activity'\" [object]=\"activity\" [objectName]=\"objectName\"\r\n            [description]=\"activity.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let activity of get_ActivitiesShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'activity'\" [object]=\"activity\" [objectName]=\"specialName\"\r\n                [description]=\"activity.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let condition of get_ConditionsShowingOn(objectName); trackBy:trackByIndex;\">\r\n        <app-hint [creature]=\"creature\" [ngClass]=\"'condition'\" [object]=\"condition\" [objectName]=\"objectName\"\r\n            [description]=\"condition.name\"></app-hint>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let specialName of specialNames; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let condition of get_ConditionsShowingOn(specialName); trackBy:trackByIndex;\">\r\n            <app-hint [creature]=\"creature\" [ngClass]=\"'condition'\" [object]=\"condition\" [objectName]=\"specialName\"\r\n                [description]=\"condition.name\"></app-hint>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-template #effectTemplate let-effect=\"effect\">\r\n        <div class=\"newrow\">\r\n            <span>\r\n                <strong\r\n                    [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\">{{effect.target}}\r\n                    {{parseInt(effect.value) ? effect.value : ''}}{{effect.setValue ? \"= \"+effect.setValue : ''}}\r\n                </strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"effect.type != 'untyped' && !effect.toggle && !effect.setValue\">\r\n            <span>\r\n                <strong>Type</strong> {{effect.type + \" \" + (effect.penalty ? 'penalty' : 'bonus')}}</span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"effect.duration\">\r\n            <span>\r\n                <strong>Duration</strong> {{effect.duration ? get_Duration(effect.duration) : ''}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\">\r\n            <span><strong>Source&nbsp;</strong>{{effect.source.includes('conditional, ') ? effect.source.substr(13) : effect.source}}</span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"effect.source.includes('conditional, ')\">\r\n            <span><strong>Conditional&nbsp;</strong>This effect only applies for certain actions or under specific circumstances.</span>\r\n        </div>\r\n    </ng-template>\r\n    <ng-container *ngFor=\"let effect of get_EffectsOnThis(objectName); trackBy:trackByIndex;\">\r\n        <ng-template #effectPopover>\r\n            <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n        </ng-template>\r\n        <cite class=\"effect\"\r\n            [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\"\r\n            [ngbPopover]=\"effectPopover\">{{parseInt(effect.value)\r\n            ? effect.value : ''}}{{effect.setValue ? effect.setValue : ''}}\r\n            ({{effect.source}})&nbsp;</cite>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let effect of specialEffects; trackBy:trackByIndex;\">\r\n        <ng-template #effectPopover>\r\n            <ng-container *ngTemplateOutlet=\"effectTemplate;context:{effect:effect}\"></ng-container>\r\n        </ng-template>\r\n        <cite class=\"effect\"\r\n            [ngClass]=\"{'penalty':effect.penalty, 'bonus':!effect.penalty && !effect.setValue, 'absolute':effect.setValue}\"\r\n            [ngbPopover]=\"effectPopover\">{{parseInt(effect.value)\r\n            ? effect.value : ''}}{{effect.setValue ? effect.setValue : ''}}\r\n            ({{effect.source}})&nbsp;</cite>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Effect } from '../Effect';\r\nimport { Hint } from '../Hint';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TimeService } from '../time.service';\r\n\r\n@Component({\r\n    selector: 'app-tags',\r\n    templateUrl: './tags.component.html',\r\n    styleUrls: ['./tags.component.css']\r\n})\r\nexport class TagsComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    objectName: string = \"\";\r\n    @Input()\r\n    showTraits:boolean = false;\r\n    @Input()\r\n    showFeats:boolean = false;\r\n    @Input()\r\n    showItems:boolean = false;\r\n    @Input()\r\n    showActivities:boolean = false;\r\n    @Input()\r\n    showConditions:boolean = false;\r\n    @Input()\r\n    showEffects:boolean = false;\r\n    @Input()\r\n    specialNames:string[] = [];\r\n    @Input()\r\n    specialEffects:Effect[] = []\r\n\r\n    public parseInt = parseInt;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        private timeService: TimeService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.container = \"body\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n    }\r\n    \r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Duration(duration: number) {\r\n        return this.timeService.get_Duration(duration);\r\n    }\r\n\r\n    get_TraitsForThis(name: string) {\r\n        if (this.showTraits && name) {\r\n            return this.sortByName(this.traitsService.get_TraitsForThis(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_FeatsShowingOn(name: string, show: boolean ) {\r\n        if (show && name && this.creature == \"Character\") {\r\n            return this.sortByName(this.characterService.get_FeatsShowingOn(name));\r\n        } else if (show && name && this.creature == \"Companion\") {\r\n            return this.sortByName(this.characterService.get_CompanionShowingOn(name));\r\n        } else if (show && name && this.creature == \"Familiar\") {\r\n            return this.sortByName(this.characterService.get_FamiliarShowingOn(name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_EffectsOnThis(name: string) {\r\n        if (this.showEffects && name) {\r\n            return this.sortByName(\r\n                this.effectsService.get_AbsolutesOnThis(this.get_Creature(), name)\r\n                .concat(this.effectsService.get_RelativesOnThis(this.get_Creature(), name))\r\n                );\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_ConditionsShowingOn(name: string) {\r\n        if (this.showConditions && name) {\r\n            return this.sortByName(this.characterService.get_ConditionsShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n    \r\n    get_ActivitiesShowingOn(name: string) {\r\n        if (this.showActivities && name) {\r\n            return this.sortByName(this.characterService.get_ActivitiesShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_ItemsShowingOn(name: string) {\r\n        if (this.showItems && name) {\r\n            return this.sortByName(this.characterService.get_ItemsShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_SpecializationsShowingOn(name: string) {\r\n        if (this.showItems && name) {\r\n            return this.sortByName(this.characterService.get_ArmorSpecializationsShowingOn(this.get_Creature(), name));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_Hints(hints: Hint[], name: string) {\r\n        return hints\r\n            .filter(hint =>\r\n                hint.showon.split(\",\")\r\n                .find(showon => \r\n                    showon.trim().toLowerCase() == name.toLowerCase() ||\r\n                    (\r\n                        name.toLowerCase().includes(\"lore\") &&\r\n                        showon.trim().toLowerCase() == \"lore\"\r\n                    )\r\n                )\r\n            )\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"tags\", \"all\", this.creature, this.objectName].includes(target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature == this.creature &&\r\n                    (\r\n                        view.target == \"all\" ||\r\n                        (view.target == \"tags\" && [this.objectName, ...this.specialNames, \"all\"].includes(view.subtarget))\r\n                    )) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    sortByName(list: any[]) {\r\n        return list.sort(function(a,b) {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    on_ActivateEffect() {\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { AnimalCompanion } from 'src/app/AnimalCompanion';\r\nimport { Character } from 'src/app/Character';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { Condition } from 'src/app/Condition';\r\nimport { ConditionGain } from 'src/app/ConditionGain';\r\nimport { ConditionsService } from 'src/app/conditions.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { Creature } from 'src/app/Creature';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-condition',\r\n    templateUrl: './condition.component.html',\r\n    styleUrls: ['./condition.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConditionComponent implements OnInit {\r\n\r\n    @Input()\r\n    conditionGain: ConditionGain;\r\n    @Input()\r\n    condition: Condition;\r\n    @Input()\r\n    showItem: string = \"\";\r\n    @Input()\r\n    creature: string = \"Character\"\r\n    @Input()\r\n    fullDisplay: boolean = false;\r\n    @Output()\r\n    showItemMessage = new EventEmitter<string>();\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private conditionsService: ConditionsService,\r\n        private traitsService: TraitsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n        this.showItemMessage.emit(this.showItem);\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Creature;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_Duration(duration: number) {\r\n        return this.timeService.get_Duration(duration);\r\n    }\r\n\r\n    get_IsInformationalCondition() {\r\n        //Return whether the condition is purely informational, i.e. has no effects and is not currently causing any conditions.\r\n        return !this.condition.effects?.length && !this.condition.hints.some(hint => hint.effects?.length) && !this.characterService.get_AppliedConditions(this.get_Creature(), \"\", \"\", true).some(existingCondition => existingCondition.parentID == this.conditionGain.id);\r\n    }\r\n\r\n    change_ConditionDuration(gain: ConditionGain, condition: Condition, turns: number) {\r\n        gain.duration += turns;\r\n        gain.maxDuration = gain.duration;\r\n        this.toggle_Item(\"\");\r\n        //Conditions who use their own duration in their effects need to update effects after changing duration.\r\n        if (condition?.effects.some(effect => effect.setValue?.includes(\"parentcondition.duration\") || effect.value?.includes(\"parentcondition.duration\"))) {\r\n            this.characterService.set_ToChange(this.creature, \"effects\");\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    change_ConditionValue(gain: ConditionGain, oldValue: number, change: number = 0) {\r\n        if (change) {\r\n            gain.value += change;\r\n        } else {\r\n            change = gain.value - oldValue;\r\n        }\r\n        if (gain.name == \"Drained\" && change < 0) {\r\n            //When you lower your drained value, you regain Max HP, but not the lost HP.\r\n            //Because HP is Max HP - Damage, we increase damage to represent not regaining the HP.\r\n            //We subtract level*change from damage because change is negative.\r\n            this.get_Creature().health.damage == Math.max(0, (this.get_Creature().health.damage - (this.get_Creature().level * change)));\r\n        }\r\n        this.toggle_Item(\"\");\r\n        gain.showValue = false;\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    change_ConditionRadius(gain: ConditionGain, change: number) {\r\n        gain.radius += change;\r\n    }\r\n\r\n    get_ConditionChoices(conditionGain: ConditionGain, condition: Condition) {\r\n        if (conditionGain.source == \"Manual\") {\r\n            return condition.get_Choices(this.characterService, false);\r\n        } else {\r\n            return condition.get_Choices(this.characterService, true, conditionGain.heightened);\r\n        }\r\n    }\r\n\r\n    change_ConditionChoice(gain: ConditionGain, condition: Condition, oldChoice: string) {\r\n        let creature = this.get_Creature();\r\n        if (this.creature != \"Familiar\" && oldChoice != gain.choice) {\r\n            //Remove any items that were granted by the previous choice.\r\n            if (oldChoice) {\r\n                gain.gainItems.filter(gainItem => gainItem.conditionChoiceFilter == oldChoice).forEach(gainItem => {\r\n                    this.conditionsService.remove_ConditionItem(creature as Character | AnimalCompanion, this.characterService, this.itemsService, gainItem);\r\n                });\r\n            }\r\n            //Add any items that are granted by the new choice.\r\n            if (gain.choice) {\r\n                gain.gainItems.filter(gainItem => gainItem.conditionChoiceFilter == gain.choice).forEach(gainItem => {\r\n                    this.conditionsService.add_ConditionItem(creature as Character | AnimalCompanion, this.characterService, this.itemsService, gainItem, condition);\r\n                });\r\n            }\r\n        }\r\n        if (oldChoice != gain.choice) {\r\n            let creature = this.get_Creature();\r\n            //Remove any conditions that were granted by the previous choice, unless they are persistent (but still if they are ignorePersistentAtChoiceChange).\r\n            if (oldChoice) {\r\n                condition.gainConditions.filter(extraCondition => extraCondition.conditionChoiceFilter == oldChoice).forEach(extraCondition => {\r\n                    let addCondition = Object.assign(new ConditionGain, JSON.parse(JSON.stringify(extraCondition)));\r\n                    addCondition.source = gain.name;\r\n                    let originalCondition = this.characterService.get_Conditions(addCondition.name)[0];\r\n                    if (!(addCondition.persistent || originalCondition?.persistent) || addCondition.ignorePersistentAtChoiceChange) {\r\n                        this.characterService.remove_Condition(creature, addCondition, false, false, true, true);\r\n                    }\r\n                })\r\n            }\r\n            //Add any conditions that are granted by the new choice.\r\n            if (gain.choice) {\r\n                condition.gainConditions.filter(extraCondition => extraCondition.conditionChoiceFilter == gain.choice).forEach(extraCondition => {\r\n                    let addCondition = Object.assign(new ConditionGain, JSON.parse(JSON.stringify(extraCondition)));\r\n                    if (!addCondition.heightened) {\r\n                        addCondition.heightened = gain.heightened;\r\n                    }\r\n                    addCondition.source = gain.name;\r\n                    addCondition.parentID = gain.id;\r\n                    addCondition.apply = true;\r\n                    this.characterService.add_Condition(creature, addCondition, false, gain);\r\n                })\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        if (condition.attackRestrictions.length) {\r\n            this.characterService.set_ToChange(this.creature, \"attacks\");\r\n        }\r\n        if (condition.senses.length) {\r\n            this.characterService.set_ToChange(this.creature, \"skills\");\r\n        }\r\n        gain.showChoices = false;\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    change_ConditionStage(gain: ConditionGain, condition: Condition, choices: string[], change: number) {\r\n        if (change == 0) {\r\n            //If no change, the condition remains, but the onset is reset.\r\n            gain.nextStage = condition.choices.find(choice => choice.name == gain.choice)?.nextStage || 0;\r\n            this.characterService.set_ToChange(this.creature, \"time\");\r\n            this.characterService.set_ToChange(this.creature, \"health\");\r\n            this.characterService.set_ToChange(this.creature, \"effects\");\r\n        } else {\r\n            let newChoice = choices[choices.indexOf(gain.choice) + change];\r\n            if (newChoice) {\r\n                gain.nextStage = condition.choices.find(choice => choice.name == newChoice)?.nextStage || 0;\r\n                if (gain.nextStage) {\r\n                    this.characterService.set_ToChange(this.creature, \"time\");\r\n                    this.characterService.set_ToChange(this.creature, \"health\");\r\n                }\r\n                let oldChoice = gain.choice;\r\n                gain.choice = newChoice;\r\n                this.change_ConditionChoice(gain, condition, oldChoice);\r\n            }\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_Condition(conditionGain: ConditionGain) {\r\n        this.characterService.remove_Condition(this.get_Creature(), conditionGain, true);\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if (target == \"effects\" || target == \"all\" || target == this.creature) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature == this.creature && [\"effects\", \"all\"].includes(view.target)) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngIf=\"conditionGain\">\r\n    <ng-container *ngFor=\"let choices of [get_ConditionChoices(conditionGain, condition)]; trackBy:trackByIndex\">\r\n        <div class=\"newrow\">\r\n            <div style=\"flex-grow:10\">\r\n                <span>\r\n                    <input id=\"{{conditionGain.id+'notes'}}\" class=\"invisible\" type=\"checkbox\"\r\n                        [(ngModel)]=\"conditionGain.showNotes\">\r\n                    <label for=\"{{conditionGain.id+'notes'}}\" [ngbTooltip]=\"'Edit notes'\">\r\n                        <i class='bi-pencil-square'></i>&nbsp;\r\n                    </label>\r\n                    <strong\r\n                        [ngClass]=\"condition.buff ? 'bonus' : 'penalty'\">{{conditionGain.name}}{{conditionGain.choice ?\r\n                        \": \" : \"\"}}\r\n                        <input id=\"{{conditionGain.id+'choice'}}\" class=\"invisible\" type=\"checkbox\"\r\n                            [(ngModel)]=\"conditionGain.showChoices\"\r\n                            *ngIf=\"choices.length && !conditionGain.choiceLocked\">\r\n                        <label for=\"{{conditionGain.id+'choice'}}\" [ngbTooltip]=\"'Change effect choice'\"\r\n                            style=\"text-shadow: none\" *ngIf=\"choices.length && !conditionGain.choiceLocked\">\r\n                            <i class='bi-list-stars'></i>\r\n                            <span *ngIf=\"conditionGain.choice && !conditionGain.showChoices\">\r\n                                &nbsp;{{conditionGain.choice}}\r\n                            </span>\r\n                        </label>\r\n                        <ng-container\r\n                            *ngIf=\"conditionGain.showChoices && choices.length && !conditionGain.choiceLocked\">\r\n                            <span *ngFor=\"let oldChoice of [conditionGain.choice]; trackBy:trackByIndex;\">\r\n                                <select [(ngModel)]=\"conditionGain.choice\"\r\n                                    (ngModelChange)=\"change_ConditionChoice(conditionGain, condition, oldChoice)\">\r\n                                    <option *ngFor=\"let choice of choices; trackBy:trackByIndex;\" [ngValue]=\"choice\">\r\n                                        {{choice}}\r\n                                    </option>\r\n                                </select>\r\n                            </span>\r\n                        </ng-container>\r\n                        <span\r\n                            *ngIf=\"conditionGain.value && conditionGain.valueLockedByParent && conditionGain.parentID\">\r\n                            {{conditionGain.value}}\r\n                        </span>\r\n                        <span\r\n                            *ngIf=\"conditionGain.value && !(conditionGain.valueLockedByParent && conditionGain.parentID)\">\r\n                            <input id=\"{{conditionGain.id+'value'}}\" class=\"invisible\" type=\"checkbox\"\r\n                                [(ngModel)]=\"conditionGain.showValue\">\r\n                            <label for=\"{{conditionGain.id+'value'}}\" [ngbTooltip]=\"'Change value'\"\r\n                                style=\"text-shadow: none\">\r\n                                <i class='bi-gear-fill'></i>&nbsp;\r\n                            </label>\r\n                            {{!conditionGain.showValue ? conditionGain.value : \"\"}}\r\n                            <ng-container *ngIf=\"conditionGain.showValue\">\r\n                                <span *ngFor=\"let oldValue of [conditionGain.value]; trackBy:trackByIndex;\">\r\n                                    <span><button (click)=\"change_ConditionValue(conditionGain, oldValue, -1)\"\r\n                                            [disabled]=\"oldValue == 1 && conditionGain.lockedByParent && conditionGain.parentID\">-1</button></span>\r\n                                    <select [(ngModel)]=\"conditionGain.value\"\r\n                                        (ngModelChange)=\"change_ConditionValue(conditionGain, oldValue)\">\r\n                                        <option\r\n                                            *ngFor=\"let valueOption of [0,1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                            [ngValue]=\"valueOption\"\r\n                                            [disabled]=\"valueOption == 0 && conditionGain.lockedByParent && conditionGain.parentID\">\r\n                                            {{valueOption}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <span>\r\n                                        <button (click)=\"change_ConditionValue(conditionGain, oldValue, 1)\">+1\r\n                                        </button>\r\n                                    </span>\r\n                                </span>\r\n                            </ng-container>\r\n                        </span>\r\n                    </strong>\r\n                </span>\r\n            </div>\r\n            <span *ngIf=\"!(conditionGain.lockedByParent && conditionGain.parentID)\"\r\n                [ngbTooltip]=\"conditionGain.source.includes('Feat: ') ? 'Conditions gained from feats cannot be removed.' : ''\">\r\n                <button (click)=\"remove_Condition(conditionGain)\" [disabled]=\"conditionGain.source.includes('Feat: ')\"\r\n                    *ngIf=\"conditionGain.duration != 1\">\r\n                    Remove\r\n                </button>\r\n                <button (click)=\"remove_Condition(conditionGain)\"\r\n                    [ngbTooltip]=\"'Instant effects should be resolved immediately and then ended.'\"\r\n                    *ngIf=\"conditionGain.duration == 1\">\r\n                    Done\r\n                </button>\r\n            </span>\r\n        </div>\r\n        <div [ngbCollapse]=\"!conditionGain.showNotes\">\r\n            <div class=\"list-item newrow\">\r\n                <span>\r\n                    <strong>Notes</strong>\r\n                    <input type=\"textarea\" class=\"fullwidth\" [(ngModel)]=\"conditionGain.notes\">\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.source\">\r\n            <span><strong>Source&nbsp;</strong>{{conditionGain.source}}</span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.heightened\">\r\n            <span><strong>Spell level&nbsp;</strong>{{conditionGain.heightened}}</span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\">\r\n            <input id=\"{{conditionGain.id+'duration'}}\" class=\"invisible\" type=\"checkbox\"\r\n                [(ngModel)]=\"conditionGain.showDuration\">\r\n            <label for=\"{{conditionGain.id+'duration'}}\" [ngbTooltip]=\"'Change duration'\"\r\n                *ngIf=\"conditionGain.duration > -1\"><i class='bi-gear-fill'></i>&nbsp;</label>\r\n            <span><strong>Duration&nbsp;</strong>{{get_Duration(conditionGain.duration)}}</span>\r\n        </div>\r\n        <div [ngbCollapse]=\"(!conditionGain.showDuration || conditionGain.duration <= -1)\">\r\n            <div class=\"newrow list-item\">\r\n                <strong>Change Duration</strong>\r\n                <div class=\"newrow\">\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 10)\">+ 1\r\n                            turn</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 100)\">+ 1\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 1000)\">+ 10\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, 6000)\">+ 1\r\n                            hour</button></span>\r\n                </div>\r\n                <div class=\"newrow\">\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -10)\">- 1\r\n                            turn</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -100)\">- 1\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -1000)\">- 10\r\n                            min.</button></span>\r\n                    <span><button (click)=\"change_ConditionDuration(conditionGain, condition, -6000)\">- 1\r\n                            hour</button></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.persistent\">\r\n            <span [ngbTooltip]=\"'This condition will remain if its source is removed.'\">\r\n                <strong>Persistent</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.lockedByParent && conditionGain.parentID\">\r\n            <span [ngbTooltip]=\"'This condition can\\'t be removed while ' + conditionGain.source + ' is active.'\">\r\n                <strong>Locked by parent condition</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.valueLockedByParent && conditionGain.parentID\">\r\n            <span\r\n                [ngbTooltip]=\"'You can\\'t change the value of this condition while ' + conditionGain.source + ' is active.'\">\r\n                <strong>Value locked by parent condition</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"get_IsInformationalCondition()\">\r\n            <span [ngbTooltip]=\"'This condition has no numeral effects and is currently not causing any other conditions.'\">\r\n                <strong>Informational</strong>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow left-aligned lower\" *ngIf=\"conditionGain.radius\">\r\n            <input id=\"{{conditionGain.id+'radius'}}\" class=\"invisible\" type=\"checkbox\"\r\n                [(ngModel)]=\"conditionGain.showRadius\">\r\n            <label for=\"{{conditionGain.id+'radius'}}\" [ngbTooltip]=\"'Change radius'\"\r\n                *ngIf=\"conditionGain.radius && !condition.allowRadiusChange\"><i class='bi-gear-fill'></i>&nbsp;</label>\r\n            <strong>Radius&nbsp;</strong><span>\r\n                <button (click)=\"change_ConditionRadius(conditionGain, -5)\"\r\n                    *ngIf=\"(condition.allowRadiusChange || conditionGain.showRadius) && conditionGain.radius\"\r\n                    (disabled)=\"conditionGain.radius <= 5\">-5</button> {{conditionGain.radius}} feet\r\n                <button (click)=\"change_ConditionRadius(conditionGain, +5)\"\r\n                    *ngIf=\"(condition.allowRadiusChange || conditionGain.showRadius) && conditionGain.radius\">+5</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow list-item\" *ngIf=\"conditionGain.showChoices && condition.name == 'Persistent Damage'\">\r\n            <span>\r\n                Damage type and amount: <input type=\"text\" id=\"persistentDamage\" [(ngModel)]=\"conditionGain.choice\"\r\n                    maxLength=\"30\">\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"conditionGain.nextStage > 0\">\r\n            <span>\r\n                <strong>Affliction onset&nbsp;</strong>{{get_Duration(conditionGain.nextStage)}}\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"conditionGain.nextStage == -1 && conditionGain.choice && choices.length\">\r\n            <div class=\"list-item lower newrow problem\">\r\n                <strong>Affliction onset reached</strong>\r\n                <div class=\"newrow left-aligned\">\r\n                    <p>Make {{condition.traits.includes(\"Virulent\") ? \"two saving throws\" : \"a saving throw\"}} to\r\n                        determine the next stage of the affliction.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"conditionGain.nextStage != 0 && conditionGain.choice && choices.length\">\r\n            <span\r\n                *ngIf=\"choices.indexOf(conditionGain.choice) < 1 || choices[choices.indexOf(conditionGain.choice) - 1] == 'Onset'\">\r\n                <button (click)=\"remove_Condition(conditionGain)\">{{conditionGain.nextStage == -1 ? \"Success: \" :\r\n                    \"\"}}Recover\r\n                </button>\r\n            </span>\r\n            <span\r\n                *ngIf=\"choices.indexOf(conditionGain.choice) > 0 && choices[choices.indexOf(conditionGain.choice) - 1] != 'Onset'\">\r\n                <button (click)=\"change_ConditionStage(conditionGain, condition, choices, -1)\">{{conditionGain.nextStage\r\n                    == -1 ? \"Success: \" : \"\"}}Previous stage</button>\r\n            </span>\r\n            <span *ngIf=\"choices.indexOf(conditionGain.choice) < choices.length - 1\">\r\n                <button (click)=\"change_ConditionStage(conditionGain, condition, choices, 1)\">{{conditionGain.nextStage\r\n                    == -1 ? \"Failure: \" : \"\"}}Next stage</button>\r\n            </span>\r\n            <span *ngIf=\"choices.indexOf(conditionGain.choice) == choices.length - 1\">\r\n                <button (click)=\"change_ConditionStage(conditionGain, condition, choices, 0)\">{{conditionGain.nextStage\r\n                    == -1 ? \"Failure: \" : \"\"}}Remain at this stage\r\n                </button>\r\n            </span>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"condition.inputRequired && !conditionGain.acknowledgedInputRequired\">\r\n            <div class=\"list-item lower newrow problem\">\r\n                <strong>Player input required:</strong>\r\n                <div class=\"newrow left-aligned\">\r\n                    <p *ngFor=\"let inputRequired of condition.inputRequired.split('\\n'); trackBy:trackByIndex;\">\r\n                        {{inputRequired}}\r\n                    </p>\r\n                </div>\r\n                <button (click)=\"conditionGain.acknowledgedInputRequired = true\"\r\n                    [ngbTooltip]=\"'Acknowledge and hide message.'\">\r\n                    OK\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"newrow\" *ngIf=\"fullDisplay\">\r\n            <span>\r\n                <button (click)=\"toggle_Item(conditionGain.id+'description')\"\r\n                    [ngClass]=\"{'fancy-button':get_ShowItem()==conditionGain.id+'description'}\">\r\n                    {{get_ShowItem()==conditionGain.id+'description' ? \"Hide\" : \"Show\"}} Description\r\n                </button>\r\n            </span>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>\r\n<div [ngbCollapse]=\"fullDisplay && get_ShowItem()!=conditionGain.id+'description'\">\r\n    <div class=\"newrow lower left-aligned\" *ngFor=\"let desc of condition.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n        <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n        <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n            <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n        </ul>\r\n    </div>\r\n</div>","import { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { CharacterService } from './character.service';\r\nimport { Equipment } from './Equipment';\r\nimport { ItemsService } from './items.service';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\n\r\nexport class AnimalCompanionClass {\r\n    public readonly _className: string = this.constructor.name;\r\n    public ancestry: AnimalCompanionAncestry = new AnimalCompanionAncestry();\r\n    public hitPoints: number = 6;\r\n    public levels: AnimalCompanionLevel[] = [];\r\n    public name: string = \"\";\r\n    public specializations: AnimalCompanionSpecialization[] = [];\r\n    reset_levels(characterService: CharacterService) {\r\n        //Don't call it unless you are resetting the animal companion.\r\n        this.levels = characterService.get_AnimalCompanionLevels().map(level => Object.assign(new AnimalCompanionLevel(), level));\r\n    }\r\n    on_ChangeAncestry(characterService: CharacterService) {\r\n        if (this.ancestry.name) {\r\n            if (this.ancestry.gainItems.length) {\r\n                this.ancestry.gainItems.forEach(freeItem => {\r\n                    let items: Equipment[] = characterService.get_Companion().inventories[0][freeItem.type].filter((item: Equipment) => item.id == freeItem.id);\r\n                    items.forEach(item => {\r\n                        characterService.drop_InventoryItem(characterService.get_Companion(), characterService.get_Companion().inventories[0], item, false, true, true, freeItem.amount);\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    on_NewAncestry(characterService: CharacterService, itemsService: ItemsService) {\r\n        if (this.ancestry.name) {\r\n            if (this.ancestry.gainItems.length) {\r\n                this.ancestry.gainItems.forEach(freeItem => {\r\n                    let item: Equipment = itemsService.get_Items()[freeItem.type].filter((item: Equipment) => item.name.toLowerCase() == freeItem.name.toLowerCase())[0];\r\n                    let grantedItem = characterService.grant_InventoryItem(characterService.get_Companion(), characterService.get_Companion().inventories[0], item, false, false, true, freeItem.amount);\r\n                    freeItem.id = grantedItem.id;\r\n                });\r\n            }\r\n        }\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Consumable } from './Consumable';\r\n\r\nexport class AlchemicalElixir extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical Elixirs should be type \"alchemicalelixirs\" to be found in the database\r\n    readonly type = \"alchemicalelixirs\";\r\n    //Alchemical Elixirs can have benefits and drawbacks. Describe them here.\r\n    //Will be shown as \"Benefit\":\"...\"\r\n    public benefit: string = \"\";\r\n    //Will be shown as \"Drawback\":\"...\"\r\n    public drawback: string = \"\";\r\n}","import { Injectable } from '@angular/core';\r\nimport { Activity } from './Activity';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { CharacterService } from './character.service';\r\nimport { ItemsService } from './items.service';\r\nimport { Item } from './Item';\r\nimport { Equipment } from './Equipment';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { SpellsService } from './spells.service';\r\nimport { SpellCast } from './SpellCast';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { Hint } from './Hint';\r\nimport * as json_activities from '../assets/json/activities';\r\nimport { Creature } from './Creature';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ActivitiesService {\r\n\r\n    private activities: Activity[] = [];\r\n    private loading: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    get_Activities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.activities.filter(action => action.name == name || name == \"\");\r\n        } else {\r\n            return [new Activity()];\r\n        }\r\n    }\r\n\r\n    activate_Activity(creature: Creature, spellTarget: string, characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, gain: ActivityGain|ItemActivity, activity: Activity|ItemActivity, activated: boolean, changeAfter: boolean = true) {\r\n        //Find item, if it exists\r\n        let item: Equipment = null;\r\n        creature.inventories.forEach(inventory => {\r\n            inventory.allEquipment().filter((equipment: Equipment) => equipment.id == gain.source).forEach((equipment: Equipment) => {\r\n                if (equipment.activities.some((itemActivity: ItemActivity) => itemActivity === activity)) {\r\n                    item = equipment;\r\n                }\r\n                if (equipment.gainActivities.some((activityGain: ActivityGain) => activityGain === gain)) {\r\n                    item = equipment;\r\n                }\r\n            });\r\n        });\r\n        \r\n        if (activity.hints.length) {\r\n            characterService.set_HintsToChange(creature.type, activity.hints);\r\n        }\r\n\r\n        if (activated || activity.cooldownAfterEnd) {\r\n            let cooldown = activity.get_Cooldown(creature, characterService);\r\n            //Start cooldown, unless one is already in effect. If the activity ends and cooldownAfterEnd is set, start the cooldown anew.\r\n            if (cooldown && (!gain.activeCooldown || (!activated && activity.cooldownAfterEnd))) {\r\n                gain.activeCooldown = cooldown;\r\n            }\r\n        }\r\n\r\n        if (activated) {\r\n            let cooldown = activity.get_Cooldown(creature, characterService);\r\n            //Start cooldown, unless one is already in effect.\r\n            if (cooldown && !gain.activeCooldown) {\r\n                gain.activeCooldown = cooldown;\r\n            }\r\n            //Use charges\r\n            let maxCharges = activity.maxCharges(creature, characterService);\r\n            if (maxCharges || gain.sharedChargesID) {\r\n                //If this activity belongs to an item and has a sharedCharges ID, spend a charge for every activity with the same sharedChargesID and start their cooldown if necessary.\r\n                if (item && gain.sharedChargesID) {\r\n                    item.activities\r\n                        .filter(itemActivity => itemActivity.sharedChargesID == gain.sharedChargesID)\r\n                        .forEach(itemActivity => {\r\n                            if (itemActivity.maxCharges(creature, characterService)) {\r\n                                itemActivity.chargesUsed += 1;\r\n                            }\r\n                            let otherCooldown = itemActivity.get_Cooldown(creature, characterService)\r\n                            if (!itemActivity.activeCooldown && otherCooldown) {\r\n                                itemActivity.activeCooldown = otherCooldown;\r\n                            }\r\n                        })\r\n                    item.gainActivities\r\n                        .filter(activityGain => activityGain.sharedChargesID == gain.sharedChargesID)\r\n                        .forEach(activityGain => {\r\n                            let originalActivity = this.get_Activities(activityGain.name)[0];\r\n                            if (originalActivity?.maxCharges(creature, characterService)) {\r\n                                activityGain.chargesUsed += 1;\r\n                            }\r\n                            let otherCooldown = originalActivity?.get_Cooldown(creature, characterService) || 0\r\n                            if (!activityGain.activeCooldown && otherCooldown) {\r\n                                activityGain.activeCooldown = otherCooldown;\r\n                            }\r\n                        })\r\n                } else if (maxCharges) {\r\n                    gain.chargesUsed += 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (activated && activity.toggle) {\r\n            gain.active = true;\r\n            if (activity.maxDuration) {\r\n                gain.duration = activity.maxDuration;\r\n            }\r\n        } else {\r\n            gain.active = false;\r\n            gain.duration = 0;\r\n        }\r\n        characterService.set_ToChange(creature.type, \"activities\");\r\n        if (item) {characterService.set_ToChange(creature.type, \"inventory\");}\r\n\r\n        //Process various results of activating the activity\r\n\r\n        //One time effects\r\n        if (activity.onceEffects) {\r\n            activity.onceEffects.forEach(effect => {\r\n                if (!effect.source) {\r\n                    effect.source = activity.name;\r\n                }\r\n                characterService.process_OnceEffect(creature, effect);\r\n            })\r\n        }\r\n\r\n        //Gain Items on Activation\r\n        if (activity.gainItems.length && creature.type != \"Familiar\") {\r\n            if (activated) {\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.gainItems = activity.gainItems.map(gainItem => Object.assign(new ItemGain(), gainItem));\r\n                }\r\n                gain.gainItems.forEach(gainItem => {\r\n                    let newItem: Item = itemsService.get_CleanItems()[gainItem.type].filter((libraryItem: Item) => libraryItem.name.toLowerCase() == gainItem.name.toLowerCase())[0];\r\n                    if (newItem) {\r\n                        let grantedItem = characterService.grant_InventoryItem(creature as Character|AnimalCompanion, creature.inventories[0], newItem, false, false, true);\r\n                        gainItem.id = grantedItem.id;\r\n                        grantedItem.expiration = gainItem.expiration;\r\n                        if (grantedItem.get_Name) {\r\n                            grantedItem.grantedBy = \"(Granted by \" + activity.name + \")\";\r\n                        };\r\n                    } else {\r\n                        console.log(\"Failed granting \" + gainItem.type + \" \" + gainItem.name + \" - item not found.\")\r\n                    }\r\n                });\r\n            } else {\r\n                gain.gainItems.forEach(gainItem => {\r\n                    characterService.lose_GainedItem(creature as Character|AnimalCompanion, gainItem);\r\n                });\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.gainItems = [];\r\n                }\r\n            }\r\n        }\r\n\r\n        //Apply conditions.\r\n        //The condition source is the activity name.\r\n        if (activity.gainConditions) {\r\n            if (activated) {\r\n                activity.gainConditions.forEach((conditionGain, conditionIndex) => {\r\n                    let newConditionGain = Object.assign(new ConditionGain(), conditionGain);\r\n                    if (!newConditionGain.source) {\r\n                        newConditionGain.source = activity.name;\r\n                    }\r\n                    //If this ActivityGain has effectChoices prepared, and the conditionGain does not include a choice, apply the choice to the conditionGain.\r\n                    // The order of gain.effectChoices maps directly onto the order of the conditions, no matter if they have choices.\r\n                    if (!newConditionGain.choice) {\r\n                        newConditionGain.choice = gain.effectChoices?.[conditionIndex] || \"\";\r\n                    }\r\n                    characterService.add_Condition(creature, newConditionGain, false);\r\n                });\r\n            } else {\r\n                activity.gainConditions.forEach(gain => {\r\n                    let conditionGains = characterService.get_AppliedConditions(creature, gain.name).filter(conditionGain => conditionGain.source == gain.source || conditionGain.source == activity.name);\r\n                    if (conditionGains.length) {\r\n                        characterService.remove_Condition(creature, conditionGains[0], false);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        //Cast Spells\r\n        if (activity.castSpells) {\r\n            if (activated) {\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.castSpells = activity.castSpells.map(spellCast => Object.assign(new SpellCast(), spellCast));\r\n                }\r\n            }\r\n            gain.castSpells.forEach((cast, spellCastIndex) => {\r\n                let librarySpell = spellsService.get_Spells(cast.name)[0];\r\n                if (librarySpell) {\r\n                    if (activated && gain.spellEffectChoices[spellCastIndex].length) {\r\n                        cast.spellGain.choices = gain.spellEffectChoices[spellCastIndex];\r\n                    }\r\n                    spellsService.process_Spell(creature, spellTarget, characterService, itemsService, conditionsService, null, cast.spellGain, librarySpell, cast.level, activated, true, false);\r\n                }\r\n            })\r\n            if (!activated) {\r\n                if (gain.constructor == ActivityGain) {\r\n                    gain.castSpells = [];\r\n                }\r\n            }\r\n        }\r\n\r\n        //Exclusive activity activation\r\n        //If you activate one activity of an Item that has an exclusiveActivityID, deactivate the other active activities on it that have the same ID.\r\n        if (item && activated && activity.toggle && gain.exclusiveActivityID) {\r\n            if (item.activities.length + item.gainActivities.length > 1) {\r\n                item.gainActivities.filter((activityGain: ActivityGain) => activityGain !== gain && activityGain.active && activityGain.exclusiveActivityID == gain.exclusiveActivityID).forEach((activityGain: ActivityGain) => {\r\n                    this.activate_Activity(creature, creature.type, characterService, conditionsService, itemsService, spellsService, activityGain, this.get_Activities(activityGain.name)[0], false, false)\r\n                })\r\n                item.activities.filter((itemActivity: ItemActivity) => itemActivity !== gain && itemActivity.active && itemActivity.exclusiveActivityID == gain.exclusiveActivityID).forEach((itemActivity: ItemActivity) => {\r\n                    this.activate_Activity(creature, creature.type, characterService, conditionsService, itemsService, spellsService, itemActivity, itemActivity, false, false)\r\n                })\r\n            }\r\n        }\r\n\r\n        if (changeAfter) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    rest(creature: Creature, characterService: CharacterService) {\r\n        //Get all owned activity gains that have a cooldown active or have a current duration of -2 (until rest).\r\n        //Get the original activity information, and if its cooldown is exactly one day or until rest (-2), the activity gain's cooldown is reset.\r\n        characterService.get_OwnedActivities(creature).filter((gain: ActivityGain|ItemActivity) => gain.activeCooldown != 0 || gain.duration == -2).forEach(gain => {\r\n            let activity: Activity|ItemActivity;\r\n            if (gain.constructor == ItemActivity) {\r\n                activity = gain as ItemActivity;\r\n            } else {\r\n                activity = this.get_Activities(gain.name)[0];\r\n            }\r\n            if (gain.duration == -2 && activity) {\r\n                this.activate_Activity(creature, creature.type, characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, gain, activity, false, false);\r\n            }\r\n            if ([144000,-2].includes(activity.get_Cooldown(creature, characterService))) {\r\n                gain.activeCooldown = 0;\r\n                gain.chargesUsed = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    refocus(creature: Creature, characterService: CharacterService) {\r\n        //Get all owned activity gains that have a cooldown or a current duration of -3 (until refocus).\r\n        //Get the original activity information, and if its cooldown is until refocus (-3), the activity gain's cooldown is reset.\r\n        characterService.get_OwnedActivities(creature).filter((gain: ActivityGain|ItemActivity) => gain.activeCooldown == -3 || gain.duration == -3).forEach(gain => {\r\n            let activity: Activity|ItemActivity;\r\n            if (gain.constructor == ItemActivity) {\r\n                activity = gain as ItemActivity;\r\n            } else {\r\n                activity = this.get_Activities(gain.name)[0];\r\n            }\r\n            if (gain.duration == -3 && activity) {\r\n                this.activate_Activity(creature, creature.type, characterService, characterService.conditionsService, characterService.itemsService, characterService.spellsService, gain, activity, false, false);\r\n            }\r\n            if ((activity.get_Cooldown(creature, characterService)) == -3) {\r\n                gain.activeCooldown = 0;\r\n                gain.chargesUsed = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    tick_Activities(creature: Creature, characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, turns: number = 10) {\r\n        characterService.get_OwnedActivities(creature, undefined, true).filter(gain => gain.activeCooldown || gain.duration).forEach(gain => {\r\n            //Tick down the duration and the cooldown by the amount of turns.\r\n            let activity: Activity|ItemActivity;\r\n            if (gain.constructor == ItemActivity) {\r\n                activity = gain as ItemActivity;\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            } else {\r\n                activity = this.get_Activities(gain.name)[0];\r\n            }\r\n            // Reduce the turns by the amount you took from the duration, then apply the rest to the cooldown.\r\n            let remainingTurns = turns;\r\n            characterService.set_ToChange(creature.type, \"activities\");\r\n            if (gain.duration > 0) {\r\n                let difference = Math.min(gain.duration, remainingTurns);\r\n                gain.duration -= difference;\r\n                remainingTurns -= difference;\r\n                if (gain.duration == 0) {\r\n                    if (activity) {\r\n                        this.activate_Activity(creature, creature.type, characterService, conditionsService, itemsService, spellsService, gain, activity, false, false);\r\n                    }\r\n                }\r\n            }\r\n            //Only if the activity has a cooldown active, reduce the cooldown and restore charges. If the activity does not have a cooldown, the charges are permanently spent.\r\n            //If the activity has cooldownAfterEnd, only the remaining turns are applied.\r\n            let cooldownTurns = activity.cooldownAfterEnd ? remainingTurns : turns;\r\n            if (gain.activeCooldown) {\r\n                gain.activeCooldown = Math.max(gain.activeCooldown - cooldownTurns, 0)\r\n                if (gain.chargesUsed && gain.activeCooldown == 0) {\r\n                    gain.chargesUsed = 0;\r\n                }\r\n            }\r\n            if (gain.constructor == ItemActivity) {\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n        });\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.activities.length) {\r\n            this.loading = true;\r\n            this.load_Activities();\r\n            this.loading = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.activities.forEach(activity => {\r\n                activity.hints.forEach(hint => {\r\n                    hint.active = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Activities() {\r\n        this.activities = []\r\n        Object.keys(json_activities).forEach(key => {\r\n            this.activities.push(...json_activities[key].map(activity => Object.assign(new Activity(), activity)));\r\n        });\r\n        this.activities.forEach((activity: Activity) => {\r\n            activity.castSpells = activity.castSpells.map(cast => Object.assign(new SpellCast(), cast));\r\n            activity.hints = activity.hints.map(hint => Object.assign(new Hint(), hint));\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { WeaponRune } from 'src/app/WeaponRune';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { LoreChoice } from 'src/app/LoreChoice';\r\nimport { Rune } from 'src/app/Rune';\r\nimport { ArmorRune } from 'src/app/ArmorRune';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { WornItem } from 'src/app/WornItem';\r\nimport { Weapon } from 'src/app/Weapon';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Armor } from 'src/app/Armor';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { ConditionsService } from 'src/app/conditions.service';\r\n\r\n@Component({\r\n    selector: 'app-itemRunes',\r\n    templateUrl: './itemRunes.component.html',\r\n    styleUrls: ['./itemRunes.component.css']\r\n})\r\nexport class ItemRunesComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Equipment;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    @Input()\r\n    customItemStore: boolean = false;\r\n    @Input()\r\n    bladeAlly: boolean = false;\r\n\r\n\r\n    public newPropertyRune: { rune: Rune, inv: ItemCollection, disabled?: boolean }[];\r\n    public inventories: string[] = [];\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService,\r\n        private activitiesService: ActivitiesService,\r\n        private spellsService: SpellsService,\r\n        private conditionsService: ConditionsService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_WeaponPotencyRunes() {\r\n        let runes: { potency: number, rune?: Rune, disabled?: boolean }[] = [{ potency: 0 }];\r\n        if (this.item.potencyRune) {\r\n            runes.push({ potency: this.item.potencyRune, disabled: true });\r\n        }\r\n        if (this.itemStore) {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_CleanItems().weaponrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.weaponrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n            .sort(function (a, b) {\r\n                if (a.potency > b.potency) {\r\n                    return 1;\r\n                }\r\n                if (a.potency < b.potency) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });;\r\n    }\r\n\r\n    get_ArmorPotencyRunes() {\r\n        let runes: { potency: number, rune?: Rune, disabled?: boolean }[] = [{ potency: 0 }];\r\n        if (this.item.potencyRune) {\r\n            runes.push({ potency: this.item.potencyRune, disabled: true });\r\n        }\r\n        if (this.itemStore) {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_CleanItems().armorrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.armorrunes.filter(rune => rune.potency && rune.potency != this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ potency: rune.potency, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n        .sort(function (a, b) {\r\n            if (a.potency > b.potency) {\r\n                return 1;\r\n            }\r\n            if (a.potency < b.potency) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_StrikingRunes() {\r\n        let runes: { striking: number, rune?: Rune, disabled?: boolean }[] = [{ striking: 0, rune: new Rune() }];\r\n        if (this.item.strikingRune) {\r\n            runes.push({ striking: this.item.strikingRune, disabled: true });\r\n        }\r\n        let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n        if (this.itemStore) {\r\n            this.get_CleanItems().weaponrunes.filter(rune => rune.striking && rune.striking != this.item.strikingRune && rune.striking <= this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ striking: rune.striking, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ striking: rune.striking, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.weaponrunes.filter(rune => rune.striking && rune.striking != this.item.strikingRune && rune.striking <= this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ striking: rune.striking, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ striking: rune.striking, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n        .sort(function (a, b) {\r\n            if (a.striking > b.striking) {\r\n                return 1;\r\n            }\r\n            if (a.striking < b.striking) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_ResilientRunes() {\r\n        let runes: { resilient: number, rune?: Rune, disabled?: boolean }[] = [{ resilient: 0, rune: new Rune() }];\r\n        if (this.item.resilientRune) {\r\n            runes.push({ resilient: this.item.resilientRune, disabled: true });\r\n        }\r\n        let runeLimit = this.item.material?.[0]?.runeLimit || 0;\r\n        if (this.itemStore) {\r\n            this.get_CleanItems().armorrunes.filter(rune => rune.resilient && rune.resilient != this.item.resilientRune && rune.resilient <= this.item.potencyRune).forEach(rune => {\r\n                if (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    runeLimit ?\r\n                        runeLimit >= rune.level\r\n                        : true\r\n                ) {\r\n                    runes.push({ resilient: rune.resilient, rune: rune, disabled: false })\r\n                } else {\r\n                    runes.push({ resilient: rune.resilient, rune: rune, disabled: true })\r\n                }\r\n            })\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                inv.armorrunes.filter(rune => rune.resilient && rune.resilient != this.item.resilientRune && rune.resilient <= this.item.potencyRune).forEach(rune => {\r\n                    if (\r\n                        //Don't show runes that the item material doesn't support.\r\n                        runeLimit ?\r\n                            runeLimit >= rune.level\r\n                            : true\r\n                    ) {\r\n                        runes.push({ resilient: rune.resilient, rune: rune, disabled: false })\r\n                    } else {\r\n                        runes.push({ resilient: rune.resilient, rune: rune, disabled: true })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return Array.from(new Set(runes))\r\n        .sort(function (a, b) {\r\n            if (a.resilient > b.resilient) {\r\n                return 1;\r\n            }\r\n            if (a.resilient < b.resilient) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_PropertyRunes() {\r\n        let indexes: number[] = [];\r\n        //For each rune with the Saggorak trait, provide one less field.\r\n        let saggorak = this.item.propertyRunes.filter(rune => rune.traits.includes(\"Saggorak\")).length;\r\n        for (let index = 0; index < this.item.potencyRune - saggorak; index++) {\r\n            indexes.push(index);\r\n        }\r\n        let extraRune = this.item.material?.[0]?.extraRune || 0;\r\n        if (this.item.potencyRune == 3 && extraRune) {\r\n            for (let index = 0; index < extraRune; index++) {\r\n                indexes.push(indexes.length);\r\n            }\r\n        }\r\n        return indexes;\r\n    }\r\n\r\n    get_RuneCooldown(rune: Rune) {\r\n        //If any activity on this rune has a cooldown, return the lowest of these in a human readable format.\r\n        if (rune.activities && rune.activities.length && rune.activities.some(activity => activity.activeCooldown)) {\r\n            let lowestCooldown = Math.min(...rune.activities.filter(activity => activity.activeCooldown).map(activity => activity.activeCooldown));\r\n            return \" (Cooldown \" + this.timeService.get_Duration(lowestCooldown) + \")\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    get_Inventories() {\r\n        if (this.itemStore) {\r\n            return [this.get_CleanItems()];\r\n        } else {\r\n            return this.get_Character().inventories;\r\n        }\r\n    }\r\n\r\n    get_InitialPropertyRunes(index: number) {\r\n        let weapon = this.item;\r\n        //Start with one empty rune to select nothing.\r\n        let allRunes: { rune: Rune, inv: ItemCollection, disabled?: boolean }[] = [{ rune: new WeaponRune(), inv: null }];\r\n        allRunes[0].rune.name = \"\";\r\n        //Add the current choice, if the item has a rune at that index.\r\n        if (weapon.propertyRunes[index]) {\r\n            allRunes.push(this.newPropertyRune[index] as { rune: WeaponRune, inv: ItemCollection });\r\n        }\r\n        return allRunes;\r\n    }\r\n\r\n    get_WeaponPropertyRunes(index: number, inv: ItemCollection) {\r\n        let weapon: Weapon | WornItem;\r\n        if (this.item.type == \"wornitems\") {\r\n            weapon = this.item as WornItem\r\n        } else {\r\n            weapon = this.item as Weapon\r\n        }\r\n        //In the case of Handwraps of Mighty Blows, we need to compare the rune's requirements with the Fist weapon, but its potency rune requirements with the Handwraps.\r\n        //For this purpose, we use two different \"weapon\"s.\r\n        let weapon2 = this.item;\r\n        if ((weapon as WornItem).isHandwrapsOfMightyBlows) {\r\n            weapon2 = this.get_CleanItems().weapons.filter(weapon => weapon.name == \"Fist\")[0];\r\n        }\r\n        let allRunes: { rune: Rune, inv: ItemCollection, disabled?: boolean }[] = [];\r\n        //Add all runes either from the item store or from the inventories.\r\n        if (this.itemStore) {\r\n            inv.weaponrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: null });\r\n            });\r\n        } else {\r\n            inv.weaponrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: inv });\r\n            });\r\n        }\r\n        //Set all runes to disabled that have the same name as any that is already equipped.\r\n        allRunes.forEach((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }) => {\r\n            if (weapon.propertyRunes\r\n                .map(propertyRune => propertyRune.name)\r\n                .includes(rune.rune.name)) {\r\n                rune.disabled = true;\r\n            }\r\n        });\r\n        allRunes = allRunes.filter((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }) => !rune.rune.potency && !rune.rune.striking);\r\n        //Filter all runes whose requirements are not met.\r\n        allRunes.forEach((rune: { rune: WeaponRune, inv: ItemCollection, disabled?: boolean }, $index) => {\r\n            if (\r\n                (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    this.item.material?.[0]?.runeLimit ?\r\n                        this.item.material[0].runeLimit >= rune.rune.level\r\n                        : true\r\n                ) && (\r\n                    //Show runes that can only be applied to this item (by name).\r\n                    rune.rune.namereq ?\r\n                        weapon2.name == rune.rune.namereq\r\n                        : true\r\n                ) && (\r\n                    //Don't show runes whose opposite runes are equipped.\r\n                    rune.rune.runeblock ?\r\n                        !weapon.propertyRunes\r\n                            .map(propertyRune => propertyRune.name)\r\n                            .includes(rune.rune.runeblock)\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a trait if that trait is present on the weapon.\r\n                    rune.rune.traitreq ?\r\n                        weapon2.traits\r\n                            .filter(trait => trait.includes(rune.rune.traitreq)).length\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a range if the weapon has a value for that range.\r\n                    rune.rune.rangereq ?\r\n                        weapon2[rune.rune.rangereq] > 0\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a damage type if the weapon's dmgType contains either of the letters in the requirement.\r\n                    rune.rune.damagereq ?\r\n                        (\r\n                            (weapon2 as Weapon).dmgType &&\r\n                            (\r\n                                rune.rune.damagereq.split(\"\")\r\n                                    .filter(req => (weapon2 as Weapon).dmgType.includes(req)).length ||\r\n                                (weapon2 as Weapon).dmgType == \"modular\"\r\n                            )\r\n                        )\r\n                        : true\r\n                ) && (\r\n                    //Show Saggorak runes only if there are 2 rune slots available,\r\n                    //  or if one is available and this slot is taken (so you can replace the rune in this slot).\r\n                    rune.rune.traits.includes(\"Saggorak\") ?\r\n                        (\r\n                            weapon.freePropertyRunes > 1 ||\r\n                            (\r\n                                weapon.propertyRunes[index] &&\r\n                                weapon.freePropertyRunes == 1\r\n                            ) ||\r\n                            (\r\n                                weapon.propertyRunes[index] &&\r\n                                $index == 1\r\n                            )\r\n                        )\r\n                        : true\r\n                )\r\n            ) {\r\n                rune.disabled = false;\r\n            } else {\r\n                rune.disabled = true;\r\n            }\r\n        })\r\n        return allRunes.sort(function (a, b) {\r\n            if (a.rune.name > b.rune.name) {\r\n                return 1;\r\n            }\r\n            if (a.rune.name < b.rune.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.rune.level - b.rune.level);\r\n    }\r\n\r\n    get_ArmorPropertyRunes(index: number, inv: ItemCollection) {\r\n        let armor: Armor = this.item as Armor;\r\n        let allRunes: { rune: Rune, inv: ItemCollection, disabled?: boolean }[] = [];\r\n        //Add all runes either from the item store or from the inventories.\r\n        if (this.itemStore) {\r\n            inv.armorrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: null });\r\n            });\r\n        } else {\r\n            inv.armorrunes.forEach(rune => {\r\n                allRunes.push({ rune: rune, inv: inv });\r\n            });\r\n        }\r\n        //Set all runes to disabled that have the same name as any that is already equipped.\r\n        allRunes.forEach((rune: { rune: ArmorRune, inv: ItemCollection, disabled?: boolean }) => {\r\n            if (armor.propertyRunes\r\n                .map(propertyRune => propertyRune.name)\r\n                .includes(rune.rune.name)) {\r\n                rune.disabled = true;\r\n            }\r\n        });\r\n        allRunes = allRunes.filter((rune: { rune: ArmorRune, inv: ItemCollection, disabled?: boolean }) => !rune.rune.potency && !rune.rune.resilient);\r\n        //Filter all runes whose requirements are not met.\r\n        allRunes.forEach((rune: { rune: ArmorRune, inv: ItemCollection, disabled?: boolean }, $index) => {\r\n            if (\r\n                (\r\n                    //Don't show runes that the item material doesn't support.\r\n                    this.item.material?.[0]?.runeLimit ?\r\n                        this.item.material[0].runeLimit >= rune.rune.level\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a proficiency if the armor has that proficiency.\r\n                    rune.rune.profreq.length ?\r\n                        rune.rune.profreq.includes(armor.get_Proficiency())\r\n                        : true\r\n                ) && (\r\n                    //Show runes that require a nonmetallic armor if the armor is one.\r\n                    // Identifying nonmetallic armors is unclear in the rules, so we exclude Chain, Composite and Plate armors as well as armors with the word \"metal\" in their description.\r\n                    rune.rune.nonmetallic ?\r\n                        ![\"Chain\", \"Composite\", \"Plate\"].includes(armor.group) && !armor.desc.includes(\"metal\")\r\n                        : true\r\n                ) && (\r\n                    //Show Saggorak runes only if there are 2 rune slots available,\r\n                    //  or if one is available and this slot is taken (so you can replace the rune in this slot).\r\n                    rune.rune.traits.includes(\"Saggorak\") ?\r\n                        (\r\n                            armor.freePropertyRunes > 1 ||\r\n                            (\r\n                                armor.propertyRunes[index] &&\r\n                                armor.freePropertyRunes == 1\r\n                            ) ||\r\n                            (\r\n                                armor.propertyRunes[index] &&\r\n                                $index == 1\r\n                            )\r\n                        )\r\n                        : true\r\n                )\r\n            ) {\r\n                rune.disabled = false;\r\n            } else {\r\n                rune.disabled = true;\r\n            }\r\n        })\r\n\r\n        return allRunes.sort(function (a, b) {\r\n            if (a.rune.name > b.rune.name) {\r\n                return 1;\r\n            }\r\n            if (a.rune.name < b.rune.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }).sort((a, b) => a.rune.level - b.rune.level);\r\n    }\r\n\r\n    on_WeaponRuneChange(runeType: string, previousRune: number) {\r\n        let weapon: Equipment = this.item;\r\n        switch (runeType) {\r\n            case \"potency\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != weapon.potencyRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: WeaponRune = this.get_CleanItems().weaponrunes.filter(rune => rune.potency == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (weapon.potencyRune > 0) {\r\n                        let insertedRune: WeaponRune = this.get_Character().inventories[0].weaponrunes.filter(rune => rune.potency == weapon.potencyRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                //If the potency rune has been lowered and the striking rune has become invalid, throw out the striking rune\r\n                if (weapon.potencyRune < weapon.strikingRune) {\r\n                    let oldStriking: number = weapon.strikingRune;\r\n                    weapon.strikingRune = 0;\r\n                    this.on_WeaponRuneChange(\"striking\", oldStriking);\r\n                }\r\n                //As long as there are more property Runes assigned than allowed, throw out the last property rune\r\n                while (weapon.freePropertyRunes < 0) {\r\n                    if (!this.itemStore) {\r\n                        this.remove_WeaponPropertyRune(weapon.propertyRunes.length - 1);\r\n                    }\r\n                    weapon.propertyRunes.splice(weapon.propertyRunes.length - 1, 1);\r\n                }\r\n                break;\r\n            case \"striking\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != weapon.strikingRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: WeaponRune = this.get_CleanItems().weaponrunes.filter(rune => rune.striking == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (weapon.strikingRune > 0) {\r\n                        let insertedRune: WeaponRune = this.get_Character().inventories[0].weaponrunes.filter(rune => rune.striking == weapon.strikingRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        if (this.item.equipped) {\r\n            this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_ArmorRuneChange(runeType: string, previousRune: number) {\r\n        let armor: Equipment = this.item;\r\n        switch (runeType) {\r\n            case \"potency\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != armor.potencyRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: ArmorRune = this.get_CleanItems().armorrunes.filter(rune => rune.potency == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (armor.potencyRune > 0) {\r\n                        let insertedRune: ArmorRune = this.get_Character().inventories[0].armorrunes.filter(rune => rune.potency == armor.potencyRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                //If the potency rune has been lowered and the resilient rune has become invalid, throw out the resilient rune\r\n                if (armor.potencyRune < armor.resilientRune) {\r\n                    let oldResilient: number = armor.resilientRune;\r\n                    armor.resilientRune = 0;\r\n                    this.on_ArmorRuneChange(\"resilient\", oldResilient);\r\n                }\r\n                //As long as there are more property Runes assigned than allowed, throw out the last property rune\r\n                while (armor.freePropertyRunes < 0) {\r\n                    if (!this.itemStore) {\r\n                        this.remove_ArmorPropertyRune(armor.propertyRunes.length - 1);\r\n                    }\r\n                    armor.propertyRunes.splice(armor.propertyRunes.length - 1, 1);\r\n                }\r\n                break;\r\n            case \"resilient\":\r\n                //If the rune has changed, the old one needs to be added to the inventory, and the new one needs to be removed from the inventory\r\n                //If a stack exists, change the amount instead.\r\n                //Don't do any of that if we're in the item store instead of the inventory.\r\n                if (!this.itemStore && previousRune != armor.resilientRune) {\r\n                    if (previousRune > 0) {\r\n                        let extractedRune: ArmorRune = this.get_CleanItems().armorrunes.filter(rune => rune.resilient == previousRune)[0];\r\n                        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], extractedRune, false, false, false, 1);\r\n                    }\r\n                    if (armor.resilientRune > 0) {\r\n                        let insertedRune: ArmorRune = this.get_Character().inventories[0].armorrunes.filter(rune => rune.resilient == armor.resilientRune)[0];\r\n                        this.characterService.drop_InventoryItem(this.get_Character(), this.get_Character().inventories[0], insertedRune, false, false, false, 1);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        if (this.item.equipped) {\r\n            this.characterService.set_ToChange(\"Character\", \"defense\");\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    add_WeaponPropertyRune(index: number) {\r\n        let weapon = this.item;\r\n        let rune = this.newPropertyRune[index].rune;\r\n        let inv = this.newPropertyRune[index].inv;\r\n        if (!weapon.propertyRunes[index] || rune !== weapon.propertyRunes[index]) {\r\n            //If there is a rune in this slot, return the old rune to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (weapon.propertyRunes[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_WeaponPropertyRune(index);\r\n                }\r\n                weapon.propertyRunes.splice(index, 1);\r\n            }\r\n            //Then add the new rune to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (rune.name != \"\") {\r\n                //Add a copy of the rune to the item\r\n                let newLength = weapon.propertyRunes.push(Object.assign(new WeaponRune, JSON.parse(JSON.stringify(rune))));\r\n                weapon.propertyRunes[newLength - 1] = this.characterService.reassign(weapon.propertyRunes[newLength - 1]);\r\n                let newRune = weapon.propertyRunes[newLength - 1];\r\n                newRune.amount = 1;\r\n                newRune.loreChoices = newRune.loreChoices.map(choice => Object.assign(new LoreChoice(), choice));\r\n                //If we are not in the item store, remove the inserted rune from the inventory, either by decreasing the amount or by dropping the item.\r\n                //Also add the rune's lore if needed.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, rune, false, false, false, 1);\r\n                    if ((weapon.propertyRunes[newLength - 1] as WeaponRune).loreChoices.length) {\r\n                        this.characterService.add_RuneLore(weapon.propertyRunes[newLength - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ToChange(\"Character\", \"attacks\");\r\n        this.set_PropertyRuneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_WeaponPropertyRune(index: number) {\r\n        let weapon: Equipment = this.item;\r\n        let oldRune: Rune = weapon.propertyRunes[index];\r\n        //Deactivate any active toggled activities of the removed rune.\r\n        oldRune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n            this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n        })\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldRune, false, false, false, 1);\r\n        //Remove the Ancestral Echoing Lore if applicable.\r\n        if (oldRune.loreChoices.length) {\r\n            this.characterService.remove_RuneLore(oldRune);\r\n        }\r\n    }\r\n\r\n    add_ArmorPropertyRune(index: number) {\r\n        let armor = this.item;\r\n        let rune = this.newPropertyRune[index].rune;\r\n        let inv = this.newPropertyRune[index].inv;\r\n        if (!armor.propertyRunes[index] || rune !== armor.propertyRunes[index]) {\r\n            //If there is a rune in this slot, return the old rune to the inventory, unless we are in the item store. Then remove it from the item.\r\n            if (armor.propertyRunes[index]) {\r\n                if (!this.itemStore) {\r\n                    this.remove_ArmorPropertyRune(index);\r\n                }\r\n                armor.propertyRunes.splice(index, 1);\r\n            }\r\n            //Then add the new rune to the item and (unless we are in the item store) remove it from the inventory.\r\n            if (rune.name != \"\") {\r\n                //Add a copy of the rune to the item\r\n                let newLength = armor.propertyRunes.push(Object.assign(new ArmorRune, JSON.parse(JSON.stringify(rune))));\r\n                armor.propertyRunes[newLength - 1] = this.characterService.reassign(armor.propertyRunes[newLength - 1]);\r\n                let newRune = armor.propertyRunes[newLength - 1];\r\n                newRune.amount = 1;\r\n                newRune.loreChoices = newRune.loreChoices.map(choice => Object.assign(new LoreChoice(), choice));\r\n                //If we are not in the item store, remove the inserted rune from the inventory, either by decreasing the amount or by dropping the item.\r\n                if (!this.itemStore) {\r\n                    this.characterService.drop_InventoryItem(this.get_Character(), inv, rune, false, false, false, 1);\r\n\r\n                }\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.set_ToChange(rune as ArmorRune);\r\n        this.set_PropertyRuneNames();\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_ArmorPropertyRune(index: number) {\r\n        let armor: Equipment = this.item;\r\n        let oldRune: Rune = armor.propertyRunes[index];\r\n        this.set_ToChange(oldRune as ArmorRune);\r\n        //Deactivate any active toggled activities of the removed rune.\r\n        oldRune.activities.filter(activity => activity.toggle && activity.active).forEach(activity => {\r\n            this.activitiesService.activate_Activity(this.get_Character(), \"Character\", this.characterService, this.conditionsService, this.itemsService, this.spellsService, activity, activity, false);\r\n        })\r\n        this.characterService.grant_InventoryItem(this.get_Character(), this.get_Character().inventories[0], oldRune, false, false, false, 1);\r\n    }\r\n\r\n    get_Title(rune: Rune) {\r\n        if (this.itemStore && rune?.price) {\r\n            return \"Price \" + this.get_Price(rune);\r\n        }\r\n    }\r\n\r\n    get_Price(rune: Rune) {\r\n        if (rune.price) {\r\n            if (rune.price == 0) {\r\n                return \"\";\r\n            } else {\r\n                let price: number = rune.price;\r\n                let priceString: string = \"\";\r\n                if (price >= 100) {\r\n                    priceString += Math.floor(price / 100) + \"gp\";\r\n                    price %= 100;\r\n                    if (price >= 10) { priceString += \" \"; }\r\n                }\r\n                if (price >= 10) {\r\n                    priceString += Math.floor(price / 10) + \"sp\";\r\n                    price %= 10;\r\n                    if (price >= 1) { priceString += \" \"; }\r\n                }\r\n                if (price >= 1) {\r\n                    priceString += price + \"cp\";\r\n                }\r\n                return priceString;\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    set_ToChange(rune: ArmorRune) {\r\n        rune.hints?.forEach(hint => {\r\n            this.characterService.set_TagsToChange(\"Character\", hint.showon);\r\n        })\r\n        if (rune.effects?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"effects\");\r\n        }\r\n        if (rune.activities?.length) {\r\n            this.characterService.set_ToChange(\"Character\", \"activities\");\r\n        }\r\n    }\r\n\r\n    set_PropertyRuneNames() {\r\n        this.newPropertyRune =\r\n            (this.item.propertyRunes ? [\r\n                (this.item.propertyRunes[0] ? { rune: this.item.propertyRunes[0], inv: null } : { rune: new Rune(), inv: null }),\r\n                (this.item.propertyRunes[1] ? { rune: this.item.propertyRunes[1], inv: null } : { rune: new Rune(), inv: null }),\r\n                (this.item.propertyRunes[2] ? { rune: this.item.propertyRunes[2], inv: null } : { rune: new Rune(), inv: null }),\r\n                (this.item.propertyRunes[3] ? { rune: this.item.propertyRunes[3], inv: null } : { rune: new Rune(), inv: null })\r\n            ] : [{ rune: new Rune(), inv: null }, { rune: new Rune(), inv: null }, { rune: new Rune(), inv: null }])\r\n        this.newPropertyRune.filter(rune => rune.rune.name == \"New Item\").forEach(rune => {\r\n            rune.rune.name = \"\";\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.set_PropertyRuneNames();\r\n    }\r\n\r\n}\r\n","<!--Changing Weapon Runes-->\r\n<div class=\"list-item\" *ngIf=\"['weapon', 'armor'].includes(item.moddable) || customItemStore\">\r\n    <div class=\"newrow\" *ngIf=\"item.moddable=='weapon' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon')\">\r\n        <strong>Potency rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.potencyRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.potencyRune\" (ngModelChange)=\"on_WeaponRuneChange('potency', previousRune)\">\r\n                <option *ngFor=\"let potency of get_WeaponPotencyRunes(); trackBy:trackByIndex;\" [ngValue]=\"potency.potency\"\r\n                [disabled]=\"potency.disabled\" title=\"{{get_Title(potency.rune)}}\">\r\n                    {{item.get_Potency(potency.potency)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.moddable=='armor' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Armor')\">\r\n        <strong>Potency rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.potencyRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.potencyRune\" (ngModelChange)=\"on_ArmorRuneChange('potency', previousRune)\">\r\n                <option *ngFor=\"let potency of get_ArmorPotencyRunes(); trackBy:trackByIndex;\" [ngValue]=\"potency.potency\"\r\n                [disabled]=\"potency.disabled\" title=\"{{get_Title(potency.rune)}}\">\r\n                    {{item.get_Potency(potency.potency)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.potencyRune > 0 && (item.moddable=='weapon' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon'))\">\r\n        <strong>Striking rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.strikingRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.strikingRune\" (ngModelChange)=\"on_WeaponRuneChange('striking', previousRune)\">\r\n                <option *ngFor=\"let striking of get_StrikingRunes(); trackBy:trackByIndex;\" [ngValue]=\"striking.striking\"\r\n                [disabled]=\"striking.disabled\" title=\"{{get_Title(striking.rune)}}\">\r\n                    {{item.get_Striking(striking.striking)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.potencyRune > 0 && (item.moddable=='armor' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Armor'))\">\r\n        <strong>Resilient rune</strong>\r\n        <ng-container *ngFor=\"let previousRune of [item.resilientRune]; trackBy:trackByIndex;\">\r\n            <select [(ngModel)]=\"item.resilientRune\" (ngModelChange)=\"on_ArmorRuneChange('resilient', previousRune)\">\r\n                <option *ngFor=\"let resilient of get_ResilientRunes(); trackBy:trackByIndex;\" [ngValue]=\"resilient.resilient\"\r\n                [disabled]=\"resilient.disabled\" title=\"{{get_Title(resilient.rune)}}\">\r\n                    {{item.get_Resilient(resilient.resilient)}}</option>\r\n            </select>\r\n        </ng-container>\r\n    </div>\r\n    <ng-container *ngIf=\"item.potencyRune > 0 && (item.moddable=='weapon' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Weapon'))\">\r\n        <div class=\"newrow\" *ngFor=\"let index of get_PropertyRunes(); trackBy:trackByIndex;\">\r\n            <strong *ngIf=\"index == 0\">Property runes</strong>\r\n            <span *ngIf=\"index != 0\">&nbsp;</span>\r\n            <select [(ngModel)]=\"newPropertyRune[index]\" (ngModelChange)=\"add_WeaponPropertyRune(index)\" [disabled]=\"!item.propertyRunes[index-1] && index > 0\">\r\n                <ng-container *ngFor=\"let rune of get_InitialPropertyRunes(index); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                    <option [ngValue]=\"rune\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.propertyRunes[index]>\r\n                        <!--Blank option to deselect-->\r\n                    </option>\r\n                    <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current rune\">\r\n                        <option [ngValue]=\"rune\">\r\n                            {{rune.rune.name}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n                    <optgroup label=\"{{itemStore ? 'Available runes' : inv.get_Name(characterService)}}\" *ngIf=\"get_WeaponPropertyRunes(index, inv).length\">\r\n                        <option *ngFor=\"let rune of get_WeaponPropertyRunes(index, inv); trackBy:trackByIndex;\" [ngValue]=\"rune\" [disabled]=\"rune.disabled\"\r\n                        title=\"{{get_Title(rune.rune)}}\">\r\n                            {{rune.rune.amount > 1 ? rune.rune.amount+\" \" : \"\"}}{{rune.rune.name}}{{get_RuneCooldown(rune.rune)}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n            </select>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"item.potencyRune > 0 && (item.moddable=='armor' || (customItemStore && item.moddable=='-' && item.constructor.name == 'Armor'))\">\r\n        <div class=\"newrow\" *ngFor=\"let index of get_PropertyRunes(); trackBy:trackByIndex;\">\r\n            <strong *ngIf=\"index == 0\">Property runes</strong>\r\n            <span *ngIf=\"index != 0\">&nbsp;</span>\r\n            <select [(ngModel)]=\"newPropertyRune[index]\" (ngModelChange)=\"add_ArmorPropertyRune(index)\" [disabled]=\"!item.propertyRunes[index-1] && index > 0\">\r\n                <ng-container *ngFor=\"let rune of get_InitialPropertyRunes(index); let initialRuneIndex = index; trackBy:trackByIndex;\">\r\n                    <option [ngValue]=\"rune\" *ngIf=\"initialRuneIndex == 0\" [selected]=!item.propertyRunes[index]>\r\n                        <!--Blank option to deselect-->\r\n                    </option>\r\n                    <optgroup *ngIf=\"initialRuneIndex == 1\" label=\"Current rune\">\r\n                        <option [ngValue]=\"rune\">\r\n                            {{rune.rune.name}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let inv of get_Inventories(); trackBy:trackByIndex;\">\r\n                    <optgroup label=\"{{itemStore ? 'Available runes' : inv.get_Name(characterService)}}\" *ngIf=\"get_ArmorPropertyRunes(index, inv).length\">\r\n                        <option *ngFor=\"let rune of get_ArmorPropertyRunes(index, inv); trackBy:trackByIndex;\" [ngValue]=\"rune\" [disabled]=\"rune.disabled\"\r\n                        title=\"{{get_Title(rune.rune)}}\">\r\n                            {{rune.rune.amount > 1 ? rune.rune.amount+\" \" : \"\"}}{{rune.rune.name}}{{get_RuneCooldown(rune.rune)}}\r\n                        </option>\r\n                    </optgroup>\r\n                </ng-container>\r\n            </select>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SpellsService } from '../spells.service';\r\nimport { CharacterService } from '../character.service';\r\nimport { Spell } from '../Spell';\r\nimport { SpellCasting } from '../SpellCasting';\r\nimport { SpellChoice } from '../SpellChoice';\r\nimport { SpellGain } from '../SpellGain';\r\nimport { TraitsService } from '../traits.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-spellLibrary',\r\n    templateUrl: './spellLibrary.component.html',\r\n    styleUrls: ['./spellLibrary.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpellLibraryComponent implements OnInit {\r\n\r\n    private showList: number = -1;\r\n    private showItem: string = \"\";\r\n    public id: number = 0;\r\n    public hover: number = 0;\r\n    public wordFilter: string = \"\";\r\n    public traditionFilter: string = \"\";\r\n    public spellSource: string = \"spell library\";\r\n    public showLevel: number = 0;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private spellsService: SpellsService,\r\n        private characterService: CharacterService,\r\n        private traitsService: TraitsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(level: number) {\r\n        if (this.showList == level) {\r\n            this.showList = -1;\r\n        } else {\r\n            this.showList = level;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    toggle_Tradition(tradition: string) {\r\n        this.traditionFilter = tradition;\r\n    }\r\n\r\n    get_ShowTradition() {\r\n        return this.traditionFilter;\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_Item(id: string) {\r\n        if (this.showItem == id) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = id;\r\n        }\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    set_Changed(target: string) {\r\n        this.characterService.set_Changed(target);\r\n    }\r\n\r\n    check_Filter() {\r\n        if (this.wordFilter.length < 5 && this.showList == -2) {\r\n            this.showList = -1;\r\n        }\r\n    }\r\n\r\n    set_Filter() {\r\n        if (this.wordFilter) {\r\n            this.showList = -2;\r\n        }\r\n    }\r\n\r\n    toggleSpellLibraryMenu() {\r\n        this.characterService.toggle_Menu(\"spelllibrary\");\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.characterService.get_SpellLibraryMenuState();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Spells(name: string = \"\") {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellsFromSource() {\r\n        switch (this.spellSource.toLowerCase()) {\r\n            case \"spell library\":\r\n                return this.get_Spells();\r\n            case \"your spellbook\":\r\n                return this.get_Character().class?.spellBook.map(learned => this.get_Spells(learned.name)[0]).filter(spell => spell);\r\n        }\r\n    }\r\n\r\n    get_VisibleSpells(level: number) {\r\n        return this.get_SpellsFromSource().filter((spell: Spell) =>\r\n            (\r\n                (spell.levelreq == level && !spell.traits.includes(\"Cantrip\")) ||\r\n                (level == 0 && spell.traits.includes(\"Cantrip\"))\r\n            ) &&\r\n            (\r\n                !this.wordFilter || (\r\n                    this.wordFilter && (\r\n                        spell.name\r\n                            .concat(spell.desc)\r\n                            .concat(spell.area)\r\n                            .concat(spell.targets)\r\n                            .concat(spell.range)\r\n                            .toLowerCase()\r\n                            .includes(this.wordFilter.toLowerCase()) ||\r\n                        spell.traits.filter(trait => trait.toLowerCase().includes(this.wordFilter.toLowerCase())).length\r\n                    )\r\n                )\r\n            ) && (\r\n                (\r\n                    !this.traditionFilter && !spell.traditions.includes(\"Focus\")\r\n                ) || (\r\n                    this.traditionFilter && spell.traditions.includes(this.traditionFilter)\r\n                )\r\n            )\r\n        ).sort((a,b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            \r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            \r\n            return 0;\r\n        });\r\n    }\r\n\r\n    get_WizardSpellCasting() {\r\n        let casting: SpellCasting = this.get_Character().class?.spellCasting.find(casting => casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && casting.charLevelAvailable <= this.get_Character().level);\r\n        return casting || new SpellCasting(\"Innate\");\r\n    }\r\n\r\n    get_BardSpellCasting() {\r\n        let character = this.get_Character();\r\n        let casting: SpellCasting = character.class?.spellCasting.find(casting => casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && casting.charLevelAvailable <= character.level);\r\n        if (this.have_Feat(\"Esoteric Polymath\")) {\r\n            return casting || new SpellCasting(\"Innate\");\r\n        } else {\r\n            return new SpellCasting(\"Innate\");\r\n        }\r\n    }\r\n\r\n    get_SorcererSpellCasting() {\r\n        let character = this.get_Character();\r\n        let casting: SpellCasting = character.class?.spellCasting.find(casting => casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\" && casting.charLevelAvailable <= character.level);\r\n        if (this.have_Feat(\"Arcane Evolution\")) {\r\n            return casting || new SpellCasting(\"Innate\");\r\n        } else {\r\n            return new SpellCasting(\"Innate\");\r\n        }\r\n    }\r\n\r\n    get_School() {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level).find(taken =>\r\n            [\"Abjuration School\", \"Conjuration School\", \"Divination School\", \"Enchantment School\", \"Evocation School\",\r\n                \"Illusion School\", \"Necromancy School\", \"Transmutation School\", \"Universalist Wizard\"].includes(taken.name)\r\n        )?.name || \"\";\r\n    }\r\n\r\n    get_LearningAvailable(wizardCasting: SpellCasting, bardCasting: SpellCasting, sorcererCasting: SpellCasting) {\r\n        if (wizardCasting.className == \"Wizard\" && wizardCasting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\")) {\r\n            let result: string = \"You can currently learn the following number of spells as a wizard:\\n\";\r\n            let school = this.get_School();\r\n            let charLevel: number = this.get_Character().level;\r\n            let overdraw: number = 0;\r\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].forEach(level => {\r\n                let wizardLearned: number = this.get_SpellsLearned(\"\", 'wizard', level).length;\r\n                wizardLearned += overdraw;\r\n                overdraw = 0;\r\n                let schoolLearned: number = this.get_SpellsLearned(\"\", 'school', level).length;\r\n                let wizardAvailable: number = 0;\r\n                let schoolAvailable: number = 0;\r\n                let adaptedCantripAvailable: number = 0;\r\n                let adaptiveAdeptCantripAvailable: number = 0;\r\n                let adaptiveAdept1stLevelAvailable: number = 0;\r\n                if (level == 0) {\r\n                    wizardAvailable = wizardCasting.spellBookSlots[level];\r\n                    adaptedCantripAvailable = this.have_Feat(\"Adapted Cantrip\") ? 1 : 0;\r\n                    adaptiveAdeptCantripAvailable = this.have_Feat(\"Adaptive Adept: Cantrip\") ? 1 : 0;\r\n                } else {\r\n                    for (let index = level * 2 - 1; index <= charLevel && index <= level * 2; index++) {\r\n                        wizardAvailable += wizardCasting.spellBookSlots[index];\r\n                    }\r\n                }\r\n                if (level == 1 && school) {\r\n                    if (school == \"Universalist Wizard\") {\r\n                        wizardAvailable += 1\r\n                    } else {\r\n                        schoolAvailable = 1;\r\n                    }\r\n                }\r\n                if (level == 1) {\r\n                    adaptiveAdept1stLevelAvailable = this.have_Feat(\"Adaptive Adept: 1st-Level Spell\") ? 1 : 0;\r\n                }\r\n                if (wizardAvailable < wizardLearned) {\r\n                    overdraw += wizardLearned - wizardAvailable;\r\n                    wizardLearned = wizardAvailable;\r\n                }\r\n                if (wizardAvailable || schoolAvailable) {\r\n                    result += \"\\n\" + (wizardAvailable - wizardLearned - adaptedCantripAvailable - adaptiveAdeptCantripAvailable - adaptiveAdept1stLevelAvailable) + \" of \" + (wizardAvailable - adaptedCantripAvailable - adaptiveAdeptCantripAvailable - adaptiveAdept1stLevelAvailable) + (level == 0 ? \" Arcane Cantrips\" : \" Arcane spell(s) up to level \" + level);\r\n                    if (schoolAvailable) {\r\n                        result += \"\\n\" + (schoolAvailable - schoolLearned) + \" of \" + schoolAvailable + \" Arcane spell(s) of the \" + school.toLowerCase() + \" up to level \" + level;\r\n                    }\r\n                }\r\n                if (adaptedCantripAvailable) {\r\n                    let adaptedCantripLearned: number = this.get_SpellsLearned(\"\", 'adaptedcantrip').length;\r\n                    result += \"\\n\" + (1 - adaptedCantripLearned) + \" of \" + 1 + \" non-Arcane Cantrips via Adapted Cantrip\";\r\n                }\r\n                if (adaptiveAdeptCantripAvailable) {\r\n                    let adaptedcantrip = this.get_SpellsLearned(\"\", 'adaptedcantrip')[0];\r\n                    if (adaptedcantrip) {\r\n                        let originalSpell = this.get_Spells(adaptedcantrip.name)[0];\r\n                        if (originalSpell) {\r\n                            let adaptiveAdeptLearned: number = this.get_SpellsLearned(\"\", 'adaptiveadept').length;\r\n                            result += \"\\n\" + (1 - adaptiveAdeptLearned) + \" of \" + 1 + \" non-Arcane Cantrips of the following traditions via Adaptive Adept: \" + originalSpell.traditions.join(\", \");\r\n                        }\r\n                    }\r\n                }\r\n                if (adaptiveAdept1stLevelAvailable) {\r\n                    let adaptedcantrip = this.get_SpellsLearned(\"\", 'adaptedcantrip')[0];\r\n                    if (adaptedcantrip) {\r\n                        let originalSpell = this.get_Spells(adaptedcantrip.name)[0];\r\n                        if (originalSpell) {\r\n                            let adaptiveAdeptLearned: number = this.get_SpellsLearned(\"\", 'adaptiveadept').length;\r\n                            result += \"\\n\" + (1 - adaptiveAdeptLearned) + \" of \" + 1 + \" non-Arcane 1st-level spell of the following traditions via Adaptive Adept: \" + originalSpell.traditions.join(\", \");\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            return result || \"\";\r\n        } else if (bardCasting.className == \"Bard\" && bardCasting.castingType == \"Spontaneous\" && (this.get_EsotericPolymathAllowed(bardCasting, this.traditionFilter))) {\r\n            let result = \"You can add any spell in your repertoire to your spellbook for free via esoteric polymath. You can learn and cast spells of the following traditions using esoteric polymath:\\n\";\r\n            [\"Arcane\", \"Divine\", \"Occult\", \"Primal\"].forEach(tradition => {\r\n                if (this.get_EsotericPolymathAllowed(bardCasting, tradition)) {\r\n                    result += \"\\n\" + tradition\r\n                }\r\n            });\r\n            return result || \"\";\r\n        } else if (sorcererCasting.className == \"Sorcerer\" && sorcererCasting.castingType == \"Spontaneous\" && (this.get_ArcaneEvolutionAllowed(sorcererCasting, this.traditionFilter))) {\r\n            let result = \"You can add any spell in your repertoire to your spellbook for free via arcane evolution.\";\r\n            return result || \"\";\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    get_AvailableForLearning(casting: SpellCasting, spell: Spell, adaptedCantrip: boolean = false, adaptiveAdept: boolean = false) {\r\n        if (!adaptedCantrip && casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\" || this.get_Character().get_SpellListSpell(spell.name).length)) {\r\n            return !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n        if (adaptedCantrip && casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter != \"Arcane\")) {\r\n            return this.have_Feat(\"Adapted Cantrip\") && spell.traits.includes(\"Cantrip\") && !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n        if (adaptiveAdept && casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter != \"Arcane\")) {\r\n            return (this.have_Feat(\"Adaptive Adept: Cantrip\") && spell.traits.includes(\"Cantrip\") && !this.get_SpellsLearned(spell.name).length) ||\r\n                (this.have_Feat(\"Adaptive Adept: 1st-Level Spell\") && spell.levelreq == 1 && !this.get_SpellsLearned(spell.name).length);\r\n        }\r\n        if (casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Occult\" || this.get_Character().get_SpellListSpell(spell.name).length)) {\r\n            return !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n        if (casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\" || this.get_Character().get_SpellListSpell(spell.name).length)) {\r\n            return !this.get_SpellsLearned(spell.name).length;\r\n        }\r\n    }\r\n\r\n    get_SpellsLearned(name: string = \"\", source: string = \"\", level: number = -1) {\r\n        return this.get_Character().get_SpellsLearned(name, source, level);\r\n    }\r\n\r\n    can_Learn(casting: SpellCasting, level: number, spell: Spell, source: string) {\r\n        let character = this.get_Character();\r\n        if (source == \"wizard\" && casting.className == \"Wizard\" && (spell.traditions.includes(\"Arcane\") || character.get_SpellListSpell(spell.name).length)) {\r\n            let charLevel: number = character.level;\r\n            let wizardLearned: number = this.get_SpellsLearned(\"\", 'wizard').filter(learned => learned.level == level && (learned.level > 0 || level == 0)).length;\r\n            let wizardLearnedAll: number = this.get_SpellsLearned(\"\", 'wizard').filter(learned => (level > 0 && learned.level > 0) || (level == 0 && learned.level == 0)).length;\r\n            let wizardAvailable = 0;\r\n            let wizardAvailableAll = 0;\r\n            let adaptedCantripAvailable = this.have_Feat(\"Adapted Cantrip\") ? 1 : 0;\r\n            let adaptiveAdeptCantripAvailable = this.have_Feat(\"Adaptive Adept: Cantrip\") ? 1 : 0;\r\n            let adaptiveAdept1stLevelAvailable = this.have_Feat(\"Adaptive Adept: 1st-Level Spell\") ? 1 : 0;\r\n            if (level == 0) {\r\n                wizardAvailable = casting.spellBookSlots[level] - adaptedCantripAvailable - adaptiveAdeptCantripAvailable;\r\n                wizardAvailableAll = casting.spellBookSlots[level] - adaptedCantripAvailable - adaptiveAdeptCantripAvailable;\r\n            } else {\r\n                for (let index = level * 2 - 1; index <= charLevel; index++) {\r\n                    wizardAvailable += casting.spellBookSlots[index];\r\n                }\r\n                for (let index = 1; index <= charLevel; index++) {\r\n                    wizardAvailableAll += casting.spellBookSlots[index];\r\n                }\r\n            }\r\n            if (level == 1 && this.get_School() == \"Universalist Wizard\") {\r\n                wizardAvailable += 1\r\n                wizardAvailableAll += 1;\r\n            }\r\n            if (level == 1) {\r\n                wizardAvailable -= adaptiveAdept1stLevelAvailable;\r\n                wizardAvailableAll -= adaptiveAdept1stLevelAvailable;\r\n            }\r\n            return wizardAvailable > wizardLearned && wizardAvailableAll > wizardLearnedAll;\r\n        }\r\n        if (source == \"school\" && casting.className == \"Wizard\" && (spell.traditions.includes(\"Arcane\") || character.get_SpellListSpell(spell.name).length)) {\r\n            let school = this.get_School();\r\n            let schoolAvailable = 0;\r\n            let schoolLearned: number = this.get_SpellsLearned(\"\", 'school', level).length;\r\n            if (level == 1 && school) {\r\n                if (school != \"Universalist Wizard\" && spell.traits.includes(school.split(\" \")[0])) {\r\n                    schoolAvailable += 1\r\n                }\r\n            }\r\n            return schoolAvailable > schoolLearned;\r\n        }\r\n        if (source == \"esotericpolymath\" && casting.className == \"Bard\") {\r\n            if (spell.traditions.find(tradition => this.get_EsotericPolymathAllowed(casting, tradition))) {\r\n                //You can learn a spell via esoteric polymath if it is in your spell repertoire, i.e. if you have chosen it for any spell slot.\r\n                if (casting.spellChoices.find(choice => choice.spells.find(taken => taken.name == spell.name))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (source == \"arcaneevolution\" && casting.className == \"Sorcerer\") {\r\n            if (spell.traditions.find(tradition => this.get_ArcaneEvolutionAllowed(casting, tradition))) {\r\n                //You can learn a spell via arcane evolution if it is in your spell repertoire, i.e. if you have chosen it for any spell slot.\r\n                if (casting.spellChoices.find(choice => choice.spells.find(taken => taken.name == spell.name))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (source == \"adaptedcantrip\" && casting.className == \"Wizard\") {\r\n            //You can learn a spell via adapted cantrip if none of its traditions is your own.\r\n            if (!spell.traditions.includes(\"Arcane\")) {\r\n                return this.get_SpellsLearned(\"\", 'adaptedcantrip').length < 1;\r\n            }\r\n        }\r\n        if (source == \"adaptiveadept\" && casting.className == \"Wizard\") {\r\n            //You can learn a spell via adaptive adept if none of its traditions is your own, and it matches a tradition of the cantrip learned via adapted adept.\r\n            //With Adaptive Adept, you can choose spells of the same tradition(s) as with Adapted Cantrip, but not your own.\r\n            let adaptedcantrip = this.get_SpellsLearned(\"\", 'adaptedcantrip')[0]\r\n            if (adaptedcantrip) {\r\n                let originalSpell = this.get_Spells(adaptedcantrip.name)[0];\r\n                if (originalSpell) {\r\n                    if (!spell.traditions.includes(\"Arcane\") && spell.traditions.some(tradition => originalSpell.traditions.includes(tradition))) {\r\n                        return this.get_SpellsLearned(\"\", 'adaptiveadept').length < 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    learn_Spell(spell: Spell, source: string) {\r\n        this.get_Character().learn_Spell(spell, source);\r\n        if (this.get_Character().settings.autoCloseChoices) { this.toggle_Item(\"\"); }\r\n        this.characterService.set_ToChange(\"Character\", \"spellchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    unlearn_Spell(spell: Spell) {\r\n        this.get_Character().unlearn_Spell(spell);\r\n    }\r\n\r\n    get_LearnedSpellSource(source: string) {\r\n        switch (source) {\r\n            case \"wizard\":\r\n                return \"(learned as Wizard)\";\r\n            case \"esotericpolymath\":\r\n                return \"(learned via Esoteric Polymath)\";\r\n            case \"arcaneevolution\":\r\n                return \"(learned via Arcane Evolution)\";\r\n            case \"adaptedcantrip\":\r\n                return \"(learned via Adapted Cantrip)\";\r\n            case \"adaptiveadept\":\r\n                return \"(learned via Adaptive Adept)\";\r\n            case \"school\":\r\n                return \"(learned via \" + (this.get_School()?.toLowerCase() || \"school\") + \")\";\r\n            case \"free\":\r\n                return \"(learned via Learn A Spell activity)\";\r\n        }\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.get_Character().get_FeatsTaken(1, this.get_Character().level, name).length\r\n    }\r\n\r\n    get_SpellMasteryAvailable(casting: SpellCasting) {\r\n        if (casting.className == \"Wizard\" && casting.castingType == \"Prepared\" && (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\")) {\r\n            if (this.have_Feat(\"Spell Mastery\")) {\r\n                let available = 4;\r\n                let selected: SpellChoice[] = this.get_SpellMasterySpells(casting);\r\n                let result: string = \"You can select \" + (available - selected.length) + \" of \" + (available) + \" spells of different levels up to 9th level to automatically prepare via Spell Mastery.\";\r\n                if (selected.length) {\r\n                    result += \" You have already selected the following spells:\\n\"\r\n                }\r\n                selected.sort(function (a, b) {\r\n                    if (a.level > b.level) {\r\n                        return 1\r\n                    }\r\n                    if (a.level < b.level) {\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                }).forEach(choice => {\r\n                    result += \"\\n\" + choice.spells[0].name + \" (level \" + choice.level + \")\"\r\n                });\r\n                return result;\r\n            } else {\r\n                return \"\"\r\n            }\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    get_AvailableForSpellMastery(casting: SpellCasting, spell: Spell) {\r\n        if (spell.levelreq > 0 &&\r\n            !spell.traits.includes(\"Cantrip\") &&\r\n            casting.className == \"Wizard\" &&\r\n            casting.castingType == \"Prepared\" &&\r\n            (this.traditionFilter == \"\" || this.traditionFilter == \"Arcane\") &&\r\n            this.have_Feat(\"Spell Mastery\")) {\r\n            return spell.traditions.includes(casting.tradition) && !this.get_SpellMasterySelected(casting, spell);\r\n        }\r\n    }\r\n\r\n    get_SpellMasterySelected(casting: SpellCasting, spell: Spell) {\r\n        return casting.spellChoices.find(choice => choice.source == \"Feat: Spell Mastery\" && choice.spells.find(spellTaken => spellTaken.name == spell.name));\r\n    }\r\n\r\n    get_SpellMasterySpells(casting: SpellCasting) {\r\n        return casting.spellChoices.filter(choice => choice.source == \"Feat: Spell Mastery\" && choice.spells.length);\r\n    }\r\n\r\n    get_SpellMasteryAllowed(casting: SpellCasting, levelNumber: number, spell: Spell) {\r\n        //Allow taking this spell if this spell or a spell of this level is not taken yet, and if no more than 3 of 4 spells are taken.\r\n        return !casting.spellChoices.find(choice =>\r\n            choice.source == \"Feat: Spell Mastery\" &&\r\n            (\r\n                choice.level == levelNumber ||\r\n                choice.spells.find(spellTaken => spellTaken.name == spell.name)\r\n            )\r\n        ) &&\r\n            casting.spellChoices.filter(choice => choice.source == \"Feat: Spell Mastery\").length < 4;\r\n    }\r\n\r\n    add_SpellMasterySpell(spell: Spell) {\r\n        let newChoice: SpellChoice = new SpellChoice();\r\n        let newSpellTaken: SpellGain = new SpellGain();\r\n        newChoice.className = \"Wizard\";\r\n        newChoice.castingType = \"Prepared\";\r\n        newChoice.source = \"Feat: Spell Mastery\";\r\n        newChoice.level = spell.levelreq;\r\n        newSpellTaken.name = spell.name;\r\n        newSpellTaken.locked = true;\r\n        newSpellTaken.source = \"Feat: Spell Mastery\";\r\n        newChoice.spells.push(newSpellTaken);\r\n        this.get_Character().add_SpellChoice(this.characterService, spell.levelreq, newChoice);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    remove_SpellMasterySpell(casting: SpellCasting, spell: Spell) {\r\n        let oldChoice: SpellChoice = casting.spellChoices.find(choice => choice.source == \"Feat: Spell Mastery\" && choice.spells.find(spellTaken => spellTaken.name == spell.name));\r\n        if (oldChoice) {\r\n            this.get_Character().remove_SpellChoice(this.characterService, oldChoice);\r\n        }\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_EsotericPolymathAllowed(casting: SpellCasting, tradition: string) {\r\n        if (casting.className == \"Bard\" && casting.castingType == \"Spontaneous\" && this.have_Feat(\"Esoteric Polymath\")) {\r\n            if ([\"\", \"Occult\"].includes(tradition)) {\r\n                return true;\r\n            } else if (this.have_Feat(\"Impossible Polymath\")) {\r\n                let character = this.get_Character();\r\n                let skill: string = \"\";\r\n                switch (tradition) {\r\n                    case \"Arcane\":\r\n                        skill = \"Arcana\";\r\n                        break;\r\n                    case \"Divine\":\r\n                        skill = \"Religion\";\r\n                        break;\r\n                    case \"Primal\":\r\n                        skill = \"Nature\";\r\n                        break;\r\n                }\r\n                return this.characterService.get_Skills(character, skill)[0].level(character, this.characterService, character.level) >= 2\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get_ArcaneEvolutionAllowed(casting: SpellCasting, tradition: string) {\r\n        if (casting.className == \"Sorcerer\" && casting.castingType == \"Spontaneous\" && this.have_Feat(\"Arcane Evolution\")) {\r\n            if (tradition == \"Arcane\") {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.spellsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"spelllibrary\", \"all\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"spelllibrary\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<div id=\"spelllibrary\" class=\"itembox\">\r\n    <button class=\"list-item center-aligned\" (click)=\"toggleSpellLibraryMenu()\">\r\n        <header class=\"sectionHeader\">Close</header>\r\n    </button>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"get_SpellLibraryMenuState()=='in'\">\r\n        <div class=\"list-item\">\r\n            <strong>Find (in Name, Description or Traits)</strong>\r\n            <span>\r\n                <input id=\"SpellsWordFilter\" type=text [(ngModel)]=\"wordFilter\" (keypress)=check_Filter() />\r\n                <button (click)=\"set_Filter()\" [disabled]=\"wordFilter.length < 5\">Show All</button>\r\n                <button (click)=\"wordFilter='';check_Filter()\">Clear</button>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>Show spells from</strong>\r\n            <select [(ngModel)]=\"spellSource\">\r\n                <option *ngFor=\"let source of ['spell library','your spellbook']; trackBy:trackByIndex;\"\r\n                    [ngValue]=\"source\">\r\n                    {{source}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <strong>\r\n                Show spells on level\r\n            </strong>\r\n            <span>\r\n                <select [(ngModel)]=\"showLevel\">\r\n                    <option *ngFor=\"let levelOption of [0,1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                        [ngValue]=\"levelOption\">\r\n                        {{levelOption == 0 ? \"Default\" : levelOption}}\r\n                    </option>\r\n                </select>\r\n            </span>\r\n        </div>\r\n        <div class=\"list-item\">\r\n            <button (click)=\"toggle_Tradition('')\" [ngClass]=\"{'fancy-button':(get_ShowTradition()=='')}\">All except\r\n                Focus</button>\r\n            <button (click)=\"toggle_Tradition('Arcane')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Arcane')}\">Arcane</button>\r\n            <button (click)=\"toggle_Tradition('Divine')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Divine')}\">Divine</button>\r\n            <button (click)=\"toggle_Tradition('Occult')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Occult')}\">Occult</button>\r\n            <button (click)=\"toggle_Tradition('Primal')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Primal')}\">Primal</button>\r\n            <button (click)=\"toggle_Tradition('Focus')\"\r\n                [ngClass]=\"{'fancy-button':(get_ShowTradition()=='Focus')}\">Focus</button>\r\n        </div>\r\n        <div class=\"itembox-inner\">\r\n            <ng-container *ngFor=\"let wizardCasting of [get_WizardSpellCasting()]; trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let bardCasting of [get_BardSpellCasting()]; trackBy:trackByIndex;\">\r\n                    <ng-container *ngFor=\"let sorcererCasting of [get_SorcererSpellCasting()]; trackBy:trackByIndex;\">\r\n                        <ng-container\r\n                            *ngFor=\"let descblock of [get_LearningAvailable(wizardCasting, bardCasting, sorcererCasting)]; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                        <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n                                    </ul>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container\r\n                            *ngFor=\"let descblock of [get_SpellMasteryAvailable(wizardCasting)]; trackBy:trackByIndex;\">\r\n                            <div class=\"list-item\" *ngIf=\"descblock.length\">\r\n                                <ng-container *ngFor=\"let desc of descblock.split('\\n\\n'); trackBy:trackByIndex;\">\r\n                                    <p *ngIf=\"desc.split('\\n').length == 1\">{{desc}}</p>\r\n                                    <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                                        <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\">{{line}}</li>\r\n                                    </ul>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container *ngFor=\"let level of [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; trackBy:trackByIndex;\">\r\n                            <ng-container\r\n                                *ngFor=\"let visibleSpells of [get_VisibleSpells(level)]; trackBy:trackByIndex;\">\r\n                                <button class=\"list-item\"\r\n                                    [ngStyle]=\"{'display':!visibleSpells.length ? 'none' : 'flex' }\"\r\n                                    (click)=\"toggle_List(level)\">\r\n                                    <header class=\"sectionHeader\" *ngIf=\"level == 0\">Cantrips</header>\r\n                                    <header class=\"sectionHeader\" *ngIf=\"level > 0\">{{\"Level \"+level}}</header>\r\n                                </button>\r\n                                <div class=\"list-item\" [ngStyle]=\"{'display':!visibleSpells.length ? 'none' : 'flex' }\"\r\n                                    *ngIf=\"get_ShowList()==level||get_ShowList()==-2\">\r\n                                    <div class=\"list-item\"\r\n                                        *ngFor=\"let spell of visibleSpells; trackBy:trackByIndex;\">\r\n                                        <button class=\"newrow left-aligned sublist-toggle\"\r\n                                            (click)=\"toggle_Item(spell.id)\"\r\n                                            [ngClass]=\"{'fancy-button':get_SpellsLearned(spell.name).length}\">\r\n                                            <span [ngbTooltip]=\"'Spell Mastery spell'\"\r\n                                                *ngIf=\"get_SpellMasterySelected(wizardCasting, spell)\"><i class='ra ra-crown'></i>&nbsp;</span>\r\n                                            <span>\r\n                                                {{spell.name}}<app-actionIcons [actionString]=\"spell.actions\">\r\n                                                </app-actionIcons>{{spell.castType}}\r\n                                                <cite class=\"trait\" *ngIf=\"spell.traits.includes('Rare')\"\r\n                                                    [ngbPopover]=\"get_Traits('Rare')[0]?.desc\">Rare</cite>\r\n                                                <cite class=\"trait\" *ngIf=\"spell.traits.includes('Uncommon')\"\r\n                                                    [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\">Uncommon</cite>\r\n                                            </span>\r\n                                        </button>\r\n                                        <div class=\"list-item sublist\" *ngIf=\"get_ShowItem()==spell.id\"\r\n                                            [ngClass]=\"{'fancy-list':get_SpellsLearned(spell.name).length}\">\r\n                                            <button class=\"newrow center-aligned\" (click)=\"learn_Spell(spell, 'wizard')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'wizard')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell)\">\r\n                                                Learn as Wizard\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"learn_Spell(spell, 'school')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'school')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell)\">\r\n                                                Learn via School\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'esotericpolymath')\"\r\n                                                [disabled]=\"!can_Learn(bardCasting, level, spell, 'esotericpolymath')\"\r\n                                                *ngIf=\"get_AvailableForLearning(bardCasting, spell)\">\r\n                                                Learn via Esoteric Polymath\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'arcaneevolution')\"\r\n                                                [disabled]=\"!can_Learn(sorcererCasting, level, spell, 'arcaneevolution')\"\r\n                                                *ngIf=\"get_AvailableForLearning(sorcererCasting, spell)\">\r\n                                                Learn via Arcane Evolution\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'adaptedcantrip')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'adaptedcantrip')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell, true)\">\r\n                                                Learn via Adapted Cantrip\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"learn_Spell(spell, 'adaptiveadept')\"\r\n                                                [disabled]=\"!can_Learn(wizardCasting, level, spell, 'adaptiveadept')\"\r\n                                                *ngIf=\"get_AvailableForLearning(wizardCasting, spell, false, true)\">\r\n                                                Learn via Adaptive Adept\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"learn_Spell(spell, 'free')\"\r\n                                                *ngIf=\"!get_SpellsLearned(spell.name).length && !spell.traditions.includes('Focus')\">\r\n                                                Learn using Learn A Spell activity\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"unlearn_Spell(spell)\"\r\n                                                [disabled]=\"\"\r\n                                                *ngFor=\"let learned of get_SpellsLearned(spell.name); trackBy:trackByIndex;\">\r\n                                                Unlearn {{get_LearnedSpellSource(learned.source)}}\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\" (click)=\"add_SpellMasterySpell(spell)\"\r\n                                                [disabled]=\"!get_SpellMasteryAllowed(wizardCasting, level, spell)\"\r\n                                                *ngIf=\"get_AvailableForSpellMastery(wizardCasting, spell)\">\r\n                                                <i class='ra ra-crown'></i>&nbsp;Add to Spell Mastery selection\r\n                                            </button>\r\n                                            <button class=\"newrow center-aligned\"\r\n                                                (click)=\"remove_SpellMasterySpell(wizardCasting, spell)\"\r\n                                                *ngIf=\"get_SpellMasterySelected(wizardCasting, spell)\">\r\n                                                <i class='ra ra-crown'></i>&nbsp;Remove from Spell Mastery selection\r\n                                            </button>\r\n                                            <div class=\"list-item\">\r\n                                                <strong>\r\n                                                    Show spells on level\r\n                                                </strong>\r\n                                                <span>\r\n                                                    <select [(ngModel)]=\"showLevel\">\r\n                                                        <option\r\n                                                            *ngFor=\"let levelOption of [0,1,2,3,4,5,6,7,8,9,10]; trackBy:trackByIndex;\"\r\n                                                            [ngValue]=\"levelOption\">\r\n                                                            {{levelOption == 0 ? \"Default\" : levelOption}}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                </span>\r\n                                            </div>\r\n                                            <app-spell [spell]=\"spell\" [spellLevel]=\"showLevel ? showLevel : level\">\r\n                                            </app-spell>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { AnimalCompanionLevel } from './AnimalCompanionLevel';\r\nimport { AnimalCompanionAncestry } from './AnimalCompanionAncestry';\r\nimport { AnimalCompanionSpecialization } from './AnimalCompanionSpecialization';\r\nimport { AnimalCompanionClass } from './AnimalCompanionClass';\r\nimport { SavegameService } from './savegame.service';\r\nimport * as json_ancestries from '../assets/json/animalcompanions';\r\nimport * as json_levels from '../assets/json/animalcompanionlevels';\r\nimport * as json_specializations from '../assets/json/animalcompanionspecializations';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AnimalCompanionsService {\r\n\r\n    private companionAncestries: AnimalCompanionAncestry[] = [];\r\n    private companionLevels: AnimalCompanionLevel[] = [];\r\n    private companionSpecializations: AnimalCompanionSpecialization[] = [];\r\n    private loading_ancestries: boolean = false;\r\n    private loading_levels: boolean = false;\r\n    private loading_specializations: boolean = false;\r\n    \r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    get_CompanionTypes(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.companionAncestries.filter(animalCompanion => animalCompanion.name == name || name == \"\");\r\n        } else { return [new AnimalCompanionAncestry()] }\r\n    }\r\n\r\n    get_CompanionLevels() {\r\n        if (!this.still_loading()) {\r\n            return this.companionLevels;\r\n        } else { return [new AnimalCompanionLevel()] }\r\n    }\r\n\r\n    get_CompanionSpecializations(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.companionSpecializations.filter(spec => spec.name == name || name == \"\");\r\n        } else { return [new AnimalCompanionSpecialization()] }\r\n    }\r\n\r\n    restore_AncestryFromSave(ancestry: AnimalCompanionAncestry, savegameService: SavegameService) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_CompanionTypes(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    ancestry = savegameService.merge(libraryObject, ancestry);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    clean_AncestryForSave(ancestry: AnimalCompanionAncestry) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_CompanionTypes(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(ancestry).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading via the name.\r\n                        if (JSON.stringify(ancestry[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete ancestry[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    restore_LevelsFromSave($class: AnimalCompanionClass, savegameService: SavegameService) {\r\n        if ($class.levels) {\r\n            let libraryObject = this.get_CompanionLevels();\r\n            if (libraryObject) {\r\n                for (let index = 0; index < $class.levels.length; index++) {\r\n                    //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    $class.levels = savegameService.merge(libraryObject, $class.levels);\r\n                    } catch (e) {\r\n                        console.log(\"Failed reassigning: \" + e)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    clean_LevelsForSave($class: AnimalCompanionClass) {\r\n        if ($class.levels) {\r\n            let libraryObject = this.get_CompanionLevels();\r\n            if (libraryObject) {\r\n                for (let index = 0; index < $class.levels.length; index++) {\r\n                    Object.keys($class.levels[index]).forEach(key => {\r\n                        if (![\"name\", \"_className\"].includes(key)) {\r\n                            //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                            //If they have the same value, delete the property from the item - it can be recovered during loading from the database.\r\n                            if (JSON.stringify($class.levels[index][key]) == JSON.stringify(libraryObject[index][key])) {\r\n                                delete $class.levels[index][key];\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    restore_SpecializationFromSave(spec: AnimalCompanionSpecialization, savegameService: SavegameService) {\r\n        if (spec.name) {\r\n            let libraryObject = this.get_CompanionSpecializations(spec.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    spec = savegameService.merge(libraryObject, spec);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return spec;\r\n    }\r\n\r\n    clean_SpecializationForSave(spec: AnimalCompanionSpecialization) {\r\n        if (spec.name) {\r\n            let libraryObject = this.get_CompanionSpecializations(spec.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(spec).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading via the name.\r\n                        if (JSON.stringify(spec[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete spec[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return spec;\r\n    }\r\n\r\n    change_Type(companion: AnimalCompanion, type: AnimalCompanionAncestry) {\r\n        companion.class.ancestry = new AnimalCompanionAncestry();\r\n        companion.class.ancestry = Object.assign(new AnimalCompanionAncestry(), JSON.parse(JSON.stringify(type)));\r\n        companion.class.ancestry = this.savegameService.reassign(companion.class.ancestry)\r\n    }\r\n\r\n    add_Specialization(companion: AnimalCompanion, spec: AnimalCompanionSpecialization, levelNumber: number) {\r\n        let newLength = companion.class.specializations.push(Object.assign(new AnimalCompanionSpecialization(), JSON.parse(JSON.stringify(spec))));\r\n        companion.class.specializations[newLength-1].level = levelNumber;\r\n        companion.class.specializations[newLength-1] = this.savegameService.reassign(companion.class.specializations[newLength-1]);\r\n    }\r\n\r\n    remove_Specialization(companion: AnimalCompanion, spec: AnimalCompanionSpecialization) {\r\n        companion.class.specializations = companion.class.specializations.filter(specialization => specialization.name != spec.name);\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading_ancestries || this.loading_levels || this.loading_specializations);\r\n    }\r\n  \r\n    initialize() {\r\n        if (!this.companionAncestries.length) {\r\n            this.loading_ancestries = true;\r\n            this.load(json_ancestries, \"companionAncestries\", AnimalCompanionAncestry);\r\n            this.loading_ancestries = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.companionAncestries.forEach(ancestry => {\r\n                ancestry.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n        if (!this.companionLevels.length) {\r\n            this.loading_levels = true;\r\n            this.load(json_levels, \"companionLevels\", AnimalCompanionLevel);\r\n            this.loading_levels = false;\r\n        }\r\n        if (!this.companionSpecializations.length) {\r\n            this.loading_specializations = true;\r\n            this.load(json_specializations, \"companionSpecializations\", AnimalCompanionSpecialization);\r\n            this.loading_specializations = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.companionSpecializations.forEach(spec => {\r\n                spec.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load(source, target: string, type) {\r\n        this[target] = [];\r\n        Object.keys(source).forEach(key => {\r\n            this[target].push(...source[key].map(obj => Object.assign(new type(), obj)));\r\n        });\r\n        this[target].forEach(obj => {\r\n            obj = this.savegameService.reassign(obj)\r\n        });\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Item } from 'src/app/Item';\r\nimport { AlchemicalPoison } from 'src/app/AlchemicalPoison';\r\nimport { ItemCollection } from 'src/app/ItemCollection';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { ItemsService } from 'src/app/items.service';\r\nimport { TimeService } from 'src/app/time.service';\r\nimport { Equipment } from 'src/app/Equipment';\r\nimport { Weapon } from 'src/app/Weapon';\r\n\r\n@Component({\r\n    selector: 'app-itemPoisons',\r\n    templateUrl: './itemPoisons.component.html',\r\n    styleUrls: ['./itemPoisons.component.css']\r\n})\r\nexport class ItemPoisonsComponent implements OnInit {\r\n\r\n    @Input()\r\n    item: Weapon;\r\n    @Input()\r\n    itemStore: boolean = false;\r\n    newPoison: { poison: AlchemicalPoison, inv: ItemCollection } = { poison: new AlchemicalPoison(), inv: null };\r\n\r\n    public newPropertyRuneName: string[] = [\"\", \"\", \"\"];\r\n\r\n    constructor(\r\n        private characterService: CharacterService,\r\n        private itemsService: ItemsService,\r\n        private timeService: TimeService\r\n    ) { }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CleanItems() {\r\n        return this.itemsService.get_CleanItems();\r\n    }\r\n\r\n    get_Duration(turns: number) {\r\n        return this.timeService.get_Duration(turns)\r\n    }\r\n\r\n    get_Poisons() {\r\n        let allPoisons: { poison: AlchemicalPoison, inv: ItemCollection }[] = [{ poison: new AlchemicalPoison(), inv: null }];\r\n        allPoisons[0].poison.name = \"\";\r\n        if (this.itemStore) {\r\n            allPoisons.push(...this.get_CleanItems().alchemicalpoisons.filter(poison => poison.traits.includes(\"Injury\")).map(poison => ({ poison: poison, inv: null })));\r\n        } else {\r\n            this.get_Character().inventories.forEach(inv => {\r\n                allPoisons.push(...inv.alchemicalpoisons.filter(poison => poison.traits.includes(\"Injury\")).map(poison => ({ poison: poison, inv: inv })));\r\n            });\r\n        }\r\n        return allPoisons;\r\n    }\r\n\r\n    add_Poison() {\r\n        if (this.newPoison.poison.name) {\r\n            let item = this.item;\r\n            item.poisonsApplied.length = 0;\r\n            let newLength = item.poisonsApplied.push(Object.assign(new AlchemicalPoison(), JSON.parse(JSON.stringify(this.newPoison.poison))));\r\n            item.poisonsApplied[newLength - 1] = this.characterService.reassign(item.poisonsApplied[newLength - 1]);\r\n            if (this.newPoison.inv) {\r\n                this.characterService.drop_InventoryItem(this.get_Character(), this.newPoison.inv, this.newPoison.poison, false, false, false, 1);\r\n            }\r\n            this.newPoison = { poison: new AlchemicalPoison(), inv: null };\r\n            this.newPoison.poison.name = \"\";\r\n            this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n            this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n            this.characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    remove_Poison(index: number) {\r\n        this.item.poisonsApplied.splice(index, 1);\r\n        this.characterService.set_ToChange(\"Character\", \"inventory\");\r\n        this.characterService.set_ItemViewChanges(this.get_Character(), this.item);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","<!--Adding Poisons-->\r\n<div class=\"list-item\" *ngIf=\"get_Poisons().length > 1 || item.poisonsApplied.length\">\r\n    <div class=\"newrow\">\r\n        <strong title=\"{{item.poisonsApplied.length ? 'Applying a new poison will waste the currently applied poison.' : ''}}\">\r\n            {{item.poisonsApplied.length ? 'Replace' : 'Apply'}} poison\r\n        </strong>\r\n        <select [(ngModel)]=\"newPoison\" (ngModelChange)=\"add_Poison()\">\r\n            <option *ngFor=\"let poison of get_Poisons(); trackBy:trackByIndex;\" [ngValue]=\"poison\">\r\n                {{poison.poison.amount != 1 ? poison.poison.amount + \" \" : \"\"}}{{poison.poison.get_Name()}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n    <div class=\"newrow\" *ngIf=\"item.poisonsApplied.length\">\r\n        <strong>Applied poison</strong>\r\n        <div class=\"newrow\" *ngFor=\"let poison of item.poisonsApplied; let index = index; trackBy:trackByIndex;\">\r\n            <span>{{poison.get_Name()}}</span>\r\n            <button class=\"lower\" (click)=\"remove_Poison(index)\">Spend/Remove</button>\r\n        </div>\r\n    </div>\r\n</div>","import { SpellCast } from './SpellCast';\r\n\r\nexport class Deity {\r\n    public name: string = \"\";\r\n    public category: string = \"\";\r\n    public alignment: string = \"\";\r\n    public followerAlignments: string[] = [];\r\n    public divineAbility: string[] = [];\r\n    public divineFont: string[] = [];\r\n    public divineSkill: string[] = [];\r\n    public favoredWeapon: string[] = [];\r\n    public domains: string[] = [];\r\n    public clericSpells: SpellCast[] = [];\r\n}\r\n","import { Consumable } from './Consumable';\r\n\r\nexport class Snare extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Snares should be type \"snares\" to be found in the database\r\n    readonly type = \"snares\";\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public failure: string = \"\";\r\n    public success: string = \"\";\r\n    public tradeable: boolean = false;\r\n    public actions = \"1 minute\";\r\n}","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\"\r\n    *ngIf=\"creature=='Character' && showMinimizeButton\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-general-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">General information</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <ng-container *ngIf=\"creature=='Character'\">\r\n            <div class=\"list-item\">\r\n                <span>\r\n                    <strong>Level</strong>\r\n                    {{get_Character().level}}\r\n                </span>\r\n                <span>\r\n                    <strong>Hero Points</strong>\r\n                    {{get_Character().heroPoints}}\r\n                    <button (click)=\"add_HeroPoints(-1)\" [disabled]=\"get_Character().heroPoints <= 0\">-1</button>\r\n                    <button (click)=\"add_HeroPoints(1)\">+1</button>\r\n                </span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Character Name</strong>\r\n                <span>{{get_Character().name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.ancestry.name\">\r\n                <strong>Ancestry</strong>\r\n                <span>{{get_Character().class.ancestry.name}}{{(get_Character().class.heritage.name) ? \" - \" +\r\n                    get_Character().class.heritage.name : \"\"}}</span>\r\n                <div class=\"newrow left-aligned\" *ngIf=\"get_Character().class.ancestry.traits.length\">\r\n                    <cite class=\"trait\"\r\n                        *ngFor=\"let trait of get_CharacterTraits(); trackBy:trackByIndex;\">{{trait}}&nbsp;</cite>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Ancestry'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\"\r\n                *ngIf=\"get_Character().class.background && get_Character().class.background.name\">\r\n                <strong>Background</strong>\r\n                <span>{{get_Character().class.background.name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.name\">\r\n                <div class=\"newrow\" *ngFor=\"let specialization of get_ClassChoices(); trackBy:trackByIndex;\">\r\n                    <strong>{{specialization.name}}</strong>\r\n                    <span>{{specialization.choice}}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.ancestry.name\">\r\n                <strong>Size</strong>\r\n                <span>{{get_Size()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Size'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().alignment && get_Character().alignment.length\">\r\n                <strong>Alignment</strong>\r\n                <span>{{get_Character().alignment}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Alignment'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Character().class.deity\">\r\n                <strong>Deity</strong>\r\n                <span>{{get_Character().class.deity}}</span>\r\n            </div>\r\n            <div class=\"list-item\"\r\n                *ngIf=\"get_Character().class.ancestry.languages && get_Character().class.ancestry.languages.length\">\r\n                <strong>Languages</strong>\r\n                <span>{{get_Languages()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Languages'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true></app-tags>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Tenets().length\">\r\n                <strong>Tenets</strong>\r\n                <div class=\"newrow\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tenet of get_Tenets(); trackBy:trackByIndex;\">{{tenet}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Anathema().length\">\r\n                <strong>Anathema</strong>\r\n                <div class=\"newrow\">\r\n                    <ul>\r\n                        <li *ngFor=\"let anathema of get_Anathema(); trackBy:trackByIndex;\">{{anathema}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngFor=\"let feat of get_DifferentWorldsFeat(); trackBy:trackByIndex;\">\r\n                <strong>Alternative Identity (Different Worlds)</strong>\r\n                <span>{{feat.data.name}} {{(feat.data.background) ? \"(\"+feat.data.background+\")\" : \"\"}}</span>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"creature=='Companion'\">\r\n            <div class=\"newrow left-aligned tags\" *ngIf=\"get_Companion().class.ancestry.name\">\r\n                <cite class=\"trait\" *ngFor=\"let trait of get_Companion().class.ancestry.traits; trackBy:trackByIndex;\"\r\n                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            </div>\r\n            <app-tags [creature]=\"'Character'\" [objectName]=\"'Animal Companion'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Companion Name</strong>\r\n                <span>{{get_Companion().name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Animal</strong>\r\n                <span>{{get_CompanionSpecies()}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Companion().class.specializations.length\">\r\n                <strong>Specializations</strong>\r\n                <span>{{get_CompanionSpecializations()}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\" *ngIf=\"get_Companion().class.ancestry.name\">\r\n                <strong>Size</strong>\r\n                <span>{{get_Size()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Size'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <div class=\"list-item\" *ngIf=\"get_Companion().class.ancestry.name\">\r\n                <strong>Support Benefit</strong>\r\n                <p>{{get_Companion().class.ancestry.supportBenefit}}</p>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"creature=='Familiar'\">\r\n            <div class=\"newrow left-aligned tags\">\r\n                <cite class=\"trait\" *ngFor=\"let trait of get_Familiar().traits; trackBy:trackByIndex;\"\r\n                    [ngbPopover]=\"get_Traits(trait)[0].desc\">{{trait}}</cite>\r\n            </div>\r\n            <app-tags [creature]=\"'Character'\" [objectName]=\"'Familiar'\" [showTraits]=true [showFeats]=true\r\n                [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Familiar Name</strong>\r\n                <span>{{get_Familiar().name}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Creature</strong>\r\n                <span>{{get_Familiar().species}}</span>\r\n            </div>\r\n            <div class=\"fullsize-only list-item\">\r\n                <strong>Size</strong>\r\n                <span>{{get_Size()}}</span>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Size'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            </div>\r\n            <header class=\"subsectionHeader\">Familiar Abilities</header>\r\n            <div class=\"list-item\" *ngFor=\"let ability of get_Familiar().abilities.feats; trackBy:trackByIndex;\">\r\n                <strong>{{ability.name}}</strong>\r\n                <div class=\"newrow left-aligned tags\">\r\n                    <cite class=\"trait\"\r\n                        *ngFor=\"let trait of get_FamiliarAbilities(ability.name)[0].traits; trackBy:trackByIndex;\"\r\n                        [ngbPopover]=\"get_Traits(trait).length ? get_Traits(trait)[0].desc : ''\">{{trait}}</cite>\r\n                </div>\r\n                <div class=\"newrow left-aligned\">\r\n                    {{get_FamiliarAbilities(ability.name)[0].desc}}\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { TraitsService } from '../traits.service';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { FamiliarsService } from '../familiars.service';\r\nimport { FeatChoice } from '../FeatChoice';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-general',\r\n    templateUrl: './general.component.html',\r\n    styleUrls: ['./general.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GeneralComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public showMinimizeButton: boolean = true;\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    \r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        public traitsService: TraitsService,\r\n        private familiarsService: FamiliarsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.generalMinimized = !this.characterService.get_Character().settings.generalMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.generalMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Companion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    get_FamiliarAbilities(name: string) {\r\n        return this.familiarsService.get_FamiliarAbilities(name);\r\n    }\r\n\r\n    get_CompanionSpecies() {\r\n        let companion: AnimalCompanion = this.get_Companion();\r\n        if (companion.level && companion.class.levels.length) {\r\n            let species: string = companion.class.levels[companion.level].name;\r\n            if (companion.species) {\r\n                species += \" \" + companion.species;\r\n            } else if (companion.class.ancestry && companion.class.ancestry.name) {\r\n                species += \" \" + companion.class.ancestry.name;\r\n            }\r\n            return species;\r\n        }\r\n    }\r\n\r\n    get_CompanionSpecializations() {\r\n        let companion: AnimalCompanion = this.get_Companion();\r\n        if (companion.level && companion.class.specializations.length) {\r\n            return companion.class.specializations.filter(spec => spec.level <= this.get_Character().level).map(spec => spec.name).join(\", \");\r\n        }\r\n    }\r\n\r\n    add_HeroPoints(amount: number) {\r\n        this.get_Character().heroPoints += amount;\r\n    }\r\n\r\n    get_Size() {\r\n        return this.get_Creature().get_Size(this.effectsService);\r\n    }\r\n\r\n    get_Tenets() {\r\n        //Collect tenets from all feats and features you have that include them.\r\n        return [].concat(...this.characterService.get_FeatsAndFeatures()\r\n            .filter(feat => feat.tenets?.length && feat.have(this.get_Character(), this.characterService))\r\n            .map(feat => feat.tenets))\r\n    }\r\n\r\n    get_Anathema() {\r\n        //Collect anathema from all feats and features you have that include them.\r\n        return this.get_Character().class.anathema.concat(...this.characterService.get_FeatsAndFeatures()\r\n            .filter(feat => feat.anathema?.length && feat.have(this.get_Character(), this.characterService))\r\n            .map(feat => feat.anathema))\r\n    }\r\n\r\n    get_Languages() {\r\n        return this.get_Character().class.languages.filter(language => (!language.level || language.level <= this.get_Character().level) && language.name != \"\").map(language => language.name).join(', ')\r\n    }\r\n\r\n    get_DifferentWorldsFeat() {\r\n        if (this.get_Character().get_FeatsTaken(1, this.get_Character().level, \"Different Worlds\").length) {\r\n            return this.get_Character().customFeats.filter(feat => feat.name == \"Different Worlds\");\r\n        }\r\n    }\r\n\r\n    get_ClassChoices() {\r\n        //Get the basic decisions for your class and all archetypes.\r\n        // These decisions are feat choices identified by being .specialChoice, having exactly one feat, and having the class name (or the dedication feat name) as its type.\r\n        let results: { name: string, choice: string }[] = [];\r\n        let character = this.get_Character();\r\n        let featChoices: FeatChoice[] = [];\r\n        let className = character.class?.name || \"\";\r\n        if (className) {\r\n            results.push({ name: \"Class\", choice: className });\r\n            character.class.levels.forEach(level => {\r\n                featChoices.push(...level.featChoices.filter(choice => choice.specialChoice && choice.feats.length == 1 && choice.available == 1));\r\n            })\r\n            featChoices.filter(choice => choice.source == className).forEach(choice => {\r\n                let choiceName = choice.feats[0].name;\r\n                if (choiceName.includes(choice.type)) {\r\n                    choiceName = choiceName.split(\" \" + choice.type).join(\"\");\r\n                }\r\n                results.push({ name: className + \" \" + choice.type, choice: choiceName })\r\n            })\r\n            let archetypes = this.characterService.get_FeatsAndFeatures().filter(feat => feat.traits.includes(\"Dedication\") && feat.have(this.get_Character(), this.characterService));\r\n            archetypes.forEach(archetype => {\r\n                results.push({ name: \"Archetype\", choice: archetype.archetype });\r\n                featChoices.filter(choice => choice.source == \"Feat: \" + archetype.name).forEach(choice => {\r\n                    let choiceName = choice.feats[0].name;\r\n                    if (choiceName.includes(choice.type)) {\r\n                        choiceName = choiceName.split(\" \" + choice.type).join(\"\");\r\n                    }\r\n                    results.push({ name: archetype.archetype + \" \" + choice.type, choice: choiceName })\r\n                })\r\n            })\r\n        }\r\n        return results;\r\n    }\r\n\r\n    get_CharacterTraits() {\r\n        let character = this.get_Character();\r\n        //Verdant Metamorphosis adds the Plant trait and removes the Humanoid, Animal or Fungus trait.\r\n        if (character.get_FeatsTaken(1, character.level, \"Verdant Metamorphosis\").length) {\r\n            return [\"Plant\"].concat(this.get_Character().class.ancestry.traits.filter(trait => ![\"Humanoid\", \"Animal\", \"Fungus\"].includes(trait)))\r\n            .sort(function(a,b) {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n        } else {\r\n            return this.get_Character().class.ancestry.traits\r\n        }\r\n    }\r\n\r\n    get_Traits(name: string = \"\") {\r\n        return this.traitsService.get_Traits(name);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"general\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"general\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import { SpellGain } from './SpellGain';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nexport class SpellChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n    //This is a list of all the attributes that should not be discarded when saving the character.\r\n    //For SpellChoices, if the choice is part of a class, the class may designate this choice as a signature spell.\r\n    //A regular SpellChoice does not do that, so if you disable the signature spell on the choice, it is false == false and gets discarded.\r\n    //Loading the character recreates the class and overwrites attributes that aren't set, so the SpellChoice will be a signature spell again.\r\n    public readonly save = [\r\n        \"_className\",\r\n        \"signatureSpell\"\r\n    ];\r\n    public available: number = 0;\r\n    //className is used to identify the proper SpellCasting to sort this into\r\n    //If \"\", the main class is used.\r\n    public className: string = \"\";\r\n    public cooldown: number = 0;\r\n    public frequency: string = \"\";\r\n    public filter: string[] = [];\r\n    public traitFilter: string[] = [];\r\n    public id = uuidv1();\r\n    //If insertClass is set, this SpellChoice is only granted by a feat if the character class name matches this name.\r\n    // This is especially useful for class choices (hunter's edge, rogue racket, bloodline etc.) that don't give certain benefits when multiclassing.\r\n    public insertClass: string = \"\";\r\n    public level: number = 0;\r\n    //For spell choices that are \"three levels below your highest spell level\"\r\n    //Example: \"character.get_SpellLevel() - 3\"\r\n    public dynamicLevel: string = \"\";\r\n    //Don't display this choice or its spells if the character level is lower than charLevelAvailable.\r\n    //If a feat adds a spellChoice with charLevelAvailable = 0, it gets set to the level the feat was taken\r\n    //If a feat adds a spellChoice with a lower charLevelAvailable as the level the feat was taken, it get set to the feat level instead\r\n    public charLevelAvailable: number = 0;\r\n    //The CastingType is mostly there to identify the proper SpellCasting to sort this into if it comes from a feat.\r\n    public castingType: \"Focus\"|\"Innate\"|\"Spontaneous\"|\"Prepared\"|\"Default\";\r\n    //Spell Combination is for wizards and designates this spell choice as one that fits two spells in one spell slot.\r\n    public spellCombinationAllowed: boolean = false;\r\n    //You can choose to use a combination slot for a spell combination, which changes the available spells.\r\n    public spellCombination: boolean = false;\r\n    //The spells chosen must match the tradition of the spell choice, if one is given, or otherwise the tradition of the spellcasting or nothing.\r\n    public tradition: string = \"\";\r\n    public source: string = \"\";\r\n    //If showOnSheet is set, this choice is intended to be made on the character sheet instead of while building the character.\r\n    // This is relevant for features like Infinite Possibilities.\r\n    public showOnSheet: boolean = false;\r\n    public singleTarget: boolean = false;\r\n    //Only allow spells from your spellbook.\r\n    public spellBookOnly: boolean = false;\r\n    public spells: SpellGain[] = [];\r\n    //Spell Blending is for Wizards and tracks spell blending choices for this spell choice. It contains three numbers.\r\n    //The numbers are:\r\n    // [0]: Number of spell slots traded away for cantrips\r\n    // [1]: Number of spell slots traded away for a spell slot 1 level higher\r\n    // [2]: Number of spell slots traded away for a spell slot 2 levels higher\r\n    public spellBlending: number[] = [0,0,0]\r\n    //Infinite Possibilities is for Wizards and tracks whether one of the spell slots of this choice has been traded away for an Infinite Possibilities slot.\r\n    public infinitePossibilities: boolean = false;\r\n    //Adapted Cantrip tracks whether one of the spell slots of this choice has been traded away for an Adapted Cantrip slot.\r\n    public adaptedCantrip: boolean = false;\r\n    //Adaptive Adept tracks whether one of the spell slots of this choice has been traded away for an Adaptive Adept slot.\r\n    public adaptiveAdept: boolean = false;\r\n    //Crossblooded Evolution tracks whether one of the spell slots of this choice can be filled with a spell from another tradition.\r\n    public crossbloodedEvolution: boolean = false;\r\n    //If target is set to \"Others\", you can only choose spells with target != \"self\".\r\n    //If target is set to \"Caster\", you can only choose spells with target \"self\".\r\n    //If target is set to \"Allies\", you can only choose spells with target \"ally\".\r\n    //If target is set to \"Enemies\", you can only choose spells with no target property (so it's likely not beneficial).\r\n    public target: string = \"\";\r\n}\r\n","import core from './core.json';\r\nimport custom_eselfreunde from './custom_eselfreunde.json';\r\nexport {\r\n    core,\r\n    custom_eselfreunde\r\n};","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { SkillsService } from '../skills.service';\r\nimport { FeatsService } from '../feats.service';\r\nimport { Character } from '../Character';\r\nimport { SkillChoice } from '../SkillChoice';\r\nimport { EffectsService } from '../effects.service';\r\nimport { Speed } from '../Speed';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-skills',\r\n    templateUrl: './skills.component.html',\r\n    styleUrls: ['./skills.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SkillsComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        public skillsService: SkillsService,\r\n        public featsService: FeatsService,\r\n        public effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.skillsMinimized = !this.characterService.get_Character().settings.skillsMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.skillsMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n        }\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    receive_ChoiceMessage(message: { name: string, levelNumber: number, choice: SkillChoice }) {\r\n        this.toggle_List(message.name);\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\") {\r\n        let creature = this.get_Creature();\r\n        return this.characterService.get_Skills(creature, name, type)\r\n            .filter(skill =>\r\n                !skill.name.includes(\"Lore\") ||\r\n                skill.level(creature as Character, this.characterService, creature.level)\r\n            ).sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    have_Feat(name: string) {\r\n        return this.characterService.get_Character().get_FeatsTaken(1, this.characterService.get_Character().level, name).length;\r\n    }\r\n\r\n    get_Senses() {\r\n        return this.characterService.get_Senses(this.get_Creature());\r\n    }\r\n\r\n    get_Speeds() {\r\n        let speeds: Speed[] = this.characterService.get_Speeds(this.get_Creature());\r\n        if ([\"Character\", \"Companion\"].includes(this.get_Creature().type)) {\r\n            (this.get_Creature() as Character).class?.ancestry?.speeds?.forEach(speed => {\r\n                speeds.push(new Speed(speed.name));\r\n            });\r\n        }\r\n        //We don't process the values yet - for now we just collect all Speeds that are mentioned in effects.\r\n        // Since we pick up every effect that includes \"Speed\", but we don't want \"Ignore Circumstance Penalties To Speed\" to show up, we filter out \"Ignore\".\r\n        let speedEffects = this.effectsService.get_Effects(this.creature).all.filter(effect => effect.apply && (effect.target.includes(\"Speed\") && !effect.target.includes(\"Ignore\")));\r\n        speedEffects.forEach(effect => {\r\n            if (!speeds.some(speed => speed.name == effect.target)) {\r\n                speeds.push(new Speed(effect.target))\r\n            }\r\n        });\r\n        //Remove any duplicates for display\r\n        let uniqueSpeeds: Speed[] = [];\r\n        speeds.forEach(speed => {\r\n            if (!uniqueSpeeds.find(uniqueSpeed => uniqueSpeed.name == speed.name)) {\r\n                uniqueSpeeds.push(speed);\r\n            }\r\n        })\r\n        return uniqueSpeeds.filter(speed => speed.value(this.get_Creature(), this.characterService, this.effectsService)[0] != 0);\r\n    }\r\n\r\n    get_SkillChoices() {\r\n        if (this.creature == \"Character\") {\r\n            let character = (this.get_Creature() as Character);\r\n            let choices: SkillChoice[] = [];\r\n            character.class.levels.filter(level => level.number <= character.level).forEach(level => {\r\n                choices.push(...level.skillChoices.filter(choice => choice.showOnSheet))\r\n            });\r\n            return choices;\r\n        }\r\n    }\r\n\r\n    get_SenseDesc(sense: string) {\r\n        switch (sense) {\r\n            case \"Darkvision\":\r\n                return \"You can see in darkness and dim light just as well as you can see in bright light, though your vision in darkness is in black and white.\"\r\n            case \"Greater Darkvision\":\r\n                return \"You can see in darkness and dim light just as well as you can see in bright light, though your vision in darkness is in black and white. Some forms of magical darkness, such as a 4th-level darkness spell, block normal darkvision. A creature with greater darkvision, however, can see through even these forms of magical darkness.\"\r\n            case \"Low-Light Vision\":\r\n                return \"You can see in dim light as though it were bright light, and you ignore the concealed condition due to dim light.\"\r\n            default:\r\n                if (sense.includes(\"Scent\")) {\r\n                    return \"You can use your sense of smell to determine the location of a creature, but it remains hidden.\"\r\n                }\r\n                if (sense.includes(\"Tremorsense\")) {\r\n                    return \"You can feel the vibrations through a solid surface caused by movement.\"\r\n                }\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.skillsService.still_loading() || this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"skills\", \"alls\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"skills\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-skills-height\" class=\"attributeBox\">\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <header class=\"sectionHeader box-header\">Perception</header>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Perception'); trackBy:trackByIndex;\">\r\n            <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n        </ng-container>\r\n        <header class=\"subsectionHeader\">Senses</header>\r\n        <div class=\"list-item lower\" [ngbPopover]=\"get_SenseDesc(sense)\"\r\n            *ngFor=\"let sense of get_Senses(); trackBy:trackByIndex;\">\r\n            {{sense}}\r\n        </div>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Senses'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true></app-tags>\r\n        <ng-container *ngIf=\"creature=='Familiar'\">\r\n            <header class=\"sectionHeader box-header\">Attack Rolls</header>\r\n            <ng-container *ngFor=\"let skill of get_Skills('', 'Familiar Proficiency'); trackBy:trackByIndex;\">\r\n                <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n            </ng-container>\r\n        </ng-container>\r\n        <header class=\"sectionHeader box-header\">Movement</header>\r\n        <ng-container *ngFor=\"let speed of get_Speeds(); trackBy:trackByIndex;\">\r\n            <div class=\"list-item\">\r\n                <div class=\"newrow\">\r\n                    <span>\r\n                        <strong>{{(speed.name==\"Speed\") ? \"All Speeds\" : speed.name}}</strong>\r\n                    </span>\r\n                    <span>\r\n                        <div class=\"value\"\r\n                            [ngbPopover]=\"speed.value(get_Creature(), characterService, effectsService)[1]\" [ngClass]=\"{'penalty':speed.penalties(get_Creature(), effectsService, speed.name, true),\r\n                        'bonus':speed.bonuses(get_Creature(), effectsService, speed.name, true),\r\n                        'absolute':speed.absolutes(get_Creature(), effectsService, speed.name, true).length}\">\r\n                            {{speed.value(get_Creature(), characterService, effectsService)[0]}}\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=speed.name [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true\r\n                    [specialEffects]=\"speed.absolutes(get_Creature(), effectsService, speed.name, true).concat(speed.relatives(get_Creature(), effectsService, speed.name, true))\">\r\n                </app-tags>\r\n            </div>\r\n        </ng-container>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Movement'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <header class=\"sectionHeader box-header\">Skills</header>\r\n        <!--Skill Increases-->\r\n        <ng-container *ngFor=\"let choice of get_SkillChoices(); trackBy:trackByIndex;\">\r\n            <app-skillchoice (showSkillChoiceMessage)=\"receive_ChoiceMessage($event)\" [showTitle]=\"true\"\r\n                [showContent]=\"true\" [choice]=\"choice\" [showChoice]=\"get_ShowList()\">\r\n            </app-skillchoice>\r\n        </ng-container>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Skills'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Skill Checks'\" [showTraits]=true [showFeats]=true\r\n            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <ng-container *ngFor=\"let skill of get_Skills('', 'Skill'); trackBy:trackByIndex;\">\r\n            <app-skill [creature]=\"creature\" [skill]=skill></app-skill>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { ActivitiesService } from '../activities.service';\r\nimport { ActivityGain } from '../ActivityGain';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { FeatChoice } from '../FeatChoice';\r\nimport { ItemActivity } from '../ItemActivity';\r\n\r\n@Component({\r\n    selector: 'app-activities',\r\n    templateUrl: './activities.component.html',\r\n    styleUrls: ['./activities.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActivitiesComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n    private id: number = 0;\r\n    private showAction: number = 0;\r\n    private showItem: string = \"\";\r\n    private showList: string = \"\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        private activitiesService: ActivitiesService\r\n    ) { }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.activitiesMinimized = !this.characterService.get_Character().settings.activitiesMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.activitiesMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n        }\r\n    }\r\n    \r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    toggle_Action(id: number) {\r\n        if (this.showAction == id) {\r\n            this.showAction = 0;\r\n        } else {\r\n            this.showAction = id;\r\n            this.showList = \"\";\r\n        }\r\n    }\r\n\r\n    get_ShowAction() {\r\n        return this.showAction;\r\n    }\r\n\r\n    toggle_Item(name: string) {\r\n        if (this.showItem == name) {\r\n            this.showItem = \"\";\r\n        } else {\r\n            this.showItem = name;\r\n        }\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showList == name) {\r\n            this.showList = \"\";\r\n        } else {\r\n            this.showList = name;\r\n            this.showAction = 0;\r\n        }\r\n    }\r\n\r\n    receive_ChoiceNameMessage(name: string) {\r\n        this.toggle_List(name);\r\n    }\r\n\r\n    receive_FeatMessage(name: string) {\r\n        this.toggle_Item(name);\r\n    }\r\n\r\n    get_ShowItem() {\r\n        return this.showItem;\r\n    }\r\n\r\n    get_ShowList() {\r\n        return this.showList;\r\n    }\r\n\r\n    get_ID() {\r\n        this.id++;\r\n        return this.id;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.activitiesService.still_loading() || this.characterService.still_loading();\r\n    }\r\n    \r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Character|AnimalCompanion;\r\n    }\r\n    \r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_ClassDCs() {\r\n        return this.characterService.get_Skills(this.get_Creature(), \"\", \"Class DC\").filter(skill => skill.level(this.get_Creature() as Character|AnimalCompanion, this.characterService) > 0);\r\n    }\r\n\r\n    get_OwnedActivities() {\r\n        this.id = 0;\r\n        let activities: (ActivityGain|ItemActivity)[] = [];\r\n        let unique: string[] = [];\r\n        this.characterService.get_OwnedActivities(this.get_Creature()).forEach(activity => {\r\n            if (activity.constructor == ItemActivity) {\r\n                activity.get_Cooldown(this.get_Creature(), this.characterService)\r\n            } else {\r\n                this.get_Activities(activity.name).forEach(actualActivity => {actualActivity.get_Cooldown(this.get_Creature(), this.characterService)})\r\n            }\r\n            if (!unique.includes(activity.name)) {\r\n                unique.push(activity.name);\r\n                activities.push(activity);\r\n            }\r\n        })\r\n        return activities;\r\n    }\r\n\r\n    get_FuseStanceName() {\r\n        let fuseStance = this.characterService.get_Character().customFeats.filter(feat => feat.name == \"Fuse Stance\");\r\n        if (fuseStance.length && fuseStance[0].data && fuseStance[0].data[\"name\"]) {\r\n            return fuseStance[0].data[\"name\"];\r\n        } else {\r\n            return \"Fused Stance\";\r\n        }\r\n    }\r\n\r\n    get_TemporaryFeatChoices() {\r\n        let choices: FeatChoice[] = [];\r\n        if (this.creature == \"Character\") {\r\n            (this.get_Creature() as Character).class.levels.filter(level => level.number <= this.get_Creature().level).forEach(level => {\r\n                choices.push(...level.featChoices.filter(choice => choice.showOnSheet))\r\n            })\r\n        }\r\n        return choices;\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if (target == \"activities\" || target == \"all\" || target.toLowerCase() == this.creature.toLowerCase()) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"activities\", \"all\"].includes(view.target.toLowerCase())) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\" *ngIf=\"creature=='Character'\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-activities-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Actions and Activities</header>\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <app-tags [creature]=\"creature\" [objectName]=\"'Activities'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n            [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n        <ng-container *ngFor=\"let skill of get_ClassDCs(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"subsectionHeader fullsize-only\" *ngIf=\"index == 0\">Class DCs</header>\r\n            <app-skill [skill]=skill [isDC]=true></app-skill>\r\n        </ng-container>\r\n        <header class=\"subsectionHeader\">Actions and Activities</header>\r\n        <ng-container *ngFor=\"let gain of get_OwnedActivities(); trackBy:trackByIndex;\">\r\n            <ng-container\r\n                *ngFor=\"let activity of (gain.can_Activate ? [gain] : get_Activities(gain.name)); trackBy:trackByIndex;\">\r\n                <ng-container *ngFor=\"let maxCharges of [activity.maxCharges(get_Creature(), characterService)]\">\r\n                    <div class=\"list-item\" *ngFor=\"let activityID of [get_ID()]; trackBy:trackByIndex;\">\r\n                        <button class=\"newrow left-aligned sublist-toggle\"\r\n                            [ngClass]=\"{'fancy-button':gain.active, 'inactive-button':((gain.activeCooldown ? (maxCharges == gain.chargesUsed) : false) && !gain.active)}\"\r\n                            (click)=\"toggle_Action(activityID)\">\r\n                            <span *ngIf=\"activity.name == 'Fused Stance'\">{{get_FuseStanceName()}}</span>\r\n                            <span *ngIf=\"activity.name != 'Fused Stance'\">{{activity.name}}</span>\r\n                            <app-actionIcons [actionString]=\"activity.actions\"></app-actionIcons>\r\n                            {{(activity.activationType) ? activity.activationType : \"\"}}\r\n                        </button>\r\n                        <div class=\"list-item sublist lower\"\r\n                            [ngClass]=\"{'fancy-list':gain.active, 'inactive-list':((gain.activeCooldown ? (maxCharges == gain.chargesUsed) : false) && !gain.active)}\"\r\n                            *ngIf=\"get_ShowAction()==activityID\">\r\n                            <app-activity [creature]=\"creature\" [activity]=activity [gain]=gain [allowActivate]=\"true\">\r\n                            </app-activity>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let choice of get_TemporaryFeatChoices(); let index = index; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader box-header\" *ngIf=\"index == 0\">Temporary Feats</header>\r\n            <app-featchoice (showChoiceNameMessage)=\"receive_ChoiceNameMessage($event)\"\r\n                (showFeatMessage)=\"receive_FeatMessage($event)\" [choice]=\"choice\" [levelNumber]=\"get_Creature().level\"\r\n                [showFeat]=\"get_ShowItem()\" [showChoice]=\"get_ShowList()\">\r\n            </app-featchoice>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Effect } from './Effect';\r\nimport { CharacterService } from './character.service';\r\nimport { TraitsService } from './traits.service';\r\nimport { EffectCollection } from './EffectCollection';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Character } from './Character';\r\nimport { Speed } from './Speed';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { AbilitiesService } from './abilities.service';\r\nimport { Creature } from './Creature';\r\nimport { Feat } from './Feat';\r\nimport { ItemProperty } from './ItemProperty';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { Activity } from './Activity';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Equipment } from './Equipment';\r\nimport { Oil } from './Oil';\r\nimport { WornItem } from './WornItem';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport * as json_effectproperties from '../assets/json/effectproperties';\r\nimport { forEachChild } from 'typescript';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EffectsService {\r\n\r\n    private effects: EffectCollection[] = [new EffectCollection(), new EffectCollection(), new EffectCollection()];\r\n    //The bonus types are hardcoded. If Paizo ever adds a new bonus type, this is where we need to change them.\r\n    private bonusTypes: string[] = [\"item\", \"circumstance\", \"status\", \"proficiency\", \"untyped\"];\r\n    private effectProperties: ItemProperty[] = [];\r\n\r\n    constructor(\r\n        private traitsService: TraitsService,\r\n        private abilitiesService: AbilitiesService,\r\n        private activitiesService: ActivitiesService\r\n    ) { }\r\n\r\n    get_Effects(creature: string) {\r\n        let index = this.get_CalculatedIndex(creature);\r\n        return this.effects[index];\r\n    }\r\n\r\n    get_CalculatedIndex(creature: string) {\r\n        switch (creature) {\r\n            case \"Character\":\r\n                return 0;\r\n            case \"Companion\":\r\n                return 1;\r\n            case \"Familiar\":\r\n                return 2;\r\n        }\r\n    }\r\n\r\n    get_Creature(creature: string, characterService: CharacterService) {\r\n        return characterService.get_Creature(creature);\r\n    }\r\n\r\n    get_EffectsOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].all.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_RelativesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].relatives.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_RelativesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].relatives.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , false, lowerIsBetter);\r\n    }\r\n\r\n    get_AbsolutesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].absolutes.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_AbsolutesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].absolutes.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , true, lowerIsBetter);\r\n    }\r\n\r\n    get_BonusesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].bonuses.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_BonusesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].bonuses.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , false, lowerIsBetter);\r\n    }\r\n\r\n    get_PenaltiesOnThis(creature: Creature, ObjectName: string) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].penalties.filter(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply);\r\n    }\r\n\r\n    get_PenaltiesOnThese(creature: Creature, ObjectNames: string[], lowerIsBetter: boolean = false) {\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        //Since there can be an overlap between the different effects we're asking about, we need to break them down to one bonus and one penalty per effect type.\r\n        return this.get_TypeFilteredEffects(\r\n            this.effects[index].penalties.filter(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply)\r\n            , false, lowerIsBetter);\r\n    }\r\n\r\n    show_BonusesOnThis(creature: Creature, ObjectName: string) {\r\n        //This function is usually only used to determine if a value should be highlighted as a bonus. Because we don't want to highlight values if their bonus comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].bonuses.some(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply && effect.show);\r\n    }\r\n\r\n    show_BonusesOnThese(creature: Creature, ObjectNames: string[]) {\r\n        //This function is usually only used to determine if a value should be highlighted as a bonus. Because we don't want to highlight values if their bonus comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].bonuses.some(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply && effect.show);\r\n    }\r\n\r\n    show_PenaltiesOnThis(creature: Creature, ObjectName: string) {\r\n        //This function is usually only used to determine if a value should be highlighted as a penalty. Because we don't want to highlight values if their penalty comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].penalties.some(effect => effect.creature == creature.id && effect.target.toLowerCase() == ObjectName.toLowerCase() && effect.apply && effect.show);\r\n    }\r\n\r\n    show_PenaltiesOnThese(creature: Creature, ObjectNames: string[]) {\r\n        //This function is usually only used to determine if a value should be highlighted as a penalty. Because we don't want to highlight values if their penalty comes from a feat, we exclude hidden effects here.\r\n        let index = this.get_CalculatedIndex(creature.type);\r\n        return this.effects[index].penalties.some(effect => effect.creature == creature.id && ObjectNames.map(name => name.toLowerCase()).includes(effect.target.toLowerCase()) && effect.apply && effect.show);\r\n    }\r\n\r\n    get_TypeFilteredEffects(effects: Effect[], absolutes: boolean = false, lowerIsBetter: boolean = false) {\r\n        //This function takes a batch of effects and reduces them to the highest bonus and the lowest (i.e. worst) penalty per bonus type, since only untyped bonuses stack.\r\n        //Explicitly cumulative effects are added together before comparing.\r\n        //It assumes that these effects come pre-filtered to apply to one specific calculation, i.e. passing this.effects[0] would not be beneficial.\r\n        //It also disables certain relative effect if absolute effects are active.\r\n        let returnedEffects: Effect[] = [];\r\n        let filteredEffects: Effect[] = effects;\r\n        //If any effects with a setValue exist for this target, all item, proficiency and untyped effects for the same target are ignored.\r\n        if (effects.find(effect => effect.target == effect.setValue)) {\r\n            filteredEffects = effects.filter(effect => effect.setValue || ![\"item\", \"proficiency\", \"untyped\"].includes(effect.type))\r\n        };\r\n        this.bonusTypes.forEach(type => {\r\n            if (type == \"untyped\" && !absolutes) {\r\n                //Keep all untyped relative effects.\r\n                returnedEffects.push(...filteredEffects.filter(effect => effect.type == type));\r\n            } else {\r\n                //For all bonus types except untyped, check all and get the highest bonus and the lowest penalty.\r\n                let bonusEffects: Effect[] = filteredEffects.filter(effect => effect.type == type && effect.penalty == false);\r\n                if (bonusEffects.length) {\r\n                    //If we have any bonuses for this type, figure out which one is the largest and only get that one.\r\n                    // Multiple effects might have the same value, but it doesn't matter so long as one of them applies.\r\n                    //We have to make sure there are applicable effects, because reduce doesn't like empty arrays.\r\n                    if (absolutes && bonusEffects.some(effect => effect.setValue)) {\r\n                        if (lowerIsBetter) {\r\n                            returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.setValue) < parseInt(current.setValue) ? prev : current)));\r\n                        } else {\r\n                            returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.setValue) > parseInt(current.setValue) ? prev : current)));\r\n                        }\r\n                    } else if (bonusEffects.some(effect => effect.value)) {\r\n                        //If any effects are cumulative, and any effect exists whose source appears in the cumulative list, we build groups.\r\n                        // Every effect is grouped with all effects that includes its source in their cumulative list.\r\n                        // Then we add all those groups up and keep the effects from the one with the highest sum.\r\n                        if (bonusEffects.some(effect => effect.cumulative.length) && bonusEffects.some(effect => bonusEffects.some(otherEffect => otherEffect.cumulative.includes(effect.source)))) {\r\n                            let effectGroups: Effect[][] = [];\r\n                            bonusEffects.forEach(effect => {\r\n                                effectGroups.push([effect].concat(bonusEffects.filter(otherEffect => otherEffect !== effect && otherEffect.cumulative.includes(effect.source))))\r\n                            })\r\n                            function groupSum(effectGroup: Effect[]) {\r\n                                return effectGroup.reduce((prev, current) => prev + parseInt(current.value), 0)\r\n                            }\r\n                            if (effectGroups.length) {\r\n                                if (lowerIsBetter) {\r\n                                    returnedEffects.push(...effectGroups.reduce((prev, current) => (groupSum(prev) < groupSum(current) ? prev : current)));\r\n                                } else {\r\n                                    returnedEffects.push(...effectGroups.reduce((prev, current) => (groupSum(prev) > groupSum(current) ? prev : current)));\r\n                                }\r\n\r\n                            }\r\n                        } else {\r\n                            if (lowerIsBetter) {\r\n                                returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.value) < parseInt(current.value) ? prev : current)));\r\n                            } else {\r\n                                returnedEffects.push(bonusEffects.reduce((prev, current) => (parseInt(prev.value) > parseInt(current.value) ? prev : current)));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                let penaltyEffects: Effect[] = filteredEffects.filter(effect => effect.type == type && effect.penalty == true);\r\n                if (penaltyEffects.length > 0) {\r\n                    //If we have any PENALTIES for this type, we proceed as with bonuses,\r\n                    // only we pick the lowest number (that is, the worst penalty).\r\n                    if (absolutes && penaltyEffects.some(effect => effect.setValue)) {\r\n                        returnedEffects.push(penaltyEffects.reduce((prev, current) => (parseInt(prev.setValue) < parseInt(current.setValue) ? prev : current)));\r\n                    } else if (penaltyEffects.some(effect => effect.value)) {\r\n                        if (penaltyEffects.some(effect => effect.cumulative.length) && penaltyEffects.some(effect => penaltyEffects.some(otherEffect => otherEffect.cumulative.includes(effect.source)))) {\r\n                            let effectGroups: Effect[][] = [];\r\n                            penaltyEffects.forEach(effect => {\r\n                                effectGroups.push([effect].concat(penaltyEffects.filter(otherEffect => otherEffect !== effect && otherEffect.cumulative.includes(effect.source))))\r\n                            })\r\n                            function groupSum(effectGroup: Effect[]) {\r\n                                return effectGroup.reduce((prev, current) => prev + parseInt(current.value), 0)\r\n                            }\r\n                            if (effectGroups.length) {\r\n                                returnedEffects.push(...effectGroups.reduce((prev, current) => (groupSum(prev) < groupSum(current) ? prev : current)));\r\n                            }\r\n                        } else {\r\n                            returnedEffects.push(penaltyEffects.reduce((prev, current) => (parseInt(prev.value) < parseInt(current.value) ? prev : current)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return returnedEffects;\r\n    }\r\n\r\n    get_EffectProperties() {\r\n        return this.effectProperties;\r\n    }\r\n\r\n    get_TestSpeed(name: string) {\r\n        return (new Speed(name));\r\n    }\r\n\r\n    get_SimpleEffects(creature: Creature, characterService: CharacterService, object: any, name: string = \"\", parentConditionGain: ConditionGain = null) {\r\n        //If an object has a simple instruction in effects, such as \"Athletics\", \"+2\", turn it into an effect,\r\n        // then mark the effect as a penalty if the change is negative (except for Bulk).\r\n        //The effect can have a formula as well, for example \"Max HP\", \"Character.level + 2\", which is evaluated with the variables and functions listed here.\r\n        //Try to get the type, too - if no type is given, set it to untyped.\r\n        //Return an array of Effect objects\r\n        let objectEffects: Effect[] = [];\r\n        //Get the object name unless a name is enforced.\r\n        let source = name ? name : ((object.get_Name) ? object.get_Name() : object.name);\r\n        //Define some values that may be relevant for effect values\r\n        let effectsService = this;\r\n        effectsService = effectsService;\r\n        characterService = characterService;\r\n        let abilitiesService = this.abilitiesService;\r\n        let Creature: Creature = creature;\r\n        let Character: Character = characterService.get_Character();\r\n        let Companion: AnimalCompanion = characterService.get_Companion();\r\n        let Familiar: Familiar = characterService.get_Familiar();\r\n        let Level: number = Character.level;\r\n        //Some values specific to conditions for effect values\r\n        let Duration: number = object.duration;\r\n        let Value: number = object.value;\r\n        let Heightened: number = object.heightened;\r\n        let Choice: string = object.choice;\r\n        let SpellCastingAbility: string = object.spellCastingAbility;\r\n        let SpellSource: string = object.spellSource;\r\n        //Hint effects of conditions pass their conditionGain for these values.\r\n        //Conditions pass their own gain as parentConditionGain for effects.\r\n        //Conditions that are caused by conditions also pass the original conditionGain for the evaluation of their activationPrerequisite.\r\n        if (parentConditionGain) {\r\n            if (!Duration) {\r\n                Duration = parentConditionGain.duration;\r\n            }\r\n            if (!Value) {\r\n                Value = parentConditionGain.value;\r\n            }\r\n            if (!Heightened) {\r\n                Heightened = parentConditionGain.heightened;\r\n            }\r\n            if (!Choice) {\r\n                Choice = parentConditionGain.choice;\r\n            }\r\n            if (!SpellCastingAbility) {\r\n                SpellCastingAbility = parentConditionGain.spellCastingAbility;\r\n            }\r\n        }\r\n        //Some Functions for effect values\r\n        function Temporary_HP(source: string = \"\", sourceId: string = \"\") {\r\n            if (sourceId) {\r\n                return creature.health.temporaryHP.find(tempHPSet => tempHPSet.sourceId == sourceId).amount;\r\n            } else if (source) {\r\n                return creature.health.temporaryHP.find(tempHPSet => tempHPSet.source == source).amount;\r\n            } else {\r\n                return creature.health.temporaryHP[0].amount;\r\n            }\r\n        }\r\n        function Current_HP() {\r\n            return creature.health.currentHP(creature, characterService, effectsService).result;\r\n        }\r\n        function Max_HP() {\r\n            return creature.health.maxHP(creature, characterService, effectsService).result;\r\n        }\r\n        function Ability(name: string) {\r\n            if (creature.type == \"Familiar\") {\r\n                return 0;\r\n            } else {\r\n                return characterService.get_Abilities(name)[0]?.value((creature as AnimalCompanion | Character), characterService, effectsService).result;\r\n            }\r\n        }\r\n        function Modifier(name: string) {\r\n            if (creature.type == \"Familiar\") {\r\n                return 0;\r\n            } else {\r\n                return characterService.get_Abilities(name)[0]?.mod((creature as AnimalCompanion | Character), characterService, effectsService).result;\r\n            }\r\n        }\r\n        function BaseSize() {\r\n            return (creature as AnimalCompanion | Character | Familiar).get_BaseSize();\r\n        }\r\n        function Size() {\r\n            return (creature as AnimalCompanion | Character | Familiar).get_Size(this);\r\n        }\r\n        function Skill(name: string) {\r\n            return characterService.get_Skills(creature, name)[0]?.baseValue((creature as AnimalCompanion | Character), characterService, abilitiesService, effectsService, Level).result;\r\n        }\r\n        function Skill_Level(name: string) {\r\n            if (creature.type == \"Familiar\") {\r\n                return 0;\r\n            } else {\r\n                return characterService.get_Skills(creature, name)[0]?.level((creature as AnimalCompanion | Character), characterService, Level);\r\n            }\r\n        }\r\n        let get_TestSpeed = this.get_TestSpeed;\r\n        function Speed(name: string) {\r\n            return (get_TestSpeed(name))?.value((creature as AnimalCompanion | Character), characterService, effectsService)[0] || 0;\r\n        }\r\n        function Has_Condition(name: string) {\r\n            return characterService.get_AppliedConditions(creature, name, \"\", true).length\r\n        }\r\n        function Armor() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].armors.find(armor => armor.equipped);\r\n            }\r\n        }\r\n        function Shield() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].shields.find(shield => shield.equipped);\r\n            }\r\n        }\r\n        function Weapons() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].weapons.filter(weapon => weapon.equipped);\r\n            }\r\n        }\r\n        function WornItems() {\r\n            if (creature.type == \"Familiar\") {\r\n                return null;\r\n            } else {\r\n                return creature.inventories[0].wornitems.filter(wornItem => wornItem.can_Invest() ? wornItem.invested : true);\r\n            }\r\n        }\r\n        function Has_Feat(creature: string, name: string) {\r\n            if (creature == \"Familiar\") {\r\n                return characterService.familiarsService.get_FamiliarAbilities(name).some(feat => feat.have(Familiar, characterService, Level, false));\r\n            } else if (creature == \"Character\") {\r\n                return characterService.featsService.get_All(Character.customFeats, name, \"\", true, true).some(feat => feat.have(Character, characterService, Level, false));\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function SpellcastingModifier() {\r\n            if (SpellCastingAbility) {\r\n                return abilitiesService.get_Abilities(SpellCastingAbility)?.[0]?.mod(Character, characterService, effectsService, Character.level).result || 0\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        function Has_Heritage(name: string) {\r\n            return characterService.get_Character().class?.heritage?.name.toLowerCase() == name.toLowerCase() ||\r\n                characterService.get_Character().class?.additionalHeritages.find(extraHeritage => extraHeritage.name.toLowerCase() == name.toLowerCase())\r\n        }\r\n        //effects come as {affected, value} where value is a string that contains a statement.\r\n        //This statement is eval'd here. The statement can use characterService to check level, skills, abilities etc.\r\n        object.effects.forEach((effect: EffectGain) => {\r\n            let show: boolean = false;\r\n            let type: string = \"untyped\";\r\n            let penalty: boolean = false;\r\n            let value: string = \"0\";\r\n            let setValue: string = \"\";\r\n            let toggle: boolean = effect.toggle;\r\n            if (object === creature) {\r\n                source = effect.source || \"Custom Effect\"\r\n            }\r\n            try {\r\n                value = eval(effect.value).toString();\r\n                if (parseInt(value) > 0) {\r\n                    value = \"+\" + value;\r\n                }\r\n            } catch (error) {\r\n                value = \"0\";\r\n            };\r\n            if (effect.setValue) {\r\n                try {\r\n                    setValue = eval(effect.setValue).toString();\r\n                } catch (error) {\r\n                    setValue = \"\";\r\n                };\r\n            }\r\n            if ((!parseInt(value) && !parseFloat(value)) || parseFloat(value) == Infinity) {\r\n                value = \"0\";\r\n            }\r\n            if (effect.type) {\r\n                type = effect.type;\r\n            }\r\n            if (setValue) {\r\n                penalty = false;\r\n                value = \"0\";\r\n            } else if (parseInt(value) < 0) {\r\n                if (effect.affected != \"Bulk\") {\r\n                    penalty = true;\r\n                } else {\r\n                    penalty = false;\r\n                }\r\n            } else {\r\n                if (effect.affected != \"Bulk\") {\r\n                    penalty = false;\r\n                } else {\r\n                    penalty = true;\r\n                }\r\n            }\r\n            if (toggle) {\r\n                setValue = \"\";\r\n                value = \"0\";\r\n            }\r\n            //Hide all relative effects that come from feats, so we don't see green effects permanently after taking a feat.\r\n            show = effect.show;\r\n            if (effect.show == undefined && object.constructor == Feat) {\r\n                show = false;\r\n            }\r\n            if (source == \"Custom Effect\") {\r\n                show = true;\r\n            }\r\n            //Effects can affect another creature. In that case, remove the notation and change the target.\r\n            let target: string = creature.id;\r\n            let affected: string = effect.affected;\r\n            if (effect.affected.includes(\"Character:\")) {\r\n                target = Character?.id || \"\";\r\n                affected = effect.affected.replace(\"Character:\", \"\");\r\n            }\r\n            if (effect.affected.includes(\"Companion:\")) {\r\n                target = Companion?.id || \"\";\r\n                affected = effect.affected.replace(\"Companion:\", \"\");\r\n            }\r\n            if (effect.affected.includes(\"Familiar:\")) {\r\n                target = Familiar?.id || \"\";\r\n                affected = effect.affected.replace(\"Familiar:\", \"\");\r\n            }\r\n            //Effects that have neither a value nor a toggle get ignored.\r\n            if (toggle || setValue || parseInt(value) != 0) {\r\n                objectEffects.push(new Effect(target, type, affected, value, setValue, toggle, source, penalty, undefined, show, effect.duration, effect.maxDuration, effect.cumulative));\r\n            }\r\n        });\r\n        return objectEffects;\r\n    }\r\n\r\n    generate_Effects(creatureType: string, characterService: CharacterService, secondRun: boolean = false) {\r\n        //Never call this function.\r\n        //It gets called by this.initialize whenever the character has changed.\r\n        //Every other function can skip the whole process and just do get_Effects().\r\n\r\n        let creature: Creature = this.get_Creature(creatureType, characterService);\r\n        let character: Character = (creature.type == \"Character\") ? creature as Character : null;\r\n        let companion: AnimalCompanion = (creature.type == \"Companion\") ? creature as AnimalCompanion : null;\r\n        let familiar: Familiar = (creature.type == \"Familiar\") ? creature as Familiar : null;\r\n        let creatureIndex: number = this.get_CalculatedIndex(creatureType)\r\n\r\n        //Fetch any effects from the other creatures that apply to this.\r\n        let foreignEffects: Effect[] = [];\r\n        [0, 1, 2].filter(otherCreatureIndex => otherCreatureIndex != creatureIndex).forEach(otherCreatureIndex => {\r\n            foreignEffects.push(...this.effects[otherCreatureIndex].all.filter(effect => effect.creature == creature.id));\r\n        });\r\n\r\n        //Create simple effects from equipped items, feats, conditions etc.\r\n        //Creature Effects\r\n        let simpleEffects: Effect[] = this.get_SimpleEffects(creature, characterService, creature);\r\n\r\n        //Character and Companion Items\r\n        if (!familiar) {\r\n            characterService.get_Inventories(creature)[0].allEquipment().filter(item => item.invested && !item.broken && item.effects?.length && item.type != \"armorrunes\").forEach(item => {\r\n                simpleEffects = simpleEffects.concat(this.get_SimpleEffects(creature, characterService, item));\r\n            });\r\n            characterService.get_Inventories(creature)[0].allEquipment().filter(item => item.equipped && !item.broken && item.propertyRunes?.length).forEach(item => {\r\n                item.propertyRunes.filter(rune => rune[\"effects\"]?.length).forEach(rune => {\r\n                    simpleEffects = simpleEffects.concat(this.get_SimpleEffects(creature, characterService, rune));\r\n                })\r\n            });\r\n        }\r\n        \r\n        //Write active hint effects into a separate list first. All effects from feats should be shown, after which they are moved into simpleEffects.\r\n        let hintEffects: Effect[] = [];\r\n        \r\n        //Traits that are on currently equipped items\r\n        characterService.traitsService.get_Traits().filter(trait => trait.hints.length).forEach(trait => {\r\n            trait.hints.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length && trait.haveOn(creature).length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + trait.name));\r\n            })\r\n        })\r\n        \r\n        //Write passive feat effects into a separate list first. All effects from feats should be hidden, after which they are moved into simpleEffects.\r\n        let featEffects: Effect[] = [];\r\n        \r\n        //Character Feats and active hints\r\n        if (character) {\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => (feat.effects?.length || feat.hints?.length) && feat.have(character, characterService, character.level))\r\n                .forEach(feat => {\r\n                    if (feat.effects?.length) {\r\n                        featEffects = featEffects.concat(this.get_SimpleEffects(character, characterService, feat));\r\n                    }\r\n                    feat.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                        hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + feat.name));\r\n                    })\r\n                });\r\n        }\r\n        //Companion Specializations and active hints\r\n        if (companion) {\r\n            companion.class?.ancestry?.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + companion.class.ancestry.name));\r\n            })\r\n            companion.class?.specializations?.filter(spec => spec.effects?.length || spec.hints?.length).forEach(spec => {\r\n                if (spec.effects?.length) {\r\n                    featEffects = featEffects.concat(this.get_SimpleEffects(companion, characterService, spec));\r\n                }\r\n                spec.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                    hintEffects = hintEffects.concat(this.get_SimpleEffects(companion, characterService, hint, \"conditional, \" + spec.name));\r\n                })\r\n            })\r\n        }\r\n        //Familiar Feats and active hints\r\n        if (familiar) {\r\n            characterService.familiarsService.get_FamiliarAbilities().filter(ability => ability.have(familiar, characterService))\r\n                .filter(ability => ability.effects?.length || ability.hints?.length)\r\n                .forEach(ability => {\r\n                    if (ability.effects?.length) {\r\n                        featEffects = featEffects.concat(this.get_SimpleEffects(familiar, characterService, ability));\r\n                    }\r\n                    ability.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                        hintEffects = hintEffects.concat(this.get_SimpleEffects(familiar, characterService, hint, \"conditional, \" + ability.name));\r\n                    })\r\n                });\r\n        }\r\n        //Hide all feat effects and push them into simpleEffects.\r\n        featEffects.forEach(effect => {\r\n            effect.show = false;\r\n        })\r\n        simpleEffects.push(...featEffects);\r\n\r\n        //Conditions\r\n        let appliedConditions = characterService.get_AppliedConditions(creature).filter(condition => condition.apply);\r\n        appliedConditions.forEach(gain => {\r\n            let originalCondition = characterService.get_Conditions(gain.name)[0];\r\n            if (originalCondition?.effects?.length) {\r\n                //Create an object that contains the condition gain data and the condition effects.\r\n                let effectsObject: any = JSON.parse(JSON.stringify(gain));\r\n                effectsObject.effects = JSON.parse(JSON.stringify(originalCondition.effects));\r\n                simpleEffects = simpleEffects.concat(this.get_SimpleEffects(creature, characterService, effectsObject, \"\", gain));\r\n            }\r\n            originalCondition?.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(creature, characterService, hint, \"conditional, \" + originalCondition.name, gain));\r\n            })\r\n        });\r\n        //Active activities and active hints\r\n        characterService.get_OwnedActivities(creature, creature.level, true).filter(activity => activity.active).forEach(activity => {\r\n            let originalActivity: Activity;\r\n            if (activity.constructor == ItemActivity) {\r\n                originalActivity = activity as ItemActivity;\r\n            } else {\r\n                originalActivity = this.activitiesService.get_Activities(activity.name)[0];\r\n            }\r\n            if (originalActivity?.effects?.length) {\r\n                simpleEffects = simpleEffects.concat(this.get_SimpleEffects(character, characterService, originalActivity));\r\n            }\r\n            originalActivity?.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                hintEffects = hintEffects.concat(this.get_SimpleEffects(character, characterService, hint, \"conditional, \" + originalActivity.name));\r\n            })\r\n        })\r\n        //Active hints of equipped items\r\n        if (!familiar) {\r\n            function add_HintEffects(item: Equipment | Oil | WornItem | ArmorRune | WeaponRune, effectsService: EffectsService) {\r\n                item.hints?.filter(hint => (hint.active || hint.active2 || hint.active3 || hint.active4 || hint.active5) && hint.effects?.length).forEach(hint => {\r\n                    hintEffects = hintEffects.concat(effectsService.get_SimpleEffects(character, characterService, hint, \"conditional, \" + (item.get_Name ? item.get_Name() : item.name)));\r\n                })\r\n            }\r\n            creature.inventories.forEach(inventory => {\r\n                inventory.allEquipment().filter(item => (item.equippable ? item.equipped : true) && item.amount && !item.broken && (item.can_Invest() ? item.invested : true)).forEach(item => {\r\n                    add_HintEffects(item, this);\r\n                    item.oilsApplied.forEach(oil => {\r\n                        add_HintEffects(oil, this);\r\n                    });\r\n                    if ((item as WornItem).aeonStones) {\r\n                        (item as WornItem).aeonStones.forEach(stone => {\r\n                            add_HintEffects(stone, this);\r\n                        });\r\n                    }\r\n                    if (item.moddable == \"armor\" && (item as Equipment).propertyRunes) {\r\n                        (item as Equipment).propertyRunes.forEach(rune => {\r\n                            add_HintEffects(rune as ArmorRune, this);\r\n                        });\r\n                    }\r\n                    if (item.moddable == \"weapon\" && (item as Equipment).propertyRunes) {\r\n                        (item as Equipment).propertyRunes.forEach(rune => {\r\n                            add_HintEffects(rune as WeaponRune, this);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //Show all hint effects and push them into simpleEffects.\r\n        hintEffects.forEach(effect => {\r\n            effect.show = true;\r\n        })\r\n        simpleEffects.push(...hintEffects);\r\n\r\n\r\n        let itemEffects: Effect[] = [];\r\n\r\n        //Get Item bonuses for Character or Companion\r\n        if (!familiar) {\r\n            let items = creature.inventories[0];\r\n\r\n            //Initialize shoddy values and shield ally for all shields.\r\n            creature.inventories.forEach(inv => {\r\n                inv.shields.forEach(shield => {\r\n                    let oldShoddy = shield.$shoddy;\r\n                    shield.get_Shoddy((creature as AnimalCompanion | Character), characterService);\r\n                    if (oldShoddy != shield.$shoddy) {\r\n                        characterService.set_ToChange(creature.type, \"inventory\");\r\n                    }\r\n                    let oldShieldAlly = shield.$shieldAlly;\r\n                    shield.get_ShieldAlly((creature as AnimalCompanion | Character), characterService);\r\n                    if (oldShieldAlly != shield.$shieldAlly) {\r\n                        characterService.set_ToChange(creature.type, \"inventory\");\r\n                    }\r\n                })\r\n            })\r\n            //Get shield bonuses from raised shields\r\n            //If a shield is raised, add its circumstance bonus to AC with a + in front. If you are taking cover with the shield raised, you gain the \"Greater Cover\" condition; This doesn't need to be handled here.\r\n            items.shields.filter(shield => shield.equipped && shield.raised && !shield.broken).forEach(shield => {\r\n                let shieldBonus = shield.get_ACBonus();\r\n                if (shieldBonus) {\r\n                    itemEffects.push(new Effect(creature.id, 'circumstance', \"AC\", \"+\" + shieldBonus, \"\", false, shield.get_Name(), false));\r\n                }\r\n                //Reflexive Shield\r\n                if (character.get_FeatsTaken(1, character.level, \"Reflexive Shield\").length) {\r\n                    itemEffects.push(new Effect(creature.id, 'circumstance', \"Reflex\", \"+\" + shieldBonus, \"\", false, \"Reflexive Shield\", false));\r\n                }\r\n            });\r\n            //Initialize armored skirt and shoddy values for all armor.\r\n            creature.inventories.forEach(inv => {\r\n                inv.armors.forEach(armor => {\r\n                    let oldArmoredSkirt = armor.$affectedByArmoredSkirt;\r\n                    let oldShoddy = armor.$shoddy;\r\n                    armor.get_ArmoredSkirt((creature as AnimalCompanion | Character), characterService);\r\n                    armor.get_Shoddy((creature as AnimalCompanion | Character), characterService);\r\n                    if (oldArmoredSkirt != armor.$affectedByArmoredSkirt || oldShoddy != armor.$shoddy) {\r\n                        characterService.set_ToChange(creature.type, \"inventory\");\r\n                    }\r\n                })\r\n            })\r\n            items.armors.filter(armor => armor.equipped).forEach(armor => {\r\n                //For Saving Throws, add any resilient runes on the equipped armor\r\n                if (armor.get_ResilientRune() > 0 && !armor.broken) {\r\n                    let resilient = armor.get_ResilientRune();\r\n                    itemEffects.push(new Effect(creature.id, 'item', \"Saving Throws\", \"+\" + resilient, \"\", false, armor.get_Resilient(resilient), false))                    \r\n                }\r\n                //Add Armor specialization effects if they apply\r\n                armor.get_ArmorSpecialization(creature, characterService).forEach(spec => {\r\n                    itemEffects.push(...this.get_SimpleEffects(creature, characterService, spec))\r\n                })\r\n                //Add broken penalty if the armor is broken\r\n                if (armor.broken) {\r\n                    switch (armor.get_Proficiency()) {\r\n                        case \"Light Armor\":\r\n                            itemEffects.push(new Effect(creature.id, \"untyped\", \"AC\", \"-1\", \"\", false, \"Broken Armor\", true));\r\n                            break;\r\n                        case \"Medium Armor\":\r\n                            itemEffects.push(new Effect(creature.id, \"untyped\", \"AC\", \"-2\", \"\", false, \"Broken Armor\", true));\r\n                            break;\r\n                        case \"Heavy Armor\":\r\n                            itemEffects.push(new Effect(creature.id, \"untyped\", \"AC\", \"-3\", \"\", false, \"Broken Armor\", true));\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n\r\n            //Get skill and speed penalties from armor\r\n            //Skip this if there is an \"Ignore Armor Penalty\" effect.\r\n            if (!simpleEffects.concat(itemEffects).concat(foreignEffects).some(effect => effect.creature == creature.id && effect.target == \"Ignore Armor Penalty\" && effect.toggle)) {\r\n                //If an armor has a skillpenalty or a speedpenalty, check if Strength meets its strength requirement.\r\n                let Strength = characterService.get_Abilities(\"Strength\")[0].value(creature as Character | AnimalCompanion, characterService, this).result;\r\n                items.armors.filter(item => item.equipped && item.get_SkillPenalty()).forEach(item => {\r\n                    //These methods the AC and skill penalty of the armor.\r\n                    item.get_ArmoredSkirt((creature as AnimalCompanion | Character), characterService);\r\n                    item.get_Shoddy((creature as AnimalCompanion | Character), characterService);\r\n                    let name = item.get_Name();\r\n                    if (Strength < item.get_Strength()) {\r\n                        //You are not strong enough to act freely in this armor.\r\n                        //If the item has the Flexible trait, its penalty doesn't apply to Acrobatics and Athletics.\r\n                        //We push this as an apply:false effect to each so you can see that (and why) you were spared from it.\r\n                        //We also add a note to the source for clarity.\r\n                        if (this.traitsService.have_Trait(characterService, item, \"Flexible\")) {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Acrobatics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Flexible)\", true, false));\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Athletics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Flexible)\", true, false));\r\n                        } else {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Acrobatics\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Athletics\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                        }\r\n                        //These two always apply unless you are strong enough.\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Stealth\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Thievery\", item.get_SkillPenalty().toString(), \"\", false, name, true));\r\n                    } else {\r\n                        //If you ARE strong enough, we push some not applying effects so you can feel good about that\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Acrobatics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Athletics\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        itemEffects.push(new Effect(creature.id, 'item', \"Thievery\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        //UNLESS the item is also Noisy, in which case you do get the stealth penalty because you are dummy thicc and the clap of your ass cheeks keeps alerting the guards.\r\n                        if (this.traitsService.have_Trait(characterService, item, \"Noisy\")) {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Stealth\", item.get_SkillPenalty().toString(), \"\", false, name + \" (Noisy)\", true))\r\n                        } else {\r\n                            itemEffects.push(new Effect(creature.id, 'item', \"Stealth\", item.get_SkillPenalty().toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                        }\r\n                    }\r\n                });\r\n                //Skip this if there is an \"Ignore Armor Speed Penalty\" effect.\r\n                if (!simpleEffects.find(effect => effect.creature == creature.id && effect.target == \"Ignore Armor Speed Penalty\" && effect.toggle)) {\r\n                    items.armors.filter(item => item.equipped && item.speedpenalty).forEach(item => {\r\n                        let name = item.get_Name();\r\n                        if (Strength < item.get_Strength()) {\r\n                            //You are not strong enough to move unhindered in this armor. You get a speed penalty.\r\n                            itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, name, true));\r\n                        } else {\r\n                            //You are strong enough, but if the armor is particularly heavy, your penalty is only lessened.\r\n                            if (item.speedpenalty < -5) {\r\n                                //In this case we push both the avoided and the actual effect so you can feel at least a little good about yourself.\r\n                                itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", (item.speedpenalty + 5).toString(), \"\", false, name, true));\r\n                                itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                            } else {\r\n                                //If you are strong enough and the armor only gave -5ft penalty, you get a fully avoided effect to gaze at.\r\n                                itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, name + \" (cancelled by Strength)\", true, false));\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                items.shields.filter(item => item.equipped && item.speedpenalty).forEach(item => {\r\n                    //Shields don't have a strength requirement for speed penalties. In this case, the penalty just alwas applies.\r\n                    itemEffects.push(new Effect(creature.id, 'untyped', \"Speed\", item.speedpenalty.toString(), \"\", false, item.get_Name(), true));\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        //Push simpleEffects and itemEffects into effects together.\r\n        let allEffects: Effect[] = simpleEffects.concat(itemEffects).concat(foreignEffects);\r\n\r\n        //If you have the Unburdened Iron feat and are taking speed penalties, reduce the first of them by 5.\r\n        if (character?.get_FeatsTaken(0, character.level, \"Unburdened Iron\").length) {\r\n            let done: boolean = false;\r\n            //Try global speed penalties first (this is more beneficial to the character).\r\n            allEffects.filter(effect => effect.target == \"Speed\" && effect.penalty && !effect.toggle).forEach(effect => {\r\n                if (!done) {\r\n                    effect.value = (parseInt(effect.value) + 5).toString();\r\n                    if (effect.value == \"0\" || effect.value == \"\") { effect.apply = false }\r\n                    effect.source = effect.source + \" (Lessened by Unburdened Iron)\";\r\n                    done = true;\r\n                }\r\n            })\r\n            allEffects.filter(effect => effect.target == \"Land Speed\" && effect.penalty && !effect.toggle).forEach(effect => {\r\n                if (!done) {\r\n                    effect.value = (parseInt(effect.value) + 5).toString();\r\n                    if (effect.value == \"0\" || effect.value == \"\") { effect.apply = false }\r\n                    effect.source = effect.source + \" (Lessened by Unburdened Iron)\";\r\n                    done = true;\r\n                }\r\n            })\r\n        }\r\n\r\n        //Split off effects that affect another creature for later. We don't want these to influence or be influenced by the next steps.\r\n        let effectsForOthers = allEffects.filter(effect => effect.creature != creature.id);\r\n        allEffects = allEffects.filter(effect => effect.creature == creature.id);\r\n\r\n        //Toggle effects are always applied.\r\n        allEffects.filter(effect => effect.toggle).forEach(effect => {\r\n            effect.apply = true;\r\n        })\r\n\r\n        //Now we need to go over all the effects.\r\n        // If one target is affected by two bonuses of the same type, only the bigger one is applied.\r\n        // The same goes for penalties, unless they are untyped.\r\n\r\n        //If an effect with the target \"Ignore <type> bonuses and penalties\" exists, all effects of that type are disabled.\r\n        this.bonusTypes.forEach(type => {\r\n            if (allEffects.find(effect => effect.target.toLowerCase() == \"ignore \" + type + \" bonuses and penalties\")) {\r\n                allEffects.filter(effect => effect.type == type && effect.apply == undefined).forEach(effect => {\r\n                    effect.apply = false;\r\n                })\r\n            }\r\n        })\r\n        //If there is an effect that says to ignore all <type> effects, bonuses or penalties,\r\n        // all effects (or bonuses or penalties) to that target (or all targets) with that type are disabled.\r\n        this.bonusTypes.forEach(type => {\r\n            allEffects\r\n                .filter(effect => effect.target.includes(\"Ignore \" + type[0].toUpperCase() + type.substring(1) + \" Effects\"))\r\n                .forEach(ignoreeffect => {\r\n                    let target = \"all\";\r\n                    if (ignoreeffect.target.includes(\" To \")) {\r\n                        target = ignoreeffect.target.split(\" To \")[1];\r\n                    }\r\n                    allEffects\r\n                        .filter(effect => (target == \"all\" || effect.target == target) && effect.type == type)\r\n                        .forEach(effect => {\r\n                            effect.apply = false;\r\n                        })\r\n                })\r\n            allEffects\r\n                .filter(effect => effect.target.includes(\"Ignore \" + type[0].toUpperCase() + type.substring(1) + \" Bonuses\"))\r\n                .forEach(ignoreeffect => {\r\n                    let target = \"all\";\r\n                    if (ignoreeffect.target.includes(\" To \")) {\r\n                        target = ignoreeffect.target.split(\" To \")[1];\r\n                    }\r\n                    allEffects\r\n                        .filter(effect => (target == \"all\" || effect.target == target) && effect.type == type && !effect.penalty)\r\n                        .forEach(effect => {\r\n                            effect.apply = false;\r\n                        })\r\n                })\r\n            allEffects\r\n                .filter(effect => effect.target.includes(\"Ignore \" + type[0].toUpperCase() + type.substring(1) + \" Penalties\"))\r\n                .forEach(ignoreeffect => {\r\n                    let target = \"all\";\r\n                    if (ignoreeffect.target.includes(\" To \")) {\r\n                        target = ignoreeffect.target.split(\" To \")[1];\r\n                    }\r\n                    allEffects\r\n                        .filter(effect => (target == \"all\" || effect.target == target) && effect.type == type && effect.penalty)\r\n                        .forEach(effect => {\r\n                            effect.apply = false;\r\n                        })\r\n                })\r\n        })\r\n\r\n        let targets: string[] = [];\r\n        //Collect all targets of effects, but each only once\r\n        allEffects.forEach(effect => {\r\n            if (!targets.includes(effect.target)) {\r\n                targets.push(effect.target);\r\n            }\r\n        });\r\n        targets.forEach(target => {\r\n            //Apply all untyped relative effects, but only the highest bonus and lowest penalty for each type for this target.\r\n            //We only apply effects if the decision hasn't already been made (that is, if apply == undefined)\r\n            this.get_TypeFilteredEffects(allEffects\r\n                .filter(effect =>\r\n                    effect.target == target && effect.apply == undefined && effect.value\r\n                ), false)\r\n                .forEach(effect => {\r\n                    effect.apply = true;\r\n                })\r\n            //Apply only the highest absolute effect for each type for this target.\r\n            // (There aren't actually any absolute penalties, and absolute effects are usually untyped.)\r\n            this.get_TypeFilteredEffects(allEffects\r\n                .filter(effect =>\r\n                    effect.target == target && effect.apply == undefined && effect.setValue\r\n                ), true)\r\n                .forEach(effect => {\r\n                    effect.apply = true;\r\n                })\r\n        })\r\n\r\n        //Disable all effects that are not applied so far.\r\n        allEffects.filter(effect => effect.apply == undefined).forEach(effect => {\r\n            effect.apply = false;\r\n        })\r\n\r\n        //Add back the effects that affect another creature.\r\n        allEffects = allEffects.concat(effectsForOthers);\r\n\r\n        //Figure out whether to show or hide an effect if it isn't set already.\r\n        let alwaysShow: string[] = [\r\n            \"AC\",\r\n            \"Acrobatics\",\r\n            \"Actions per Turn\",\r\n            \"All Checks and DCs\",\r\n            \"Arcana\",\r\n            \"Athletics\",\r\n            \"Attack Rolls\",\r\n            \"Bulk\",\r\n            \"Class DC\",\r\n            \"Crafting\",\r\n            \"Damage\",\r\n            \"Damage Rolls\",\r\n            \"Deception\",\r\n            \"Diplomacy\",\r\n            \"Fortitude\",\r\n            \"Hardness\",\r\n            \"Intimidation\",\r\n            \"Lore\",\r\n            \"Max Dying\",\r\n            \"Max HP\",\r\n            \"Medicine\",\r\n            \"Melee Attack Rolls\",\r\n            \"Melee Damage\",\r\n            \"Nature\",\r\n            \"Occultism\",\r\n            \"Perception\",\r\n            \"Performance\",\r\n            \"Ranged Attack Rolls\",\r\n            \"Ranged Damage\",\r\n            \"Reach\",\r\n            \"Reflex\",\r\n            \"Religion\",\r\n            \"Saving Throws\",\r\n            \"Size\",\r\n            \"Skill Checks\",\r\n            \"Society\",\r\n            \"Spell Attack Rolls\",\r\n            \"Spell DCs\",\r\n            \"Stealth\",\r\n            \"Survival\",\r\n            \"Thievery\",\r\n            \"Unarmed Attack Rolls\",\r\n            \"Unarmed Damage\",\r\n            \"Untrained Skills\",\r\n            \"Will\"\r\n        ].map(name => name.toLowerCase())\r\n        let alwaysShowWildcard: string[] = [\r\n            \"Resistance\",\r\n            \"Immunity\",\r\n            \"Ignore\",\r\n            \"Speed\",\r\n            \"-based Checks and DCs\",\r\n            \"Lore: \"\r\n        ].map(name => name.toLowerCase())\r\n        allEffects.filter(effect => effect.show == undefined).forEach(effect => {\r\n            if (alwaysShow.includes(effect.target.toLowerCase())) {\r\n                effect.show = true;\r\n            } else if (alwaysShowWildcard.some(wildcard => effect.target.toLowerCase().includes(wildcard))) {\r\n                effect.show = true;\r\n            } else {\r\n                effect.show = false;\r\n            }\r\n        })\r\n\r\n        //Lastly, overwrite this.effects ONLY if the effects have changed, and if so,\r\n        //set the character changed, so this function is called again straight away.\r\n        //This ensures that any new strength bonuses get applied to any strength-based penalties,\r\n        //and that this.effects is always up to date and never needs to be regenerated by any other process.\r\n        //When the effects are finished and up-to-date, refresh all affected areas.\r\n\r\n        if ((JSON.stringify(this.effects[creatureIndex].all)) != (JSON.stringify(allEffects))) {\r\n            this.set_ToChange(creature, allEffects, this.effects[creatureIndex].all, characterService);\r\n            this.effects[creatureIndex] = new EffectCollection();\r\n            this.effects[creatureIndex].all = allEffects.map(effect => Object.assign(new Effect(), effect));\r\n            this.effects[creatureIndex].relatives = this.effects[creatureIndex].all.filter(effect => parseInt(effect.value));\r\n            //Sort the absolute effects in ascending order of value. This means that the largest value will usually be the the one that ultimately counts.\r\n            this.effects[creatureIndex].absolutes = this.effects[creatureIndex].all.filter(effect => effect.setValue).sort((a, b) => parseInt(a.setValue) - parseInt(b.setValue));\r\n            this.effects[creatureIndex].penalties = this.effects[creatureIndex].all.filter(effect => parseInt(effect.value) < 0);\r\n            this.effects[creatureIndex].bonuses = this.effects[creatureIndex].all.filter(effect => parseInt(effect.value) > 0);\r\n\r\n            if (!characterService.still_loading()) {\r\n                this.generate_Effects(creatureType, characterService, true);\r\n            }\r\n        } else if (secondRun) {\r\n            //After all effects are generated, keep the language list length updated and process all changes prepared by the effects.\r\n            characterService.update_LanguageList();\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    set_ToChange(creature: Creature, newEffects: Effect[], oldEffects: Effect[], characterService: CharacterService) {\r\n        //Set refresh commands for all components of the application depending on whether there are new effects affecting their data,\r\n        // or old effects have been removed.\r\n        let general: string[] = [\"Max Languages\", \"Size\"].map(name => name.toLowerCase());\r\n        let generalWildcard: string[] = [].map(name => name.toLowerCase());\r\n        let abilities: string[] = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"].map(name => name.toLowerCase());\r\n        let abilitiesWildcard: string[] = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\"].map(name => name.toLowerCase());\r\n        let health: string[] = [\"HP\", \"Fast Healing\", \"Hardness\", \"Max Dying\", \"Max HP\", \"Resting HP Gain\", \"Temporary HP\", \"Resting Blocked\"].map(name => name.toLowerCase());\r\n        let healthWildcard: string[] = [\"Resistance\", \"Immunity\"].map(name => name.toLowerCase());\r\n        let defense: string[] = [\"AC\", \"Saving Throws\", \"Fortitude\", \"Reflex\", \"Will\", \"Dexterity-based Checks and DCs\", \"Constitution-based Checks and DCs\",\r\n            \"Wisdom-based Checks and DCs\", \"All Checks and DCs\", \"Ignore Armor Penalty\", \"Ignore Armor Speed Penalty\", \"Proficiency Level\", \"Dexterity Modifier Cap\"].map(name => name.toLowerCase());\r\n        let defenseWildcard: string[] = [\"Proficiency Level\"].map(name => name.toLowerCase());\r\n        let attacks: string[] = [\"Damage Rolls\", \"Dexterity-based Checks and DCs\", \"Strength-based Checks and DCs\", \"All Checks and DCs\",\r\n            \"Unarmed Damage per Die\", \"Weapon Damage per Die\"].map(name => name.toLowerCase());\r\n        let attacksWildcard: string[] = [\"Attack Rolls\", \"Damage\", \"Dice Size\", \"Dice Number\", \"Proficiency Level\", \"Reach\", \"Damage Per Die\"].map(name => name.toLowerCase());\r\n        let individualskills: string[] = [\"Perception\", \"Fortitude\", \"Reflex\", \"Will\", \"Acrobatics\", \"Arcana\", \"Athletics\", \"Crafting\", \"Deception\", \"Diplomacy\", \"Intimidation\", \"Medicine\",\r\n            \"Nature\", \"Occultism\", \"Performance\", \"Religion\", \"Society\", \"Stealth\", \"Survival\", \"Thievery\", \"Fortitude\", \"Reflex\", \"Will\"].map(name => name.toLowerCase());\r\n        let individualSkillsWildcard: string[] = [\"Lore\", \"Class DC\", \"Spell DC\"].map(name => name.toLowerCase());\r\n        let skillsWildcard: string[] = [\"All Checks and DCs\", \"Skill Checks\", \"Untrained Skills\", \"Proficiency Level\", \"Recall Knowledge Checks\", \"Master Recall Knowledge Checks\", \"Saving Throws\", \"Speed\"].map(name => name.toLowerCase());\r\n        let inventory: string[] = [\"Bulk\", \"Encumbered Limit\", \"Max Bulk\", \"Max Invested\"].map(name => name.toLowerCase());\r\n        let spellbook: string[] = [\"Refocus Bonus Points\", \"Focus Points\", \"Focus Pool\", \"All Checks and DCs\", \"Attack Rolls\", \"Spell Attack Rolls\", \"Spell DCs\"].map(name => name.toLowerCase());\r\n        let spellbookWildcard: string[] = [\"Spell Slots\", \"Proficiency Level\", \"Spell Level\", \"Disabled\"].map(name => name.toLowerCase());\r\n        let activities: string[] = [\"Dexterity-based Checks and DCs\", \"Strength-based Checks and DCs\", \"All Checks and DCs\"].map(name => name.toLowerCase());\r\n        let activitiesWildcard: string[] = [\"Class DC\", \"Charges\", \"Cooldown\", \"Disabled\"].map(name => name.toLowerCase());\r\n\r\n        let changedEffects: Effect[] = [];\r\n        //Collect all new feats that don't exist in the old list or old feats that don't exist in the new list - that is, everything that has changed.\r\n        newEffects.filter(effect => effect.apply).forEach(newEffect => {\r\n            if (!oldEffects.some(oldEffect => JSON.stringify(oldEffect) == JSON.stringify(newEffect))) {\r\n                changedEffects.push(newEffect);\r\n            }\r\n        })\r\n        oldEffects.filter(effect => effect.apply).forEach(oldEffect => {\r\n            if (!newEffects.some(newEffect => JSON.stringify(newEffect) == JSON.stringify(oldEffect))) {\r\n                changedEffects.push(oldEffect);\r\n            }\r\n        })\r\n\r\n        //Then prepare changes for everything that should be updated according to the effect.\r\n        changedEffects.forEach(effect => {\r\n            let lowerCaseTarget = effect.target.toLowerCase();\r\n            let target = effect.target;\r\n            if (general.includes(lowerCaseTarget) || generalWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"general\");\r\n            }\r\n            if (abilities.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"abilities\");\r\n            }\r\n            abilitiesWildcard.filter(name => lowerCaseTarget.includes(name)).forEach(name => {\r\n                characterService.set_ToChange(creature.type, \"individualskills\", name);\r\n            });\r\n            if (health.includes(lowerCaseTarget) || healthWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"health\");\r\n            }\r\n            if (defense.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"defense\");\r\n            }\r\n            if (defenseWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"defense\");\r\n            }\r\n            if (attacks.includes(lowerCaseTarget) || attacksWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"attacks\");\r\n                characterService.set_ToChange(creature.type, \"individualskills\", \"attacks\");\r\n            }\r\n            if (individualskills.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"individualskills\", target);\r\n            }\r\n            if (individualSkillsWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"individualskills\", target);\r\n            }\r\n            if (skillsWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"skills\");\r\n                characterService.set_ToChange(creature.type, \"individualskills\", \"all\");\r\n            }\r\n            if (inventory.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"inventory\");\r\n            }\r\n            if (spellbook.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n            if (spellbookWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"spellbook\");\r\n            }\r\n            if (activities.includes(lowerCaseTarget)) {\r\n                characterService.set_ToChange(creature.type, \"activities\");\r\n            }\r\n            if (activitiesWildcard.some(name => lowerCaseTarget.includes(name))) {\r\n                characterService.set_ToChange(creature.type, \"activities\");\r\n            }\r\n            //Specific triggers\r\n            if (lowerCaseTarget == \"familiar abilities\") {\r\n                characterService.set_ToChange(\"Familiar\", \"featchoices\");\r\n            }\r\n        })\r\n\r\n        //If any equipped weapon is affected, update attacks, and if any equipped armor or shield is affected, update defense.\r\n        if (creature.inventories[0].weapons.some(weapon => weapon.equipped && changedEffects.some(effect => effect.target.toLowerCase() == weapon.name.toLowerCase()))) {\r\n            characterService.set_ToChange(creature.type, \"attacks\");\r\n        }\r\n        if (creature.inventories[0].armors.some(armor => armor.equipped && changedEffects.some(effect => effect.target.toLowerCase() == armor.name.toLowerCase()))) {\r\n            characterService.set_ToChange(creature.type, \"defense\");\r\n        }\r\n        if (creature.inventories[0].shields.some(shield => shield.equipped && changedEffects.some(effect => effect.target.toLowerCase() == shield.name.toLowerCase()))) {\r\n            characterService.set_ToChange(creature.type, \"defense\");\r\n        }\r\n    }\r\n\r\n    tick_CustomEffects(creature: Creature, characterService: CharacterService, turns: number) {\r\n        //Tick down all custom effects and set them to remove when they expire.\r\n        creature.effects.filter(gain => gain.duration > 0).forEach(gain => {\r\n            //Tick down all custom effects and set them to remove when they expire.\r\n            gain.duration -= turns;\r\n            if (gain.duration <= 0) {\r\n                gain.type = \"DELETE\";\r\n            }\r\n            characterService.set_ToChange(creature.type, \"effects\");\r\n        });\r\n        //Remove all effects that were marked for removal.\r\n        creature.effects = creature.effects.filter(gain => gain.type != \"DELETE\");\r\n    }\r\n\r\n    initialize(characterService: CharacterService) {\r\n        if (characterService.still_loading()) {\r\n            setTimeout(() => this.initialize(characterService), 500)\r\n        } else {\r\n            if (!this.effectProperties.length) {\r\n                this.load_EffectProperties();\r\n            }\r\n            characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"effects\", \"all\", \"Character\", \"Companion\", \"Familiar\"].includes(target)) {\r\n                        if ([\"Character\", \"Companion\", \"Familiar\"].includes(target)) {\r\n                            this.generate_Effects(target, characterService);\r\n                        } else {\r\n                            this.generate_Effects(\"Character\", characterService);\r\n                            this.generate_Effects(\"Companion\", characterService);\r\n                            this.generate_Effects(\"Familiar\", characterService);\r\n                        }\r\n\r\n                    }\r\n                });\r\n            characterService.get_ViewChanged()\r\n                .subscribe((target) => {\r\n                    if ([\"effects\", \"all\"].includes(target.target)) {\r\n                        this.generate_Effects(target.creature, characterService);\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    load_EffectProperties() {\r\n        this.effectProperties = [];\r\n        Object.keys(json_effectproperties).forEach(key => {\r\n            this.effectProperties.push(...json_effectproperties[key].map(obj => Object.assign(new ItemProperty(), obj)));\r\n        });\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Consumable } from './Consumable';\r\nimport { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Scroll extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Scrolls should be type \"scrolls\" to be found in the database\r\n    readonly type = \"scrolls\";\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName;\r\n        } else if (this.storedSpells.length && this.storedSpells[0].spells.length) {\r\n            return this.name+\" of \"+this.storedSpells[0].spells[0].name;\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //creature is not needed for scrolls, but for other types of item.\r\n        if (this.storedSpells[0]?.spells.length) {\r\n            let spell = characterService.spellsService.get_Spells(this.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return Array.from(new Set(this.traits.concat(spell.traits))).sort(function(a,b) {\r\n                    if (a > b) {\r\n                        return 1;\r\n                    }\r\n                    if (a < b) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n            } else {\r\n                return this.traits;\r\n            }\r\n        } else {\r\n            return this.traits;\r\n        }\r\n    }\r\n}","import { v1 as uuidv1 } from 'uuid';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { ItemActivity } from './ItemActivity';\r\nimport { Oil } from './Oil';\r\nimport { ItemGain } from './ItemGain';\r\n\r\nexport class Item {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Allow changing of \"equippable\" by custom item creation\r\n    public allowEquippable: boolean;\r\n    //Number of items of this kind in your inventory.\r\n    //Items that can be equipped or invested, or come with an activity,\r\n    // get duplicated and not stacked - the amount remains 1.\r\n    public amount: number = 1;\r\n    //Bulk: Either \"\" or \"L\" or \"<number>\"\r\n    public bulk: string = \"\";\r\n    public craftable: boolean = true;\r\n    public crafted: boolean = false;\r\n    //Some items need certain requirements to be crafted.\r\n    public craftRequirement: string = \"\";\r\n    //Some items need to store data - selected runes, spells, etc...\r\n    public data: {name:string, value:any}[] = [];\r\n    //Full description of the item, ideally unchanged from the source material\r\n    public desc: string = \"\";\r\n    //For summoned items or infused reagents, the expiration ticks down, and the item is then dropped or the amount reduced. Expiration is turns * 10.\r\n    public expiration: number = 0;\r\n    //If this name is set, always show it instead of the expanded base name\r\n    public displayName: string = \"\";\r\n    //Can this item be equipped (and apply its effect only then)\r\n    public equippable: boolean;\r\n    //Should this item be hidden in the item store\r\n    public hide: boolean = false;\r\n    //List ItemGain for every Item that you receive when you get, equip or use this item (specified in the ItemGain)\r\n    public gainItems: ItemGain[] = [];\r\n    //Set only if the item is granted via an ItemGain\r\n    public grantedBy: string = \"\";\r\n    //Every item gets an ID to reference in activities or other items.\r\n    public id = uuidv1();\r\n    //Theoretical Level before which the player should not have this item\r\n    public level: number = 0;\r\n    //Base name of the item, may be expanded by rune names for equipment\r\n    public name: string = \"New Item\";\r\n    //Any notes the player adds to the item\r\n    public notes: string = \"\";\r\n    //Store any oils applied to this item.\r\n    public oilsApplied: Oil[] = [];\r\n    //Price in Copper\r\n    public price: number = 0;\r\n    //This is the id of the library item this one is based on. It is used when loading the character.\r\n    public refId: string = \"\"\r\n    //Is the notes input shown in the inventory\r\n    public showNotes: boolean = false;\r\n    public sourceBook: string = \"\";\r\n    //This bulk is only valid while in the item store.\r\n    //This is for items like the Adventurer's Pack that is immediately unpacked into its parts and doesn't weigh anything in the inventory.\r\n    public storeBulk: string = \"\";\r\n    //What spells are stored in this item, or can be?\r\n    //Only the first spell will be cast when using the item.\r\n    public storedSpells: SpellChoice[] = [];\r\n    //Does this item come in different types? Like lesser, greater, major...\r\n    //If so, name the subtype here\r\n    public subType: string = \"\";\r\n    //If you have named a subtype, this description will show up\r\n    //e.g.: \"Greater\":\"The bonus to Athletics is +2\"\r\n    public subTypeDesc: string = \"\";\r\n    public tradeable: boolean = true;\r\n    //What traits does the item have? Can be expanded under certain circumstances\r\n    public traits: string[] = [];\r\n    //Type of item - very important. Must be set by the specific Item class and decides which database is searched for the item\r\n    public type: string;\r\n    //For items with the same id (from different source files for example), higher overridePriority wins. If two have the same priority, the first in the list wins.\r\n    public overridePriority: number = 0;\r\n    get_Bulk() {\r\n        //Return either the bulk set by an oil, or else the actual bulk of the item.\r\n        let oilBulk: string = \"\";\r\n        this.oilsApplied.forEach(oil => {\r\n            if (oil.bulkEffect) {\r\n                oilBulk = oil.bulkEffect;\r\n            }\r\n        });\r\n        return oilBulk || this.bulk;\r\n    }\r\n    can_Invest() {\r\n        return (this.traits.includes(\"Invested\"));\r\n    }\r\n    can_Stack() {\r\n        return (!this.equippable &&\r\n            !this.can_Invest() &&\r\n            (this[\"gainInventory\"] ? !this[\"gainInventory\"].length : true) &&\r\n            (this[\"gainItems\"] ? !this[\"gainItems\"].filter(gain => gain.on != \"use\").length : true) &&\r\n            (this[\"gainActivities\"] ? !this[\"gainActivities\"].filter((activity: ItemActivity) => !activity.displayOnly).length : true) &&\r\n            (this[\"activities\"] ? !this[\"activities\"].filter((activity: ItemActivity) => !activity.displayOnly).length : true) &&\r\n            (this[\"storedSpells\"] ? !this[\"storedSpells\"].length : true)) &&\r\n            (this.constructor.name != \"Snare\")\r\n    }\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName;\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n}","import { Skill } from './Skill';\r\nimport { Level } from './Level';\r\nimport { Class } from './Class';\r\nimport { Feat } from './Feat';\r\nimport { CharacterService } from './character.service';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { ItemsService } from './items.service';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { Settings } from './Settings';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { Creature } from './Creature';\r\nimport { AbilityBoost } from './AbilityBoost';\r\nimport { EffectsService } from './effects.service';\r\nimport { SpellsService } from './spells.service';\r\nimport { SpellGain } from './SpellGain';\r\nimport { Familiar } from './Familiar';\r\nimport { SkillIncrease } from './SkillIncrease';\r\nimport { Spell } from './Spell';\r\nimport { FeatTaken } from './FeatTaken';\r\nimport { Item } from './Item';\r\nimport { FormulaLearned } from './FormulaLearned';\r\nimport { ConditionsService } from './conditions.service';\r\n\r\nexport class Character extends Creature {\r\n    public readonly _className: string = this.constructor.name;\r\n    readonly type = \"Character\";\r\n    public partyName: string = \"\";\r\n    public alignment: string = \"\";\r\n    public baseValues: { name: string, baseValue: number }[] = [];\r\n    public cash: number[] = [0, 15, 0, 0];\r\n    public class: Class = new Class();\r\n    public customFeats: Feat[] = [];\r\n    public customSkills: Skill[] = [];\r\n    public heroPoints: number = 1;\r\n    public experiencePoints: number = 0;\r\n    public settings: Settings = new Settings();\r\n    //yourTurn is only written when saving the character to the database and read when loading.\r\n    public yourTurn: number = 0;\r\n    get_Changed(characterService: CharacterService,) {\r\n        return characterService.get_Changed();\r\n    }\r\n    get_BaseSize() {\r\n        return this.class.ancestry.size ? this.class.ancestry.size : 0;\r\n    }\r\n    get_Size(effectsService: EffectsService) {\r\n        let size: number = this.get_BaseSize();\r\n\r\n        let setSizeEffects = effectsService.get_AbsolutesOnThis(this, \"Size\");\r\n        if (setSizeEffects.length) {\r\n            size = Math.max(...setSizeEffects.map(effect => parseInt(effect.setValue)));\r\n        }\r\n\r\n        let sizeEffects = effectsService.get_RelativesOnThis(this, \"Size\");\r\n        sizeEffects.forEach(effect => {\r\n            size += parseInt(effect.value)\r\n        })\r\n\r\n        switch (size) {\r\n            case -2:\r\n                return \"Tiny\";\r\n            case -1:\r\n                return \"Small\";\r\n            case 0:\r\n                return \"Medium\"\r\n            case 1:\r\n                return \"Large\"\r\n            case 2:\r\n                return \"Huge\"\r\n            case 3:\r\n                return \"Gargantuan\"\r\n        }\r\n    }\r\n    get_SpellLevel(levelNumber: number = this.level) {\r\n        return Math.ceil(levelNumber / 2);\r\n    }\r\n    get_DefaultSpellcasting() {\r\n        //Return the spellcasting that is assigned to this class, named \"<class> Spellcasting\" and neither focus not innate. Useful for feat requirements and assigning spell choices to the default spellcasting.\r\n        return this.class.spellCasting.find(casting => casting.className == this.class.name && ![\"Focus\", \"Innate\"].includes(casting.castingType) && casting.source == this.class.name + \" Spellcasting\");\r\n    }\r\n    get_AbilityBoosts(minLevelNumber: number, maxLevelNumber: number, abilityName: string = \"\", type: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        if (this.class) {\r\n            let boosts = [];\r\n            let levels = this.class.levels.filter(level => level.number >= minLevelNumber && level.number <= maxLevelNumber);\r\n            levels.forEach(level => {\r\n                level.abilityChoices.forEach(choice => {\r\n                    choice.boosts.filter(boost =>\r\n                        (boost.name == abilityName || abilityName == \"\") &&\r\n                        (boost.type == type || type == \"\") &&\r\n                        (boost.source == source || source == \"\") &&\r\n                        (boost.sourceId == sourceId || sourceId == \"\") &&\r\n                        (boost.locked == locked || locked == undefined)\r\n                    ).forEach(boost => {\r\n                        boosts.push(boost);\r\n                    });\r\n                });\r\n            });\r\n            return boosts as AbilityBoost[];\r\n        }\r\n    }\r\n    boost_Ability(characterService: CharacterService, abilityName: string, boost: boolean, choice: AbilityChoice, locked: boolean) {\r\n        let type: string = choice.infoOnly ? \"Info\" : \"Boost\";\r\n        if (boost) {\r\n            choice.boosts.push({ \"name\": abilityName, \"type\": type, \"source\": choice.source, \"locked\": locked, \"sourceId\": choice.id });\r\n        } else {\r\n            let oldBoost = choice.boosts.filter(boost =>\r\n                boost.name == abilityName &&\r\n                boost.type == type &&\r\n                boost.locked == locked\r\n            )[0];\r\n            choice.boosts = choice.boosts.filter(boost => boost !== oldBoost);\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        characterService.set_ToChange(\"Character\", \"abilities\");\r\n        characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n    }\r\n    add_AbilityChoice(level: Level, newChoice: AbilityChoice) {\r\n        let existingChoices = level.abilityChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new AbilityChoice, JSON.parse(JSON.stringify(newChoice)))\r\n        tempChoice.id = level.number + \"-Ability-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.abilityChoices.push(tempChoice);\r\n        return level.abilityChoices[newLength - 1];\r\n    }\r\n    remove_AbilityChoice(oldChoice: AbilityChoice) {\r\n        let levelNumber = parseInt(oldChoice.id.split(\"-\")[0]);\r\n        let a = this.class.levels[levelNumber].abilityChoices;\r\n        a.splice(a.indexOf(oldChoice), 1);\r\n    }\r\n    get_AbilityChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].abilityChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    add_SkillChoice(level: Level, newChoice: SkillChoice) {\r\n        let existingChoices = level.skillChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new SkillChoice, JSON.parse(JSON.stringify(newChoice)))\r\n        tempChoice.id = level.number + \"-Skill-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.skillChoices.push(tempChoice);\r\n        return level.skillChoices[newLength - 1];\r\n    }\r\n    get_SkillChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].skillChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    remove_SkillChoice(oldChoice: SkillChoice) {\r\n        let levelNumber = parseInt(oldChoice.id.split(\"-\")[0]);\r\n        let a = this.class.levels[levelNumber].skillChoices;\r\n        a.splice(a.indexOf(oldChoice), 1);\r\n    }\r\n    add_SpellCasting(characterService: CharacterService, level: Level, newCasting: SpellCasting) {\r\n        let newLength: number = this.class.spellCasting.push(Object.assign(new SpellCasting(newCasting.castingType), JSON.parse(JSON.stringify(newCasting))));\r\n        let newSpellCasting: SpellCasting = this.class.spellCasting[newLength - 1];\r\n        //If the SpellCasting has a charLevelAvailable above 0, but lower than the current level, you could use it before you get it.\r\n        //So we raise the charLevelAvailable to either the current level or the original value, whichever is higher.\r\n        if (newSpellCasting.charLevelAvailable) {\r\n            newSpellCasting.charLevelAvailable = Math.max(newSpellCasting.charLevelAvailable, level.number);\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        characterService.set_ToChange(\"Character\", \"spells\");\r\n        return this.class.spellCasting[newLength - 1];\r\n    }\r\n    remove_SpellCasting(characterService: CharacterService, oldCasting: SpellCasting) {\r\n        this.class.spellCasting = this.class.spellCasting.filter(casting => casting !== oldCasting);\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n        characterService.set_ToChange(\"Character\", \"spells\");\r\n    }\r\n    add_LoreChoice(level: Level, newChoice: LoreChoice) {\r\n        let existingChoices = level.loreChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new LoreChoice, JSON.parse(JSON.stringify(newChoice)))\r\n        tempChoice.increases = Object.assign([], newChoice.increases);\r\n        tempChoice.id = level.number + \"-Lore-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.loreChoices.push(tempChoice);\r\n        return level.loreChoices[newLength - 1];\r\n    }\r\n    get_LoreChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].loreChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    add_FeatChoice(level: Level, newChoice: FeatChoice) {\r\n        let existingChoices = level.featChoices.filter(choice => choice.source == newChoice.source);\r\n        let tempChoice = Object.assign(new FeatChoice, JSON.parse(JSON.stringify(newChoice)));\r\n        tempChoice.id = level.number + \"-\" + (tempChoice.type ? tempChoice.type : \"Feat\") + \"-\" + tempChoice.source + \"-\" + existingChoices.length;\r\n        let newLength: number = level.featChoices.push(tempChoice);\r\n        level.featChoices[newLength - 1].feats.forEach(feat => {\r\n            feat.source = level.featChoices[newLength - 1].source;\r\n            feat.sourceId = level.featChoices[newLength - 1].id;\r\n        })\r\n        return level.featChoices[newLength - 1];\r\n    }\r\n    get_FeatChoice(sourceId: string) {\r\n        let levelNumber = parseInt(sourceId[0]);\r\n        return this.class.levels[levelNumber].featChoices.filter(choice => choice.id == sourceId)[0];\r\n    }\r\n    add_SpellChoice(characterService: CharacterService, levelNumber: number, newChoice: SpellChoice) {\r\n        let insertChoice = Object.assign(new SpellChoice(), JSON.parse(JSON.stringify(newChoice)));\r\n        if (insertChoice.className == \"Default\") {\r\n            insertChoice.className = this.class.name;\r\n        }\r\n        if (insertChoice.castingType == \"Default\") {\r\n            insertChoice.castingType = this.get_DefaultSpellcasting()?.castingType || \"\";\r\n        }\r\n        let spellCasting = this.class.spellCasting\r\n            .find(casting =>\r\n                casting.castingType == insertChoice.castingType &&\r\n                (\r\n                    casting.className == insertChoice.className ||\r\n                    insertChoice.className == \"\"\r\n                )\r\n            );\r\n        if (spellCasting) {\r\n            let newLength: number = spellCasting.spellChoices.push(insertChoice);\r\n            let choice = spellCasting.spellChoices[newLength - 1];\r\n            choice.spells = choice.spells.map(gain => Object.assign(new SpellGain(), gain));\r\n            //If the choice has a charLevelAvailable lower than the current level, you could choose spells before you officially get this choice.\r\n            //So we raise the charLevelAvailable to either the current level or the original value, whichever is higher.\r\n            choice.charLevelAvailable = Math.max(choice.charLevelAvailable, levelNumber);\r\n            //If the spellcasting was not available so far, it is now.\r\n            if (!spellCasting.charLevelAvailable) {\r\n                spellCasting.charLevelAvailable = choice.charLevelAvailable;\r\n            }\r\n            characterService.set_ToChange(\"Character\", \"spells\");\r\n            characterService.set_ToChange(\"Character\", \"spellbook\");\r\n            return choice;\r\n        } else {\r\n            console.log(\"No suitable spell casting ability found to add spell choice.\")\r\n        }\r\n    }\r\n    remove_SpellChoice(characterService: CharacterService, oldChoice: SpellChoice) {\r\n        //Remove the spellChoice by ID\r\n        this.class.spellCasting.forEach(casting => {\r\n            casting.spellChoices = casting.spellChoices.filter(choice => choice.id != oldChoice.id);\r\n        })\r\n        //If the spellcasting has no spellchoices left, it is no longer available.\r\n        this.class.spellCasting.filter(casting => casting.spellChoices.length == 0).forEach(casting => {\r\n            casting.charLevelAvailable = 0;\r\n        })\r\n        characterService.set_ToChange(\"Character\", \"spells\");\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n    gain_Activity(characterService: CharacterService, newGain: ActivityGain, levelNumber: number) {\r\n        let newLength = this.class.activities.push(newGain);\r\n        this.class.activities[newLength - 1].level = levelNumber;\r\n        characterService.set_ToChange(\"Character\", \"activities\");\r\n        return this.class.activities[newLength - 1];\r\n    }\r\n    lose_Activity(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, activitiesService: ActivitiesService, oldGain: ActivityGain) {\r\n        let a = this.class.activities;\r\n        if (oldGain.active) {\r\n            activitiesService.activate_Activity(this, \"\", characterService, conditionsService, itemsService, spellsService, oldGain, activitiesService.get_Activities(oldGain.name)[0], false);\r\n        }\r\n        a.splice(a.indexOf(oldGain), 1);\r\n        characterService.set_ToChange(\"Character\", \"activities\");\r\n    }\r\n    get_SkillIncreases(characterService: CharacterService, minLevelNumber: number, maxLevelNumber: number, skillName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, excludeTemporary: boolean = false) {\r\n        if (this.class) {\r\n            let increases: SkillIncrease[] = [];\r\n            let choices: SkillChoice[] = []\r\n            //Collect all skill choices from spellcasting, level and some item runes as well as oils that emulate those runes.\r\n            let levels = this.class.levels.filter(level => level.number >= minLevelNumber && level.number <= maxLevelNumber);\r\n            levels.forEach(level => {\r\n                choices.push(...level.skillChoices.filter(choice => excludeTemporary ? !choice.showOnSheet : true));\r\n                choices.push(...level.loreChoices);\r\n            });\r\n            this.inventories.forEach(inventory => {\r\n                inventory.allEquipment().filter(item => item.propertyRunes.filter(rune => rune.loreChoices && rune.loreChoices.length).length && item.equipped && (item.can_Invest() ? item.invested : true))\r\n                    .forEach(item => {\r\n                        item.propertyRunes.filter(rune => rune.loreChoices && rune.loreChoices.length).forEach(rune => {\r\n                            choices.push(...rune.loreChoices);\r\n                        })\r\n                    });\r\n                inventory.allEquipment().filter(item => item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.loreChoices && oil.runeEffect.loreChoices.length).length && item.equipped && (item.can_Invest() ? item.invested : true))\r\n                    .forEach(item => {\r\n                        item.oilsApplied.filter(oil => oil.runeEffect && oil.runeEffect.loreChoices && oil.runeEffect.loreChoices.length).forEach(oil => {\r\n                            choices.push(...oil.runeEffect.loreChoices);\r\n                        })\r\n                    });\r\n            })\r\n            //Only return skill increases for a specific skill if at least one increase has a minRank of 0 (an initial training) - if not, we don't consider this skill increased at all. \r\n            if (skillName) {\r\n                if (choices.some(choice => choice.minRank == 0 && choice.increases.some(increase => increase.name == skillName))) {\r\n                    //Get all matching skill increases from the choices\r\n                    choices.forEach(choice => {\r\n                        choice.increases.filter(increase =>\r\n                            (increase.name == skillName) &&\r\n                            (increase.source == source || source == \"\") &&\r\n                            (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                            (increase.locked == locked || locked == undefined)\r\n                        ).forEach(increase => {\r\n                            increases.push(increase);\r\n                        })\r\n                    });\r\n                }\r\n            } else {\r\n                //Get all matching skill increases from the choices\r\n                choices.forEach(choice => {\r\n                    choice.increases.filter(increase =>\r\n                        (increase.source == source || source == \"\") &&\r\n                        (increase.sourceId == sourceId || sourceId == \"\") &&\r\n                        (increase.locked == locked || locked == undefined)\r\n                    ).forEach(increase => {\r\n                        increases.push(increase);\r\n                    })\r\n                });\r\n            }\r\n            return increases;\r\n        } else {\r\n            return [] as SkillIncrease[];\r\n        }\r\n    }\r\n    increase_Skill(characterService: CharacterService, skillName: string, train: boolean, choice: SkillChoice, locked: boolean) {\r\n        if (train) {\r\n            choice.increases.push({ \"name\": skillName, \"source\": choice.source, \"maxRank\": choice.maxRank, \"locked\": locked, \"sourceId\": choice.id });\r\n        } else {\r\n            let oldIncrease = choice.increases.filter(\r\n                increase => increase.name == skillName &&\r\n                    increase.locked == locked\r\n            )[0];\r\n            choice.increases = choice.increases.filter(increase => increase !== oldIncrease);\r\n        }\r\n        this.process_Skill(characterService, skillName, train, choice, locked);\r\n    }\r\n    process_Skill(characterService: CharacterService, skillName: string, train: boolean, choice: SkillChoice, locked: boolean) {\r\n        characterService.set_ToChange(\"Character\", \"individualskills\", skillName);\r\n        characterService.set_ToChange(\"Character\", \"skillchoices\", skillName);\r\n        if (train) {\r\n            //The skill that you increase with Skilled Heritage at level 1 automatically gets increased at level 5 as well.\r\n            let level = parseInt(choice.id.split(\"-\")[0]);\r\n            if (level == 1 && choice.source == \"Skilled Heritage\") {\r\n                let newChoice = this.add_SkillChoice(characterService.get_Level(5), Object.assign(new SkillChoice(), {\r\n                    available: 0,\r\n                    filter: [],\r\n                    increases: [],\r\n                    type: \"Skill\",\r\n                    maxRank: 8,\r\n                    source: \"Skilled Heritage\",\r\n                    id: \"\"\r\n                }));\r\n                this.increase_Skill(characterService, skillName, true, newChoice, true);\r\n            }\r\n            //The skill/save that you increase with Canny Acumen automatically gets increased at level 17 as well.\r\n            if (choice.source.includes(\"Feat: Canny Acumen\")) {\r\n                //First check if this has already been done: Is there a Skill Choice at level 17 with this source and this type?\r\n                //We are naming the type \"Automatic\" - it doesn't matter because it's a locked choice,\r\n                //but it allows us to distinguish this increase from the original if you take Canny Acumen at level 17\r\n                let existingChoices = characterService.get_Level(17).skillChoices.filter(skillChoice =>\r\n                    skillChoice.source == choice.source && skillChoice.type == \"Automatic\"\r\n                );\r\n                //If there isn't one, go ahead and create one, then immediately increase this skill in it.\r\n                if (existingChoices.length == 0) {\r\n                    let newChoice = this.add_SkillChoice(characterService.get_Level(17), Object.assign(new SkillChoice(), {\r\n                        available: 0,\r\n                        filter: [],\r\n                        increases: [],\r\n                        type: \"Automatic\",\r\n                        maxRank: 6,\r\n                        source: choice.source,\r\n                        id: \"\"\r\n                    }));\r\n                    this.increase_Skill(characterService, skillName, true, newChoice, true);\r\n                }\r\n            }\r\n            //The save that you increase with Path to Perfection is added to the filter of Third Path to Perfection\r\n            if (choice.source == \"Path to Perfection\" || choice.source == \"Second Path to Perfection\") {\r\n                let a = characterService.get_Level(15).skillChoices.filter(choice => choice.source == \"Third Path to Perfection\")[0];\r\n                if (a.filter.includes(\"none\")) {\r\n                    a.filter.splice(a.filter.indexOf(\"none\"), 1);\r\n                }\r\n                a.filter.push(skillName);\r\n            }\r\n            //If you are getting trained in a skill you don't already know, it's usually a weapon proficiency or a class/spell DC.\r\n            //We have to create that skill here then\r\n            if (characterService.get_Skills(this, skillName).length == 0) {\r\n                if (skillName.includes(\"Class DC\")) {\r\n                    switch (skillName) {\r\n                        case \"Alchemist Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Intelligence\");\r\n                            break;\r\n                        case \"Barbarian Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Strength\");\r\n                            break;\r\n                        case \"Bard Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Druid Class DC\":\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", \"Wisdom\");\r\n                            break;\r\n                        default:\r\n                            //The Ability is the subtype of the taken feat.\r\n                            //The taken feat is found in the source as \"Feat: [name]\", so we remove the \"Feat: \" part with substr to find it and its subType.\r\n                            characterService.add_CustomSkill(skillName, \"Class DC\", characterService.get_Feats(choice.source.substr(6))[0].subType);\r\n                            break;\r\n                    }\r\n                } else if (skillName.includes(\"Spell DC\")) {\r\n                    switch (skillName.split(\" \")[0]) {\r\n                        case \"Bard\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Champion\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Cleric\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Wisdom\");\r\n                            break;\r\n                        case \"Druid\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Wisdom\");\r\n                            break;\r\n                        case \"Monk\":\r\n                            //For Monks, add the tradition to the Monk spellcasting abilities. The tradition is the second word of the skill name.\r\n                            characterService.get_Character().class.spellCasting.filter(casting => casting.className == \"Monk\").forEach(casting => {\r\n                                casting.tradition = skillName.split(\" \")[1] as \"Divine\" | \"Occult\";\r\n                            })\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Wisdom\");\r\n                            break;\r\n                        case \"Rogue\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Sorcerer\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        case \"Wizard\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Intelligence\");\r\n                            break;\r\n                        case \"Innate\":\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"Charisma\");\r\n                            break;\r\n                        default:\r\n                            characterService.add_CustomSkill(skillName, \"Spell DC\", \"\");\r\n                    }\r\n                    //One background grants the \"Lore\" skill. We treat it as a Lore category skill, but don't generate any feats for it.\r\n                } else if (skillName == \"Lore\") {\r\n                    characterService.add_CustomSkill(skillName, \"Skill\", \"Intelligence\");\r\n                } else {\r\n                    characterService.add_CustomSkill(skillName, choice.type, \"\");\r\n                }\r\n            }\r\n            //Set components to update according to the skill type.\r\n            switch (characterService.get_Skills(characterService.get_Character(), skillName)[0]?.type) {\r\n                case \"Skill\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    break;\r\n                case \"Perception\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    break;\r\n                case \"Save\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Armor Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Specific Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Spell DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                    break;\r\n                case \"Class DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    break;\r\n            }\r\n            //Set components to update according to the skill name.\r\n            switch (skillName) {\r\n                case \"Crafting\":\r\n                    characterService.set_ToChange(\"Character\", \"crafting\");\r\n                    characterService.set_ToChange(\"Character\", \"inventory\");\r\n                    break;\r\n            }\r\n            //Some effects depend on skill levels, so we refresh effects when changing skills.\r\n            characterService.set_ToChange(\"Character\", \"effects\");\r\n        } else {\r\n            //If you are deselecting a skill that you increased with Skilled Heritage at level 1, you also lose the skill increase at level 5.\r\n            let level = parseInt(choice.id.split(\"-\")[0]);\r\n            if (level == 1 && choice.source == \"Skilled Heritage\") {\r\n                characterService.get_Level(5).skillChoices = characterService.get_Level(5).skillChoices.filter(choice => choice.source != \"Skilled Heritage\");\r\n            }\r\n            //If you are deselecting Canny Acumen, you also lose the skill increase at level 17.\r\n            if (choice.source.includes(\"Feat: Canny Acumen\")) {\r\n                let oldChoices = characterService.get_Level(17).skillChoices.filter(skillChoice => skillChoice.source == choice.source);\r\n                if (oldChoices.length) {\r\n                    this.remove_SkillChoice(oldChoices[0]);\r\n                }\r\n            }\r\n            //If you are deselecting Path to Perfection, the selected skill is removed from the filter of Third Path to Perfection.\r\n            //Also add a blank filter if nothing else is left.\r\n            if (choice.source == \"Path to Perfection\" || choice.source == \"Second Path to Perfection\") {\r\n                let a = characterService.get_Level(15).skillChoices.filter(choice => choice.source == \"Third Path to Perfection\")[0];\r\n                if (a.filter.includes(skillName)) {\r\n                    a.filter.splice(a.filter.indexOf(skillName), 1);\r\n                }\r\n                if (a.filter.length == 0) {\r\n                    a.filter.push(\"none\");\r\n                }\r\n            }\r\n            //Set components to update according to the skill type.\r\n            switch (characterService.get_Skills(characterService.get_Character(), skillName)[0]?.type) {\r\n                case \"Skill\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    characterService.set_ToChange(\"Character\", \"individualskills\", \"all\");\r\n                    break;\r\n                case \"Perception\":\r\n                    characterService.set_ToChange(\"Character\", \"skills\");\r\n                    break;\r\n                case \"Save\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Armor Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"defense\");\r\n                    break;\r\n                case \"Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Specific Weapon Proficiency\":\r\n                    characterService.set_ToChange(\"Character\", \"attacks\");\r\n                    break;\r\n                case \"Spell DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    characterService.set_ToChange(\"Character\", \"spellbook\");\r\n                    break;\r\n                case \"Class DC\":\r\n                    characterService.set_ToChange(\"Character\", \"general\");\r\n                    break;\r\n            }\r\n            //Set components to update according to the skill name.\r\n            switch (skillName) {\r\n                case \"Crafting\":\r\n                    characterService.set_ToChange(\"Character\", \"crafting\");\r\n                    characterService.set_ToChange(\"Character\", \"inventory\");\r\n                    break;\r\n            }\r\n            //Some effects depend on skill levels, so we refresh effects when changing skills.\r\n            characterService.set_ToChange(\"Character\", \"effects\");\r\n            //Remove custom skill if previously created and this was the last increase of it\r\n            let customSkills = characterService.get_Character().customSkills.filter(skill => skill.name == skillName);\r\n            if (customSkills.length && this.get_SkillIncreases(characterService, 1, 20, skillName).length == 0) {\r\n                characterService.remove_CustomSkill(customSkills[0]);\r\n                //For Monks, remove the tradition from the Monk spellcasting abilities if you removed the Monk Divine/Occult Spell DC.\r\n                if (skillName.includes(\"Monk\") && skillName.includes(\"Spell DC\")) {\r\n                    characterService.get_Character().class.spellCasting.filter(casting => casting.className == \"Monk\").forEach(casting => {\r\n                        casting.tradition = \"\";\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get_FeatsTaken(minLevelNumber: number, maxLevelNumber: number, featName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, excludeTemporary: boolean = false, includeCountAs: boolean = false) {\r\n        if (this.class) {\r\n            let featsTaken: FeatTaken[] = [];\r\n            let levels = this.class.levels.filter(level => level.number >= minLevelNumber && level.number <= maxLevelNumber);\r\n            levels.forEach(level => {\r\n                level.featChoices.forEach(choice => {\r\n                    choice.feats.filter((feat: FeatTaken) =>\r\n                        (excludeTemporary ? !choice.showOnSheet : true) &&\r\n                        (\r\n                            (featName == \"\") || \r\n                            (feat.name.toLowerCase() == featName.toLowerCase()) ||\r\n                            (includeCountAs && (feat.countAsFeat?.toLowerCase() == featName.toLowerCase() || false))\r\n                        ) &&\r\n                        (feat.source.toLowerCase() == source.toLowerCase() || source == \"\") &&\r\n                        (feat.sourceId == sourceId || sourceId == \"\") &&\r\n                        (feat.locked == locked || locked == undefined)\r\n                    ).forEach(feat => {\r\n                        featsTaken.push(feat);\r\n                    })\r\n                })\r\n            })\r\n            return featsTaken;\r\n        }\r\n    }\r\n    take_Feat(creature: Character | Familiar, characterService: CharacterService, feat: Feat, featName: string, taken: boolean, choice: FeatChoice, locked: boolean) {\r\n        let level: Level = characterService.get_Level(parseInt(choice.id.split(\"-\")[0]));\r\n        if (taken) {\r\n            if (feat) {\r\n                featName = feat.name;\r\n            }\r\n            choice.feats.push({ name: (feat?.name || featName), source: choice.source, locked: locked, sourceId: choice.id, countAsFeat: (feat?.countAsFeat || feat?.superType || \"\") });\r\n            characterService.process_Feat(creature, feat, featName, choice, level, taken);\r\n        } else {\r\n            characterService.process_Feat(creature, feat, featName, choice, level, taken);\r\n            let a = choice.feats;\r\n            a.splice(a.indexOf(a.filter(existingFeat =>\r\n                existingFeat.name == featName &&\r\n                existingFeat.locked == locked\r\n            )[0]), 1)\r\n        }\r\n    }\r\n    get_SpellsTaken(characterService: CharacterService, minLevelNumber: number, maxLevelNumber: number, spellLevel: number = -1, spellName: string = \"\", spellCasting: SpellCasting = undefined, className: string = \"\", tradition: string = \"\", castingType: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, signatureAllowed: boolean = false, cantripAllowed: boolean = true) {\r\n        if (this.class) {\r\n            let spellsTaken: { choice: SpellChoice, gain: SpellGain }[] = [];\r\n            function get_DynamicLevel(choice: SpellChoice, casting: SpellCasting, characterService: CharacterService) {\r\n                return characterService.spellsService.get_DynamicSpellLevel(casting, choice, characterService);\r\n            }\r\n            this.class.spellCasting\r\n                .filter(casting => (spellCasting == undefined || casting === spellCasting) &&\r\n                    casting.charLevelAvailable >= minLevelNumber && casting.charLevelAvailable <= maxLevelNumber &&\r\n                    (casting.castingType == castingType || castingType == \"\"))\r\n                .forEach(casting => {\r\n                    casting.spellChoices.filter(choice => choice.charLevelAvailable >= minLevelNumber && choice.charLevelAvailable <= maxLevelNumber).forEach(choice => {\r\n                        if (\r\n                            (\r\n                                (\r\n                                    spellLevel == -1 ||\r\n                                    (\r\n                                        !choice.dynamicLevel &&\r\n                                        choice.level == spellLevel\r\n                                    ) ||\r\n                                    (\r\n                                        choice.dynamicLevel &&\r\n                                        get_DynamicLevel(choice, casting, characterService) == spellLevel\r\n                                    )\r\n                                )\r\n                            ) ||\r\n                            (\r\n                                signatureAllowed &&\r\n                                choice.spells.some(spell => spell.signatureSpell) &&\r\n                                spellLevel != 0 &&\r\n                                spellLevel != -1\r\n                            )\r\n                        ) {\r\n                            choice.spells.filter(gain =>\r\n                                (gain.name == spellName || spellName == \"\") &&\r\n                                (casting.className == className || className == \"\") &&\r\n                                (casting.tradition == tradition || tradition == \"\") &&\r\n                                (choice.source == source || source == \"\") &&\r\n                                (gain.sourceId == sourceId || sourceId == \"\") &&\r\n                                (gain.locked == locked || locked == undefined) &&\r\n                                ((signatureAllowed && gain.signatureSpell) ? (spellLevel >= characterService.spellsService.get_Spells(gain.name)[0]?.levelreq) : true) &&\r\n                                (cantripAllowed || (!characterService.spellsService.get_Spells(gain.name)[0]?.traits.includes(\"Cantrip\")))\r\n                            ).forEach(gain => {\r\n                                spellsTaken.push({ choice: choice, gain: gain });\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            return spellsTaken;\r\n        }\r\n    }\r\n    take_Spell(characterService: CharacterService, spellName: string, taken: boolean, choice: SpellChoice, locked: boolean, prepared: boolean = false) {\r\n        if (taken) {\r\n            choice.spells.push(Object.assign(new SpellGain(), { name: spellName, locked: locked, sourceId: choice.id, source: choice.source, cooldown: choice.cooldown, frequency: choice.frequency, prepared: prepared }));\r\n        } else {\r\n            let oldChoice = choice.spells.find(gain => gain.name == spellName);\r\n            choice.spells.splice(choice.spells.indexOf(oldChoice), 1);\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"spellbook\");\r\n    }\r\n    learn_Spell(spell: Spell, source: string) {\r\n        if (!this.class?.spellBook.find(learned => learned.name == spell.name)) {\r\n            let level: number = spell.traits.includes(\"Cantrip\") ? 0 : spell.levelreq;\r\n            this.class?.spellBook.push({ name: spell.name, source: source, level: level });\r\n        }\r\n    }\r\n    unlearn_Spell(spell: Spell) {\r\n        this.class.spellBook = this.class.spellBook.filter(existingSpell => existingSpell.name != spell.name);\r\n    }\r\n    get_SpellsLearned(name: string = \"\", source: string = \"\", level: number = -1) {\r\n        return this.class?.spellBook.filter(learned =>\r\n            (name ? learned.name == name : true) &&\r\n            (source ? learned.source == source : true) &&\r\n            (level > -1 ? learned.level == level : true)\r\n        );\r\n    }\r\n    add_SpellListSpell(spellName: string, source: string, levelNumber: number) {\r\n        this.class?.spellList.push({ name: spellName, source: source, level: levelNumber });\r\n    }\r\n    remove_SpellListSpell(spellName: string, source: string, levelNumber: number) {\r\n        this.class.spellList = this.class.spellList.filter(existingSpell => !(existingSpell.name == spellName && existingSpell.source == source && existingSpell.level == levelNumber));\r\n    }\r\n    get_SpellListSpell(name: string = \"\", source: string = \"\", level: number = 0) {\r\n        return this.class?.spellList.filter(learned =>\r\n            (name ? learned.name == name : true) &&\r\n            (source ? learned.source == source : true) &&\r\n            (level ? learned.level >= level : true)\r\n        );\r\n    }\r\n    learn_Formula(item: Item, source: string) {\r\n        if (!this.class?.formulaBook.find(learned => learned.id == item.id)) {\r\n            this.class?.formulaBook.push(Object.assign(new FormulaLearned(), { id: item.id, source: source }));\r\n        }\r\n    }\r\n    unlearn_Formula(item: Item) {\r\n        this.class.formulaBook = this.class.formulaBook.filter(learned => learned.id != item.id);\r\n    }\r\n    get_FormulasLearned(id: string = \"\", source: string = \"\") {\r\n        return this.class?.formulaBook.filter(learned =>\r\n            (id ? learned.id == id : true) &&\r\n            (source ? learned.source == source : true)\r\n        );\r\n    }\r\n    remove_Lore(characterService: CharacterService, source: LoreChoice) {\r\n        //Remove the original Lore training\r\n        for (let increase = 0; increase < source.initialIncreases; increase++) {\r\n            characterService.get_Character().increase_Skill(characterService, 'Lore: ' + source.loreName, false, source, true)\r\n        }\r\n        //Go through all levels and remove skill increases for this lore from their respective sources\r\n        //Also remove all Skill Choices that were added for this lore (as happens with the Additional Lore Feat).\r\n        this.class.levels.forEach(level => {\r\n            level.skillChoices.forEach(choice => {\r\n                choice.increases = choice.increases.filter(increase => increase.name != 'Lore: ' + source.loreName);\r\n            })\r\n            level.skillChoices = level.skillChoices.filter(choice => choice.filter.filter(filter => filter == 'Lore: ' + source.loreName).length == 0);\r\n        });\r\n        let loreSkill: Skill = characterService.get_Character().customSkills.find(skill => skill.name == 'Lore: ' + source.loreName);\r\n        if (loreSkill) {\r\n            characterService.remove_CustomSkill(loreSkill);\r\n        }\r\n        this.remove_LoreFeats(characterService, source.loreName);\r\n    }\r\n    remove_LoreFeats(characterService: CharacterService, loreName: string) {\r\n        let loreFeats: Feat[] = [];\r\n        //If we find any custom feat that has lorebase == \"Lore: \"+lorename,\r\n        //  That feat was created when the lore was assigned, and can be removed.\r\n        //We build our own reference array first, because otherwise the forEach-index would get messed up while we remove feats.\r\n        loreFeats.push(...characterService.get_Character().customFeats.filter(feat => feat.lorebase == 'Lore: ' + loreName));\r\n        if (loreFeats.length) {\r\n            loreFeats.forEach(loreFeat => {\r\n                characterService.remove_CustomFeat(loreFeat);\r\n            })\r\n        }\r\n        characterService.set_ToChange(\"Character\", \"skills\");\r\n        characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n    }\r\n    add_Lore(characterService: CharacterService, source: LoreChoice) {\r\n        //Create the skill on the character. Lore can be increased, so it's locked:false.\r\n        characterService.add_CustomSkill('Lore: ' + source.loreName, \"Skill\", \"Intelligence\", false);\r\n        //Create as many skill increases as the source's initialIncreases value\r\n        for (let increase = 0; increase < source.initialIncreases; increase++) {\r\n            characterService.get_Character().increase_Skill(characterService, 'Lore: ' + source.loreName, true, source, true)\r\n        }\r\n        //The Additional Lore feat grants a skill increase on Levels 3, 7 and 15 that can only be applied to this lore.\r\n        if (source.source == \"Feat: Additional Lore\") {\r\n            this.add_SkillChoice(characterService.get_Level(3), Object.assign(new SkillChoice(), { available: 1, increases: [], filter: ['Lore: ' + source.loreName], type: \"Skill\", maxRank: 4, source: \"Feat: Additional Lore\", id: \"\" }))\r\n            this.add_SkillChoice(characterService.get_Level(7), Object.assign(new SkillChoice(), { available: 1, increases: [], filter: ['Lore: ' + source.loreName], type: \"Skill\", maxRank: 6, source: \"Feat: Additional Lore\", id: \"\" }))\r\n            this.add_SkillChoice(characterService.get_Level(15), Object.assign(new SkillChoice(), { available: 1, increases: [], filter: ['Lore: ' + source.loreName], type: \"Skill\", maxRank: 8, source: \"Feat: Additional Lore\", id: \"\" }))\r\n        }\r\n        this.add_LoreFeats(characterService, source.loreName);\r\n    }\r\n    add_LoreFeats(characterService: CharacterService, loreName: string) {\r\n        //There are particular feats that need to be cloned for every individual lore skill (mainly Assurance). They are marked as lorebase==true.\r\n        characterService.get_Feats().filter(feat => feat.lorebase == \"Lore\").forEach(lorebaseFeat => {\r\n            let newLength = characterService.add_CustomFeat(lorebaseFeat);\r\n            let newFeat = characterService.get_Character().customFeats[newLength - 1];\r\n            newFeat.name = newFeat.name.replace('Lore', 'Lore: ' + loreName);\r\n            newFeat.subType = newFeat.subType.replace('Lore', 'Lore: ' + loreName);\r\n            newFeat.skillreq.forEach(requirement => {\r\n                requirement.skill = requirement.skill.replace('Lore', 'Lore: ' + loreName);\r\n            })\r\n            newFeat.hints.forEach(hint => {\r\n                hint.showon = hint.showon.replace('Lore', 'Lore: ' + loreName)\r\n            });\r\n            newFeat.featreq = newFeat.featreq.map(featreq => featreq.replace('Lore', 'Lore: ' + loreName));\r\n            newFeat.lorebase = \"Lore: \" + loreName;\r\n            newFeat.hide = false;\r\n            characterService.set_ToChange(\"Character\", \"skills\");\r\n            characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        })\r\n    }\r\n}","import { Rune } from './Rune';\r\n\r\nexport class WeaponRune extends Rune {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Weapon Runes should be type \"weaponrunes\" to be found in the database\r\n    readonly type = \"weaponrunes\";\r\n    //You are enfeebled 2 if your alignment contains this word.\r\n    public alignmentPenalty: string = \"\";\r\n    public critfailure: string = \"\";\r\n    public criticalHint: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    //Can only be applied to a weapon with this damage type (or modular)\r\n    public damagereq: string = \"\";\r\n    public extraDamage: string = \"\";\r\n    public failure: string = \"\";\r\n    //Can only be applied to a weapon with this name\r\n    public namereq: string = \"\";\r\n    //Can only be applied to a melee weapon, or to a ranged weapon\r\n    public rangereq: \"\"|\"melee\"|\"ranged\" = \"\";\r\n    //Cannot apply to a weapon with this rune\r\n    public runeblock: string = \"\";\r\n    public striking: number = 0;\r\n    public success: string = \"\";\r\n    //Can only be applied to a weapon with this trait\r\n    public traitreq: string = \"\";\r\n}","import core from './core.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    custom_kitsune\r\n};","export class OtherItem {\r\n    public readonly _className: string = this.constructor.name;\r\n    public name: string = \"\";\r\n    public bulk: string = \"\";\r\n    public readonly amount: number = 1;\r\n}\r\n","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Health {\r\n    public readonly _className: string = this.constructor.name;\r\n    public damage: number = 0;\r\n    public immunities: any[] = [];\r\n    public lessenedEffects: any[] = [];\r\n    public resistances: any[] = [];\r\n    public temporaryHP: { amount: number, source: string, sourceId: string }[] = [{ amount: 0, source: \"\", sourceId: \"\" }];\r\n    calculate(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n        let result = {\r\n            maxHP: this.maxHP(creature, characterService, effectsService),\r\n            currentHP: this.currentHP(creature, characterService, effectsService),\r\n            wounded: this.wounded(creature, characterService),\r\n            dying: this.dying(creature, characterService),\r\n            maxDying: this.maxDying(creature, effectsService)\r\n        }\r\n        return result;\r\n    }\r\n    maxHP(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n        let explain = \"\";\r\n        let classHP = 0;\r\n        let ancestryHP = 0;\r\n        let charLevel = characterService.get_Character().level\r\n        if (creature.type == \"Familiar\") {\r\n            //Your familiar has 5 Hit Points for each of your levels.\r\n            classHP = 5 * charLevel;\r\n            explain = \"Familiar base HP: \" + classHP;\r\n        } else {\r\n            let classCreature = creature as AnimalCompanion | Character;\r\n            if (classCreature.class.hitPoints) {\r\n                if (classCreature.class.ancestry.name) {\r\n                    ancestryHP = classCreature.class.ancestry.hitPoints;\r\n                    explain = \"Ancestry base HP: \" + ancestryHP;\r\n                }\r\n                let constitution = characterService.get_Abilities(\"Constitution\")[0].baseValue(classCreature, characterService, charLevel).result;\r\n                let CON: number = Math.floor((constitution - 10) / 2);\r\n                classHP = (classCreature.class.hitPoints + CON) * charLevel;\r\n                explain += \"\\nClass: \" + classCreature.class.hitPoints + \" + CON: \" + (classCreature.class.hitPoints + CON) + \" per Level: \" + classHP;\r\n            }\r\n        }\r\n        let baseHP = ancestryHP + classHP;\r\n        let effectsSum = 0\r\n        effectsService.get_AbsolutesOnThis(creature, \"Max HP\").forEach(effect => {\r\n            effectsSum = parseInt(effect.setValue);\r\n            explain = effect.source + \": \" + effect.setValue;\r\n        });\r\n        effectsService.get_RelativesOnThis(creature, \"Max HP\").forEach(effect => {\r\n            effectsSum += parseInt(effect.value);\r\n            explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n        });\r\n        let result = baseHP + effectsSum;\r\n        return { result: result, explain: explain.trim() }\r\n    }\r\n    currentHP(creature: Creature, characterService: CharacterService, effectsService: EffectsService) {\r\n        let maxHP = this.maxHP(creature, characterService, effectsService)\r\n        let sum = maxHP.result + this.temporaryHP[0].amount - this.damage;\r\n        let explain = \"Max HP: \" + maxHP.result;\r\n        if (this.temporaryHP[0].amount) {\r\n            explain += \"\\nTemporary HP: \" + this.temporaryHP[0].amount;\r\n        }\r\n        explain += \"\\nDamage taken: \" + (this.damage);\r\n        //You can never get under 0 HP. If you do (because you just took damage), that gets corrected here,\r\n        // and the health component gets reloaded in case we need to process new conditions.\r\n        if (sum < 0) {\r\n            this.damage += sum;\r\n            sum = 0;\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n            characterService.process_ToChange();\r\n        }\r\n        return { result: sum, explain: explain };\r\n    }\r\n    wounded(creature: Creature, characterService: CharacterService) {\r\n        let woundeds = 0;\r\n        let conditions = characterService.get_AppliedConditions(creature, \"Wounded\");\r\n        if (conditions.length) {\r\n            woundeds = Math.max(...conditions.map(gain => gain.value));\r\n        }\r\n        return Math.max(woundeds, 0)\r\n    }\r\n    dying(creature: Creature, characterService: CharacterService) {\r\n        let dying = 0;\r\n        let conditions = characterService.get_AppliedConditions(creature, \"Dying\");\r\n        if (conditions.length) {\r\n            dying = Math.max(...conditions.map(gain => gain.value));\r\n        }\r\n        return Math.max(dying, 0)\r\n    }\r\n    maxDying(creature: Creature, effectsService: EffectsService) {\r\n        let defaultMaxDying: number = 4;\r\n        let effectsSum = 0;\r\n        effectsService.get_AbsolutesOnThis(creature, \"Max Dying\").forEach(effect => {\r\n            effectsSum = parseInt(effect.value);\r\n        });\r\n        effectsService.get_RelativesOnThis(creature, \"Max Dying\").forEach(effect => {\r\n            effectsSum += parseInt(effect.value);\r\n        });\r\n        return defaultMaxDying + effectsSum;\r\n    }\r\n    takeDamage(creature: Creature, characterService: CharacterService, effectsService: EffectsService, amount: number, nonlethal: boolean = false, wounded: number = undefined, dying: number = undefined) {\r\n        if (wounded == undefined) {\r\n            wounded = this.wounded(creature, characterService);\r\n        }\r\n        if (dying == undefined) {\r\n            dying = this.dying(creature, characterService);\r\n        }\r\n        //First, absorb damage with temporary HP and add the rest to this.damage.\r\n        //Reset temp HP if it has reached 0, and remove other options if you are starting to use up your first amount of temp HP.\r\n        let diff = Math.min(this.temporaryHP[0].amount, amount);\r\n        this.temporaryHP[0].amount -= diff;\r\n        this.temporaryHP.length = 1;\r\n        if (this.temporaryHP[0].amount <= 0) {\r\n            this.temporaryHP[0] = { amount: 0, source: \"\", sourceId: \"\" }\r\n        }\r\n        amount -= diff;\r\n        this.damage += amount;\r\n        let currentHP = this.currentHP(creature, characterService, effectsService).result;\r\n        //Then, if you have reached 0 HP with lethal damage, get dying 1+wounded\r\n        //Dying and maxDying are compared in the Conditions service when Dying is added\r\n        if (!nonlethal && currentHP == 0) {\r\n            if (dying == 0) {\r\n                characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Dying\", value: wounded + 1, source: \"0 Hit Points\" }), false)\r\n            }\r\n        }\r\n        if (nonlethal && currentHP == 0) {\r\n            if (characterService.get_AppliedConditions(creature, \"Unconscious\", \"0 Hit Points\").length == 0) {\r\n                characterService.add_Condition(creature, Object.assign(new ConditionGain, { name: \"Unconscious\", source: \"0 Hit Points\" }), false)\r\n            }\r\n        }\r\n        //Wake up if you are unconscious and take damage (without falling under 1 HP)\r\n        if (currentHP > 0) {\r\n            characterService.get_AppliedConditions(creature, \"Unconscious\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false);\r\n            });\r\n        }\r\n    }\r\n    heal(creature: Creature, characterService: CharacterService, effectsService: EffectsService, amount: number, wake: boolean = true, increaseWounded: boolean = true, dying: number = undefined) {\r\n        if (dying == undefined) {\r\n            dying = this.dying(creature, characterService);\r\n        }\r\n        this.damage = Math.max(0, this.damage - amount);\r\n        //Recover from Dying and get Wounded++\r\n        if (this.currentHP(creature, characterService, effectsService).result > 0 && dying > 0) {\r\n            characterService.get_AppliedConditions(creature, \"Dying\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false, increaseWounded);\r\n            });\r\n        }\r\n        //Wake up from Healing\r\n        if (wake) {\r\n            characterService.get_AppliedConditions(creature, \"Unconscious\", \"0 Hit Points\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain);\r\n            });\r\n            characterService.get_AppliedConditions(creature, \"Unconscious\", \"Dying\").forEach(gain => {\r\n                characterService.remove_Condition(creature, gain, false);\r\n            });\r\n        }\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","<ng-container *ngFor=\"let phrase of get_Phrases(); trackBy:trackByIndex;\">\r\n    <span class=\"actionIcon action1A\" *ngIf=\"phrase=='1A'\"></span>\r\n    <span class=\"actionIcon action2A\" *ngIf=\"phrase=='2A'\"></span>\r\n    <span class=\"actionIcon action3A\" *ngIf=\"phrase=='3A'\"></span>\r\n    <span class=\"actionIcon actionFree\" *ngIf=\"phrase=='Free'\"></span>\r\n    <span class=\"actionIcon actionReaction\" *ngIf=\"phrase=='Reaction'\"></span>\r\n    <span class=\"lower\" *ngIf=\"!['Free','Reaction','1A','2A','3A'].includes(phrase)\"> {{phrase}} </span>\r\n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-actionIcons',\r\n    templateUrl: './actionIcons.component.html',\r\n    styleUrls: ['./actionIcons.component.css']\r\n})\r\nexport class ActionIconsComponent implements OnInit {\r\n\r\n    @Input()\r\n    actionString: string = \"\"\r\n    \r\n    constructor() { }\r\n\r\n    get_Phrases() {\r\n        return this.actionString?.split(' ') || [];\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { SpellGain } from './SpellGain';\r\n\r\nexport class SpellCast {\r\n    public readonly _className: string = this.constructor.name;\r\n    public level: number = 1;\r\n    public name: string = \"\";\r\n    //This duration can override the spell's standard duration when applying conditions.\r\n    public duration: number = 0;\r\n    //This is used automatically for sustained spells cast by items. Activities store their spellGain on the ActivityGain;\r\n    public spellGain: SpellGain = new SpellGain();\r\n    public target: \"ally\"|\"self\"|\"\" = \"\";\r\n}\r\n","import { Consumable } from './Consumable';\r\n\r\nexport class AlchemicalPoison extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical Poisons should be type \"alchemicalpoisons\" to be found in the database\r\n    readonly type = \"alchemicalpoisons\";\r\n    public savingThrow: string = \"\";\r\n    public maxDuration: number = 0;\r\n    //Alchemical Poisons can have Stages. Describe them here, with the index being the stage number and [0] being the Onset stage.\r\n    public stages: string[] = [];\r\n}","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { FeatsService } from 'src/app/feats.service';\r\nimport { Feat } from 'src/app/Feat';\r\nimport { FeatChoice } from 'src/app/FeatChoice';\r\nimport { FamiliarsService } from 'src/app/familiars.service';\r\nimport { Familiar } from 'src/app/Familiar';\r\nimport { Character } from 'src/app/Character';\r\nimport { TraitsService } from 'src/app/traits.service';\r\nimport { EffectsService } from 'src/app/effects.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TextAttribute } from '@angular/compiler/src/render3/r3_ast';\r\n\r\n@Component({\r\n    selector: 'app-featchoice',\r\n    templateUrl: './featchoice.component.html',\r\n    styleUrls: ['./featchoice.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeatchoiceComponent implements OnInit {\r\n\r\n    @Input()\r\n    choice: FeatChoice\r\n    @Input()\r\n    showChoice: string = \"\";\r\n    @Input()\r\n    showFeat: string = \"\";\r\n    showSubFeat: string = \"\";\r\n    uncollapseSubFeat: string = \"\";\r\n    @Output()\r\n    showFeatChoiceMessage = new EventEmitter<{ name: string, levelNumber: number, choice: FeatChoice }>();\r\n    @Output()\r\n    showFeatMessage = new EventEmitter<string>();\r\n    @Input()\r\n    levelNumber: number;\r\n    @Input()\r\n    creature: string = \"Character\"\r\n    @Input()\r\n    unavailableFeats: boolean = true;\r\n    @Input()\r\n    lowerLevelFeats: boolean = true;\r\n    @Input()\r\n    higherLevelFeats: boolean = true;\r\n    @Input()\r\n    archetypeFeats: boolean = true;\r\n    @Input()\r\n    showTitle: boolean = true;\r\n    @Input()\r\n    showContent: boolean = true;\r\n    @Input()\r\n    tileMode: boolean = false;\r\n    //Separate from the character level that you on when you are making this choice, this is the level that feats can have in this choice.\r\n    // It can change with the character level or other factors and will be re-calculated when the component refreshes.\r\n    public featLevel: number = 0;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private featsService: FeatsService,\r\n        private familiarsService: FamiliarsService,\r\n        private traitsService: TraitsService,\r\n        private effectsService: EffectsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_Feat(name: string) {\r\n        if (this.showFeat == name) {\r\n            this.showFeat = \"\";\r\n        } else {\r\n            this.showFeat = name;\r\n        }\r\n        this.showFeatMessage.emit(this.showFeat);\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showChoice == name) {\r\n            this.showChoice = \"\";\r\n            this.showFeatChoiceMessage.emit({ name: this.showChoice, levelNumber: 0, choice: null });\r\n        } else {\r\n            this.showChoice = name;\r\n            this.showFeatChoiceMessage.emit({ name: this.showChoice, levelNumber: this.levelNumber, choice: this.choice });\r\n        }\r\n    }\r\n\r\n    toggle_SubFeat(name: string) {\r\n        if (this.showSubFeat == name) {\r\n            this.showSubFeat = \"\";\r\n            this.uncollapseSubFeat = \"\";\r\n        } else {\r\n            this.showSubFeat = name;\r\n        }\r\n    }\r\n\r\n    get_ShowFeat() {\r\n        return this.showFeat;\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    get_ShowSubFeat() {\r\n        return this.showSubFeat;\r\n    }\r\n\r\n    get_UncollapseSubFeat() {\r\n        return this.uncollapseSubFeat;\r\n    }\r\n\r\n    set_UncollapseSubFeat(name: string) {\r\n        //After the component finishes loading, trigger the un-collapsing of the currently shown subfeat.\r\n        //If we do it immediately, the un-collapsing will not be animated because the content is not loaded before it finishes.\r\n        if (this.get_UncollapseSubFeat() != name) {\r\n            this.uncollapseSubFeat = name;\r\n        }\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByFeat(index: number, featSet: { available: boolean, feat: Feat }) {\r\n        //Feat options are sorted by whether they are available or not. When you take one, you might no longer meet the prerequisites\r\n        // for another feat that gets pushed to the \"unavailable\" section and may change the order of options.\r\n        // This can lead to another option now being checked in the position of the taken option.\r\n        // By tracking by name instead of index, we make sure the correct feats get redrawn.\r\n        return featSet.feat.name;\r\n    }\r\n\r\n    trackBySubType(index: number, subfeatSet: { available: boolean, subfeat: Feat }) {\r\n        //Subfeat options are sorted by whether they are available or not. When you take one, you might now meet the prerequisites\r\n        // for another subfeat that gets pushed to the \"available\" section and may change the order of options.\r\n        // This can lead to another option now being checked in the position of the taken option.\r\n        // By tracking by subtype instead of index, we make sure the correct subfeats get redrawn.\r\n        return subfeatSet.subfeat.subType;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.tileMode;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature) as Character | Familiar;\r\n    }\r\n\r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    get_ButtonTitle(availableFeats: number) {\r\n        let title: string = (this.featLevel != this.levelNumber) ? \"Level \" + this.featLevel + \" \" : \"\";\r\n        title += this.choice.type.split(\",\").join(\", \");\r\n        if (!this.choice.specialChoice) {\r\n            if (this.creature == \"Familiar\") {\r\n                title += availableFeats > 1 ? ' Abilities' : ' Ability';\r\n            } else {\r\n                title += availableFeats > 1 ? ' Feats' : ' Feat';\r\n            }\r\n        }\r\n        if (this.creature != \"Familiar\") {\r\n            title += \" (\" + this.choice.source + \")\";\r\n        }\r\n        if (availableFeats > 1) {\r\n            title += \": \" + this.choice.feats.length + \"/\" + availableFeats;\r\n        } else if (this.choice.feats.length) {\r\n            title += \": \" + this.choice.feats[0].name;\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_Available(choice: FeatChoice) {\r\n        if (this.creature == \"Familiar\") {\r\n            let available = choice.available;\r\n            this.effectsService.get_AbsolutesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n                available = parseInt(effect.setValue);\r\n            });\r\n            this.effectsService.get_RelativesOnThis(this.get_Character(), \"Familiar Abilities\").forEach(effect => {\r\n                available += parseInt(effect.value);\r\n            });\r\n            return available;\r\n        }\r\n        return choice.available\r\n    }\r\n\r\n    get_Feats(name: string = \"\", type: string = \"\") {\r\n        if (this.creature == \"Character\") {\r\n            return this.featsService.get_Feats(this.get_Character().customFeats, name, type);\r\n        } else if (this.creature == \"Familiar\") {\r\n            return this.familiarsService.get_FamiliarAbilities(name);\r\n        }\r\n    }\r\n\r\n    get_FeatsAndFeatures(name: string = \"\", type: string = \"\") {\r\n        if (this.creature == \"Character\") {\r\n            return this.featsService.get_All(this.get_Character().customFeats, name, type);\r\n        } else if (this.creature == \"Familiar\") {\r\n            return this.familiarsService.get_FamiliarAbilities(name);\r\n        }\r\n    }\r\n\r\n    get_SubFeats(feat: Feat, choice: FeatChoice) {\r\n        if (feat.subTypes) {\r\n            let available = this.get_Available(choice)\r\n            let feats: Feat[] = this.get_Feats().filter((subFeat: Feat) => subFeat.superType == feat.name && !subFeat.hide);\r\n            if (choice.filter.length) {\r\n                feats = feats.filter(subFeat => choice.filter.includes(subFeat.name) || choice.filter.includes(subFeat.superType))\r\n            }\r\n            let showOtherOptions = true;\r\n            if (choice.feats.length >= available) {\r\n                showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n            }\r\n            return feats.map(feat => {\r\n                let available = (this.cannotTake(feat, choice).length == 0 || this.get_FeatTakenByChoice(feat, choice));\r\n                return { available: available, subfeat: feat }\r\n            }).filter(featSet => showOtherOptions || this.get_FeatTakenByChoice(featSet.subfeat, choice))\r\n                .sort(function (a, b) {\r\n                    if (a.subfeat.subType < b.subfeat.subType) {\r\n                        return -1;\r\n                    }\r\n                    if (a.subfeat.subType > b.subfeat.subType) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }).sort(function (a, b) {\r\n                    if (a.available && !b.available) {\r\n                        return -1;\r\n                    }\r\n                    if (!a.available && b.available) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_ChoiceLevel(choice: FeatChoice) {\r\n        let featLevel = 0;\r\n        //Use character level for Familiar Abilities or for choices that don't look at the choice level, but the current character level.\r\n        if (choice.source == \"Familiar\") {\r\n            featLevel = this.get_Character().level;\r\n        } else {\r\n            if (choice.level) {\r\n                featLevel = choice.level;\r\n            } else if (choice.dynamicLevel) {\r\n                try {\r\n                    //Prepare level for the dynamicLevel evaluation.\r\n                    let level = this.get_Character().class.levels[this.levelNumber];\r\n                    let Character = this.get_Character();\r\n                    //Eval the dynamicLevel string to convert things like \"level.number / 2\". \"1\" is still \"1\".\r\n                    featLevel = Math.floor(parseInt(eval(choice.dynamicLevel)));\r\n                } catch (e) {\r\n                    console.log(\"Error converting Feat level\");\r\n                }\r\n            } else {\r\n                featLevel = this.levelNumber;\r\n            }\r\n        }\r\n        return featLevel;\r\n    }\r\n\r\n    get_AvailableFeats(choice: FeatChoice) {\r\n        let character = this.get_Character()\r\n        let available = this.get_Available(choice);\r\n        //Get all feats, but no subtype Feats (those that have the supertype attribute set) - those get built within their supertype\r\n        let allFeats: Feat[] = this.get_Feats().filter(feat => !feat.superType && !feat.hide);\r\n        //Get subfeats for later use\r\n        let allSubFeats: Feat[] = this.get_Feats().filter(feat => feat.superType && !feat.hide);\r\n        if (choice.filter.length) {\r\n            allFeats = allFeats.filter(feat =>\r\n                choice.filter.includes(feat.name) ||\r\n                (\r\n                    feat.subTypes &&\r\n                    this.get_Feats().some(subFeat => !subFeat.hide && subFeat.superType == feat.name && choice.filter.includes(subFeat.name))\r\n                )\r\n            )\r\n        }\r\n        let feats: Feat[] = [];\r\n        if (choice.specialChoice) {\r\n            //For special choices, we don't really use true feats, but make choices that can best be represented by the extensive feat structure.\r\n            //In this case, we don't go looking for feats with a certain trait, but rely completely on the filter.\r\n            feats.push(...allFeats);\r\n        } else {\r\n            switch (choice.type) {\r\n                case \"Class\":\r\n                    feats.push(...allFeats.filter(feat => feat.traits.includes(character.class.name) || feat.traits.includes(\"Archetype\")));\r\n                    break;\r\n                case \"Ancestry\":\r\n                    character.class.ancestry.ancestries.concat([\"Ancestry\"]).forEach(trait => {\r\n                        feats.push(...allFeats.filter(feat => feat.traits.includes(trait)));\r\n                    })\r\n                    break;\r\n                case \"Familiar\":\r\n                    feats.push(...allFeats.filter(feat => feat.traits.includes(\"Familiar Ability\") || feat.traits.includes(\"Master Ability\")));\r\n                default:\r\n                    let traits: string[] = choice.type.split(\",\")\r\n                    feats.push(...allFeats.filter((feat: Feat) => traits.filter(trait => feat.traits.includes(trait)).length == traits.length));\r\n                    break;\r\n            }\r\n        }\r\n        if (feats.length) {\r\n            if (!this.lowerLevelFeats && !choice.showOnSheet) {\r\n                feats = feats.filter(feat => feat.levelreq >= this.featLevel || !feat.levelreq || this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice));\r\n            }\r\n            if (!this.higherLevelFeats && !choice.showOnSheet) {\r\n                feats = feats.filter(feat => feat.levelreq <= this.featLevel || !feat.levelreq || this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice))\r\n            }\r\n            if (!this.archetypeFeats) {\r\n                feats = feats.filter(feat => !feat.traits.includes(\"Archetype\") || this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice))\r\n            }\r\n            if (this.archetypeFeats) {\r\n                //Show archetype feats only if their dedication feat has been taken.\r\n                feats = feats.filter(feat =>\r\n                    !feat.archetype ||\r\n                    (\r\n                        feat.traits.includes(\"Dedication\") &&\r\n                        feat.archetype != character.class.name\r\n                    ) ||\r\n                    (\r\n                        feat.archetype && this.get_Feats()\r\n                            .find(superFeat =>\r\n                                superFeat.archetype == feat.archetype &&\r\n                                superFeat.traits.includes(\"Dedication\") &&\r\n                                superFeat.have(character, this.characterService, this.levelNumber)\r\n                            )\r\n                    )\r\n                );\r\n            }\r\n            let showOtherOptions = true;\r\n            if (choice.feats.length >= available) {\r\n                showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n            }\r\n            return feats.map(feat => {\r\n                let featAvailable = (this.get_FeatTakenByChoice(feat, choice) || this.subFeatTakenByThis(allSubFeats, feat, choice) || this.cannotTake(feat, choice).length == 0);\r\n                return { available: featAvailable, feat: feat };\r\n            }).filter(featSet => ((this.unavailableFeats || featSet.available) && showOtherOptions) || this.get_FeatTakenByChoice(featSet.feat, choice) || this.subFeatTakenByThis(allSubFeats, featSet.feat, choice))\r\n                .sort(function (a, b) {\r\n                    //Sort by level, then name. Divide level by 100 to create leading zeroes (and not sort 10 before 2), then cut it down to 3 digits. 0 will be 0.00.\r\n                    //For skill feat choices and general feat choices, sort by the associated skill (if exactly one), then level and name.\r\n                    //Feats with less or more required skills are sorted first.\r\n                    let sortLevel_a = ((a.feat.levelreq || 0.1) / 100).toString().substr(0, 4);\r\n                    let sortLevel_b = ((b.feat.levelreq || 0.1) / 100).toString().substr(0, 4);\r\n                    let sort_a = sortLevel_a + a.feat.name;\r\n                    let sort_b = sortLevel_b + b.feat.name;\r\n                    if ([\"General\", \"Skill\"].includes(choice.type)) {\r\n                        sort_a = (a.feat.skillreq.length == 1 ? a.feat.skillreq[0]?.skill : \"_\") + sort_a;\r\n                        sort_b = (b.feat.skillreq.length == 1 ? b.feat.skillreq[0]?.skill : \"_\") + sort_b;\r\n                    }\r\n                    if (sort_a < sort_b) {\r\n                        return -1;\r\n                    }\r\n                    if (sort_a > sort_b) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }).sort(function (a, b) {\r\n                    //Lastly, sort by availability.\r\n                    if (a.available && !b.available) {\r\n                        return -1;\r\n                    }\r\n                    if (!a.available && b.available) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get_AvailableFeatsCount(featSets: { available: boolean, feat: Feat }[], available: boolean = true) {\r\n        return featSets.filter(featSet => featSet.available == available).length;\r\n    }\r\n\r\n    cannotTakeSome(choice: FeatChoice) {\r\n        let anytrue = 0;\r\n        let available = this.get_Available(choice);\r\n        choice.feats.forEach((feat, index) => {\r\n            let template: Feat = this.get_Feats(feat.name)[0];\r\n            if (template?.name) {\r\n                if (this.cannotTake(template, choice).length || index >= available) {\r\n                    if (!feat.locked) {\r\n                        this.get_Character().take_Feat(this.get_Creature(), this.characterService, template, feat.name, false, choice, feat.locked);\r\n                    } else {\r\n                        anytrue += 1;\r\n                    }\r\n                    this.characterService.process_ToChange();\r\n                }\r\n            }\r\n        });\r\n        return anytrue;\r\n    }\r\n\r\n    create_IgnoreRequirementList(feat: Feat, choice: FeatChoice) {\r\n        //Prepare character and characterService for eval.\r\n        let character = this.get_Character();\r\n        let characterService = this.characterService;\r\n        //Build the ignoreRequirements list from both the feat and the choice.\r\n        let ignoreRequirementsList: string[] = [];\r\n        feat.ignoreRequirements.concat((choice?.ignoreRequirements || [])).forEach(ignoreReq => {\r\n            try {\r\n                ignoreRequirementsList.push(eval(ignoreReq));\r\n            } catch (error) {\r\n                console.log(\"Failed evaluating feat requirement ignore list item (\" + ignoreReq + \"): \" + error)\r\n            }\r\n        })\r\n        return ignoreRequirementsList;\r\n    }\r\n\r\n    cannotTake(feat: Feat, choice: FeatChoice, skipLevel: boolean = false) {\r\n        //Don't run the test on a blank feat - does not go well.\r\n        if (feat?.name) {\r\n            let creature = this.get_Creature();\r\n            let levelNumber = this.levelNumber;\r\n            let takenByThis: number = this.get_FeatTakenByChoice(feat, choice) ? 1 : 0;\r\n            let ignoreRequirementsList: string[] = this.create_IgnoreRequirementList(feat, choice);\r\n            let reasons: { reason: string, explain: string }[] = [];\r\n            let traits: string[] = [];\r\n            switch (choice.type) {\r\n                case \"Class\":\r\n                    traits.push(this.get_Character().class?.name, \"Archetype\");\r\n                    break;\r\n                case \"Ancestry\":\r\n                    traits.push(...this.get_Character().class?.ancestry?.ancestries, \"Ancestry\");\r\n                    break;\r\n                case \"Familiar\":\r\n                    traits.push(\"Familiar Ability\", \"Master Ability\");\r\n                    break;\r\n                default:\r\n                    traits.push(...choice.type.split(\",\"));\r\n                    break;\r\n            }\r\n            //Does the type not match a trait? (Unless it's a special choice, where the type doesn't matter and is just the title.)\r\n            if (!choice.specialChoice && !feat.traits.find(trait => traits.includes(trait))) {\r\n                reasons.push({ reason: \"Invalid type\", explain: \"The feat's traits do not match the choice type.\" });\r\n            }\r\n            //Are the basic requirements (level, ability, feat etc) not met?\r\n            if (!feat.canChoose(this.characterService, this.featLevel, levelNumber, skipLevel, ignoreRequirementsList)) {\r\n                reasons.push({ reason: \"Requirements unmet\", explain: \"Not all requirements are met.\" });\r\n            }\r\n            //If the feat can be taken a limited number of times:\r\n            //  (Don't count temporary choices (showOnSheet == true) unless this is also temporary.)\r\n            let excludeTemporary = !choice.showOnSheet;\r\n            let haveUpToNow: number = feat.have(creature, this.characterService, levelNumber, excludeTemporary, true);\r\n            //Familiar abilities are independent of level. Don't check haveLater for them, because it will be the same result as haveUpToNow.\r\n            let haveLater: number = creature.type == \"Character\" ? feat.have(creature, this.characterService, 20, excludeTemporary, true, levelNumber + 1) : 0;\r\n            if (!feat.unlimited) {\r\n                if (feat.limited) {\r\n                    //Has it already been taken up to this level, excluding this FeatChoice, and more often than the limit?\r\n                    //  Don't count temporary choices (showOnSheet == true) unless this is also temporary.\r\n                    if (haveUpToNow - takenByThis >= feat.limited) {\r\n                        reasons.push({ reason: \"Already taken\", explain: \"This feat cannot be taken more than \" + feat.limited + \" times.\" });\r\n                    } else if (haveUpToNow - takenByThis + haveLater >= feat.limited) {\r\n                        //Has it been taken more often than the limits, including higher levels?\r\n                        reasons.push({ reason: \"Taken on higher levels\", explain: \"This feat has been selected all \" + feat.limited + \" times, including on higher levels.\" });\r\n                    }\r\n                } else {\r\n                    //Has it already been taken up to this level, excluding this FeatChoice?\r\n                    //  Don't count temporary choices (showOnSheet == true) unless this is also temporary.\r\n                    if (haveUpToNow - takenByThis > 0) {\r\n                        reasons.push({ reason: \"Already taken\", explain: \"This feat cannot be taken more than once.\" });\r\n                    }\r\n                    //Has it been taken on a higher level (that is, not up to now, but up to Level 20)?\r\n                    if (haveLater > 0) {\r\n                        reasons.push({ reason: \"Taken on higher level\", explain: \"This feat has been selected on a higher level.\" });\r\n                    }\r\n                }\r\n            }\r\n            //Dedication feats (unless the dedication limit is ignored)\r\n            if (feat.traits.includes(\"Dedication\") && !ignoreRequirementsList.includes(\"dedicationlimit\")) {\r\n                //Get all taken dedication feats that aren't this, then check if you have taken enough to allow a new archetype.\r\n                let takenFeats = this.get_FeatsAndFeatures().filter(feat => feat.have(creature, this.characterService, levelNumber, true));\r\n                takenFeats\r\n                    .filter(libraryfeat => libraryfeat?.name != feat.name && libraryfeat?.traits.includes(\"Dedication\")).forEach(takenfeat => {\r\n                        let archetypeFeats = takenFeats\r\n                            .filter(libraryfeat => libraryfeat?.name != takenfeat.name && libraryfeat?.traits.includes(\"Archetype\") && libraryfeat.archetype == takenfeat.archetype)\r\n                        if (archetypeFeats.length < 2) {\r\n                            reasons.push({ reason: \"Dedications blocked\", explain: \"You cannot select another dedication feat until you have gained two other feats from the \" + takenfeat.archetype + \" archetype.\" });\r\n                        }\r\n                    });\r\n            }\r\n            //If this feat has any subtypes, check if any of them can be taken. If not, this cannot be taken either.\r\n            if (feat.subTypes) {\r\n                let subfeats: Feat[] = this.get_Feats().filter(subfeat => subfeat.superType == feat.name && !subfeat.hide);\r\n                let availableSubfeats = subfeats.filter(subfeat =>\r\n                    this.get_FeatTakenByChoice(subfeat, choice) || this.cannotTake(subfeat, choice, skipLevel).length == 0\r\n                );\r\n                if (availableSubfeats.length == 0) {\r\n                    reasons.push({ reason: \"No option available\", explain: \"None of the options for this feat has its requirements met.\" });\r\n                }\r\n\r\n            }\r\n            //If a subtype has been taken and the feat is not limited, no other subfeat can be taken.\r\n            if (feat.superType) {\r\n                let superfeat: Feat = this.get_Feats().find(superfeat => superfeat.name == feat.superType && !superfeat.hide);\r\n                let takenSubfeats: Feat[] = this.get_Feats().filter(subfeat => subfeat.superType == feat.superType && subfeat.name != feat.name && !subfeat.hide && subfeat.have(creature, this.characterService, levelNumber));\r\n                //If another subtype has been taken, but not in this choice, and the feat is not unlimited, no other subfeat can be taken.\r\n                if (!superfeat.unlimited && !superfeat.limited && takenSubfeats.length) {\r\n                    reasons.push({ reason: \"Feat already taken\", explain: \"This feat cannot be taken more than once.\" });\r\n                }\r\n                if (superfeat.limited && takenSubfeats.length >= superfeat.limited) {\r\n                    reasons.push({ reason: \"Feat already taken\", explain: \"This feat cannot be taken more than \" + superfeat.limited + \" times.\" });\r\n                }\r\n            }\r\n            return reasons;\r\n        }\r\n    }\r\n\r\n    get_FeatTakenEver(feat: Feat) {\r\n        //Return whether this feat or a feat that counts as this feat has been taken at all up to this level - unless it's unlimited or its limit is not reached yet.\r\n        let taken = this.get_Character().get_FeatsTaken(1, this.levelNumber, feat.name, '', '', undefined, true, true);\r\n        return !feat.unlimited && taken.length && taken.length >= feat.limited;\r\n    }\r\n\r\n    get_FeatTakenByChoice(feat: Feat, choice: FeatChoice) {\r\n        return choice.feats.some(gain => gain.name == feat.name || gain.countAsFeat == feat.name);\r\n    }\r\n\r\n    subFeatTakenByThis(subfeats: Feat[] = this.get_Feats(), feat: Feat, choice: FeatChoice) {\r\n        return subfeats.some(subFeat => subFeat.superType == feat.name && choice.feats.some(gain => gain.name == subFeat.name));\r\n    }\r\n\r\n    get_FeatsTaken(minLevelNumber: number, maxLevelNumber: number, featName: string = \"\", source: string = \"\", sourceId: string = \"\", locked: boolean = undefined) {\r\n        return this.get_Character().get_FeatsTaken(minLevelNumber, maxLevelNumber, featName, source, sourceId, locked);\r\n    }\r\n\r\n    get_FeatRequirements(choice: FeatChoice, feat: Feat, compare: Feat = undefined) {\r\n        let result: Array<{ met?: boolean, ignored?: boolean, desc?: string }> = [];\r\n        let ignoreRequirementsList: string[] = this.create_IgnoreRequirementList(feat, choice);\r\n        //For subtypes, the supertype feat to compare is given. Only those requirements that differ from the supertype will be returned.\r\n        if (compare) {\r\n            if (feat.levelreq != compare.levelreq ||\r\n                JSON.stringify(feat.abilityreq) != JSON.stringify(compare.abilityreq) ||\r\n                JSON.stringify(feat.skillreq) != JSON.stringify(compare.skillreq) ||\r\n                feat.featreq != compare.featreq ||\r\n                feat.specialreqdesc != compare.specialreqdesc\r\n            ) {\r\n                result.push({ met: true, ignored: false, desc: \"requires \" });\r\n                if (feat.levelreq && feat.levelreq != compare.levelreq) {\r\n                    result.push(feat.meetsLevelReq(this.characterService, this.levelNumber));\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('levelreq');\r\n                }\r\n                if (feat.abilityreq.length && JSON.stringify(feat.abilityreq) != JSON.stringify(compare.abilityreq)) {\r\n                    feat.meetsAbilityReq(this.characterService, this.levelNumber).forEach(req => {\r\n                        result.push({ met: true, desc: \", \" });\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('abilityreq');\r\n                    });\r\n                }\r\n                if (feat.skillreq.length && JSON.stringify(feat.skillreq) != JSON.stringify(compare.skillreq)) {\r\n                    feat.meetsSkillReq(this.characterService, this.levelNumber).forEach((req, index) => {\r\n                        if (index == 0) {\r\n                            result.push({ met: true, desc: \", \" });\r\n                        } else {\r\n                            result.push({ met: true, desc: \" or \" });\r\n                        }\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('skillreq');\r\n                    });\r\n                }\r\n                if (feat.featreq.length && JSON.stringify(feat.featreq) != JSON.stringify(compare.featreq)) {\r\n                    feat.meetsFeatReq(this.characterService, this.levelNumber).forEach(req => {\r\n                        result.push({ met: true, desc: \", \" });\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('featreq');\r\n                    });\r\n                }\r\n                if (feat.heritagereq.length && JSON.stringify(feat.heritagereq) != JSON.stringify(compare.heritagereq)) {\r\n                    feat.meetsHeritageReq(this.characterService, this.levelNumber).forEach(req => {\r\n                        result.push({ met: true, desc: \", \" });\r\n                        result.push(req);\r\n                        result[result.length - 1].ignored = ignoreRequirementsList.includes('heritagereq');\r\n                    });\r\n                }\r\n                if (feat.specialreqdesc && feat.specialreqdesc != compare.specialreqdesc) {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(feat.meetsSpecialReq(this.characterService, this.levelNumber));\r\n                }\r\n            }\r\n        } else {\r\n            if (feat.levelreq) {\r\n                result.push(feat.meetsLevelReq(this.characterService, this.featLevel));\r\n                result[result.length - 1].ignored = ignoreRequirementsList.includes('levelreq');\r\n            }\r\n            if (feat.abilityreq.length) {\r\n                feat.meetsAbilityReq(this.characterService, this.levelNumber).forEach(req => {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('abilityreq');\r\n                });\r\n            }\r\n            if (feat.skillreq.length) {\r\n                feat.meetsSkillReq(this.characterService, this.levelNumber).forEach((req, index) => {\r\n                    if (index == 0) {\r\n                        result.push({ met: true, desc: \", \" });\r\n                    } else {\r\n                        result.push({ met: true, desc: \" or \" });\r\n                    }\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('skillreq');\r\n                });\r\n            }\r\n            if (feat.featreq.length) {\r\n                feat.meetsFeatReq(this.characterService, this.levelNumber).forEach(req => {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('featreq');\r\n                });\r\n            }\r\n            if (feat.heritagereq) {\r\n                feat.meetsHeritageReq(this.characterService, this.levelNumber).forEach(req => {\r\n                    result.push({ met: true, desc: \", \" });\r\n                    result.push(req);\r\n                    result[result.length - 1].ignored = ignoreRequirementsList.includes('heritagereq');\r\n                });\r\n            }\r\n            if (feat.specialreqdesc) {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(feat.meetsSpecialReq(this.characterService, this.levelNumber));\r\n            }\r\n        }\r\n        if (result.length > 1) {\r\n            if (result[0].desc == \", \") {\r\n                result.shift();\r\n            }\r\n            if (result[0].desc == \"requires \" && result[1].desc == \", \") {\r\n                result.splice(1, 1);\r\n            }\r\n        } else if (result.length == 1 && result[0].desc == \"requires \") {\r\n            result.length = 0;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    on_FeatTaken(feat: Feat, taken: boolean, choice: FeatChoice, locked: boolean) {\r\n        if (taken && this.get_Character().settings.autoCloseChoices && (choice.feats.length == this.get_Available(choice) - 1)) { this.toggle_List(\"\"); }\r\n        this.get_Character().take_Feat(this.get_Creature(), this.characterService, feat, feat.name, taken, choice, locked);\r\n        this.characterService.set_ToChange(\"Character\", \"charactersheet\");\r\n        this.characterService.set_ToChange(\"Character\", \"featchoices\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"featchoices\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.featLevel = this.get_ChoiceLevel(this.choice);\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"featchoices\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.featLevel = this.get_ChoiceLevel(this.choice);\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.featLevel = this.get_ChoiceLevel(this.choice);\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let listID of [choice.source+choice.id]; trackBy:trackByIndex\">\r\n    <ng-container *ngFor=\"let availableFeats of [get_Available(choice)]; trackBy:trackByIndex\">\r\n        <ng-container *ngFor=\"let buttonTitle of [get_ButtonTitle(availableFeats)]; trackBy:trackByIndex\">\r\n            <div *ngIf=\"availableFeats > 0\"\r\n                [ngClass]=\"{'list-item': showTitle && !get_TileMode(), 'problem':(cannotTakeSome(choice) || choice.feats.length > availableFeats), 'fullsize-only':(availableFeats == choice.feats.length)}\">\r\n                <!--Choice button shows in title mode-->\r\n                <!--List mode button-->\r\n                <button class=\"newrow left-aligned sublist-toggle\" *ngIf=\"showTitle && (!get_TileMode() || showContent)\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(availableFeats == choice.feats.length), 'featchoice':!choice.specialChoice && !choice.showOnSheet && (choice.type != 'Familiar'), 'specialchoice':choice.specialChoice && !choice.showOnSheet, 'activechoice':get_ShowChoice()==listID && (!choice.showOnSheet && (choice.type != 'Familiar'))}\"\r\n                    (click)=\"toggle_List(listID)\">\r\n                    {{buttonTitle}}\r\n                </button>\r\n                <!--Tile mode button-->\r\n                <button (click)=\"toggle_List(listID)\" *ngIf=\"showTitle && !showContent && get_TileMode()\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(availableFeats == choice.feats.length), 'featchoice':!choice.specialChoice, 'specialchoice':choice.specialChoice, 'activechoice':get_ShowChoice()==listID}\">\r\n                    <app-gridIcon [ngbTooltip]=\"buttonTitle\" [superTitle]=\"availableFeats.toString()\"\r\n                        [title]=\"(availableFeats == 1 && choice.feats.length) ? choice.feats[0].name : ((availableFeats > 1 && choice.feats.length > 0) ? choice.feats.length.toString() : '')\"\r\n                        [ngClass]=\"{'fancy-button':(availableFeats == choice.feats.length), 'featchoice':!choice.specialChoice, 'specialchoice':choice.specialChoice}\"\r\n                        [subTitle]=\"choice.feats.length ? '' : choice.type.split(' ')[0].substr(0,8)\">\r\n                    </app-gridIcon>\r\n                </button>\r\n                <!--Choice title shows above content in content only mode-->\r\n                <div class=\"newrow list-item padding-8 center-aligned\" *ngIf=\"!showTitle\">\r\n                    <header class=\"box-header sectionHeader\">\r\n                        {{buttonTitle}}\r\n                    </header>\r\n                </div>\r\n                <!--Choice content shows in content mode-->\r\n                <div id=\"{{!showTitle ? 'choiceArea' : ''}}\"\r\n                    [ngClass]=\"{'list-item sublist':showTitle, 'fancy-list':showTitle && (availableFeats == choice.feats.length), 'charactersheet-app':!showTitle, 'featchoice':!choice.specialChoice && !choice.showOnSheet && (choice.type != 'Familiar'), 'specialchoice':choice.specialChoice && !choice.showOnSheet}\"\r\n                    *ngIf=\"showContent && get_ShowChoice()==listID\">\r\n                    <!-- Filter -->\r\n                    <div class=\"list-item lower\">\r\n                        <strong>Filter</strong>\r\n                        <div class=\"list-item gridicon-fullsizebox\">\r\n                            <input class=\"character-choice\" id=\"unavailableFeats\" type=\"checkbox\"\r\n                                [(ngModel)]=\"unavailableFeats\">\r\n                            <label for=\"unavailableFeats\">\r\n                                <strong>\r\n                                    Show unavailable {{choice.specialChoice ? 'options' : 'feats'}}\r\n                                </strong>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\"\r\n                            *ngIf=\"!choice.specialChoice && choice.type != 'Familiar'\">\r\n                            <input class=\"character-choice\" id=\"lowerLevelFeats\" type=\"checkbox\"\r\n                                [(ngModel)]=\"lowerLevelFeats\">\r\n                            <label for=\"lowerLevelFeats\">\r\n                                <strong>\r\n                                    Show lower level feats\r\n                                </strong>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"fullwidth\" [ngbCollapse]=\"!unavailableFeats\"\r\n                            *ngIf=\"!choice.specialChoice && choice.type != 'Familiar'\">\r\n                            <div class=\"list-item gridicon-fullsizebox\">\r\n                                <input class=\"character-choice\" id=\"higherLevelFeats\" type=\"checkbox\"\r\n                                    [(ngModel)]=\"higherLevelFeats\">\r\n                                <label for=\"higherLevelFeats\">\r\n                                    <strong>\r\n                                        Show higher level feats\r\n                                    </strong>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"list-item gridicon-fullsizebox\"\r\n                            *ngIf=\"!choice.specialChoice && choice.type != 'Familiar'\">\r\n                            <input class=\"character-choice\" id=\"archetypeFeats\" type=\"checkbox\"\r\n                                [(ngModel)]=\"archetypeFeats\">\r\n                            <label for=\"archetypeFeats\">\r\n                                <strong>\r\n                                    Show archetype feats\r\n                                </strong>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <!-- End Filter -->\r\n                    <ng-container *ngFor=\"let featSets of [get_AvailableFeats(choice)]; trackBy:trackByIndex\">\r\n                        <div class=\"list-item\" *ngIf=\"get_AvailableFeatsCount(featSets) < availableFeats\">\r\n                            <span>There are fewer results available than you are allowed to take. This may be due to a\r\n                                choice with limited options, and it might be intended at this time.</span>\r\n                            <span *ngIf=\"!higherLevelFeats || !lowerLevelFeats\">More results may be found if you allow\r\n                                lower and higher level feats.</span>\r\n                            <span *ngIf=\"choice.showOnCurrentLevel\">This feat choice is always available on your current\r\n                                character level. This could change the number of available feats at a later time.</span>\r\n                        </div>\r\n                        <ng-container *ngFor=\"let featSet of featSets; trackBy:trackByFeat;\">\r\n                            <ng-container\r\n                                *ngFor=\"let taken of [get_FeatTakenByChoice(featSet.feat, choice)]; trackBy:trackByIndex\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [taken || (!featSet.available && get_FeatTakenEver(featSet.feat))]; trackBy:trackByIndex\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [(availableFeats <= choice.feats.length) && !taken]; trackBy:trackByIndex\">\r\n                                        <ng-template #FeatChoiceDetailTemplate>\r\n                                            <div class=\"newrow\">\r\n                                                <header class=\"spellHeader\">{{featSet.feat.name}}</header>\r\n                                                <div class=\"button newrow no-animation\"\r\n                                                    *ngIf=\"!featSet.feat.subTypes && featSet.available\"\r\n                                                    [ngClass]=\"{'fancy-button':taken, 'disabled':disabled}\">\r\n                                                    <label>\r\n                                                        <input type=\"checkbox\"\r\n                                                            (change)=\"on_FeatTaken(featSet.feat, $event.target.checked, choice, false)\"\r\n                                                            [checked]=\"checked\" [disabled]=\"disabled\" hidden>\r\n                                                        {{taken ? \"Remove\" : \"Choose\"}}\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class=\"newrow left-aligned\">\r\n                                                    <cite [ngbPopover]=\"reason.explain\" class=\"problem\"\r\n                                                        *ngFor=\"let reason of cannotTake(featSet.feat, choice, true); trackBy:trackByIndex;\">\r\n                                                        {{reason.reason}}\r\n                                                    </cite>\r\n                                                </div>\r\n                                                <app-feat [feat]=\"featSet.feat\" [choice]=\"choice\"\r\n                                                    [levelNumber]=\"levelNumber\" [featLevel]=\"featLevel\"></app-feat>\r\n                                                <!--Subfeats-->\r\n                                                <ng-container\r\n                                                    *ngFor=\"let subfeatSet of get_SubFeats(featSet.feat, choice); trackBy:trackBySubType;\">\r\n                                                    <ng-container\r\n                                                        *ngFor=\"let subFeatTaken of [get_FeatTakenByChoice(subfeatSet.subfeat, choice)]; trackBy:trackByIndex;\">\r\n                                                        <ng-container\r\n                                                            *ngFor=\"let subFeatChecked of [subFeatTaken || (!subfeatSet.available && get_FeatTakenEver(subfeatSet.subfeat))]; trackBy:trackByIndex;\">\r\n                                                            <ng-container\r\n                                                                *ngFor=\"let subFeatDisabled of [(availableFeats <= choice.feats.length && !subFeatTaken)]; trackBy:trackByIndex;\">\r\n                                                                <div class=\"newrow list-item\"\r\n                                                                    [ngClass]=\"{'selected':subFeatTaken, 'unavailable':(!subfeatSet.available)}\"\r\n                                                                    style=\"justify-content: flex-end;\">\r\n                                                                    <div class=\"newrow left-aligned\"\r\n                                                                        *ngFor=\"let subItemID of [choice.id+subfeatSet.subfeat.name+'desc']; trackBy:trackByIndex;\">\r\n                                                                        <span class=\"gridicon-fullsizebox\"\r\n                                                                            style=\"flex-grow: 1;\">\r\n                                                                            <input\r\n                                                                                id=\"{{choice.id+subfeatSet.subfeat.name}}\"\r\n                                                                                type=\"checkbox\" class=\"character-choice\"\r\n                                                                                (change)=\"on_FeatTaken(subfeatSet.subfeat, $event.target.checked, choice, false)\"\r\n                                                                                [checked]=\"subFeatChecked\"\r\n                                                                                [disabled]=\"subFeatDisabled\"\r\n                                                                                *ngIf=\"subfeatSet.available\">\r\n                                                                            <strong>{{subfeatSet.subfeat.subType}}</strong>\r\n                                                                        </span>\r\n                                                                        <button (click)=\"toggle_SubFeat(subItemID)\"\r\n                                                                            [ngClass]=\"{'fancy-button':get_ShowSubFeat()==subItemID}\">\r\n                                                                            {{get_ShowSubFeat()==subItemID ? \"Hide\" :\r\n                                                                            \"Show\"}} Description\r\n                                                                        </button>\r\n                                                                        <div\r\n                                                                            [ngbCollapse]=\"get_UncollapseSubFeat()!=subItemID\">\r\n                                                                            <div class=\"newrow\"\r\n                                                                                *ngIf=\"get_ShowSubFeat()==subItemID || get_UncollapseSubFeat()!=subItemID\">\r\n                                                                                <div class=\"button newrow no-animation\"\r\n                                                                                    *ngIf=\"subfeatSet.available\"\r\n                                                                                    [ngClass]=\"{'fancy-button':subFeatTaken, 'disabled':subFeatDisabled}\">\r\n                                                                                    <label>\r\n                                                                                        <input type=\"checkbox\"\r\n                                                                                            (change)=\"on_FeatTaken(subfeatSet.subfeat, $event.target.checked, choice, false)\"\r\n                                                                                            [checked]=\"subFeatChecked\"\r\n                                                                                            [disabled]=\"subFeatDisabled\"\r\n                                                                                            hidden>{{subFeatChecked ?\r\n                                                                                        \"Remove\" : \"Choose\"}}\r\n                                                                                    </label>\r\n                                                                                </div>\r\n                                                                                <div class=\"newrow left-aligned\">\r\n                                                                                    <cite class=\"problem\"\r\n                                                                                        [ngbPopover]=\"reason.explain\"\r\n                                                                                        *ngFor=\"let reason of cannotTake(subfeatSet.subfeat, choice, true); trackBy:trackByIndex;\">\r\n                                                                                        {{reason.reason}}\r\n                                                                                    </cite>\r\n                                                                                </div>\r\n                                                                                <app-feat [feat]=\"subfeatSet.subfeat\"\r\n                                                                                    [choice]=\"choice\"\r\n                                                                                    [levelNumber]=\"levelNumber\"\r\n                                                                                    [featLevel]=\"featLevel\">\r\n                                                                                </app-feat>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </ng-template>\r\n                                        <div class=\"list-item gridicon-fullsizebox\"\r\n                                            [ngClass]=\"{'unavailable':(!featSet.available), 'selected':(taken || subFeatTakenByThis(undefined, featSet.feat, choice))}\">\r\n                                            <input *ngIf=\"!featSet.feat.subTypes\" class=\"character-choice\"\r\n                                                id=\"{{featSet.feat.name}}\" type=\"checkbox\"\r\n                                                (change)=\"on_FeatTaken(featSet.feat, $event.target.checked, choice, false)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled || !featSet.available\">\r\n                                            <button class=\"character-choice\" (click)=\"FeatChoiceDetailPopover.toggle()\"\r\n                                                [ngClass]=\"{'fancy-button':checked, 'inactive-button':(!checked && !featSet.available)}\"\r\n                                                *ngIf=\"featSet.feat.subTypes\">+</button>\r\n                                            <div class=\"gridicon-fullsizebox\" #FeatChoiceDetailPopover=\"ngbPopover\"\r\n                                                [ngbPopover]=\"FeatChoiceDetailTemplate\" triggers=\"click\">\r\n                                                <app-gridIcon [title]=\"featSet.feat.name\"\r\n                                                    [detail]=\"featSet.feat.traits.includes('Rare') ? 'Rare' : (featSet.feat.traits.includes('Uncommon') ? 'Uncommon' : '')\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span\r\n                                                        [ngbTooltip]=\"(!FeatChoiceDetailPopover.isOpen()) ? featSet.feat.shortdesc : ''\"\r\n                                                        triggers=\"hover\" openDelay=100>\r\n                                                        {{[\"General\", \"Skill\"].includes(choice.type) &&\r\n                                                        featSet.feat.skillreq.length == 1 ? \"(\" +\r\n                                                        featSet.feat.skillreq[0].skill + \") \" :\r\n                                                        \"\"}}{{featSet.feat.name}}&nbsp;\r\n                                                    </span>\r\n                                                    <cite *ngIf=\"featSet.feat.levelreq\">Level\r\n                                                        {{featSet.feat.levelreq}}</cite>\r\n                                                    <cite class=\"trait\" *ngIf=\"featSet.feat.traits.includes('Rare')\"\r\n                                                        [ngbPopover]=\"get_Traits('Rare')[0]?.desc\"\r\n                                                        openDelay=100>Rare</cite>\r\n                                                    <cite class=\"trait\" *ngIf=\"featSet.feat.traits.includes('Uncommon')\"\r\n                                                        [ngbPopover]=\"get_Traits('Uncommon')[0]?.desc\"\r\n                                                        openDelay=100>Uncommon</cite>\r\n                                                    <cite class=\"trait\"\r\n                                                        *ngIf=\"featSet.feat.traits.includes('Dedication')\"\r\n                                                        [ngbPopover]=\"get_Traits('Dedication')[0]?.desc\"\r\n                                                        openDelay=100>Dedication</cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n<ng-container *ngIf=\"set_UncollapseSubFeat(this.get_ShowSubFeat())\"></ng-container>","import { ItemActivity } from './ItemActivity';\r\nimport { Item } from './Item';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { Hint } from './Hint';\r\n\r\nexport class Rune extends Item {\r\n    public _className;\r\n    public activities: ItemActivity[] = [];\r\n    public desc: string = \"\";\r\n    //For weapon runes, the hints are shown directly on the weapon.\r\n    public hints: Hint[] = [];\r\n    //One rune trains a lore skill while equipped.\r\n    public loreChoices: LoreChoice[] = [];\r\n    public potency: number = 0;\r\n    public traits: string[] = [];\r\n    public usage: string = \"\";\r\n    readonly allowEquippable = false;\r\n    readonly equippable = false;\r\n}\r\n","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { WornItem } from './WornItem';\r\nimport { Equipment } from './Equipment';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { Specialization } from './Specialization';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Oil } from './Oil';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { ProficiencyChange } from './ProficiencyChange';\r\nimport { Effect } from './Effect';\r\nimport { Creature } from './Creature';\r\nimport { Skill } from './Skill';\r\n\r\nexport class Weapon extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Weapons should be type \"weapons\" to be found in the database\r\n    public type = \"weapons\";\r\n    //Weapons are usually moddable like a weapon. Weapons that cannot be modded should be set to \"-\"\r\n    moddable = \"weapon\" as \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\";\r\n    //What type of ammo is used? (Bolts, arrows...)\r\n    public ammunition: string = \"\";\r\n    //What happens on a critical hit with this weapon?\r\n    public criticalHint: string = \"\"\r\n    //Number of dice for Damage: usually 1 for an unmodified weapon. Use 0 to notate exactly <dicesize> damage (e.g. 1 damage = 0d1).\r\n    public dicenum: number = 1;\r\n    //Size of the damage dice: usually 4-12\r\n    public dicesize: number = 6;\r\n    //What is the damage type? Usually S, B or P, but may include combinations\"\r\n    public dmgType: string = \"\";\r\n    //Some weapons add additional damage like +1d4F. Use get_ExtraDamage() to read.\r\n    private extraDamage: string = \"\"\r\n    //The weapon group, needed for critical specialization effects\r\n    public group: string = \"\";\r\n    //How many hands are needed to wield this weapon?\r\n    public hands: string = \"\";\r\n    //Melee range in ft: 5 or 10 for weapons with Reach trait\r\n    public melee: number = 0;\r\n    //Store any poisons applied to this item. There should be only one poison at a time.\r\n    public poisonsApplied: AlchemicalPoison[] = [];\r\n    //What proficiency is used? \"Simple Weapons\", \"Unarmed Attacks\", etc.? Use get_Proficiency() to get the proficiency for numbers and effects.\r\n    public prof: \"Unarmed Attacks\" | \"Simple Weapons\" | \"Martial Weapons\" | \"Advanced Weapons\" = \"Simple Weapons\";\r\n    //Ranged range in ft - also add for thrown weapons\r\n    //Weapons can have a melee and a ranged value, e.g. Daggers that can thrown\r\n    public ranged: number = 0;\r\n    //How many actions to reload this ranged weapon?\r\n    public reload: string = \"\";\r\n    //What kind of weapon is this based on? Needed for weapon proficiencies for specific magical items.\r\n    public weaponBase: string = \"\";\r\n    //Giant Instinct Barbarians can wield larger weapons.\r\n    public large: boolean = false;\r\n    //Weapons with the Two-Hand trait can be wielded with two hands to increase their damage.\r\n    public twohanded: boolean = false;\r\n    //A Champion with the Divine Ally: Blade Ally Feat can designate one weapon or handwraps as his blade ally.\r\n    public bladeAlly: boolean = false;\r\n    //A Dwarf with the Battleforger feat can sharpen a weapon to grant the effect of a +1 potency rune.\r\n    public battleforged: boolean = false;\r\n    //Dexterity-based melee attacks force you to use dexterity for your attack modifier.\r\n    public dexterityBased: boolean = false;\r\n    //If useHighestAttackProficiency is true, the proficiency level will be copied from your highest unarmed or weapon proficiency.\r\n    public useHighestAttackProficiency: boolean = false;\r\n    get_RuneSource(creature: Creature, range: string) {\r\n        //Under certain circumstances, other items' runes are applied when calculating attack bonus or damage.\r\n        //[0] is the item whose fundamental runes will count, [1] is the item whose property runes will count, and [2] is the item that causes this change.\r\n        let runeSource: (Weapon | WornItem)[] = [this, this];\r\n        //For unarmed attacks, return Handwraps of Mighty Blows if invested;\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            let handwraps = creature.inventories[0].wornitems.filter(item => item.isHandwrapsOfMightyBlows && item.invested)\r\n            if (handwraps.length) {\r\n                runeSource = [handwraps[0], handwraps[0], handwraps[0]];\r\n            }\r\n        }\r\n        //Specific items (not moddable) don't profit from doubling rings.\r\n        if (!this.moddable || this.moddable == \"-\") {\r\n            return runeSource;\r\n        }\r\n        if (range == \"melee\" && this.moddable == \"weapon\") {\r\n            let doublingRings = creature.inventories[0].wornitems.filter(item => item.isDoublingRings && item.data[1].value == this.id && item.invested);\r\n            if (doublingRings.length) {\r\n                if (doublingRings[0].data[0].value) {\r\n                    let goldItem = creature.inventories[0].weapons.filter(weapon => weapon.id == doublingRings[0].data[0].value);\r\n                    if (goldItem.length) {\r\n                        if (doublingRings[0].isDoublingRings == \"Doubling Rings (Greater)\" && doublingRings[0].data[2]) {\r\n                            runeSource = [goldItem[0], goldItem[0], doublingRings[0]];\r\n                        } else {\r\n                            runeSource = [goldItem[0], this, doublingRings[0]];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return runeSource;\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //characterService is not needed for armors, but for other types of item.\r\n        //Test for certain feats that give traits to unarmed attacks.\r\n        let traits: string[] = JSON.parse(JSON.stringify(this.traits));\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            if (creature.type == \"Character\") {\r\n                if (!this.traits.includes(\"Forceful\") && (creature as Character).get_FeatsTaken(0, creature.level, \"Diamond Fists\").length) {\r\n                    traits = traits.concat(\"Forceful\");\r\n                }\r\n                if (!this.traits.includes(\"Deadly d12\") && (creature as Character).get_FeatsTaken(0, creature.level, \"Golden Body\").length) {\r\n                    traits = traits.concat(\"Deadly d12\");\r\n                }\r\n                if ((this.name == \"Razortooth Goblin Jaws\") && (creature as Character).get_FeatsTaken(0, creature.level, \"Fang Sharpener (Razortooth Goblin)\").length) {\r\n                    traits = traits.filter(trait => trait != \"Finesse\");\r\n                }\r\n                if (this.name == \"Lizardfolk Claw\") {\r\n                    //The Razor Claws feat adds Versatile P to the Lizardfolk Claw. This means we also have to change the dmgType (in a somewhat brute force way).\r\n                    if ((creature as Character).get_FeatsTaken(0, creature.level, \"Razor Claws\").length) {\r\n                        traits = traits.concat(\"Versatile P\");\r\n                        if (this.dmgType != \"S/P\") {\r\n                            this.dmgType = \"S/P\"\r\n                        }\r\n                    } else {\r\n                        if (this.dmgType != \"S\") {\r\n                            this.dmgType = \"S\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.melee) {\r\n            //Find and apply effects that give this weapon reach.\r\n            let effectsService = characterService.effectsService;\r\n            let reach = 5;\r\n            let reachTrait = traits.find(trait => trait.includes(\"Reach\"));\r\n            if (reachTrait) {\r\n                reach = reachTrait.includes(\" \") ? parseInt(reachTrait.split(\" \")[1]) : 10;\r\n            }\r\n            let newReach = reach;\r\n            let list = [\r\n                \"Reach\",\r\n                this.name + \" Reach\",\r\n                this.weaponBase + \" Reach\",\r\n                //\"Unarmed Attacks Reach\", \"Simple Weapon Reach\"\r\n                this.prof + \" Reach\"\r\n            ]\r\n            effectsService.get_AbsolutesOnThese(creature, list)\r\n                .forEach(effect => {\r\n                    newReach = parseInt(effect.setValue);\r\n                })\r\n            effectsService.get_RelativesOnThese(creature, list)\r\n                .forEach(effect => {\r\n                    newReach += parseInt(effect.value);\r\n                })\r\n            if (newReach != reach) {\r\n                if (newReach == 5 || newReach == 0) {\r\n                    traits = traits.filter(trait => !trait.includes(\"Reach\"));\r\n                } else {\r\n                    let reachString: string = traits.find(trait => trait.includes(\"Reach\"));\r\n                    if (reachString) {\r\n                        traits[traits.indexOf(reachString)] = \"Reach \" + newReach + \" feet\";\r\n                    } else {\r\n                        traits.push(\"Reach \" + newReach + \" feet\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return traits;\r\n    }\r\n    get_Proficiency(creature: Character | AnimalCompanion, characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        let proficiency = this.prof;\r\n        //Some feats allow you to apply another proficiency to certain weapons, e.g.:\r\n        // \"For the purpose of determining your proficiency, martial goblin weapons are simple weapons and advanced goblin weapons are martial weapons.\"\r\n        let proficiencyChanges: ProficiencyChange[] = [];\r\n        if (creature.type == \"Character\") {\r\n            let character = creature as Character;\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.changeProficiency.length && feat.have(character, characterService, charLevel, false))\r\n                .forEach(feat => {\r\n                    proficiencyChanges.push(...feat.changeProficiency.filter(change =>\r\n                        (change.name ? this.name.toLowerCase() == change.name.toLowerCase() : true) &&\r\n                        (change.trait ? this.traits.filter(trait => change.trait.includes(trait)).length : true) &&\r\n                        (change.proficiency ? (this.prof && change.proficiency == this.prof) : true) &&\r\n                        (change.group ? (this.group && change.group == this.group) : true)\r\n                    ))\r\n                });\r\n            let proficiencies: string[] = proficiencyChanges.map(change => change.result);\r\n            //Set the resulting proficiency to the best result by setting it in order of worst to best.\r\n            if (proficiencies.includes(\"Advanced Weapons\")) {\r\n                proficiency = \"Advanced Weapons\";\r\n            }\r\n            if (proficiencies.includes(\"Martial Weapons\")) {\r\n                proficiency = \"Martial Weapons\";\r\n            }\r\n            if (proficiencies.includes(\"Simple Weapons\")) {\r\n                proficiency = \"Simple Weapons\";\r\n            }\r\n            if (proficiencies.includes(\"Unarmed Attacks\")) {\r\n                proficiency = \"Unarmed Attacks\";\r\n            }\r\n        }\r\n        return proficiency;\r\n    }\r\n    profLevel(creature: Character | AnimalCompanion, characterService: CharacterService, runeSource: Weapon | WornItem, charLevel: number = characterService.get_Character().level) {\r\n        if (characterService.still_loading()) { return 0; }\r\n        let skillLevel: number = 0;\r\n        let prof = this.get_Proficiency(creature, characterService, charLevel);\r\n        //There are a lot of ways to be trained with a weapon.\r\n        //To determine the skill level, we have to find skills for the item's proficiency, its name, its weapon base and any of its traits.\r\n        let levels: number[] = [];\r\n        //If useHighestAttackProficiency is true, the proficiency level will be copied from your highest unarmed or weapon proficiency.\r\n        if (this.useHighestAttackProficiency) {\r\n            let highestProficiencySkill = new Skill(\"\", \"Highest Attack Proficiency\", \"Specific Weapon Proficiency\");\r\n            levels.push((characterService.get_Skills(creature, this.name)[0] || highestProficiencySkill).level(creature, characterService, charLevel) || 0);\r\n        }\r\n        //Weapon name, e.g. Demon Sword.\r\n        let nameSkill: Skill = new Skill(\"\", this.name, \"Specific Weapon Proficiency\");\r\n        levels.push((characterService.get_Skills(creature, this.name)[0] || nameSkill).level(creature, characterService, charLevel) || 0);\r\n        //Weapon base, e.g. Longsword.\r\n        let baseSkill: Skill = new Skill(\"\", this.weaponBase, \"Specific Weapon Proficiency\");\r\n        levels.push(this.weaponBase ? (characterService.get_Skills(creature, this.weaponBase)[0] || baseSkill).level(creature, characterService, charLevel) : 0);\r\n        //Proficiency and Group, e.g. Martial Sword.\r\n        //There are proficiencies for \"Simple Sword\" or \"Advanced Bow\" that we need to consider, so we build that phrase here.\r\n        let profAndGroup = prof.split(\" \")[0] + \" \" + this.group;\r\n        let profAndGroupSkill: Skill = new Skill(\"\", profAndGroup, \"Specific Weapon Proficiency\");\r\n        levels.push((characterService.get_Skills(creature, profAndGroup)[0] || profAndGroupSkill).level(creature, characterService, charLevel) || 0);\r\n        //Proficiency, e.g. Martial Weapons.\r\n        levels.push(characterService.get_Skills(creature, prof)[0]?.level(creature, characterService, charLevel) || 0);\r\n        //Any traits, e.g. Monk.\r\n        levels.push(...this.traits.map(trait => (characterService.get_Skills(creature, trait)[0] || new Skill(\"\", trait, \"Specific Weapon Proficiency\")).level(creature, characterService, charLevel) || 0))\r\n        //Get the skill level by applying the result with the most increases, but no higher than 8.\r\n        skillLevel = Math.min(Math.max(...levels.filter(level => level != undefined)), 8);\r\n        //If you have an Ancestral Echoing rune on this weapon, you get to raise the item's proficiency by one level, up to the highest proficiency you have.\r\n        let bestSkillLevel: number = skillLevel;\r\n        if (runeSource.propertyRunes.some(rune => rune.name == \"Ancestral Echoing\")) {\r\n            //First, we get all the weapon proficiencies...\r\n            let skills: number[] = characterService.get_Skills(creature, \"\", \"Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel));\r\n            skills.push(...characterService.get_Skills(creature, \"\", \"Specific Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel)));\r\n            //Then we set this skill level to either this level +2 or the highest of the found proficiencies - whichever is lower.\r\n            bestSkillLevel = Math.min(skillLevel + 2, Math.max(...skills));\r\n        }\r\n        //If you have an oil applied that emulates an Ancestral Echoing rune, apply the same rule (there is no such oil, but things can change)\r\n        if (this.oilsApplied.some(oil => oil.runeEffect && oil.runeEffect.name == \"Ancestral Echoing\")) {\r\n            //First, we get all the weapon proficiencies...\r\n            let skills: number[] = characterService.get_Skills(creature, \"\", \"Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel));\r\n            skills.push(...characterService.get_Skills(creature, \"\", \"Specific Weapon Proficiency\").map(skill => skill.level(creature, characterService, charLevel)));\r\n            //Then we set this skill level to either this level +2 or the highest of the found proficiencies - whichever is lower.\r\n            bestSkillLevel = Math.min(skillLevel + 2, Math.max(...skills));\r\n        }\r\n        return bestSkillLevel;\r\n    }\r\n    attack(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, range: string) {\r\n        //Calculates the attack bonus for a melee or ranged attack with this weapon.\r\n        let explain: string = \"\";\r\n        let charLevel = characterService.get_Character().level;\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        let dex = characterService.get_Abilities(\"Dexterity\")[0].mod(creature, characterService, effectsService).result;\r\n        let runeSource: (Weapon | WornItem)[] = this.get_RuneSource(creature, range);\r\n        let skillLevel = this.profLevel(creature, characterService, runeSource[1]);\r\n        if (skillLevel) {\r\n            explain += \"\\nProficiency: \" + skillLevel;\r\n        }\r\n        //Add character level if the character is trained or better with either the weapon category or the weapon itself\r\n        let charLevelBonus = ((skillLevel > 0) ? charLevel : 0);\r\n        if (charLevelBonus) {\r\n            explain += \"\\nCharacter Level: \" + charLevelBonus;\r\n        }\r\n        let penalties: { value: number, setValue: string, source: string, penalty: boolean, type: string }[] = [];\r\n        let bonuses: { value: number, setValue: string, source: string, penalty: boolean, type: string }[] = [];\r\n        let absolutes: { value: number, setValue: string, source: string, penalty: boolean, type: string }[] = [];\r\n        //Calculate dexterity and strength penalties for the decision on which to use. They are not immediately applied.\r\n        //The Clumsy condition affects all Dexterity attacks.\r\n        let dexEffects = effectsService.get_RelativesOnThis(creature, \"Dexterity-based Checks and DCs\");\r\n        let dexPenalty: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let dexPenaltySum: number = 0;\r\n        dexEffects.forEach(effect => {\r\n            dexPenalty.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true });\r\n            dexPenaltySum += parseInt(effect.value);\r\n        });\r\n        //The Enfeebled condition affects all Strength attacks\r\n        let strEffects = effectsService.get_RelativesOnThis(creature, \"Strength-based Checks and DCs\");\r\n        let strPenalty: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let strPenaltySum: number = 0;\r\n        strEffects.forEach(effect => {\r\n            strPenalty.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true });\r\n            strPenaltySum += parseInt(effect.value);\r\n        });\r\n        let dexUsed: boolean = false;\r\n        let strUsed: boolean = false;\r\n        //Check if the weapon has any traits that affect its Ability bonus to attack, such as Finesse or Brutal, and run those calculations.\r\n        let abilityMod: number = 0;\r\n        if (range == \"ranged\") {\r\n            if (characterService.have_Trait(this, \"Brutal\")) {\r\n                abilityMod = str;\r\n                explain += \"\\nStrength Modifier (Brutal): \" + abilityMod;\r\n                strUsed = true;\r\n\r\n            } else {\r\n                abilityMod = dex;\r\n                explain += \"\\nDexterity Modifier: \" + abilityMod;\r\n                dexUsed = true;\r\n            }\r\n        } else {\r\n            if (characterService.have_Trait(this, \"Finesse\") && dex + dexPenaltySum > str + strPenaltySum) {\r\n                abilityMod = dex;\r\n                explain += \"\\nDexterity Modifier (Finesse): \" + abilityMod;\r\n                dexUsed = true;\r\n            } else if (this.dexterityBased) {\r\n                abilityMod = dex;\r\n                explain += \"\\nDexterity Modifier (Dexterity-based): \" + abilityMod;\r\n                dexUsed = true;\r\n            } else {\r\n                abilityMod = str;\r\n                explain += \"\\nStrength Modifier: \" + abilityMod;\r\n                strUsed = true;\r\n            }\r\n        }\r\n        //Add up all modifiers before effects and item bonus\r\n        let attackResult = charLevelBonus + skillLevel + abilityMod;\r\n        let abilityName: string = \"\";\r\n        if (strUsed) {\r\n            abilityName = \"Strength\";\r\n        }\r\n        if (dexUsed) {\r\n            abilityName = \"Dexterity\";\r\n        }\r\n        let prof = this.get_Proficiency(creature, characterService, charLevel);\r\n        //Create names list for effects\r\n        let namesList = [\r\n            this.name,\r\n            \"Attack Rolls\",\r\n            \"All Checks and DCs\",\r\n            //\"Sword Attack Rolls\", \"Club Attack Rolls\"\r\n            this.group + \" Attack Rolls\",\r\n            //\"Unarmed Attacks Attack Rolls\", \"Simple Weapons Attack Rolls\"\r\n            prof + \" Attack Rolls\",\r\n            //\"Unarmed Attack Rolls\", \"Simple Attack Rolls\"\r\n            prof.split(\" \")[0] + \" Attack Rolls\",\r\n            //\"Weapons Attack Rolls\", also \"Attacks Attack Rolls\", but that's unlikely to be needed\r\n            prof.split(\" \")[1] + \" Attack Rolls\",\r\n            //\"Simple Sword Attack Rolls\", \"Martial Club Attack Rolls\" etc.\r\n            prof.split(\" \")[0] + this.group + \" Attack Rolls\",\r\n            //\"Simple Longsword Attack Rolls\", \"Unarmed Fist Attack Rolls\" etc.\r\n            prof.split(\" \")[0] + this.weaponBase + \" Attack Rolls\",\r\n            //\"Melee Attack Rolls\", \"Ranged Attack Rolls\"\r\n            range + \" Attack Rolls\",\r\n            //\"Strength-based Checks and DCs\"\r\n            abilityName + \"-based Checks and DCs\"\r\n        ];\r\n        let traits = this.get_Traits(characterService, creature);\r\n        traits.forEach(trait => {\r\n            if (trait.includes(\" ft\")) {\r\n                namesList.push(trait.split(\" \")[0] + \" Attack Rolls\")\r\n            } else {\r\n                namesList.push(trait + \" Attack Rolls\");\r\n            }\r\n        })\r\n        if (!traits.includes(\"Agile\")) {\r\n            namesList.push(\"Non-Agile Attack Rolls\");\r\n        }\r\n        //Add absolute effects\r\n        effectsService.get_AbsolutesOnThese(creature, namesList)\r\n            .forEach(effect => {\r\n                if (effect.show) {\r\n                    absolutes.push({ value: 0, setValue: effect.setValue, source: effect.source, penalty: false, type: effect.type });\r\n                }\r\n                attackResult = parseInt(effect.setValue)\r\n                explain = effect.source + \": \" + effect.setValue;\r\n            });\r\n        let effectsSum: number = 0;\r\n        //Add relative effects, including potency bonus and shoddy penalty\r\n        //Generate potency bonus\r\n        let potencyRune: number = runeSource[0].get_PotencyRune();\r\n        let calculatedEffects: Effect[] = []\r\n        if (potencyRune) {\r\n            let source = \"Potency\"\r\n            //If you're getting the potency because of another item (like Doubling Rings), name it here\r\n            if (runeSource[2]) {\r\n                source = \"Potency (\" + runeSource[2].get_Name() + \")\";\r\n            }\r\n            calculatedEffects.push(new Effect(creature.type, \"item\", this.name, potencyRune.toString(), \"\", false, source, false, true, false, 0))\r\n        }\r\n        if (runeSource[0].battleforged) {\r\n            let source = \"Battleforged\"\r\n            //If you're getting the battleforged bonus because of another item (like Handwraps of Mighty Blows), name it here\r\n            if (runeSource[2]) {\r\n                source = \"Battleforged (\" + runeSource[2].get_Name() + \")\";\r\n            }\r\n            calculatedEffects.push(new Effect(creature.type, \"item\", this.name, \"+1\", \"\", false, source, false, true, false, 0))\r\n        }\r\n        //Powerful Fist ignores the nonlethal penalty on unarmed attacks.\r\n        let isPowerfulFist = false;\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            let character = characterService.get_Character();\r\n            if (character.get_FeatsTaken(0, character.level, \"Powerful Fist\").length) {\r\n                isPowerfulFist = true;\r\n            }\r\n        }\r\n        //Shoddy items have a -2 item penalty to attacks, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n        if (this.shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && this.crafted) {\r\n            explain += \"\\nShoddy (canceled by Junk Tinker): -0\";\r\n        } else if (this.shoddy) {\r\n            calculatedEffects.push(new Effect(creature.type, \"item\", this.name, \"-2\", \"\", false, \"Shoddy\", true, true, false, 0))\r\n        }\r\n        //Because of the Potency and Shoddy Effects, we need to filter the types a second time, even though get_RelativesOnThese comes pre-filtered.\r\n        effectsService.get_TypeFilteredEffects(\r\n            calculatedEffects\r\n                .concat(effectsService.get_RelativesOnThese(creature, namesList)\r\n                ), false)\r\n            .forEach(effect => {\r\n                //Powerful Fist ignores the nonlethal penalty on unarmed attacks.\r\n                if (isPowerfulFist && effect.source == \"conditional, Nonlethal\") {\r\n                    explain += \"\\nNonlethal (cancelled by Powerful Fist)\";\r\n                } else {\r\n                    if (effect.show) {\r\n                        if (parseInt(effect.value) < 0) {\r\n                            penalties.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true, type: effect.type });\r\n                        } else {\r\n                            bonuses.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: false, type: effect.type });\r\n                        }\r\n                    }\r\n                    effectsSum += parseInt(effect.value);\r\n                    explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n                }\r\n            });\r\n        //Add up all modifiers and return the attack bonus for this attack\r\n        attackResult += effectsSum;\r\n        explain = explain.trim();\r\n        return [range, attackResult, explain, penalties.concat(bonuses).concat(absolutes), penalties, bonuses, absolutes];\r\n    }\r\n    get_ExtraDamage(creature: Creature, characterService: CharacterService, range: string) {\r\n        let extraDamage: string = \"\";\r\n        if (this.extraDamage) {\r\n            extraDamage += \"\\n\" + this.extraDamage;\r\n        }\r\n        let runeSource = this.get_RuneSource(creature, range);\r\n        runeSource[1].propertyRunes\r\n            .filter((weaponRune: WeaponRune) => weaponRune.extraDamage)\r\n            .forEach((weaponRune: WeaponRune) => {\r\n                extraDamage += \"\\n\" + weaponRune.extraDamage;\r\n            });\r\n        this.oilsApplied\r\n            .filter((oil: Oil) => oil.runeEffect && oil.runeEffect.extraDamage)\r\n            .forEach((oil: Oil) => {\r\n                extraDamage += \"\\n\" + oil.runeEffect.extraDamage;\r\n            });\r\n        if (runeSource[1].bladeAlly) {\r\n            runeSource[1].bladeAllyRunes\r\n                .filter((weaponRune: WeaponRune) => weaponRune.extraDamage)\r\n                .forEach((weaponRune: WeaponRune) => {\r\n                    extraDamage += \"\\n\" + weaponRune.extraDamage;\r\n                });\r\n        }\r\n        return extraDamage;\r\n    }\r\n    damage(creature: Character | AnimalCompanion, characterService: CharacterService, effectsService: EffectsService, range: string) {\r\n        //Lists the damage dice and damage bonuses for a ranged or melee attack with this weapon.\r\n        //Returns a string in the form of \"1d6+5 B\\n+1d6 Fire\"\r\n        if (!this.dicenum && !this.dicesize && !this.extraDamage) {\r\n            return [\"0\", \"\", [], [], []];\r\n        }\r\n        let diceExplain: string = \"Base dice: \" + this.dicenum + \"d\" + this.dicesize;\r\n        let bonusExplain: string = \"\";\r\n        let str = characterService.get_Abilities(\"Strength\")[0].mod(creature, characterService, effectsService).result;\r\n        let dex = characterService.get_Abilities(\"Dexterity\")[0].mod(creature, characterService, effectsService).result;\r\n        let penalties: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let bonuses: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let absolutes: { value: number, setValue: string, source: string, penalty: boolean }[] = [];\r\n        let prof = this.get_Proficiency(creature, characterService);\r\n        let namesList: string[] = [];\r\n        //Apply any mechanism that copy runes from another item, like Handwraps of Mighty Blows or Doubling Rings.\r\n        //We set runeSource to the respective item and use it whenever runes are concerned.\r\n        let runeSource: (Weapon | WornItem)[] = this.get_RuneSource(creature, range);\r\n        //Determine the dice Number - Dice Number Multiplier first, then Dice Number (Striking included)\r\n        let dicenum = this.dicenum;\r\n        if (dicenum) {\r\n            let dicenumMultiplier = 1;\r\n            namesList = [\r\n                \"Damage Dice Number Multiplier\",\r\n                this.name + \" Dice Number Multiplier\",\r\n                //\"Longsword Dice Number Multiplier\", \"Fist Dice Number Multiplier\" etc.\r\n                this.weaponBase + \" Dice Number Multiplier\",\r\n                //\"Sword Dice Number Multiplier\", \"Club Dice Number Multiplier\"\r\n                this.group + \" Dice Number Multiplier\",\r\n                //\"Unarmed Attacks Dice Number Multiplier\", \"Simple Weapons Dice Number Multiplier\" etc.\r\n                prof + \" Dice Number Multiplier\",\r\n                //\"Unarmed Dice Number Multiplier\", \"Simple Dice Number Multiplier\" etc.\r\n                prof.split(\" \")[0] + \" Dice Number Multiplier\",\r\n                //\"Weapons Dice Number Multiplier\", also \"Attacks Dice Number Multiplier\", but that's unlikely to be needed\r\n                prof.split(\" \")[1] + \" Dice Number Multiplier\",\r\n                //\"Simple Sword Dice Number Multiplier\", \"Martial Club Dice Number Multiplier\" etc.\r\n                prof.split(\" \")[0] + this.group + \" Dice Number Multiplier\",\r\n                //\"Simple Longsword Dice Number Multiplier\", \"Unarmed Fist Dice Number Multiplier\" etc.\r\n                prof.split(\" \")[0] + this.weaponBase + \" Dice Number Multiplier\"\r\n            ]\r\n            effectsService.get_AbsolutesOnThese(creature, namesList).forEach(effect => {\r\n                dicenumMultiplier = parseInt(effect.setValue);\r\n                diceExplain += \"\\n\" + effect.source + \": Dice number multiplier \" + dicenumMultiplier;\r\n            })\r\n            effectsService.get_RelativesOnThese(creature, namesList).forEach(effect => {\r\n                dicenumMultiplier += parseInt(effect.value);\r\n                diceExplain += \"\\n\" + effect.source + \": Dice number multiplier \" + (parseInt(effect.value) >= 0 ? \"+\" : \"\") + parseInt(effect.value);\r\n            })\r\n            dicenum *= dicenumMultiplier;\r\n            let calculatedEffects: Effect[] = [];\r\n            namesList = [\r\n                \"Damage Dice Number\",\r\n                this.name + \" Dice Number\",\r\n                //\"Longsword Dice Number\", \"Fist Dice Number\" etc.\r\n                this.weaponBase + \" Dice Number\",\r\n                //\"Sword Dice Number\", \"Club Dice Number\"\r\n                this.group + \" Dice Number\",\r\n                //\"Unarmed Attacks Dice Number\", \"Simple Weapons Dice Number\" etc.\r\n                prof + \" Dice Number\",\r\n                //\"Unarmed Dice Number\", \"Simple Dice Number\" etc.\r\n                prof.split(\" \")[0] + \" Dice Number\",\r\n                //\"Weapons Dice Number\", also \"Attacks Dice Number\", but that's unlikely to be needed\r\n                prof.split(\" \")[1] + \" Dice Number\",\r\n                //\"Simple Sword Dice Number\", \"Martial Club Dice Number\" etc.\r\n                prof.split(\" \")[0] + this.group + \" Dice Number\",\r\n                //\"Simple Longsword Dice Number\", \"Unarmed Fist Dice Number\" etc.\r\n                prof.split(\" \")[0] + this.weaponBase + \" Dice Number\"\r\n            ]\r\n            //Add the striking rune or oil of potency effect of the runeSource.\r\n            //Only apply and explain Striking if it's actually better than your multiplied dice size.\r\n            if (runeSource[0].get_StrikingRune() + 1 > dicenum) {\r\n                let source = runeSource[0].get_Striking(runeSource[0].get_StrikingRune());\r\n                //If you're getting the striking effect because of another item (like Doubling Rings), name it here\r\n                if (runeSource[2]) {\r\n                    source += \" (\" + runeSource[2].get_Name() + \")\";\r\n                }\r\n                calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Number\", \"\", (1 + runeSource[0].get_StrikingRune()).toString(), false, source, false, true, false, 0))\r\n            }\r\n            effectsService.get_TypeFilteredEffects(\r\n                calculatedEffects\r\n                    .concat(effectsService.get_AbsolutesOnThese(creature, namesList)\r\n                    ), true)\r\n                .forEach(effect => {\r\n                    dicenum = parseInt(effect.setValue);\r\n                    diceExplain += \"\\n\" + effect.source + \": Dice number \" + dicenum;\r\n                })\r\n            calculatedEffects = [];\r\n            //Diamond Fists adds the forceful trait to your unarmed attacks, but if one already has the trait, it gains one damage die.\r\n            if (this.prof == \"Unarmed Attacks\") {\r\n                let character = characterService.get_Character();\r\n                if (character.get_FeatsTaken(0, character.level, \"Diamond Fists\").length && this.traits.includes(\"Forceful\")) {\r\n                    calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Number\", \"+1\", \"\", false, \"Diamond Fists\", false, true, false, 0))\r\n                }\r\n            }\r\n            effectsService.get_TypeFilteredEffects(\r\n                calculatedEffects\r\n                    .concat(effectsService.get_RelativesOnThese(creature, namesList)\r\n                    ), false)\r\n                .forEach(effect => {\r\n                    dicenum += parseInt(effect.value);\r\n                    diceExplain += \"\\n\" + effect.source + \": Dice number \" + (parseInt(effect.value) >= 0 ? \"+\" : \"\") + parseInt(effect.value);\r\n                })\r\n        }\r\n        //Determine the dice size.\r\n        let dicesize = this.dicesize;\r\n        if (dicesize) {\r\n            let calculatedEffects: Effect[] = [];\r\n            //Champions get increased dice size via Deific Weapon for unarmed attacks with d4 damage or simple weapons as long as they are their deity's favored weapon.\r\n            if (((dicesize == 4 && this.prof == \"Unarmed Attacks\") || this.prof == \"Simple Weapons\") &&\r\n                characterService.get_Features(\"Deific Weapon\")[0]?.have(creature, characterService)) {\r\n                let favoredWeapons: string[] = [];\r\n                if (creature.type == \"Character\" && (creature as Character).class.deity) {\r\n                    favoredWeapons = characterService.get_Deities((creature as Character).class.deity)[0]?.favoredWeapon || [];\r\n                }\r\n                if (favoredWeapons.includes(this.name) || favoredWeapons.includes(this.weaponBase)) {\r\n                    let newDicesize = Math.max(Math.min(dicesize + 2, 12), 6);\r\n                    if (newDicesize > dicesize) {\r\n                        calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Size\", \"\", newDicesize.toString(), false, \"Deific Weapon\", false, true, false, 0))\r\n                    }\r\n                }\r\n            }\r\n            //Weapons with the Two-Hand trait get to change their dice size if they are wielded with two hands.\r\n            if (this.twohanded) {\r\n                this.get_Traits(characterService, creature).filter(trait => trait.includes(\"Two-Hand\")).forEach(trait => {\r\n                    let twoHandedDiceSize = parseInt(trait.substr(10))\r\n                    if (twoHandedDiceSize) {\r\n                        if (twoHandedDiceSize > dicesize) {\r\n                            calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Dice Size\", \"\", twoHandedDiceSize.toString(), false, \"Two-Hand\", false, true, false, 0))\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            //Apply dice size effects.\r\n            namesList = [\r\n                \"Dice Size\",\r\n                this.name + \" Dice Size\",\r\n                //\"Longsword Dice Size\", \"Fist Dice Size\" etc.\r\n                this.weaponBase + \" Dice Size\",\r\n                //\"Sword Dice Size\", \"Club Dice Size\"\r\n                this.group + \" Dice Size\",\r\n                //\"Unarmed Attacks Dice Size\", \"Simple Weapons Dice Size\" etc.\r\n                prof + \" Dice Size\",\r\n                //\"Unarmed Dice Size\", \"Simple Dice Size\" etc.\r\n                prof.split(\" \")[0] + \" Dice Size\",\r\n                //\"Weapons Dice Size\", also \"Attacks Dice Size\", but that's unlikely to be needed\r\n                prof.split(\" \")[1] + \" Dice Size\",\r\n                //\"Simple Sword Dice Size\", \"Martial Club Dice Size\" etc.\r\n                prof.split(\" \")[0] + this.group + \" Dice Size\",\r\n                //\"Simple Longsword Dice Size\", \"Unarmed Fist Dice Size\" etc.\r\n                prof.split(\" \")[0] + this.weaponBase + \" Dice Size\",\r\n            ]\r\n            effectsService.get_TypeFilteredEffects(\r\n                calculatedEffects\r\n                    .concat(effectsService.get_AbsolutesOnThese(creature, namesList)\r\n                    ), true)\r\n                .forEach(effect => {\r\n                    dicesize = parseInt(effect.setValue);\r\n                    diceExplain += \"\\n\" + effect.source + \": Dice size d\" + dicesize;\r\n                })\r\n            effectsService.get_RelativesOnThese(creature, namesList).forEach(effect => {\r\n                dicesize += parseInt(effect.value);\r\n                //Don't raise dice size over 12.\r\n                dicesize = Math.min(12, dicesize);\r\n                diceExplain += \"\\n\" + effect.source + \": Dice size d\" + dicesize;\r\n            })\r\n        }\r\n        //Get the basic \"#d#\" string from the weapon's dice values, unless dicenum is 0 or null (for instance some weapons deal exactly 1 base damage, which is represented by 0d1)\r\n        var baseDice = (dicenum ? dicenum + \"d\" : \"\") + dicesize;\r\n        //Get the +X value\r\n        let dmgBonus: number = 0;\r\n        //Decide whether this weapon uses strength or dexterity (modifier, bonuses and penalties).\r\n        //First, calculate dexterity and strength penalties to see which would be more beneficial. They are not immediately applied.\r\n        let calculatedEffects: Effect[] = [];\r\n        let strUsed: boolean = false;\r\n        let dexUsed: boolean = false;\r\n        let abilityReason: string = \"\";\r\n        //Check if the Weapon has any traits that affect its damage Bonus, such as Thrown or Propulsive, and run those calculations.\r\n        let abilityMod: number = 0;\r\n        if (range == \"ranged\") {\r\n            if (characterService.have_Trait(this, \"Propulsive\")) {\r\n                if (str > 0) {\r\n                    abilityMod = Math.floor(str / 2);\r\n                    abilityReason = \"Propulsive\";\r\n                    strUsed = true;\r\n                } else if (str < 0) {\r\n                    abilityMod = str;\r\n                    abilityReason = \"Propulsive\";\r\n                    strUsed = true;\r\n                }\r\n            } else if (characterService.have_Trait(this, \"Thrown\")) {\r\n                abilityMod = str;\r\n                abilityReason += \"Thrown\";\r\n                strUsed = true;\r\n            }\r\n        } else {\r\n            //If the weapon is Finesse and you have the Thief Racket, you apply your Dexterity modifier to damage if it is higher.\r\n            if (characterService.have_Trait(this, \"Finesse\") &&\r\n                creature.type == \"Character\" &&\r\n                (creature as Character).get_FeatsTaken(1, creature.level, \"Thief Racket\").length) {\r\n                //Check if dex or str would give you more damage by comparing your modifiers and any penalties and bonuses.\r\n                //The Enfeebled condition affects all Strength damage\r\n                let strEffects = effectsService.get_RelativesOnThis(creature, \"Strength-based Checks and DCs\");\r\n                let strPenaltySum: number = 0;\r\n                strEffects.forEach(effect => {\r\n                    strPenaltySum += parseInt(effect.value);\r\n                });\r\n                //The Clumsy condition affects all Dexterity damage\r\n                let dexEffects = effectsService.get_RelativesOnThis(creature, \"Dexterity-based Checks and DCs\");\r\n                let dexPenaltySum: number = 0;\r\n                dexEffects.forEach(effect => {\r\n                    dexPenaltySum += parseInt(effect.value);\r\n                });\r\n                if ((dex + dexPenaltySum) > (str + strPenaltySum)) {\r\n                    abilityMod = dex;\r\n                    abilityReason += \"Thief\";\r\n                    dexUsed = true;\r\n                } else {\r\n                    abilityMod = str;\r\n                    strUsed = true;\r\n                }\r\n            } else {\r\n                abilityMod = str;\r\n                strUsed = true;\r\n            }\r\n        }\r\n        if (abilityMod) {\r\n            let abilitySource: string = \"\"\r\n            if (strUsed) {\r\n                abilitySource = \"Strength Modifier\";\r\n            }\r\n            if (dexUsed) {\r\n                abilitySource = \"Dexterity Modifier\";\r\n            }\r\n            if (abilityReason) {\r\n                abilitySource += \"(\" + abilityReason + \")\"\r\n            }\r\n            calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Damage\", abilityMod.toString(), \"\", false, abilitySource, false, true, false, 0))\r\n        }\r\n        //Mature and Specialized Companions add extra Damage to their attacks.\r\n        if (creature.type == \"Companion\") {\r\n            creature.class.levels.filter(level => level.number <= creature.level).forEach(level => {\r\n                if (level.extraDamage) {\r\n                    let companionSource: string = \"\";\r\n                    let companionMod: number = level.extraDamage;\r\n                    companionSource = level.name + \" Animal Companion\";\r\n                    if (creature.class.specializations.length) {\r\n                        companionMod *= 2;\r\n                        companionSource = \"Specialized Animal Companion\";\r\n                    }\r\n                    calculatedEffects.push(new Effect(creature.type, \"untyped\", this.name + \" Damage\", companionMod.toString(), \"\", false, companionSource, false, true, false, 0))\r\n                }\r\n            })\r\n        }\r\n        let profLevel = this.profLevel(creature, characterService, runeSource[1]);\r\n        let traits = this.get_Traits(characterService, creature);\r\n        let list = [\r\n            \"Damage Rolls\",\r\n            this.name + \" Damage\",\r\n            //\"Longsword Damage\", \"Fist Melee Damage\"\r\n            this.weaponBase + \" Damage\",\r\n            //\"Melee Damage\", \"Ranged Damage\"\r\n            range + \" Damage\"\r\n        ];\r\n        traits.forEach(trait => {\r\n            if (trait.includes(\" ft\")) {\r\n                list.push(trait.split(\" \")[0] + \" Damage\");\r\n            } else {\r\n                list.push(trait + \" Damage\");\r\n            }\r\n        })\r\n        if (traits.includes(\"Agile\")) {\r\n            //\"Agile Large Melee Weapon Damage\"\r\n            if (this.large) {\r\n                list.push(\"Agile Large \" + range + \" Weapon Damage\");\r\n            }\r\n            //\"Agile Melee Damage\"\r\n            list.push(\"Agile \" + range + \" Damage\");\r\n            if ((range == \"ranged\") && this.traits.some(trait => trait.includes(\"Thrown\"))) {\r\n                //\"Agile Thrown Large Weapon Damage\"\r\n                if (this.large) {\r\n                    list.push(\"Agile Thrown Large Weapon Damage\")\r\n                }\r\n                //\"Agile Thrown Weapon Damage\"\r\n                list.push(\"Agile Thrown Weapon Damage\");\r\n            }\r\n        } else {\r\n            //\"Non-Agile Large Melee Weapon Damage\"\r\n            if (this.large) {\r\n                list.push(\"Non-Agile Large \" + range + \" Weapon Damage\");\r\n            }\r\n            //\"Non-Agile Melee Damage\"\r\n            list.push(\"Non-Agile \" + range + \" Damage\");\r\n            if ((range == \"ranged\") && this.traits.some(trait => trait.includes(\"Thrown\"))) {\r\n                //\"Non-Agile Thrown Large Weapon Damage\"\r\n                if (this.large) {\r\n                    list.push(\"Non-Agile Thrown Large Weapon Damage\")\r\n                }\r\n                //\"Non-Agile Thrown Weapon Damage\"\r\n                list.push(\"Non-Agile Thrown Weapon Damage\");\r\n            }\r\n        }\r\n        effectsService.get_AbsolutesOnThese(creature, list)\r\n            .forEach(effect => {\r\n                if (effect.show) {\r\n                    absolutes.push({ value: 0, setValue: effect.setValue, source: effect.source, penalty: false })\r\n                }\r\n                dmgBonus = parseInt(effect.setValue);\r\n                bonusExplain = \"\\n\" + effect.source + \": Bonus damage \" + parseInt(effect.setValue);\r\n            })\r\n        let effectBonus = 0;\r\n        let abilityName: string = \"\";\r\n        if (strUsed) {\r\n            abilityName = \"Strength\";\r\n        }\r\n        if (dexUsed) {\r\n            abilityName = \"Dexterity\";\r\n        }\r\n        //\"Strength-based Checks and DCs\"\r\n        list.push(abilityName + \"-based Checks and DCs\");\r\n        switch (profLevel) {\r\n            case 2:\r\n                list.push(\"Trained Proficiency Attack Damage\")\r\n                list.push(\"Trained \" + this.name + \" Attack Damage\")\r\n                break;\r\n            case 4:\r\n                list.push(\"Expert Proficiency Attack Damage\")\r\n                list.push(\"Expert \" + this.name + \" Damage\")\r\n                break;\r\n            case 6:\r\n                list.push(\"Master Proficiency Attack Damage\")\r\n                list.push(\"Master \" + this.name + \" Damage\")\r\n                break;\r\n            case 8:\r\n                list.push(\"Legendary Proficiency Attack Damage\")\r\n                list.push(\"Legendary \" + this.name + \" Damage\")\r\n                break;\r\n        }\r\n        //Pre-create Effects based on \"Damage per Die\" effects.\r\n        let perDieList: string[] = [];\r\n        if (this.prof == \"Unarmed Attacks\") {\r\n            perDieList.push(\"Unarmed Damage per Die\");\r\n        } else {\r\n            perDieList.push(\"Weapon Damage per Die\");\r\n        }\r\n        traits.forEach(trait => {\r\n            if (trait.includes(\" ft\")) {\r\n                perDieList.push(trait.split(\" \")[0] + \" Damage per Die\");\r\n            } else {\r\n                perDieList.push(trait + \" Damage per Die\");\r\n            }\r\n        })\r\n        effectsService.get_RelativesOnThese(creature, perDieList).forEach(effect => {\r\n            let effectBonus = parseInt(effect.value) * dicenum;\r\n            let newEffect = Object.assign(new Effect(), JSON.parse(JSON.stringify(effect)));\r\n            newEffect.target = newEffect.target.replace(\" per Die\", \"\");\r\n            newEffect.value = effectBonus.toString();\r\n            calculatedEffects.push(newEffect);\r\n        })\r\n        //Now collect and apply the type-filtered effects on this weapon's damage, including the pregenerated ones.\r\n        effectsService.get_TypeFilteredEffects(\r\n            calculatedEffects\r\n                .concat(effectsService.get_RelativesOnThese(creature, list)\r\n                ), false)\r\n            .forEach(effect => {\r\n                if (effect.show) {\r\n                    if (parseInt(effect.value) < 0) {\r\n                        penalties.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: true });\r\n                    } else {\r\n                        bonuses.push({ value: parseInt(effect.value), setValue: \"\", source: effect.source, penalty: false });\r\n                    }\r\n                }\r\n                if (effect.target.toLowerCase().includes(\"damage per die\")) {\r\n                    effectBonus += parseInt(effect.value) * dicenum;\r\n                    bonusExplain += \"\\n\" + effect.source + \": Damage \" + ((parseInt(effect.value) * dicenum) >= 0 ? \"+\" : \"\") + (parseInt(effect.value) * dicenum);\r\n                } else {\r\n                    effectBonus += parseInt(effect.value);\r\n                    bonusExplain += \"\\n\" + effect.source + \": Damage \" + (parseInt(effect.value) >= 0 ? \"+\" : \"\") + parseInt(effect.value);\r\n                }\r\n            })\r\n        dmgBonus += effectBonus;\r\n        //Make a nice \"+#\" string from the Ability bonus if there is one, or else make it empty\r\n        let dmgBonusTotal: string = (dmgBonus) ? ((dmgBonus >= 0) && \"+\") + dmgBonus : \"\";\r\n        //Concatenate the strings for a readable damage output\r\n        var dmgResult = baseDice + dmgBonusTotal + \" \" + this.dmgType + this.get_ExtraDamage(creature, characterService, range);\r\n        let explain = (diceExplain.trim() + \"\\n\" + bonusExplain.trim()).trim();\r\n        return [dmgResult, explain, bonuses, penalties, absolutes];\r\n    }\r\n    get_CritSpecialization(creature: Creature, characterService: CharacterService, range: string) {\r\n        let SpecializationGains: SpecializationGain[] = [];\r\n        let specializations: Specialization[] = [];\r\n        let prof = this.get_Proficiency((creature as AnimalCompanion | Character), characterService);\r\n        if (creature.type == \"Character\" && this.group) {\r\n            let character = creature as Character;\r\n            let runeSource: (Weapon | WornItem)[] = this.get_RuneSource(creature, range);\r\n            let skillLevel = this.profLevel((creature as AnimalCompanion | Character), characterService, runeSource[1]);\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.gainSpecialization.length && feat.have(character, characterService, character.level, false))\r\n                .forEach(feat => {\r\n                    SpecializationGains.push(...feat.gainSpecialization.filter(spec =>\r\n                        (spec.bladeAlly ? (this.bladeAlly || runeSource[1].bladeAlly) : true) &&\r\n                        (spec.group ? (this.group && spec.group.includes(this.group)) : true) &&\r\n                        (spec.range ? (range && spec.range.includes(range)) : true) &&\r\n                        (spec.name ? ((this.name && spec.name.includes(this.name)) || (this.weaponBase && spec.name.includes(this.weaponBase))) : true) &&\r\n                        (spec.trait ? this.traits.some(trait => spec.trait.includes(trait)) : true) &&\r\n                        (spec.proficiency ? (prof && spec.proficiency.includes(prof)) : true) &&\r\n                        (spec.skillLevel ? skillLevel >= spec.skillLevel : true) &&\r\n                        (spec.featreq ? characterService.get_FeatsAndFeatures(spec.featreq)[0]?.have(character, characterService) : true)\r\n                    ))\r\n                });\r\n            SpecializationGains.forEach(critSpec => {\r\n                let specs: Specialization[] = characterService.get_Specializations(this.group).map(spec => Object.assign(new Specialization(), spec));\r\n                specs.forEach(spec => {\r\n                    if (critSpec.condition) {\r\n                        spec.desc = \"(\" + critSpec.condition + \") \" + spec.desc;\r\n                    }\r\n                    if (!specializations.some(existingspec => JSON.stringify(existingspec) == JSON.stringify(spec))) {\r\n                        specializations.push(spec);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return specializations;\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Injectable } from '@angular/core';\r\nimport { Ancestry } from './Ancestry';\r\nimport { Heritage } from './Heritage';\r\nimport { Background } from './Background';\r\nimport { SavegameService } from './savegame.service';\r\nimport * as json_ancestries from '../assets/json/ancestries';\r\nimport * as json_backgrounds from '../assets/json/backgrounds';\r\nimport * as json_heritages from '../assets/json/heritages';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HistoryService {\r\n    private ancestries: Ancestry[] = [];\r\n    private heritages: Heritage[] = [];\r\n    private backgrounds: Background[] = [];\r\n    private loading_ancestries: boolean = false;\r\n    private loading_backgrounds: boolean = false;\r\n    private loading_heritages: boolean = false;\r\n    \r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    get_Ancestries(name: string = \"\") {\r\n        if (!this.loading_ancestries) {\r\n            return this.ancestries.filter(ancestry => (ancestry.name == name || name == \"\"));\r\n        } else { return [new Ancestry()] }\r\n    }\r\n\r\n    get_Heritages(name: string = \"\", ancestryName: string = \"\") {\r\n        if (!this.loading_heritages) {\r\n            return this.heritages.filter(heritage => (heritage.name == name || name == \"\" )\r\n             && (ancestryName == \"\" || this.get_Ancestries(ancestryName)[0].heritages.includes(heritage.name)) );\r\n        } else { return [new Heritage()] }\r\n    }\r\n\r\n    get_HeritagesAndSubtypes(name: string = \"\") {\r\n        if (!this.loading_heritages) {\r\n            let heritages: Heritage[] = [];\r\n            heritages.push(...this.heritages);\r\n            heritages.forEach(heritage => {\r\n                heritages.push(...heritage.subTypes);\r\n            })\r\n            return heritages.filter(heritage => (heritage.name == name || name == \"\" ));\r\n        } else { return [new Heritage()] }\r\n    }\r\n    \r\n    get_Backgrounds(name: string = \"\") {\r\n        if (!this.loading_backgrounds) {\r\n            return this.backgrounds.filter(background => (background.name == name || name == \"\"));\r\n        } else { return [new Background()] }\r\n    }\r\n\r\n    restore_AncestryFromSave(ancestry: Ancestry, savegameService: SavegameService) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_Ancestries(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    ancestry = savegameService.merge(libraryObject, ancestry);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    clean_AncestryForSave(ancestry: Ancestry) {\r\n        if (ancestry.name) {\r\n            let libraryObject = this.get_Ancestries(ancestry.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(ancestry).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading from the refId.\r\n                        if (JSON.stringify(ancestry[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete ancestry[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return ancestry;\r\n    }\r\n\r\n    restore_HeritageFromSave(heritage: Heritage, savegameService: SavegameService) {\r\n        if (heritage.name) {\r\n            let libraryObject = this.get_HeritagesAndSubtypes(heritage.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    heritage = savegameService.merge(libraryObject, heritage);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return heritage;\r\n    }\r\n\r\n    clean_HeritageForSave(heritage: Heritage) {\r\n        if (heritage.name) {\r\n            let libraryObject = this.get_HeritagesAndSubtypes(heritage.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(heritage).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading from the refId.\r\n                        if (JSON.stringify(heritage[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete heritage[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return heritage;\r\n    }\r\n\r\n    restore_BackgroundFromSave(background: Background, savegameService: SavegameService) {\r\n        if (background.name) {\r\n            let libraryObject = this.get_Backgrounds(background.name)[0];\r\n            if (libraryObject) {\r\n                //Map the restored object onto the library object and keep the result.\r\n                try {\r\n                    background = savegameService.merge(libraryObject, background);\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return background;\r\n    }\r\n\r\n    clean_BackgroundForSave(background: Background) {\r\n        if (background.name) {\r\n            let libraryObject = this.get_Backgrounds(background.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys(background).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading from the refId.\r\n                        if (JSON.stringify(background[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete background[key];\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return background;\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading_ancestries || this.loading_backgrounds || this.loading_heritages)\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.ancestries.length) {\r\n            this.loading_ancestries = true;\r\n            this.load(json_ancestries, \"ancestries\", Ancestry);\r\n            this.loading_ancestries = false;\r\n        }\r\n        if (!this.backgrounds.length) {\r\n            this.loading_backgrounds = true;\r\n            this.load(json_backgrounds, \"backgrounds\", Background);\r\n            this.loading_backgrounds = false;\r\n        }\r\n        if (!this.heritages.length) {\r\n            this.loading_heritages = true;\r\n            this.load(json_heritages, \"heritages\", Heritage);\r\n            this.loading_heritages = false;\r\n        }\r\n    }\r\n\r\n    load(source, target: string, type) {\r\n        this[target] = [];\r\n        Object.keys(source).forEach(key => {\r\n            this[target].push(...source[key].map(obj => Object.assign(new type(), obj)));\r\n        });\r\n        this[target].forEach(obj => {\r\n            obj = this.savegameService.reassign(obj)\r\n        });\r\n    }\r\n\r\n}","<div id=\"top-bar\" class=\"newrow\">\r\n    <header class=\"mainHeader\" [ngbTooltip]=\"'Pathfinder Excessive Character Sheet'\">P.E.C.S.</header>\r\n    <button class=\"fancy-button loading\" *ngIf=\"still_loading()\">Loading</button>\r\n    <button [ngClass]=\"{'fancy-button':get_CharacterMenuState()=='out'}\" (click)=\"toggle_Menu('character')\" *ngIf=\"!still_loading()\">{{get_Character().name ? get_Character().name : \"Character\"}}</button>\r\n    <button [ngClass]=\"{'fancy-button':get_CompanionMenuState()=='out'}\" (click)=\"toggle_Menu('companion')\" *ngIf=\"!still_loading() && get_CompanionAvailable()\">{{get_Companion().name ? get_Companion().name : \"Animal Companion\"}}</button>\r\n    <button [ngClass]=\"{'fancy-button':get_FamiliarMenuState()=='out'}\" (click)=\"toggle_Menu('familiar')\" *ngIf=\"!still_loading() && get_FamiliarAvailable()\">{{get_Familiar().name ? get_Familiar().name : \"Familiar\"}}</button>\r\n    <button [ngClass]=\"{'fancy-button':get_ItemsMenuState()=='out'}\" (click)=\"toggle_Menu('items')\" *ngIf=\"!still_loading()\">Items</button>\r\n    <button [ngClass]=\"{'fancy-button':get_CraftingMenuState()=='out'}\" (click)=\"toggle_Menu('crafting')\" *ngIf=\"!still_loading()\">Crafting</button>\r\n    <button [ngClass]=\"{'fancy-button':get_SpellsMenuState()=='out'}\" (click)=\"toggle_Menu('spells')\" *ngIf=\"!still_loading()\">Spellbook</button>\r\n    <button [ngClass]=\"{'fancy-button':get_SpellLibraryMenuState()=='out'}\" (click)=\"toggle_Menu('spelllibrary')\" *ngIf=\"!still_loading()\">Spell Library</button>\r\n    <button [ngClass]=\"{'fancy-button':get_ConditionsMenuState()=='out'}\" (click)=\"toggle_Menu('conditions')\" *ngIf=\"!still_loading()\">Conditions</button>\r\n    <button [ngClass]=\"{'fancy-button':get_DiceMenuState()=='out'}\" [ngbTooltip]=\"'Dice'\" (click)=\"toggle_Menu('dice')\" *ngIf=\"!still_loading()\"><app-diceIcons_D20></app-diceIcons_D20></button>\r\n    <span style=\"flex-grow: initial\" [ngbTooltip]=\"!get_Savegames() ? 'Database connection failed.' : (get_IsBlankCharacter() ? 'No changes to character yet.' : 'Save Character')\"><button class=\"fancy-button\" (click)=\"save()\" *ngIf=\"!still_loading()\" [disabled]=\"!get_Savegames() || get_IsBlankCharacter()\"><i class=\"bi-file-earmark-arrow-up\"></i></button></span>\r\n    <span style=\"flex-grow: initial\" [ngbTooltip]=\"'Refresh all'\"><button class=\"fancy-button\" (click)=\"set_Changed()\" *ngIf=\"!still_loading()\"><i class=\"ra ra-cycle\"></i></button></span>\r\n</div>","import { Component, OnInit, HostBinding, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { SavegameService } from '../savegame.service';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-top-bar',\r\n    templateUrl: './top-bar.component.html',\r\n    styleUrls: ['./top-bar.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private savegameService: SavegameService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    get_Savegames() {\r\n        return this.savegameService.get_Savegames();\r\n    }\r\n\r\n    set_Changed() {\r\n        this.characterService.set_Changed();\r\n    }\r\n\r\n    get_Darkmode() {\r\n        return this.characterService.get_Darkmode();\r\n    }\r\n\r\n    toggle_Menu(menu: string) {\r\n        this.characterService.toggle_Menu(menu);\r\n        this.characterService.set_ToChange(\"Character\", \"items\");\r\n        this.characterService.set_ToChange(\"Character\", \"character-sheet\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_ItemsMenuState() {\r\n        return this.characterService.get_ItemsMenuState();\r\n    }\r\n\r\n    get_CraftingMenuState() {\r\n        return this.characterService.get_CraftingMenuState();\r\n    }\r\n\r\n    get_CharacterMenuState() {\r\n        return this.characterService.get_CharacterMenuState();\r\n    }\r\n\r\n    get_CompanionMenuState() {\r\n        return this.characterService.get_CompanionMenuState();\r\n    }\r\n\r\n    get_FamiliarMenuState() {\r\n        return this.characterService.get_FamiliarMenuState();\r\n    }\r\n\r\n    get_SpellsMenuState() {\r\n        return this.characterService.get_SpellsMenuState();\r\n    }\r\n\r\n    get_SpellLibraryMenuState() {\r\n        return this.characterService.get_SpellLibraryMenuState();\r\n    }\r\n\r\n    get_ConditionsMenuState() {\r\n        return this.characterService.get_ConditionsMenuState();\r\n    }\r\n\r\n    get_DiceMenuState() {\r\n        return this.characterService.get_DiceMenuState();\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_CompanionAvailable() {\r\n        return this.characterService.get_CompanionAvailable();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Companion() {\r\n        return this.characterService.get_Companion();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    get_IsBlankCharacter() {\r\n        let character = this.get_Character();\r\n        return (\r\n            !character.class?.name &&\r\n            !character.name &&\r\n            !character.partyName &&\r\n            !character.experiencePoints &&\r\n            !character.alignment &&\r\n            !character.baseValues.length &&\r\n            character.inventories.length == 1 &&\r\n            character.inventories[0].allItems().length <= 2\r\n        )\r\n    }\r\n\r\n    save() {\r\n        this.characterService.save_Character();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"top-bar\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"top-bar\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.characterService.initialize(\"\");\r\n        this.finish_Loading();\r\n    }\r\n\r\n}","export class Effect {\r\n    constructor(\r\n        public creature: string = \"\",\r\n        public type: string = \"\",\r\n        public target: string = \"\",\r\n        public value: string = \"\",\r\n        public setValue: string = \"\",\r\n        public toggle: boolean = false,\r\n        public source: string = \"\",\r\n        public penalty: boolean = false,\r\n        public apply: boolean = undefined,\r\n        public show: boolean = undefined,\r\n        public duration: number = 0,\r\n        public maxDuration: number = 0,\r\n        //If the effect is typed, cumulative lists all effect sources (of the same type) that it is cumulative with.\r\n        public cumulative: string[] = []\r\n    ) {}\r\n}","import { Consumable } from './Consumable';\r\n\r\nexport class Potion extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Potions should be type \"potions\" to be found in the database\r\n    readonly type = \"potions\";\r\n}","import { Injectable } from '@angular/core';\r\nimport { Deity } from './Deity';\r\nimport { SpellCast } from './SpellCast';\r\nimport * as json_deities from '../assets/json/deities';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DeitiesService {\r\n\r\n    private deities: Deity[] = [];\r\n    private loading: boolean = false;\r\n    \r\n    constructor() { }\r\n\r\n    get_Deities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.deities.filter(deity => deity.name.toLowerCase() == name.toLowerCase() || name == \"\")\r\n        } else { return [new Deity()] }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n  \r\n    initialize() {\r\n        if (!this.deities.length) {\r\n            this.loading = true;\r\n            this.load_Deities();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Deities() {\r\n        this.deities = [];\r\n        Object.keys(json_deities).forEach(key => {\r\n            this.deities.push(...json_deities[key].map(obj => Object.assign(new Deity(), obj)));\r\n        });\r\n        //Don't call reassign() because cleric spells are really the only thing we need to assign.\r\n        this.deities.forEach(deity => {\r\n            deity.clericSpells = deity.clericSpells.map(spell => Object.assign(new SpellCast(), spell));\r\n        })\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Class } from './Class';\r\nimport { SavegameService } from './savegame.service';\r\nimport * as json_classes from '../assets/json/classes';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClassesService {\r\n\r\n    classes: Class[] = [];\r\n    private loading: boolean = false;\r\n    \r\n    constructor(\r\n        private savegameService: SavegameService\r\n    ) { }\r\n\r\n    get_Classes(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.classes.filter($class => $class.name == name || name == \"\")\r\n        } else { return [new Class()] }\r\n    }\r\n\r\n    still_loading() {\r\n        return (this.loading);\r\n    }\r\n  \r\n    restore_ClassFromSave($class: Class, savegameService: SavegameService) {\r\n        if ($class.name) {\r\n            let libraryObject = this.get_Classes($class.name)[0];\r\n            if (libraryObject) {\r\n                //Make a safe copy of the library object.\r\n                //Then map the restored object onto the copy and keep that.\r\n                try {\r\n                    $class = savegameService.merge(libraryObject, $class)\r\n                } catch (e) {\r\n                    console.log(\"Failed reassigning: \" + e)\r\n                }\r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    clean_ClassForSave($class: Class) {\r\n        if ($class.name) {\r\n            let libraryObject = this.get_Classes($class.name)[0];\r\n            if (libraryObject) {\r\n                Object.keys($class).forEach(key => {\r\n                    if (![\"name\", \"_className\"].includes(key)) {\r\n                        //If the Object has a name, and a library item can be found with that name, compare the property with the library item\r\n                        //If they have the same value, delete the property from the item - it can be recovered during loading via the name.\r\n                        if (JSON.stringify($class[key]) == JSON.stringify(libraryObject[key])) {\r\n                            delete $class[key];\r\n                        }\r\n                    }\r\n                })\r\n                //Perform the same step for each level.\r\n                if ($class.levels) {\r\n                    for (let index = 0; index < $class.levels.length; index++) {\r\n                        Object.keys($class.levels[index]).forEach(key => {\r\n                            if (![\"number\", \"_className\"].includes(key)) {\r\n                                if (JSON.stringify($class.levels[index][key]) == JSON.stringify(libraryObject.levels[index][key])) {\r\n                                    delete $class.levels[index][key];\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return $class;\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.classes.length) {\r\n            this.loading = true;\r\n            this.load_Classes();\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    load_Classes() {\r\n        this.classes = [];\r\n        Object.keys(json_classes).forEach(key => {\r\n            this.classes.push(...json_classes[key].map(obj => Object.assign(new Class(), obj)));\r\n        });\r\n        this.classes.forEach(obj => {\r\n            obj = this.savegameService.reassign(obj)\r\n        });\r\n    }\r\n\r\n}\r\n","import { AbilityChoice } from './AbilityChoice';\r\nimport { SkillChoice } from './SkillChoice';\r\nimport { EffectGain } from './EffectGain';\r\nimport { Hint } from './Hint';\r\n\r\nexport class AnimalCompanionSpecialization {\r\n    //A boost to damage dice and additional damage is hardcoded in the Weapon class.\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public desc: string = \"\";\r\n    public effects: EffectGain[] = [];\r\n    public hints: Hint[] = [];\r\n    public level: number = 0;\r\n    public name: string = \"\";\r\n    public skillChoices: SkillChoice[] = [];\r\n    reassign() {\r\n        this.abilityChoices = this.abilityChoices.map(choice => Object.assign(new AbilityChoice(), choice));\r\n        this.skillChoices = this.skillChoices.map(choice => Object.assign(new SkillChoice(), choice));\r\n    }\r\n}","import { SkillChoice } from './SkillChoice';\r\nimport { LoreChoice } from './LoreChoice';\r\nimport { AbilityChoice } from './AbilityChoice';\r\nimport { FeatChoice } from './FeatChoice';\r\n\r\nexport class Level {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public featChoices: FeatChoice[] = [];\r\n    public loreChoices: LoreChoice[] = [];\r\n    public number: number = 0;\r\n    public skillChoices: SkillChoice[] = [];\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\n\r\n@Component({\r\n    selector: 'app-familiarabilities',\r\n    templateUrl: './familiarabilities.component.html',\r\n    styleUrls: ['./familiarabilities.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FamiliarabilitiesComponent implements OnInit {\r\n\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService\r\n    ) { }\r\n\r\n    still_loading() {\r\n        return (this.characterService.still_loading());\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_FamiliarAvailable() {\r\n        return this.characterService.get_FamiliarAvailable();\r\n    }\r\n\r\n    get_Familiar() {\r\n        return this.characterService.get_Familiar();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n            .subscribe((target) => {\r\n                if ([\"familiarabilities\", \"all\", \"Familiar\"].includes(target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            this.characterService.get_ViewChanged()\r\n            .subscribe((view) => {\r\n                if (view.creature == \"Familiar\" && [\"familiarabilities\", \"all\"].includes(view.target)) {\r\n                    this.changeDetector.detectChanges();\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<div id=\"familiarabilities-height\" class=\"attributeBox\">\r\n    <header class=\"sectionHeader box-header\">Familiar Abilities</header>\r\n    <!--Feat choices-->\r\n    <app-featchoice class=\"newrow\" [creature]=\"'Familiar'\" [choice]=\"get_Familiar().abilities\"\r\n        [levelNumber]=\"get_Character().level\" [showTitle]=\"true\" [showContent]=\"true\" [showChoice]=\"''\" [showFeat]=\"''\">\r\n    </app-featchoice>\r\n</div>","import { Consumable } from './Consumable';\r\n\r\nexport class AlchemicalTool extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Alchemical tools should be type \"alchemicaltools\" to be found in the database\r\n    readonly type = \"alchemicaltools\";\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Consumable } from './Consumable';\r\n\r\nexport class Talisman extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Other Consumables should be type \"talismans\" to be found in the database\r\n    readonly type = \"talismans\";\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public failure: string = \"\";\r\n    public success: string = \"\";\r\n    public requirements: string = \"\";\r\n    public showActivities: string[] = [];\r\n    //You can only choose this talisman for an item if its type is in the targets list (with a hardcoded exception for \"melee weapons\")\r\n    public targets: string[] = [];\r\n    public trigger: string = \"\";\r\n}","import { Weapon } from './Weapon';\r\nimport { Armor } from './Armor';\r\nimport { Shield } from './Shield';\r\nimport { WornItem } from './WornItem';\r\nimport { AlchemicalElixir } from './AlchemicalElixir';\r\nimport { Consumable } from './Consumable';\r\nimport { OtherConsumable } from './OtherConsumable';\r\nimport { HeldItem } from './HeldItem';\r\nimport { AdventuringGear } from './AdventuringGear';\r\nimport { Equipment } from './Equipment';\r\nimport { WeaponRune } from './WeaponRune';\r\nimport { Rune } from './Rune';\r\nimport { ArmorRune } from './ArmorRune';\r\nimport { Potion } from './Potion';\r\nimport { OtherItem } from './OtherItem';\r\nimport { ItemsService } from './items.service';\r\nimport { Item } from './Item';\r\nimport { Ammunition } from './Ammunition';\r\nimport { Scroll } from './Scroll';\r\nimport { CharacterService } from './character.service';\r\nimport { Oil } from './Oil';\r\nimport { Talisman } from './Talisman';\r\nimport { AlchemicalBomb } from './AlchemicalBomb';\r\nimport { AlchemicalTool } from './AlchemicalTool';\r\nimport { AlchemicalPoison } from './AlchemicalPoison';\r\nimport { Snare } from './Snare';\r\nimport { OtherConsumableBomb } from './OtherConsumableBomb';\r\nimport { Wand } from './Wand';\r\n\r\nexport class ItemCollection {\r\n    public readonly _className: string = this.constructor.name;\r\n    public adventuringgear: AdventuringGear[] = [];\r\n    public ammunition: Ammunition[] = [];\r\n    public alchemicalelixirs: AlchemicalElixir[] = [];\r\n    public armorrunes: ArmorRune[] = [];\r\n    public armors: Armor[] = [];\r\n    //You cannot add any items to an inventory that would break its bulk limit.\r\n    public bulkLimit: number = 0;\r\n    //This is the amount of bulk that can be ignored when weighing this inventory.\r\n    public bulkReduction: number = 0;\r\n    public helditems: HeldItem[] = [];\r\n    //If an item grants an inventory, this is the item's ID.\r\n    public itemId: string = \"\";\r\n    public otherconsumables: OtherConsumable[] = [];\r\n    public otherconsumablesbombs: OtherConsumableBomb[] = [];\r\n    public otheritems: OtherItem[] = [];\r\n    public potions: Potion[] = [];\r\n    public shields: Shield[] = [];\r\n    public weaponrunes: WeaponRune[] = [];\r\n    public weapons: Weapon[] = [];\r\n    public wornitems: WornItem[] = [];\r\n    public scrolls: Scroll[] = [];\r\n    public oils: Oil[] = [];\r\n    public talismans: Talisman[] = [];\r\n    public alchemicalbombs: AlchemicalBomb[] = [];\r\n    public alchemicaltools: AlchemicalTool[] = [];\r\n    public alchemicalpoisons: AlchemicalPoison[] = [];\r\n    public snares: Snare[] = [];\r\n    public wands: Wand[] = [];\r\n    public readonly names: {name: string, key: string}[] = [\r\n        {name:\"Weapons\",key:\"weapons\"},\r\n        {name:\"Armors\",key:\"armors\"},\r\n        {name:\"Shields\",key:\"shields\"},\r\n        {name:\"Alchemical Bombs\",key:\"alchemicalbombs\"},\r\n        {name:\"Worn Items\",key:\"wornitems\"},\r\n        {name:\"Held Items\",key:\"helditems\"},\r\n        {name:\"Adventuring Gear\",key:\"adventuringgear\"},\r\n        {name:\"Alchemical Tools\",key:\"alchemicaltools\"},\r\n        {name:\"Weapon Runes\",key:\"weaponrunes\"},\r\n        {name:\"Armor Runes\",key:\"armorrunes\"},\r\n        {name:\"Scrolls\",key:\"scrolls\"},\r\n        {name:\"Alchemical Elixirs\",key:\"alchemicalelixirs\"},\r\n        {name:\"Potions\",key:\"potions\"},\r\n        {name:\"Alchemical Poisons\",key:\"alchemicalpoisons\"},\r\n        {name:\"Oils\",key:\"oils\"},\r\n        {name:\"Talismans\",key:\"talismans\"},\r\n        {name:\"Snares\",key:\"snares\"},\r\n        {name:\"Ammunition\",key:\"ammunition\"},\r\n        {name:\"Other Consumables\",key:\"otherconsumables\"},\r\n        {name:\"Other Consumables (Bombs)\",key:\"otherconsumablesbombs\"},\r\n        {name:\"Wands\", key:\"wands\"}\r\n    ]\r\n    allEquipment() {\r\n        let items: Equipment[] = [];\r\n        items.push(...this.adventuringgear);\r\n        items.push(...this.alchemicalbombs);\r\n        items.push(...this.otherconsumablesbombs);\r\n        items.push(...this.armors);\r\n        items.push(...this.helditems);\r\n        items.push(...this.shields);\r\n        items.push(...this.weapons);\r\n        items.push(...this.wornitems);\r\n        items.push(...this.wands);\r\n        return items;\r\n    }\r\n    allConsumables() {\r\n        let items: Consumable[] = [];\r\n        items.push(...this.alchemicalelixirs);\r\n        items.push(...this.alchemicaltools);\r\n        items.push(...this.ammunition);\r\n        items.push(...this.oils);\r\n        items.push(...this.otherconsumables);\r\n        items.push(...this.potions);\r\n        items.push(...this.scrolls);\r\n        items.push(...this.talismans);\r\n        items.push(...this.snares);\r\n        items.push(...this.alchemicalpoisons);\r\n        return items;\r\n    }\r\n    allRunes() {\r\n        let items: Rune[] = [];\r\n        items.push(...this.armorrunes);\r\n        items.push(...this.weaponrunes);\r\n        return items;\r\n    }\r\n    allItems() {\r\n        let items: Item[] = [];\r\n        items.push(...this.allConsumables());\r\n        items.push(...this.allEquipment());\r\n        items.push(...this.allRunes());\r\n        return items;\r\n    }\r\n    get_Bulk(rounded: boolean = true) {\r\n        //All bulk gets calculated at *10 to avoid rounding issues with decimals,\r\n        //Then returned at /10\r\n        let sum: number = 0;\r\n        function addup(item: Item|OtherItem) {\r\n            let bulk = item.constructor == OtherItem ? item.bulk : (item as Item).get_Bulk();\r\n            if ((item as Equipment).carryingBulk && !(item as Equipment).equipped) {\r\n                bulk = (item as Equipment).carryingBulk;\r\n            }\r\n            switch (bulk) {\r\n                case \"\":\r\n                    break;\r\n                case \"-\":\r\n                    break;\r\n                case \"L\":\r\n                    if (item.amount) {\r\n                        sum += Math.floor(item.amount / ((item as Consumable).stack ? (item as Consumable).stack : 1)) ;\r\n                    } else {\r\n                        sum += 1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (item.amount) {\r\n                        sum += parseInt(bulk) * 10 * Math.floor(item.amount / ((item as Consumable).stack ? (item as Consumable).stack : 1));\r\n                    } else {\r\n                        sum += parseInt(bulk) * 10;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        this.allItems().forEach(item => {\r\n            addup(item);\r\n        })\r\n        this.otheritems.forEach(item => {\r\n            addup(item);\r\n        })\r\n        sum = Math.max(0, sum);\r\n        //Either round to int, or else to 1 decimal\r\n        if (rounded) {\r\n            sum = Math.floor(sum / 10);\r\n        } else {\r\n            sum = Math.floor(sum) / 10;\r\n        }\r\n        return sum;\r\n    }\r\n    get_Name(characterService: CharacterService) {\r\n        let name: string = \"\"\r\n        if (!this.itemId) {\r\n            characterService.get_Creatures().forEach(creature => {\r\n                if (creature.type != \"Familiar\") {\r\n                    if (creature.inventories.some(inventory => inventory === this)) {\r\n                        name = creature.name || creature.type;\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            characterService.get_Creatures().forEach(creature => {\r\n                if (creature.type != \"Familiar\") {\r\n                    if (creature.inventories.some(inventory => inventory === this)) {\r\n                        creature.inventories.forEach(creatureInventory => {\r\n                            let items = creatureInventory.allEquipment().filter(item => item.id == this.itemId);\r\n                            if (items.length) {\r\n                                name = items[0].get_Name();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return name;\r\n    }\r\n}\r\n","import { AbilitiesService } from './abilities.service';\r\nimport { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Effect } from './Effect';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Character } from './Character';\r\nimport { Creature } from './Creature';\r\nimport { ProficiencyCopy } from './ProficiencyCopy';\r\n\r\nexport class Skill {\r\n    public readonly _className: string = this.constructor.name;\r\n    public notes: string = \"\";\r\n    public showNotes: boolean = false;\r\n    constructor(\r\n        public ability: string = \"\",\r\n        public name: string = \"\",\r\n        public type: string = \"\",\r\n        //Locked skills don't show up in skill increase choices.\r\n        public locked: boolean = false,\r\n        public recallKnowledge: boolean = false\r\n    ) { }\r\n    calculate(creature: Creature, characterService: CharacterService, abilitiesService: AbilitiesService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level, isDC: boolean = false) {\r\n        let level: number = (creature.type == \"Familiar\" ? 0 : this.level((creature as AnimalCompanion | Character), characterService, charLevel));\r\n        let ability: string = this.get_Ability(creature, characterService);\r\n        let baseValue: { result: number, explain: string, skillLevel: number, ability: string } = this.baseValue(creature, characterService, abilitiesService, effectsService, charLevel, level);\r\n\r\n        let result = {\r\n            level: level,\r\n            ability: ability,\r\n            baseValue: baseValue,\r\n            absolutes: this.absolutes(creature, effectsService, isDC, level, ability) as Effect[],\r\n            relatives: this.relatives(creature, effectsService, isDC, level, ability) as Effect[],\r\n            bonuses: this.bonuses(creature, effectsService, isDC, level, ability) as boolean,\r\n            penalties: this.penalties(creature, effectsService, isDC, level, ability) as boolean,\r\n            value: this.value(creature, characterService, abilitiesService, effectsService, charLevel, isDC, baseValue) as { result: number, explain: string }\r\n        }\r\n        return result;\r\n    }\r\n    canIncrease(creature: Character, characterService: CharacterService, levelNumber: number, maxRank: number = 8) {\r\n        if (levelNumber >= 15) {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(8, maxRank))\r\n        } else if (levelNumber >= 7) {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(6, maxRank))\r\n        } else if (levelNumber >= 2) {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(4, maxRank))\r\n        } else {\r\n            return (this.level(creature, characterService, levelNumber, true) < Math.min(2, maxRank))\r\n        }\r\n    }\r\n    isLegal(creature: Character, characterService: CharacterService, levelNumber: number, maxRank: number = 8) {\r\n        if (levelNumber >= 15) {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(8, maxRank))\r\n        } else if (levelNumber >= 7) {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(6, maxRank))\r\n        } else if (levelNumber >= 2) {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(4, maxRank))\r\n        } else {\r\n            return (creature.get_SkillIncreases(characterService, 0, levelNumber, this.name).length * 2 <= Math.min(2, maxRank))\r\n        }\r\n    }\r\n    get_NamesList(creature: Creature, isDC: boolean = false, skillLevel: number = 0, ability: string = \"\") {\r\n        let levelNames = [\"Untrained\", \"Untrained\", \"Trained\", \"Trained\", \"Expert\", \"Expert\", \"Master\", \"Master\", \"Legendary\"];\r\n        let list: string[] = [\r\n            this.name,\r\n            \"All Checks and DCs\",\r\n        ];\r\n        if (ability) {\r\n            list.push(ability + \"-based Checks and DCs\");\r\n        }\r\n        if (this.type == \"Skill\") {\r\n            list.push(\"Skill Checks\");\r\n            if (creature.type != \"Familiar\") {\r\n                list.push(levelNames[skillLevel] + \" Skill Checks\");\r\n            }\r\n        }\r\n        if (this.type == \"Save\") { list.push(\"Saving Throws\") }\r\n        if (this.name.includes(\"Lore\")) { list.push(\"Lore\") }\r\n        if (this.name.includes(\"Spell DC\") && !isDC) { list.push(\"Attack Rolls\"); list.push(\"Spell Attack Rolls\") }\r\n        if (this.name.includes(\"Spell DC\") && isDC) { list.push(\"Spell DCs\") }\r\n        if (this.recallKnowledge) {\r\n            list.push(\"Recall Knowledge Checks\")\r\n            if (creature.type != \"Familiar\") {\r\n                list.push(levelNames[skillLevel] + \" Recall Knowledge Checks\");\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    absolutes(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.get_AbsolutesOnThese(creature, namesList);\r\n    }\r\n    relatives(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.get_RelativesOnThese(creature, namesList);\r\n    }\r\n    bonuses(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.show_BonusesOnThese(creature, namesList);\r\n    }\r\n    penalties(creature: Creature, effectsService: EffectsService, isDC: boolean = false, level: number = 0, ability: string = \"\") {\r\n        let namesList = this.get_NamesList(creature, isDC, level, ability);\r\n        return effectsService.show_PenaltiesOnThese(creature, namesList);\r\n    }\r\n    get_Ability(creature: Creature, characterService: CharacterService) {\r\n        if (creature.type == \"Familiar\") {\r\n            let character = characterService.get_Character();\r\n            //Get the correct ability by identifying the non-innate spellcasting with the same class name as the Familiar's originClass and retrieving its key ability.\r\n            return character.class.spellCasting.find(spellcasting => spellcasting.className == (creature as Familiar).originClass && spellcasting.castingType != \"Innate\").ability || \"Charisma\";\r\n        } else {\r\n            if (this.ability) {\r\n                return this.ability;\r\n            } else {\r\n                //Get the correct ability by finding the first key ability boost for the main class or the archetype class.\r\n                // Some effects ask for your Unarmed Attacks modifier without any weapon, so we need to apply your strength modifier. But Unarmed Attacks is not a real skill and does not have an ability.\r\n                if (this.name == \"Unarmed Attacks\") {\r\n                    return \"Strength\"\r\n                }\r\n                if (this.name == characterService.get_Character().class.name + \" Class DC\") {\r\n                    return characterService.get_Character().get_AbilityBoosts(1, 1, \"\", \"\", \"Class Key Ability\")[0]?.name;\r\n                } else if (this.name.includes(\" Class DC\") && !this.name.includes(characterService.get_Character().class.name)) {\r\n                    return characterService.get_Character().get_AbilityBoosts(1, characterService.get_Character().level, \"\", \"\", this.name.split(\" \")[0] + \" Key Ability\")[0]?.name;\r\n                }\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    level(creature: Character | AnimalCompanion, characterService: CharacterService, charLevel: number = characterService.get_Character().level, excludeTemporary: boolean = false) {\r\n        if (characterService.still_loading()) { return 0; }\r\n        let effectsService = characterService.effectsService;\r\n        let skillLevel: number = 0;\r\n        //If the skill is set by an effect, we can skip every other calculation.\r\n        let list: string[] = [];\r\n        list.push(this.name + \" Proficiency Level\");\r\n        switch (this.type) {\r\n            case \"Skill\":\r\n                list.push(\"All Skill Proficiency Levels\")\r\n                break;\r\n            case \"Save\":\r\n                list.push(\"All Saving Throw Proficiency Levels\")\r\n                break;\r\n            case \"Weapon Proficiency\":\r\n                list.push(\"All Weapon Proficiency Levels\")\r\n                break;\r\n            case \"Specific Weapon Proficiency\":\r\n                list.push(\"All Weapon Proficiency Levels\")\r\n                break;\r\n            case \"Armor Proficiency\":\r\n                list.push(\"All Armor Proficiency Levels\")\r\n                break;\r\n        }\r\n        let skillLevelEffects = effectsService.get_AbsolutesOnThese(creature, list);\r\n        if (skillLevelEffects.length) {\r\n            skillLevelEffects.forEach(effect => {\r\n                skillLevel = parseInt(effect.setValue);\r\n            })\r\n        } else {\r\n            let increases = creature.get_SkillIncreases(characterService, 0, charLevel, this.name, \"\", \"\", undefined, excludeTemporary);\r\n            // Add 2 for each increase, but keep them to their max Rank\r\n            increases = increases.sort((a, b) => (a.maxRank > b.maxRank) ? 1 : -1)\r\n            increases.forEach(increase => {\r\n                skillLevel = Math.min(skillLevel + 2, increase.maxRank);\r\n            })\r\n            //If your proficiency in any non-innate spell attack rolls or spell DCs is expert or better, apply the best of these proficiencies to your innate spells, too.\r\n            if (this.name.includes(\"Innate\") && this.name.includes(\"Spell DC\")) {\r\n                let spellDCs = characterService.get_Skills(creature).filter(skill => skill !== this && skill.name.includes(\"Spell DC\") && !skill.name.includes(\"Innate\"));\r\n                skillLevel = Math.max(skillLevel, ...spellDCs.map(skill => skill.level(creature, characterService, charLevel, excludeTemporary)));\r\n            }\r\n            let proficiencyCopies: ProficiencyCopy[] = [];\r\n            //Collect all the available proficiency copy instructions,\r\n            // (i.e. \"Whenever you gain a class feature that grants you expert or greater proficiency in a given weapon or weapons, you also gain that proficiency in...\").\r\n            //We check whether you meet the minimum proficiency level by comparing if your skillLevel up to this point.\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.copyProficiency.length && feat.have(creature, characterService, charLevel, false))\r\n                .forEach(feat => {\r\n                    proficiencyCopies.push(...feat.copyProficiency.filter(copy =>\r\n                        (this.name.toLowerCase() == copy.name.toLowerCase()) &&\r\n                        (copy.minLevel ? skillLevel >= copy.minLevel : true)\r\n                    ))\r\n                });\r\n            //If the skill name is \"Highest Attack Proficiency\", add an extra proficiency copy instruction that should return the highest weapon or unarmed procifiency that you have.\r\n            if (this.name == \"Highest Attack Proficiency\") {\r\n                proficiencyCopies.push(Object.assign(new ProficiencyCopy(), {name: \"Highest Attack Proficiency\", type: \"Weapon Proficiency\", featuresOnly: false}));\r\n            }\r\n            //For each proficiency copy instruction, collect the desired skill increases, then keep the highest.\r\n            let copyLevels: number[] = [];\r\n            proficiencyCopies.forEach(copy => {\r\n                (creature as Character).class.levels.filter(level => level.number <= creature.level).forEach(level => {\r\n                    copyLevels.push(...\r\n                        level.skillChoices.filter(choice =>\r\n                            //Use .includes so \"Specific Weapon Proficiency\" matches \"Weapon Proficiency\".\r\n                            (choice.type.toLowerCase().includes(copy.type.toLowerCase())) &&\r\n                            (copy.featuresOnly ? !choice.source.toLowerCase().includes(\"feat:\") : true)\r\n                        ).map(choice => choice.maxRank))\r\n                })\r\n            })\r\n            skillLevel = Math.max(...copyLevels, skillLevel);\r\n        }\r\n        //Add any relative proficiency level bonuses.\r\n        skillLevelEffects = effectsService.get_RelativesOnThese(creature, list);\r\n        skillLevelEffects.forEach(effect => {\r\n            if ([-8, -6, -4, -2, 2, 4, 6].includes(parseInt(effect.value))) {\r\n                skillLevel += parseInt(effect.value);\r\n            }\r\n        })\r\n        skillLevel = Math.max(Math.min(skillLevel, 8), 0);\r\n        return skillLevel;\r\n    }\r\n    baseValue(creature: Creature, characterService: CharacterService, abilitiesService: AbilitiesService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level, skillLevel: number = undefined) {\r\n        let result: number = 0;\r\n        let explain: string = \"\";\r\n        let index = 0;\r\n        let ability = \"\";\r\n        switch (creature.type) {\r\n            case \"Companion\":\r\n                index = 1;\r\n                break;\r\n            case \"Familiar\":\r\n                index = 2;\r\n                break;\r\n        }\r\n        if (!characterService.still_loading()) {\r\n            if (creature.type == \"Familiar\") {\r\n                //Familiars have special rules:\r\n                //- Saves are equal to the character's before applying circumstance or status effects.\r\n                //- Perception, Acrobatics and Stealth are equal to the character level plus spellcasting modifier (or Charisma).\r\n                //- All others (including attacks) are equal to the character level.\r\n                let character = characterService.get_Character();\r\n                if ([\"Fortitude\", \"Reflex\", \"Will\"].includes(this.name)) {\r\n                    let charBaseValue = this.baseValue(character, characterService, abilitiesService, effectsService, charLevel)\r\n                    result = charBaseValue.result;\r\n                    explain = charBaseValue.explain;\r\n                } else if ([\"Perception\", \"Acrobatics\", \"Stealth\"].includes(this.name)) {\r\n                    result = character.level;\r\n                    explain = \"Character Level: \" + character.level;\r\n                    ability = \"Charisma\";\r\n                    //Get the correct ability by identifying the non-innate spellcasting with the same class name as the Familiar's originClass and retrieving its key ability.\r\n                    ability = this.get_Ability(creature, characterService);\r\n                    let value = abilitiesService.get_Abilities(ability)[0].mod(character, characterService, effectsService);\r\n                    if (value) {\r\n                        result += value.result;\r\n                        explain += \"\\nCharacter Spellcasting Ability: \" + value.result;\r\n                    }\r\n                } else {\r\n                    result = character.level;\r\n                    explain = \"Character Level: \" + character.level;\r\n                }\r\n            } else {\r\n                //Add character level if the character is trained or better with the Skill\r\n                //Add half the level if the skill is unlearned and the character has the Untrained Improvisation feat (full level from 7 on).\r\n                //Gets applied to saves and perception, but they are never untrained\r\n                if (skillLevel == undefined) {\r\n                    skillLevel = this.level((creature as AnimalCompanion | Character), characterService, charLevel);\r\n                }\r\n                var charLevelBonus = 0;\r\n                if (skillLevel) {\r\n                    charLevelBonus = charLevel;\r\n                    explain += \"\\nProficiency Rank: \" + skillLevel;\r\n                    explain += \"\\nCharacter Level: \" + charLevelBonus;\r\n                }\r\n                //Add the Ability modifier identified by the skill's ability property\r\n                var abilityMod = 0;\r\n                ability = this.get_Ability(creature, characterService)\r\n                if (ability) {\r\n                    abilityMod = abilitiesService.get_Abilities(ability)[0].mod((creature as AnimalCompanion | Character), characterService, effectsService).result;\r\n                }\r\n                if (abilityMod) {\r\n                    explain += \"\\n\" + ability + \" Modifier: \" + abilityMod;\r\n                }\r\n                explain = explain.trim();\r\n                //Add up all modifiers, the skill proficiency and all active effects and return the sum\r\n                result = charLevelBonus + skillLevel + abilityMod;\r\n            }\r\n        }\r\n        return { result: result, explain: explain, skillLevel: skillLevel, ability: ability };\r\n    }\r\n    value(creature: Creature, characterService: CharacterService, abilitiesService: AbilitiesService, effectsService: EffectsService, charLevel: number = characterService.get_Character().level, isDC: boolean = false, baseValue: { result: number, explain: string, skillLevel: number, ability: string } = undefined) {\r\n        //Calculates the effective bonus of the given Skill\r\n        let result: number = 0;\r\n        let explain: string = \"\";\r\n        if (!characterService.still_loading()) {\r\n            if (baseValue == undefined) {\r\n                baseValue = this.baseValue(creature, characterService, abilitiesService, effectsService, charLevel)\r\n            }\r\n            result = baseValue.result;\r\n            explain = baseValue.explain;\r\n            let skillLevel = baseValue.skillLevel;\r\n            let ability = baseValue.ability;\r\n            //Applying assurance prevents any other bonuses, penalties or modifiers.\r\n            let noRelatives: boolean = false;\r\n            //Absolutes completely replace the baseValue. They are sorted so that the highest value counts last.\r\n            this.absolutes(creature, effectsService, isDC, skillLevel, ability).forEach(effect => {\r\n                result = parseInt(effect.setValue)\r\n                explain = effect.source + \": \" + effect.setValue;\r\n                if (effect.source.includes(\"Assurance\")) {\r\n                    noRelatives = true;\r\n                }\r\n            });\r\n            let relatives: Effect[] = [];\r\n            //Familiars apply the characters skill value (before circumstance and status effects) on saves\r\n            //We get this by calculating the skill's baseValue and adding effects that aren't circumstance or status effects.\r\n            if (creature.type == \"Familiar\") {\r\n                let character = characterService.get_Character();\r\n                if ([\"Fortitude\", \"Reflex\", \"Will\"].includes(this.name)) {\r\n                    if (baseValue == undefined) {\r\n                        baseValue = this.baseValue(character, characterService, abilitiesService, effectsService, charLevel)\r\n                    }\r\n                    this.absolutes(character, effectsService, isDC, baseValue.skillLevel, baseValue.ability).forEach(effect => {\r\n                        baseValue.result = parseInt(effect.setValue)\r\n                        baseValue.explain = effect.source + \": \" + effect.setValue;\r\n                    });\r\n                    relatives.push(...this.relatives(character, effectsService, isDC, baseValue.skillLevel, baseValue.ability).filter(effect => effect.type != \"circumstance\" && effect.type != \"status\"));\r\n                }\r\n            }\r\n            //Get all active relative effects on this and sum them up\r\n            if (!noRelatives) {\r\n                relatives.push(...this.relatives(creature, effectsService, isDC, baseValue.skillLevel, baseValue.ability));\r\n                relatives.forEach(effect => {\r\n\r\n                    result += parseInt(effect.value);\r\n                    explain += \"\\n\" + effect.source + \": \" + effect.value;\r\n                });\r\n            }\r\n        }\r\n        return { result: result, explain: explain.trim() };\r\n    }\r\n}","export class FormulaChoice {\r\n    public readonly _className: string = this.constructor.name;\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { SkillChoice } from 'src/app/SkillChoice';\r\nimport { Level } from 'src/app/Level';\r\nimport { Skill } from 'src/app/Skill';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-skillchoice',\r\n    templateUrl: './skillchoice.component.html',\r\n    styleUrls: ['./skillchoice.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SkillchoiceComponent implements OnInit {\r\n\r\n    @Input()\r\n    choice: SkillChoice\r\n    @Input()\r\n    showChoice: string = \"\";\r\n    @Output()\r\n    showSkillChoiceMessage = new EventEmitter<{ name: string, levelNumber: number, choice: SkillChoice }>();\r\n    @Input()\r\n    levelNumber: number = 0;\r\n    @Input()\r\n    excludeTemporary: boolean = false;\r\n    @Input()\r\n    showTitle: boolean = true;\r\n    @Input()\r\n    showContent: boolean = true;\r\n    @Input()\r\n    tileMode: boolean = false;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        public characterService: CharacterService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    toggle_List(name: string) {\r\n        if (this.showChoice == name) {\r\n            this.showChoice = \"\";\r\n            this.showSkillChoiceMessage.emit({ name: this.showChoice, levelNumber: 0, choice: null });\r\n        } else {\r\n            this.showChoice = name;\r\n            this.showSkillChoiceMessage.emit({ name: this.showChoice, levelNumber: this.levelNumber, choice: this.choice });\r\n        }\r\n    }\r\n\r\n    get_ShowChoice() {\r\n        return this.showChoice;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_TileMode() {\r\n        return this.tileMode;\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    get_ButtonTitle(maxAvailable: number) {\r\n        let title: string = \"Skill \";\r\n        if (this.choice.maxRank == 2) {\r\n            title += \"Training\";\r\n        } else {\r\n            title += \"Increase\";\r\n        }\r\n        title += \" (\" + this.choice.source + \")\";\r\n        if (maxAvailable > 1) {\r\n            title += \": \" + this.choice.increases.length + \"/\" + (maxAvailable);\r\n        } else {\r\n            if (this.choice.increases.length) {\r\n                title += \": \" + this.choice.increases[0].name;\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n\r\n    get_Abilities(name: string = \"\") {\r\n        return this.characterService.get_Abilities(name)\r\n    }\r\n\r\n    get_Skills(name: string = \"\", type: string = \"\", locked: boolean = undefined) {\r\n        return this.characterService.get_Skills(this.get_Character(), name, type, locked)\r\n    }\r\n\r\n    get_SkillLevel(skill: Skill) {\r\n        return skill.level(this.get_Character(), this.characterService, this.levelNumber, true);\r\n    }\r\n\r\n    get_SkillLevelName(skillLevel: number, short: boolean = false) {\r\n        return this.characterService.get_SkillLevelName(skillLevel, short);\r\n    }\r\n\r\n    get_INT(levelNumber: number) {\r\n        if (!levelNumber) {\r\n            return 0;\r\n        }\r\n        //We have to calculate the modifier instead of getting .mod() because we don't want any effects in the character building interface.\r\n        let intelligence: number = this.get_Abilities(\"Intelligence\")[0].baseValue(this.get_Character(), this.characterService, levelNumber).result;\r\n        let INT: number = Math.floor((intelligence - 10) / 2);\r\n        return INT;\r\n    }\r\n\r\n    get_SkillINTBonus() {\r\n        //Allow INT more skills if INT has been raised since the last level.\r\n        let levelNumber = parseInt(this.choice.id.split(\"-\")[0]);\r\n        if (this.choice.source == \"Intelligence\") {\r\n            return this.get_INT(levelNumber) - this.get_INT(levelNumber - 1);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get_Available() {\r\n        return this.choice.available + this.get_SkillINTBonus();\r\n    }\r\n\r\n    get_AvailableSkills(choice: SkillChoice, levelNumber: number, maxAvailable: number) {\r\n        let skills = this.get_Skills('', choice.type, false);\r\n        if (choice.filter.length) {\r\n            //Only filter the choice if enough of the filtered skills can be raised.\r\n            if (choice.filter.map(skillName => this.get_Skills(skillName)[0]).filter(skill => skill && !this.cannotIncrease(skill, levelNumber, choice).length).length >= maxAvailable) {\r\n                skills = skills.filter(skill => choice.filter.includes(skill.name))\r\n            }\r\n        }\r\n        if (choice.minRank) {\r\n            let character = this.get_Character();\r\n            skills = skills.filter(skill => skill.level(character, this.characterService, levelNumber) >= choice.minRank);\r\n        }\r\n        if (skills.length) {\r\n            let showOtherOptions = this.get_Character().settings.showOtherOptions;\r\n            return skills\r\n                .filter(skill => (\r\n                    this.skillIncreasedByThis(skill, choice) ||\r\n                    (\r\n                        (\r\n                            showOtherOptions ||\r\n                            choice.increases.length < maxAvailable\r\n                        ) &&\r\n                        //Don't show unavailable skills if this choice is visible on the character sheet.\r\n                        (choice.showOnSheet ? !this.cannotIncrease(skill, levelNumber, choice).length : true)\r\n                    )\r\n                ))\r\n                .sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n        }\r\n    }\r\n\r\n    someIllegal(choice: SkillChoice) {\r\n        let anytrue = 0;\r\n        choice.increases.forEach(increase => {\r\n            let levelNumber = parseInt(choice.id.split(\"-\")[0]);\r\n            //Temporary choices are compared to the character level, not their own.\r\n            if (choice.showOnSheet) {\r\n                levelNumber = this.get_Character().level;\r\n            }\r\n            if (!this.get_Skills(increase.name)[0].isLegal(this.get_Character(), this.characterService, levelNumber, choice.maxRank)) {\r\n                if (!increase.locked) {\r\n                    this.get_Character().increase_Skill(this.characterService, increase.name, false, choice, increase.locked);\r\n                    this.characterService.process_ToChange();\r\n                } else {\r\n                    anytrue += 1;\r\n                }\r\n            }\r\n        });\r\n        return anytrue;\r\n    }\r\n\r\n    cannotIncrease(skill: Skill, levelNumber: number, choice: SkillChoice) {\r\n        //Returns a string of reasons why the skill cannot be increased, or []. Test the length of the return if you need a boolean.\r\n        let maxRank: number = choice.maxRank;\r\n        let reasons: string[] = [];\r\n        //The skill may have been increased by the same source, but as a fixed rule.\r\n        if (choice.increases.some(increase => increase.name == skill.name && increase.locked)) {\r\n            let locked = \"Fixed increase.\";\r\n            reasons.push(locked);\r\n        }\r\n        //If this skill was trained by a feat on a higher level, it can't be raised on this level.\r\n        //This prevents losing the feat bonus or raising the skill too high.\r\n        //An exception is made for Additional Lore, which can be raised on Level 3, 7 and 15 no matter when you learned it\r\n        let allIncreases = this.get_SkillIncreases(levelNumber + 1, 20, skill.name, \"\", \"\", undefined, true);\r\n        if (allIncreases.length > 0) {\r\n            if (allIncreases[0].locked && allIncreases[0].source.includes(\"Feat: \") && allIncreases[0].source != \"Feat: Additional Lore\") {\r\n                let trainedOnHigherLevelByFeat = \"Trained on a higher level by \" + allIncreases[0].source + \".\";\r\n                reasons.push(trainedOnHigherLevelByFeat);\r\n            }\r\n            //If this is a temporary choice, and the character has raised the skill higher than the temporary choice allows, the choice is illegal.\r\n            if (choice.showOnSheet && allIncreases.length * 2 > choice.maxRank) {\r\n                let trainedOnHigherLevel = \"Trained on a higher level.\";\r\n                reasons.push(trainedOnHigherLevel);\r\n            }\r\n        }\r\n        //Check if this skill cannot be raised higher at this level, or if this method only allows a certain rank\r\n        // (e.g. for Feats that TRAIN a skill)\r\n        //This is only relevant if you haven't raised the skill on this level yet.\r\n        //If you have, we don't want to hear that it couldn't be raised again right away\r\n        let cannotIncreaseHigher = \"\";\r\n        //You can never raise a skill higher than Legendary (8)\r\n        if (skill.level(this.get_Character(), this.characterService, levelNumber, true) == 8 && !this.skillIncreasedByThis(skill, choice)) {\r\n            cannotIncreaseHigher = \"Cannot increase any higher.\";\r\n            reasons.push(cannotIncreaseHigher);\r\n        } else if (!skill.canIncrease(this.get_Character(), this.characterService, levelNumber, maxRank) && !this.skillIncreasedByThis(skill, choice)) {\r\n            if (!skill.canIncrease(this.get_Character(), this.characterService, levelNumber)) {\r\n                cannotIncreaseHigher = \"Highest rank at this level.\";\r\n            } else {\r\n                if (choice.maxRank == 2) {\r\n                    cannotIncreaseHigher = \"Already trained.\";\r\n                } else {\r\n                    cannotIncreaseHigher = \"Highest rank for this increase.\";\r\n                }\r\n            }\r\n            reasons.push(cannotIncreaseHigher);\r\n        }\r\n        //You can never raise Bardic Lore\r\n        if (skill.name == \"Lore: Bardic\") {\r\n            reasons.push(\"Cannot increase with skill training.\")\r\n        }\r\n        return reasons;\r\n    }\r\n\r\n    skillIncreasedByThis(skill: Skill, choice: SkillChoice) {\r\n        return choice.increases.filter(increase => increase.name == skill.name).length\r\n    }\r\n\r\n    skillLockedByThis(skill: Skill, choice: SkillChoice) {\r\n        return choice.increases.filter(increase => increase.name == skill.name && increase.locked).length\r\n    }\r\n\r\n    get_SkillIncreases(minLevelNumber: number, maxLevelNumber: number, skillName: string, source: string = \"\", sourceId: string = \"\", locked: boolean = undefined, excludeTemporary: boolean = false) {\r\n        return this.get_Character().get_SkillIncreases(this.characterService, minLevelNumber, maxLevelNumber, skillName, source, sourceId, locked, excludeTemporary);\r\n    }\r\n\r\n    on_SkillIncrease(skillName: string, boost: boolean, choice: SkillChoice, locked: boolean = false, maxAvailable: number) {\r\n        if (boost && this.get_Character().settings.autoCloseChoices && (choice.increases.length == maxAvailable - 1)) { this.toggle_List(\"\"); }\r\n        this.get_Character().increase_Skill(this.characterService, skillName, boost, choice, locked);\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading();\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"skillchoices\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"skillchoices\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.levelNumber) {\r\n            this.levelNumber = this.get_Character().level;\r\n        }\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<ng-container *ngFor=\"let listID of [choice.id]; trackBy:trackByIndex;\">\r\n    <ng-container *ngFor=\"let maxAvailable of [get_Available()]; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let buttonTitle of [get_ButtonTitle(maxAvailable)]; trackBy:trackByIndex;\">\r\n            <div *ngIf=\"maxAvailable\"\r\n                [ngClass]=\"{'list-item': showTitle && !get_TileMode(), 'problem':(choice.increases.length > maxAvailable || someIllegal(choice)), 'fullsize-only':(choice.increases.length == maxAvailable)}\">\r\n                <!--Choice button shows in title mode-->\r\n                <!--List mode button-->\r\n                <button class=\"newrow left-aligned sublist-toggle skillincrease\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(choice.increases.length == maxAvailable), 'activechoice':get_ShowChoice()==listID && !choice.showOnSheet}\"\r\n                    (click)=\"toggle_List(listID)\" *ngIf=\"showTitle && (!get_TileMode() || choice.showOnSheet)\">\r\n                    {{buttonTitle}}\r\n                </button>\r\n                <!--Tile mode button-->\r\n                <button class=\"skillincrease\" (click)=\"toggle_List(listID)\"\r\n                    *ngIf=\"showTitle && get_TileMode() && !choice.showOnSheet\"\r\n                    [ngClass]=\"{'fancy-button choicecleared':(choice.increases.length == maxAvailable), 'activechoice':get_ShowChoice()==listID && !choice.showOnSheet}\">\r\n                    <app-gridIcon class=\"skillincrease\" [ngbTooltip]=\"buttonTitle\"\r\n                        [superTitle]=\"maxAvailable.toString()\"\r\n                        [title]=\"(maxAvailable == 1 && choice.increases.length) ? choice.increases[0].name : ((maxAvailable > 1 && choice.increases.length > 0) ? choice.increases.length.toString() : '')\"\r\n                        [ngClass]=\"{'fancy-button':(choice.increases.length == maxAvailable)}\">\r\n                    </app-gridIcon>\r\n                </button>\r\n                <!--Choice title shows above content in content only mode-->\r\n                <div class=\"newrow list-item padding-8 center-aligned\" *ngIf=\"!showTitle\">\r\n                    <header class=\"box-header sectionHeader\">\r\n                        {{buttonTitle}}\r\n                    </header>\r\n                </div>\r\n                <!--Choice content shows in content mode-->\r\n                <div id=\"{{!showTitle ? 'choiceArea' : ''}}\" class=\"list-item sublist skillincrease\"\r\n                    [ngClass]=\"{'list-item sublist':showTitle, 'fancy-list':showTitle && (choice.increases.length == maxAvailable), 'charactersheet-app':!showTitle}\"\r\n                    *ngIf=\"showContent && get_ShowChoice()==listID\">\r\n                    <ng-container\r\n                        *ngFor=\"let skill of get_AvailableSkills(choice, levelNumber, maxAvailable); trackBy:trackByIndex;\">\r\n                        <ng-container\r\n                            *ngFor=\"let increased of [skillIncreasedByThis(skill, choice)]; trackBy:trackByIndex;\">\r\n                            <ng-container *ngFor=\"let skillLevel of [get_SkillLevel(skill)]; trackBy:trackByIndex;\">\r\n                                <ng-container\r\n                                    *ngFor=\"let checked of [increased || skillLevel >= choice.maxRank]; trackBy:trackByIndex;\">\r\n                                    <ng-container\r\n                                        *ngFor=\"let disabled of [skillLockedByThis(skill, choice) || (((choice.increases.length >= maxAvailable) || cannotIncrease(skill, levelNumber, choice).length) && !increased)]\">\r\n                                        <div class=\"list-item gridicon-fullsizebox\" triggers=\"click\"\r\n                                            [ngClass]=\"{'selected':increased}\">\r\n                                            <input class=\"character-choice\" id=\"{{skill.name}}\" type=\"checkbox\"\r\n                                                (change)=\"on_SkillIncrease(skill.name, $event.target.checked, choice, false, maxAvailable)\"\r\n                                                [checked]=\"checked\" [disabled]=\"disabled\">\r\n                                            <div class=\"gridicon-fullsizebox\">\r\n                                                <app-gridIcon [title]=\"skill.name\"\r\n                                                    [ngbPopover]=\"get_SkillLevelName(skillLevel, false)\"\r\n                                                    [superTitle]=\"get_SkillLevelName(skillLevel, true)\">\r\n                                                </app-gridIcon>\r\n                                                <header class=\"sectionHeader\">\r\n                                                    <span>\r\n                                                        {{skill.name}}{{skill.ability ? \" (\" +\r\n                                                        skill.ability.substr(0,3) + \")\" : \"\"}}&nbsp;\r\n                                                    </span>\r\n                                                    <cite class=\"problem\"\r\n                                                        *ngFor=\"let reason of cannotIncrease(skill, levelNumber, choice); trackBy:trackByIndex;\">\r\n                                                        {{reason}}\r\n                                                    </cite>\r\n                                                    <cite class=\"problem\"\r\n                                                        [ngbPopover]=\"'This skill was raised higher than allowed.'\"\r\n                                                        openDelay=100\r\n                                                        *ngIf=\"!skill.isLegal(get_Character(), this.characterService, levelNumber) || (!skill.isLegal(get_Character(), this.characterService, levelNumber, choice.maxRank) && skillIncreasedByThis(skill, choice))\">\r\n                                                        Too high\r\n                                                    </cite>\r\n                                                </header>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { ConditionGain } from '../ConditionGain';\r\nimport { Health } from '../Health';\r\nimport { Character } from '../Character';\r\nimport { AnimalCompanion } from '../AnimalCompanion';\r\nimport { TimeService } from '../time.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbPopoverConfig, NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-health',\r\n    templateUrl: './health.component.html',\r\n    styleUrls: ['./health.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HealthComponent implements OnInit {\r\n\r\n    @Input()\r\n    creature: string = \"Character\";\r\n    @Input()\r\n    public showMinimizeButton: boolean = true;\r\n    @Input()\r\n    public sheetSide: string = \"left\";\r\n\r\n    public damage: number = 0;\r\n    public nonlethal: boolean = false;\r\n    public healing: number = 0;\r\n    public setTempHP: number = 0;\r\n    public selectedTempHP: { amount: number, source: string, sourceId: string };\r\n    public Math = Math;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private spellsService: SpellsService,\r\n        public characterService: CharacterService,\r\n        public effectsService: EffectsService,\r\n        private conditionsService: ConditionsService,\r\n        popoverConfig: NgbPopoverConfig,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.healthMinimized = !this.characterService.get_Character().settings.healthMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        switch (this.creature) {\r\n            case \"Character\":\r\n                return this.characterService.get_Character().settings.healthMinimized;\r\n            case \"Companion\":\r\n                return this.characterService.get_Character().settings.companionMinimized;\r\n            case \"Familiar\":\r\n                return this.characterService.get_Character().settings.familiarMinimized;\r\n        }\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    get_Creature() {\r\n        return this.characterService.get_Creature(this.creature);\r\n    }\r\n\r\n    get_Character() {\r\n        return this.characterService.get_Character();\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Waiting(duration: number) {\r\n        let result: string = \"\";\r\n        this.characterService.get_Creatures().forEach(creature => {\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.nextStage < duration && gain.nextStage > 0) || gain.nextStage == -1)) {\r\n                result = \"One or more conditions\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need your attention before you can rest.\";\r\n            }\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.duration == 1))) {\r\n                result = \"One or more instant effects\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need to be resolved before you can rest.\";\r\n            }\r\n            if (this.characterService.get_Health(creature).temporaryHP.length > 1) {\r\n                result = \"You need to select one set of temporary Hit Points\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" before you can rest.\";\r\n            }\r\n            if (this.effectsService.get_EffectsOnThis(creature, \"Resting Blocked\").length) {\r\n                result = \"An effect\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" is keeping you from resting.\"\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    rest() {\r\n        this.timeService.rest(this.characterService, this.conditionsService, this.itemsService, this.spellsService);\r\n    }\r\n\r\n    die(reason: string) {\r\n        if (this.characterService.get_AppliedConditions(this.get_Creature(), \"Dead\").length == 0) {\r\n            this.characterService.add_Condition(this.get_Creature(), Object.assign(new ConditionGain, { name: \"Dead\", source: reason }), false)\r\n            this.characterService.get_AppliedConditions(this.get_Creature(), \"Doomed\").forEach(gain => {\r\n                this.characterService.remove_Condition(this.get_Creature(), gain, false);\r\n            })\r\n        }\r\n    }\r\n\r\n    get_Health() {\r\n        return this.characterService.get_Health(this.get_Creature());\r\n    }\r\n\r\n    calculate_Health(health: Health) {\r\n        let calculatedHealth = health.calculate(this.get_Creature(), this.characterService, this.effectsService);\r\n        if (calculatedHealth.dying >= calculatedHealth.maxDying) {\r\n            if (this.characterService.get_AppliedConditions(this.get_Creature(), \"Doomed\").length) {\r\n                this.die(\"Doomed\");\r\n            } else {\r\n                this.die(\"Dying value too high\");\r\n            }\r\n        }\r\n        return calculatedHealth;\r\n    }\r\n\r\n    on_DyingSave(success, maxDying: number) {\r\n        if (success) {\r\n            //Reduce all dying conditions by 1\r\n            //Conditions with Value 0 get cleaned up in the conditions Service\r\n            //Wounded is added automatically when Dying is removed\r\n            this.characterService.get_AppliedConditions(this.get_Creature(), \"Dying\").forEach(gain => {\r\n                gain.value = Math.max(gain.value - 1, 0);\r\n            })\r\n        } else {\r\n            this.characterService.get_AppliedConditions(this.get_Creature(), \"Dying\").forEach(gain => {\r\n                gain.value = Math.min(gain.value + 1, maxDying);\r\n            })\r\n            if (this.get_Health().dying(this.get_Creature(), this.characterService) >= maxDying) {\r\n                this.die(\"Failed Dying Save\");\r\n            }\r\n        }\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_HeroPointRecover() {\r\n        this.characterService.get_AppliedConditions(this.get_Creature(), \"Dying\").forEach(gain => {\r\n            this.characterService.remove_Condition(this.get_Creature(), gain, false, false, false);\r\n        });\r\n        this.get_Character().heroPoints = 0;\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.set_ToChange(this.creature, \"general\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_HealWounded() {\r\n        this.characterService.get_AppliedConditions(this.get_Creature(), \"Wounded\").forEach(gain => {\r\n            this.characterService.remove_Condition(this.get_Creature(), gain, false);\r\n        })\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_NumbToDeath() {\r\n        if (this.get_Creature().type == \"Character\") {\r\n            return this.get_Character().get_FeatsTaken(0, this.get_Character().level, \"Numb to Death\").length;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    on_Heal(health: Health, dying: number) {\r\n        health.heal(this.get_Creature(), this.characterService, this.effectsService, this.healing, true, true, dying);\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_NumbToDeath(health: Health, dying: number) {\r\n        health.heal(this.get_Creature(), this.characterService, this.effectsService, this.get_Character().level, true, false, dying);\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TakeDamage(health: Health, wounded: number, dying: number) {\r\n        health.takeDamage(this.get_Creature(), this.characterService, this.effectsService, this.damage, this.nonlethal, wounded, dying);\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    set_TempHP(amount: number) {\r\n        this.get_Health().temporaryHP[0] = { amount: amount, source: \"Manual\", sourceId: \"\" };\r\n        this.get_Health().temporaryHP.length = 1;\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    on_TempHPSelected(tempSet: { amount: number, source: string, sourceId: string }) {\r\n        this.get_Health().temporaryHP[0] = tempSet;\r\n        this.get_Health().temporaryHP.length = 1;\r\n        this.characterService.set_ToChange(this.creature, \"health\");\r\n        this.characterService.set_ToChange(this.creature, \"effects\");\r\n        //Update Health and Time because having multiple temporary HP keeps you from ticking time and resting.\r\n        this.characterService.set_ToChange(\"Character\", \"health\");\r\n        this.characterService.set_ToChange(\"Character\", \"time\");\r\n        this.characterService.process_ToChange();\r\n    }\r\n\r\n    get_Resistances() {\r\n        //There should be no absolutes in resistances. If there are, they will be treated as relatives here.\r\n        let effects = this.effectsService.get_Effects(this.creature).all.filter(effect =>\r\n            effect.creature == this.get_Creature().id && (effect.target.toLowerCase().includes(\"resistance\") ||\r\n                effect.target.toLowerCase().includes(\"hardness\")) && effect.apply);\r\n        let resistances: { target: string, value: number, source: string }[] = [];\r\n        effects.forEach(effect => {\r\n            let value = effect.value || effect.setValue;\r\n            let resistance = resistances.find(res => res.target == effect.target);\r\n            if (resistance) {\r\n                resistance.value += parseInt(value);\r\n                resistance.source += \"\\n\" + effect.source;\r\n            } else {\r\n                resistances.push({ target: effect.target, value: parseInt(value), source: effect.source });\r\n            }\r\n        });\r\n        resistances.forEach((res: { target: string, value: number, source: string }) => {\r\n            if (res.value < 0) {\r\n                res.target = res.target.toLowerCase().replace(\"resistance\", \"weakness\");\r\n            }\r\n            res.target = res.target.split(\" \").map(word => word[0].toUpperCase() + word.substr(1).toLowerCase()).join(\" \");\r\n            if (res.source.includes(\"\\n\")) {\r\n                res.source = \"\\n\" + res.source;\r\n            }\r\n        });\r\n        return resistances;\r\n    }\r\n\r\n    get_Immunities() {\r\n        let effects = this.effectsService.get_Effects(this.creature).all.filter(effect =>\r\n            effect.creature == this.get_Creature().id && (effect.target.toLowerCase().includes(\"immunity\")));\r\n        let immunities: any[] = [];\r\n        effects.forEach(effect => {\r\n            if (!immunities.some(res => res.target == effect.target)) {\r\n                immunities.push({ target: effect.target, source: effect.source });\r\n            }\r\n        });\r\n        immunities.forEach((res: { value: number, target: string }) => {\r\n            res.target = res.target.split(\" \").map(word => word[0].toUpperCase() + word.substr(1).toLowerCase()).join(\" \");\r\n        });\r\n        return immunities;\r\n    }\r\n\r\n    get_AbsolutesOnThis(name: string) {\r\n        return this.effectsService.get_AbsolutesOnThis(this.get_Creature(), name);\r\n    }\r\n\r\n    show_BonusesOnThis(name: string) {\r\n        return this.effectsService.show_BonusesOnThis(this.get_Creature(), name);\r\n    }\r\n\r\n    show_PenaltiesOnThis(name: string) {\r\n        return this.effectsService.show_PenaltiesOnThis(this.get_Creature(), name);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"health\", \"all\", this.creature.toLowerCase()].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == this.creature.toLowerCase() && [\"health\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all information.' : 'Click to show compact information.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\"\r\n    *ngIf=\"creature=='Character' && showMinimizeButton\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"{{creature}}-health-height\" class=\"attributeBox\">\r\n    <ng-container *ngFor=\"let health of [get_Health()]; trackBy:trackByIndex\">\r\n        <ng-container *ngFor=\"let calculatedHealth of [calculate_Health(health)]; trackBy:trackByIndex;\">\r\n            <header class=\"sectionHeader box-header\">Health:\r\n                <span\r\n                    [ngClass]=\"{'penalty':(calculatedHealth.currentHP.result <= 0), 'bonus':(calculatedHealth.currentHP.result > calculatedHealth.maxHP.result)}\"\r\n                    [ngbPopover]=\"calculatedHealth.currentHP.explain\">{{calculatedHealth.currentHP.result}}</span> Hit\r\n                Points\r\n            </header>\r\n            <app-tags [creature]=\"creature\" [objectName]=\"'Health'\" [showTraits]=true [showFeats]=true [showItems]=true\r\n                [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n            <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n            <ng-container *ngIf=\"!still_loading()\">\r\n                <div [ngbTooltip]=\"get_Waiting(48000) || 'Rest for 8 hours and make your daily preparations.'\">\r\n                    <button class=\"list-item center-aligned\" (click)=\"rest()\" [disabled]=\"get_Waiting(48000).length\"\r\n                        *ngIf=\"creature=='Character'\">Rest</button>\r\n                </div>\r\n                <app-tags [creature]=\"creature\" [objectName]=\"'Rest'\" [showTraits]=true [showFeats]=true\r\n                    [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                <div class=\"fullsize-only list-item\">\r\n                    <div class=\"newrow\">\r\n                        <strong>Max HP</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngbPopover]=\"calculatedHealth.maxHP.explain\"\r\n                                [ngClass]=\"{'penalty':show_PenaltiesOnThis('Max HP'), 'bonus':show_BonusesOnThis('Max HP'), 'absolute':get_AbsolutesOnThis('Max HP').length}\">\r\n                                {{calculatedHealth.maxHP.result}}\r\n                            </div>\r\n                        </span>\r\n                        <strong>Temp HP</strong>\r\n                        <span *ngIf=\"health.temporaryHP.length > 1\">\r\n                            <select [(ngModel)]=\"selectedTempHP\" (change)=\"on_TempHPSelected(selectedTempHP)\">\r\n                                <option *ngFor=\"let tempHPSet of health.temporaryHP; trackBy:trackByIndex;\"\r\n                                    [ngValue]=\"tempHPSet\">\r\n                                    {{tempHPSet.amount + (tempHPSet.source ? \" (\" + tempHPSet.source + \")\" : \"\")}}\r\n                                </option>\r\n                            </select>\r\n                        </span>\r\n                        <span *ngIf=\"health.temporaryHP.length == 1\">\r\n                            <div class=\"value\"\r\n                                [ngbPopover]=\"health.temporaryHP[0].source ? 'Source: ' + health.temporaryHP[0].source : ''\"\r\n                                [ngClass]=\"{'bonus':(health.temporaryHP[0].amount > 0)}\">\r\n                                {{health.temporaryHP[0].amount}}\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"newrow\">\r\n                        <app-tags [creature]=\"creature\" [objectName]=\"'Max HP'\" [showTraits]=true [showFeats]=true\r\n                            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                    </div>\r\n                </div>\r\n                <div class=\"list-item\" [ngClass]=\"{'fullsize-only':(calculatedHealth.dying <= 0)}\">\r\n                    <div class=\"newrow\">\r\n                        <strong>Dying</strong>\r\n                        <span>\r\n                            <div class=\"value\" [ngClass]=\"{'penalty':(calculatedHealth.dying > 0)}\">\r\n                                {{calculatedHealth.dying}}\r\n                            </div>\r\n                        </span>\r\n                        <strong>Max Dying</strong>\r\n                        <span>\r\n                            <div class=\"value\"\r\n                                [ngClass]=\"{'penalty':show_PenaltiesOnThis('Max Dying'), 'bonus':show_BonusesOnThis('Max Dying'), 'absolute':get_AbsolutesOnThis('Max Dying').length}\">\r\n                                {{calculatedHealth.maxDying}}\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"newrow\" *ngIf=\"calculatedHealth.dying > 0\">\r\n                        <span>\r\n                            <button (click)=\"on_DyingSave(true, calculatedHealth.maxDying)\">Save\r\n                            </button>\r\n                        </span>\r\n                        <span>\r\n                            <button (click)=\"on_DyingSave(false, calculatedHealth.maxDying)\">Fail Save\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"newrow\" *ngIf=\"calculatedHealth.dying > 0 && creature == 'Character'\">\r\n                        <button (click)=\"on_HeroPointRecover()\" [disabled]=\"!get_Character().heroPoints\">Use all hero\r\n                            points\r\n                            to recover\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"newrow\">\r\n                        <app-tags [creature]=\"creature\" [objectName]=\"'Max Dying'\" [showTraits]=true [showFeats]=true\r\n                            [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                    </div>\r\n                </div>\r\n                <div class=\"newrow list-item\" [ngClass]=\"{'fullsize-only':(calculatedHealth.wounded <= 0)}\">\r\n                    <strong>Wounded</strong>\r\n                    <span>\r\n                        <div class=\"value\" [ngClass]=\"{'penalty':(calculatedHealth.wounded > 0)}\">\r\n                            {{calculatedHealth.wounded}}\r\n                        </div>\r\n                    </span>\r\n                    <span *ngIf=\"calculatedHealth.wounded > 0\">\r\n                        <button (click)=\"on_HealWounded()\">Heal</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"list-item newrow\">\r\n                    <span>\r\n                        <strong>Take Damage</strong>\r\n                    </span>\r\n                    <span>\r\n                        <input id=\"nonlethal\" type=\"checkbox\" [(ngModel)]=\"nonlethal\"><label\r\n                            for=\"nonlethal\">&nbsp;nonlethal</label>\r\n                    </span>\r\n                    <span>\r\n                        <input class=\"number4\" type=\"number\" [(ngModel)]=\"damage\" maxLength=\"3\">\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"damage <= 0\"\r\n                            (click)=\"on_TakeDamage(health, calculatedHealth.wounded, calculatedHealth.dying)\">Ouch!</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"list-item newrow\">\r\n                    <span>\r\n                        <strong>Heal Damage</strong>\r\n                    </span>\r\n                    <span>&nbsp;</span>\r\n                    <span>\r\n                        <input class=\"number4\" type=\"number\" [(ngModel)]=\"healing\" maxLength=\"3\">\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"healing <= 0\"\r\n                            (click)=\"on_Heal(health, calculatedHealth.dying)\">Heal</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"list-item newrow\" *ngIf=\"get_NumbToDeath()\"\r\n                    [ngClass]=\"{'fullsize-only':(calculatedHealth.dying <= 0)}\">\r\n                    <span>\r\n                        <strong>Numb to Death</strong>\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"calculatedHealth.dying <= 0\"\r\n                            (click)=\"on_NumbToDeath(health, calculatedHealth.dying)\">Heal\r\n                            and recover</button>\r\n                    </span>\r\n                </div>\r\n                <div class=\"fullsize-only list-item newrow\">\r\n                    <span>\r\n                        <strong>Temp HP</strong>\r\n                    </span>\r\n                    <span>&nbsp;</span>\r\n                    <span>\r\n                        <input class=\"number4\" type=\"number\" [(ngModel)]=\"setTempHP\" maxLength=\"3\">\r\n                    </span>\r\n                    <span>\r\n                        <button [disabled]=\"setTempHP < 0\" (click)=\"set_TempHP(setTempHP)\">Set</button>\r\n                    </span>\r\n                </div>\r\n                <header class=\"subsectionHeader\">Resistances</header>\r\n                <ng-container *ngFor=\"let resistances of [get_Resistances()]; let index = index; trackBy:trackByIndex;\">\r\n                    <div class=\"list-item\" *ngIf=\"resistances.length\">\r\n                        <div class=\"newrow\" *ngFor=\"let resistance of resistances; trackBy:trackByIndex;\">\r\n                            <span>\r\n                                <ng-template #ResistanceSourceTemplate>\r\n                                    <strong>Source{{resistance.source.includes('\\n') ? 's' : ''}}</strong>\r\n                                    {{resistance.source}}\r\n                                </ng-template>\r\n                                <span [ngbPopover]=\"ResistanceSourceTemplate\"\r\n                                    [ngClass]=\"(resistance.value < 0) ? 'penalty' : 'bonus'\">{{resistance.target}}:\r\n                                    {{Math.abs(resistance.value)}}</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <app-tags [creature]=\"creature\" [objectName]=\"'Resistances'\" [showTraits]=true [showFeats]=true\r\n                        [showItems]=true [showActivities]=true [showConditions]=true [showEffects]=true></app-tags>\r\n                </ng-container>\r\n                <ng-container *ngFor=\"let immunities of [get_Immunities()]; trackBy:trackByIndex;\">\r\n                    <header class=\"subsectionHeader\" *ngIf=\"immunities.length\">Immunities</header>\r\n                    <div class=\"list-item\" *ngIf=\"immunities.length\">\r\n                        <div class=\"newrow\" *ngFor=\"let immunity of immunities; trackBy:trackByIndex;\">\r\n                            <span [ngbPopover]=\"'Source: ' + immunity.source\" class=\"bonus\">{{immunity.target}}</span>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>","import { AbilityChoice } from './AbilityChoice';\r\nimport { ItemGain } from './ItemGain';\r\nimport { FeatChoice } from './FeatChoice';\r\nimport { HeritageGain } from './HeritageGain';\r\n\r\nexport class Ancestry {\r\n    public readonly _className: string = this.constructor.name;\r\n    public abilityChoices: AbilityChoice[] = [];\r\n    public ancestries: string[] = [];\r\n    public baseLanguages: number = 0;\r\n    public desc: {name:string, value:string}[] = [];\r\n    public featChoices: FeatChoice[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public heritages: string[] = [];\r\n    public hitPoints: number = 0;\r\n    public languages: string[] = [];\r\n    public name: string = \"\";\r\n    public recommendedLanguages: string[] = [];\r\n    public senses: string[] = [];\r\n    public sourceBook: string = \"\";\r\n    public size: number = 0;\r\n    public speeds: {name:string, value:number}[] = [];\r\n    public traits: string[] = [];\r\n}","import core from './core.json';\r\nimport custom_kitsune from './custom_kitsune.json';\r\nexport {\r\n    core,\r\n    custom_kitsune\r\n};","import { SpellDesc } from './SpellDesc';\r\nimport { CharacterService } from './character.service';\r\nimport { SpellGain } from './SpellGain';\r\nimport { ConditionGain } from './ConditionGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { SpellCasting } from './SpellCasting';\r\nimport { SpellChoice } from './SpellChoice';\r\nimport { SpellCast } from './SpellCast';\r\nimport { EffectsService } from './effects.service';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Spell {\r\n    public actions: string = \"1A\";\r\n    public allowReturnFocusPoint: boolean = false;\r\n    public area: string = \"\";\r\n    public castType: string = \"\";\r\n    public cost: string = \"\";\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    public desc10: SpellDesc[] = [];\r\n    public desc1: SpellDesc[] = [];\r\n    public desc2: SpellDesc[] = [];\r\n    public desc3: SpellDesc[] = [];\r\n    public desc4: SpellDesc[] = [];\r\n    public desc5: SpellDesc[] = [];\r\n    public desc6: SpellDesc[] = [];\r\n    public desc7: SpellDesc[] = [];\r\n    public desc8: SpellDesc[] = [];\r\n    public desc9: SpellDesc[] = [];\r\n    public desc: string = \"\";\r\n    public duration: string = \"\";\r\n    public failure: string = \"\";\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public heightened: {variable:string, value:string}[] = [];\r\n    public inputRequired: string = \"\";\r\n    public levelreq: number = 1;\r\n    public name: string = \"\";\r\n    public PFSnote: string = \"\";\r\n    public range: string = \"\";\r\n    public savingThrow: string = \"\";\r\n    public shortDesc: string = \"\";\r\n    public showSpells: SpellCast[] = [];\r\n    public sourceBook: string = \"\";\r\n    public success: string = \"\";\r\n    //Sustained spells are deactivated after this time (or permanent with -1, or when resting with -2)\r\n    public sustained: number = 0;\r\n    //target is used internally to determine whether you can cast this spell on yourself or your companion/familiar\r\n    //Should be \"\", \"self\", \"companion\" or \"ally\"\r\n    //For \"companion\", it can only be cast on the companion, for \"self\" only on yourself\r\n    //For \"ally\", it can be cast on companion, self and others\r\n    //For \"\", the spell button will just say \"Cast\"\r\n    public target: string = \"\";\r\n    public targets: string = \"\";\r\n    public singleTarget: boolean = false;\r\n    public traditions: string[] = [];\r\n    public traits: string[] = [];\r\n    public trigger: string = \"\";\r\n    get_DescriptionSet(levelNumber: number) {\r\n        //This descends from levelnumber downwards and returns the first available description.\r\n        switch (levelNumber) {\r\n            case 10: \r\n                if (this.desc10.length) { return this.desc10; }\r\n            case 9: \r\n                if (this.desc9.length) { return this.desc9; }\r\n            case 8: \r\n                if (this.desc8.length) { return this.desc8; }\r\n            case 7: \r\n                if (this.desc7.length) { return this.desc7; }\r\n            case 6: \r\n                if (this.desc6.length) { return this.desc6; }\r\n            case 5: \r\n                if (this.desc5.length) { return this.desc5; }\r\n            case 4: \r\n                if (this.desc4.length) { return this.desc4; }\r\n            case 3: \r\n                if (this.desc3.length) { return this.desc3; }\r\n            case 2: \r\n                if (this.desc2.length) { return this.desc2; }\r\n            case 1:\r\n                if (this.desc1.length) { return this.desc1; }\r\n            default:\r\n                return [];\r\n            }\r\n    }\r\n    get_Heightened(text: string, levelNumber: number) {\r\n        this.get_DescriptionSet(levelNumber).forEach((descVar: SpellDesc) => {\r\n            let regex = new RegExp(descVar.variable,\"g\")\r\n            text = text.replace(regex, (descVar.value || \"\"));\r\n        })\r\n        return text;\r\n    }\r\n    get_HeightenedConditions(levelNumber: number) {\r\n        //This descends through the level numbers, starting with levelNumber and returning the first set of ConditionGains found with a matching heightenedfilter.\r\n        //If a heightenedFilter is found, the unheightened ConditionGains are returned as well.\r\n        //If there are no ConditionGains with a heightenedFilter, return all.\r\n        if (!this.gainConditions.length || !this.gainConditions.find(gain => gain.heightenedFilter)) {\r\n            return this.gainConditions;\r\n        } else if (this.gainConditions.length) {\r\n            switch (levelNumber) {\r\n                case 10: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 10)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 10); }\r\n                case 9: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 9)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 9); }\r\n                case 8: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 8)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 8); }\r\n                case 7: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 7)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 7); }\r\n                case 6: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 6)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 6); }\r\n                case 5: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 5)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 5); }\r\n                case 4: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 4)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 4); }\r\n                case 3: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 3)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 3); }\r\n                case 2: \r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 2)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 2); }\r\n                case 1:\r\n                    if (this.gainConditions.some(gain => gain.heightenedFilter == 1)) { return this.gainConditions.filter(gain => !gain.heightenedFilter || gain.heightenedFilter == 1); }\r\n                default:\r\n                    return [];\r\n                }\r\n        }\r\n    }\r\n    meetsLevelReq(characterService: CharacterService, spellLevel: number = Math.ceil(characterService.get_Character().level / 2)) {\r\n        //If the spell has a levelreq, check if the level beats that.\r\n        //Returns [requirement met, requirement description]\r\n        let result: {met:boolean, desc:string};\r\n        if (this.levelreq && !this.traits.includes(\"Cantrip\")) {\r\n            if (spellLevel >= this.levelreq) {\r\n                result = {met:true, desc:\"Level \"+this.levelreq};\r\n                } else {\r\n                result = {met:false, desc:\"Level \"+this.levelreq};\r\n            }\r\n        } else {\r\n            result = {met:true, desc:\"\"};\r\n        }\r\n        return result;\r\n    }\r\n    canChoose(characterService: CharacterService, spellLevel: number = Math.ceil(characterService.get_Character().level / 2)) {\r\n        if (characterService.still_loading()) { return false }\r\n        if (spellLevel == -1) {\r\n            spellLevel = Math.ceil(characterService.get_Character().level / 2);\r\n        }\r\n        let levelreq: boolean = this.meetsLevelReq(characterService, spellLevel).met;\r\n        return levelreq;\r\n    }\r\n    have(characterService: CharacterService, casting: SpellCasting = undefined, spellLevel = this.levelreq, className: string = \"\", locked: boolean = undefined) {\r\n        if (characterService.still_loading()) { return false }\r\n        let character = characterService.get_Character();\r\n        let spellsTaken = character.get_SpellsTaken(characterService, 1, 20, spellLevel, this.name, undefined, className, \"\", \"\", \"\", \"\", locked);\r\n        return spellsTaken.length;\r\n    }\r\n    get_EffectiveSpellLevel(creature: Creature, baseLevel: number, characterService: CharacterService, effectsService: EffectsService) {\r\n        //Cantrips and Focus spells are automatically heightened to your maximum available spell level.\r\n        if (!baseLevel || baseLevel == -1) {\r\n            baseLevel = characterService.get_Character().get_SpellLevel();\r\n        }\r\n\r\n        //Apply all effects that might change the effective spell level of this spell.\r\n        let list = [\r\n            \"Spell Levels\",\r\n            this.name + \" Spell Level\"\r\n        ]\r\n        if (this.traditions.includes(\"Focus\")) {\r\n            list.push(\"Focus Spell Levels\");\r\n        }\r\n        if (this.traits.includes(\"Cantrip\")) {\r\n            list.push(\"Cantrip Spell Levels\");\r\n        }\r\n        characterService.effectsService.get_AbsolutesOnThese(creature, list).forEach(effect => {\r\n            if (parseInt(effect.setValue)) {\r\n                baseLevel = parseInt(effect.setValue);\r\n            }\r\n        })\r\n        characterService.effectsService.get_RelativesOnThese(creature, list).forEach(effect => {\r\n            if (parseInt(effect.value)) {\r\n                baseLevel += parseInt(effect.value);\r\n            }\r\n        })\r\n        \r\n        //If a spell is cast with a lower level than its minimum, the level is raised to the minimum.\r\n        return Math.max(baseLevel, (this.levelreq || 0))\r\n    }\r\n}","import { CharacterService } from './character.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Equipment } from './Equipment';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Character } from './Character';\r\nimport { SpecializationGain } from './SpecializationGain';\r\nimport { Specialization } from './Specialization';\r\nimport { ArmorMaterial } from './ArmorMaterial';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Armor extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Armor should be type \"armors\" to be found in the database\r\n    readonly type = \"armors\";\r\n    //For certain medium and light armors, set 1 if an \"Armored Skirt\" is equipped; For certain heavy armors, set -1 instead\r\n    //This value influences acbonus, skillpenalty, dexcap and strength\r\n    public $affectedByArmoredSkirt: -1 | 0 | 1 = 0;\r\n    //Shoddy armors give a penalty of -2 unless you have the Junk Tinker feat.\r\n    public $shoddy: -2 | 0 = 0;\r\n    //The armor's inherent bonus to AC\r\n    private acbonus: number = 0;\r\n    //What kind of armor is this based on? Needed for armor proficiencies for specific magical items.\r\n    public armorBase: string = \"\"\r\n    //The highest dex bonus to AC you can get while wearing this armor.\r\n    //-1 is unlimited.\r\n    public dexcap: number = -1;\r\n    //The armor group, needed for critical specialization effects\r\n    public group: string = \"\";\r\n    //Armor are usually moddable like armor. Armor that cannot be modded should be set to \"-\"\r\n    moddable = \"armor\" as \"\" | \"-\" | \"weapon\" | \"armor\" | \"shield\";\r\n    //What proficiency is used? \"Light Armor\", \"Medium Armor\"?\r\n    private prof: string = \"Light Armor\";\r\n    //The penalty to certain skills if your strength is lower than the armors requirement\r\n    //Should be a negative number\r\n    private skillpenalty: number = 0;\r\n    //The penalty to all speeds if your strength is lower than the armors requirement\r\n    //Should be a negative number and a multiple of -5\r\n    public speedpenalty: number = 0;\r\n    //The strength requirement (strength, not STR) to overcome skill and speed penalties\r\n    private strength: number = 0;\r\n    //A Dwarf with the Battleforger feat can polish armor to grant the effect of a +1 potency rune.\r\n    public battleforged: boolean = false;\r\n    get_Bulk() {\r\n        //Return either the bulk set by an oil, or else the actual bulk of the item.\r\n        let oilBulk: string = \"\";\r\n        this.oilsApplied.forEach(oil => {\r\n            if (oil.bulkEffect) {\r\n                oilBulk = oil.bulkEffect;\r\n            }\r\n        });\r\n        //Fortification Runes raise the required strength\r\n        let fortification = this.propertyRunes.filter(rune => rune.name.includes(\"Fortification\")).length ? 1 : 0;\r\n        if (parseInt(this.bulk)) {\r\n            return oilBulk || (parseInt(this.bulk) + fortification).toString();\r\n        } else {\r\n            return oilBulk || fortification ? fortification.toString() : this.bulk;\r\n        }\r\n\r\n    }\r\n    get_ArmoredSkirt(creature: Creature, characterService: CharacterService) {\r\n        if ([\"Breastplate\", \"Chain Shirt\", \"Chain Mail\", \"Scale Mail\"].includes(this.name)) {\r\n            let armoredSkirt = characterService.get_Inventories(creature).map(inventory => inventory.adventuringgear).find(gear => gear.find(item => item.isArmoredSkirt && item.equipped));\r\n            if (armoredSkirt?.length) {\r\n                this.$affectedByArmoredSkirt = 1;\r\n                return armoredSkirt[0];\r\n            } else {\r\n                this.$affectedByArmoredSkirt = 0;\r\n                return null;\r\n            }\r\n        } else if ([\"Half Plate\", \"Full Plate\", \"Hellknight Plate\"].includes(this.name)) {\r\n            let armoredSkirt = characterService.get_Inventories(creature).map(inventory => inventory.adventuringgear).find(gear => gear.find(item => item.isArmoredSkirt && item.equipped));\r\n            if (armoredSkirt?.length) {\r\n                this.$affectedByArmoredSkirt = -1;\r\n                return armoredSkirt[0];\r\n            } else {\r\n                this.$affectedByArmoredSkirt = 0;\r\n                return null;\r\n            }\r\n        } else {\r\n            this.$affectedByArmoredSkirt = 0;\r\n            return null;\r\n        }\r\n    }\r\n    get_Shoddy(creature: Creature, characterService: CharacterService) {\r\n        //Shoddy items have a -2 penalty to AC, unless you have the Junk Tinker feat and have crafted the item yourself.\r\n        if (this.shoddy && characterService.get_Feats(\"Junk Tinker\")[0]?.have(creature, characterService) && this.crafted) {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        } else if (this.shoddy) {\r\n            this.$shoddy = -2;\r\n            return -2;\r\n        } else {\r\n            this.$shoddy = 0;\r\n            return 0;\r\n        }\r\n    }\r\n    get_ACBonus() {\r\n        return this.acbonus + this.$affectedByArmoredSkirt + this.$shoddy;\r\n    }\r\n    get_SkillPenalty() {\r\n        return this.skillpenalty - this.$affectedByArmoredSkirt + this.$shoddy;\r\n    }\r\n    get_DexCap() {\r\n        if (this.dexcap != -1) {\r\n            return this.dexcap - this.$affectedByArmoredSkirt;\r\n        } else {\r\n            return this.dexcap;\r\n        }\r\n\r\n    }\r\n    get_Strength() {\r\n        //Fortification Runes raise the required strength\r\n        let fortification = this.propertyRunes.filter(rune => rune.name.includes(\"Fortification\")).length ? 2 : 0;\r\n        return this.strength + (this.$affectedByArmoredSkirt * 2) + fortification;\r\n    }\r\n    get_Proficiency(creature: Creature = null, characterService: CharacterService = null) {\r\n        //creature and characterService are not needed for armors, but for weapons.\r\n        if (this.$affectedByArmoredSkirt == 1) {\r\n            switch (this.prof) {\r\n                case \"Light Armor\":\r\n                    return \"Medium Armor\";\r\n                case \"Medium Armor\":\r\n                    return \"Heavy Armor\";\r\n            }\r\n        } else {\r\n            return this.prof;\r\n        }\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //characterService and creature are not needed for armors, but for other types of item.\r\n        if (this.$affectedByArmoredSkirt != 0) {\r\n            if (this.traits.includes(\"Noisy\")) {\r\n                return this.traits.concat(\"Noisy\");\r\n            } else {\r\n                return this.traits;\r\n            }\r\n        } else {\r\n            return this.traits;\r\n        }\r\n    }\r\n    profLevel(creature: Character | AnimalCompanion, characterService: CharacterService, charLevel: number = characterService.get_Character().level) {\r\n        if (characterService.still_loading()) { return 0; }\r\n        this.get_ArmoredSkirt(creature, characterService);\r\n        let skillLevel: number = 0;\r\n        let armorIncreases = creature.get_SkillIncreases(characterService, 0, charLevel, this.name);\r\n        let profIncreases = creature.get_SkillIncreases(characterService, 0, charLevel, this.get_Proficiency());\r\n        //Add either the armor category proficiency or the armor proficiency, whichever is better\r\n        skillLevel = Math.min(Math.max(armorIncreases.length * 2, profIncreases.length * 2), 8)\r\n        return skillLevel;\r\n    }\r\n    get_ArmorSpecialization(creature: Creature, characterService: CharacterService) {\r\n        let SpecializationGains: SpecializationGain[] = [];\r\n        let specializations: Specialization[] = [];\r\n        let prof = this.get_Proficiency();\r\n        if (creature.type == \"Character\" && this.group) {\r\n            let character = creature as Character;\r\n            let skillLevel = this.profLevel(character, characterService);\r\n            characterService.get_FeatsAndFeatures()\r\n                .filter(feat => feat.gainSpecialization.length && feat.have(character, characterService, character.level))\r\n                .forEach(feat => {\r\n                    SpecializationGains.push(...feat.gainSpecialization.filter(spec =>\r\n                        (spec.group ? (this.group && spec.group.includes(this.group)) : true) &&\r\n                        (spec.name ? ((this.name && spec.name.includes(this.name)) || (this.armorBase && spec.name.includes(this.armorBase))) : true) &&\r\n                        (spec.trait ? this.traits.filter(trait => trait && spec.trait.includes(trait)).length : true) &&\r\n                        (spec.proficiency ? (prof && spec.proficiency.includes(prof)) : true) &&\r\n                        (spec.skillLevel ? skillLevel >= spec.skillLevel : true) &&\r\n                        (spec.featreq ? characterService.get_FeatsAndFeatures(spec.featreq)[0]?.have(character, characterService) : true)\r\n                    ))\r\n                });\r\n            SpecializationGains.forEach(critSpec => {\r\n                let specs: Specialization[] = characterService.get_Specializations(this.group).map(spec => Object.assign(new Specialization(), spec));\r\n                specs.forEach(spec => {\r\n                    if (critSpec.condition) {\r\n                        spec.desc = \"(\" + critSpec.condition + \") \" + spec.desc;\r\n                    }\r\n                    if (!specializations.some(existingspec => JSON.stringify(existingspec) == JSON.stringify(spec))) {\r\n                        specializations.push(spec);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return specializations;\r\n    }\r\n}","import { ConditionGain } from './ConditionGain';\r\nimport { EffectGain } from './EffectGain';\r\nimport { ActivityGain } from './ActivityGain';\r\nimport { ItemGain } from './ItemGain';\r\nimport { AttackRestriction } from './AttackRestriction';\r\nimport { SenseGain } from './SenseGain';\r\nimport { Hint } from './Hint';\r\nimport { Creature } from './Creature';\r\nimport { Character } from './Character';\r\nimport { ConditionChoice } from './ConditionChoice';\r\nimport { CharacterService } from './character.service';\r\nimport { Familiar } from './Familiar';\r\nimport { Feat } from './Feat';\r\n\r\nexport class Condition {\r\n    public name: string = \"\";\r\n    public type: string = \"\";\r\n    public buff: boolean = false;\r\n    public minLevel: number = 0;\r\n    public hasValue: boolean = false;\r\n    public decreasingValue: boolean = false;\r\n    public value: number = 0;\r\n    public desc: string = \"\";\r\n    public hints: Hint[] = [];\r\n    public inputRequired: string = \"\";\r\n    public onceEffects: EffectGain[] = [];\r\n    public endEffects: EffectGain[] = [];\r\n    public effects: EffectGain[] = [];\r\n    public gainActivities: ActivityGain[] = [];\r\n    public gainConditions: ConditionGain[] = [];\r\n    public gainItems: ItemGain[] = [];\r\n    public overrideConditions: string[] = [];\r\n    public endConditions: string[] = [];\r\n    //Remove this condition if any of the endsWithConditions is removed.\r\n    public endsWithConditions: string[] = [];\r\n    public attackRestrictions: AttackRestriction[] = [];\r\n    public source: string = \"\";\r\n    public senses: SenseGain[] = [];\r\n    public nextCondition: ConditionGain = null;\r\n    public fixedDuration: number = 0;\r\n    public persistent: boolean = false;\r\n    public restricted: boolean = false;\r\n    public radius: number = 0;\r\n    public allowRadiusChange: boolean = false;\r\n    public traits: string[] = [];\r\n    //If a condition has notes (like the HP of a summoned object), they get copied on the conditionGain.\r\n    public notes: string = \"\";\r\n    //List choices you can make for this condition. The first choice must never have a featreq.\r\n    public choices: ConditionChoice[] = [];\r\n    //$choices is a temporary value that stores the filtered name list produced by get_Choices();\r\n    public $choices: string[] = [];\r\n    //This property is only used to select a default choice before adding the condition. It is not read when evaluating the condition.\r\n    public choice: string = \"\";\r\n    public unlimited: boolean = false;\r\n    get_Choices(characterService: CharacterService, filtered: boolean = false, spellLevel: number = 0) {\r\n        //If this.choice is not one of the available choices, set it to the first.\r\n        if (this.choices.length && !this.choices.map(choice => choice.name).includes(this.choice)) {\r\n            this.choice == this.choices[0].name;\r\n        }\r\n        if (!filtered) {\r\n            return this.choices.map(choice => choice.name);\r\n        }\r\n        let choices: string[] = [];\r\n        this.choices.forEach(choice => {\r\n            //The default choice is never tested. This ensures a fallback if no choices are available.\r\n            if (choice.name == this.choice) {\r\n                choices.push(choice.name)\r\n            } else {\r\n                let character = characterService.get_Character();\r\n                //If the choice has a featreq, check if you meet that (or a feat that has this supertype).\r\n                //Requirements like \"Aggressive Block or Brutish Shove\" are split in get_FeatsAndFeatures().\r\n                if (!choice.spelllevelreq || spellLevel >= choice.spelllevelreq) {\r\n                    if (choice.featreq?.length) {\r\n                        let featNotFound: boolean = false;\r\n                        choice.featreq.forEach(featreq => {\r\n                            //Allow to check for the Familiar's feats\r\n                            let requiredFeat: Feat[]\r\n                            let testcreature: Character | Familiar;\r\n                            let testfeat = featreq;\r\n                            if (featreq.includes(\"Familiar:\")) {\r\n                                testcreature = characterService.get_Familiar();\r\n                                testfeat = featreq.split(\"Familiar:\")[1].trim();\r\n                                requiredFeat = characterService.familiarsService.get_FamiliarAbilities(testfeat);\r\n                            } else {\r\n                                testcreature = character;\r\n                                requiredFeat = characterService.get_FeatsAndFeatures(testfeat, \"\", true);\r\n                            }\r\n                            if (requiredFeat.length) {\r\n                                if (!requiredFeat.find(feat => feat.have(testcreature, characterService, character.level))) {\r\n                                    featNotFound = true;\r\n                                }\r\n                            } else {\r\n                                featNotFound = true;\r\n                            }\r\n                        })\r\n                        if (!featNotFound) {\r\n                            choices.push(choice.name);\r\n                        }\r\n                    } else {\r\n                        choices.push(choice.name);\r\n                    }\r\n                }\r\n            };\r\n        })\r\n        this.$choices = choices;\r\n        return this.$choices;\r\n    }\r\n    get_ChoiceNextStage(choiceName: string) {\r\n        return this.choices.find(choice => choice.name == choiceName)?.nextStage || 0;\r\n    }\r\n    get_HeightenedItems(levelNumber: number) {\r\n        //This descends through the level numbers, starting with levelNumber and returning the first set of ItemGains found with a matching heightenedfilter.\r\n        //It also returns all items that have no heightenedFilter.\r\n        //If there are no ItemGains with a heightenedFilter, return all.\r\n        let items: ItemGain[] = [];\r\n        if (!this.gainItems.length) {\r\n            return this.gainItems;\r\n        }\r\n        items.push(...this.gainItems.filter(gain => !gain.heightenedFilter))\r\n        if (this.gainItems.some(gain => gain.heightenedFilter)) {\r\n            switch (levelNumber) {\r\n                case 10:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 10)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 10));\r\n                        break;\r\n                    }\r\n                case 9:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 9)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 9));\r\n                        break;\r\n                    }\r\n                case 8:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 8)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 8));\r\n                        break;\r\n                    }\r\n                case 7:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 7)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 7));\r\n                        break;\r\n                    }\r\n                case 6:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 6)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 6));\r\n                        break;\r\n                    }\r\n                case 5:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 5)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 5));\r\n                        break;\r\n                    }\r\n                case 4:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 4)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 4));\r\n                        break;\r\n                    }\r\n                case 3:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 3)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 3));\r\n                        break;\r\n                    }\r\n                case 2:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 2)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 2));\r\n                        break;\r\n                    }\r\n                case 1:\r\n                    if (this.gainItems.some(gain => gain.heightenedFilter == 1)) {\r\n                        items.push(...this.gainItems.filter(gain => gain.heightenedFilter == 1));\r\n                        break;\r\n                    }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n}","import { Material } from './Material';\r\n\r\nexport class ArmorMaterial extends Material {\r\n    public readonly _className: string = this.constructor.name;\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { CharacterSheetComponent } from './character-sheet/character-sheet.component';\r\n\r\n\r\nconst routes: Routes = [\r\n   { path: '', component: CharacterSheetComponent },\r\n];\r\n\r\n@NgModule({\r\n   imports: [\r\n      RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\r\n   ],\r\n   exports: [\r\n      RouterModule\r\n   ],\r\n   declarations: [\r\n   ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Feat } from './Feat';\r\nimport * as json_abilities from '../assets/json/familiarabilities';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FamiliarsService {\r\n\r\n    private familiarAbilities: Feat[] = [];\r\n    private loading_familiarAbilities: boolean = false;\r\n    \r\n    constructor() { }\r\n\r\n    still_loading() {\r\n        return (this.loading_familiarAbilities);\r\n    }\r\n\r\n    get_FamiliarAbilities(name: string = \"\") {\r\n        if (!this.still_loading()) {\r\n            return this.familiarAbilities.filter(ability => ability.name.toLowerCase() == name.toLowerCase() || name == \"\")\r\n        } else { return [new Feat()] }\r\n    }\r\n    \r\n    initialize() {\r\n        if (!this.familiarAbilities.length) {\r\n            this.loading_familiarAbilities = true;\r\n            this.load_Abilities();\r\n            this.loading_familiarAbilities = false;\r\n        } else {\r\n            //Disable any active hint effects when loading a character.\r\n            this.familiarAbilities.forEach(ability => {\r\n                ability.hints?.forEach(hint => {\r\n                    hint.active = hint.active2 = hint.active3 = hint.active4 = hint.active5 = false;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    load_Abilities() {\r\n        this.familiarAbilities = [];\r\n        Object.keys(json_abilities).forEach(key => {\r\n            this.familiarAbilities.push(...json_abilities[key].map(obj => Object.assign(new Feat(), obj)));\r\n        });\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { Material } from './Material';\r\n\r\nexport class WeaponMaterial extends Material {\r\n    public readonly _className: string = this.constructor.name;\r\n}","import { Consumable } from './Consumable';\r\nimport { Hint } from './Hint';\r\nimport { SpellCast } from './SpellCast';\r\nimport { WeaponRune } from './WeaponRune';\r\n\r\nexport class Oil extends Consumable {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Ammunition should be type \"ammunition\" to be found in the database\r\n    readonly type = \"oils\";\r\n    public castSpells: SpellCast[] = [];\r\n    public critfailure: string = \"\";\r\n    public critsuccess: string = \"\";\r\n    //Can only be applied to a weapon with this damage type (or modular)\r\n    public damagereq: string = \"\";\r\n    //Duration is in turns * 10. The Oil is removed after the duration expires.\r\n    public duration: number = 0;\r\n    public failure: string = \"\";\r\n    public hints: Hint[] = [];\r\n    public bulkEffect: string = \"\";\r\n    public potencyEffect: number = 0;\r\n    public strikingEffect: number = 0;\r\n    public resilientEffect: number = 0;\r\n    //If this is \"melee\" or \"ranged\", you can only apply it to a weapon that has a value in that property.\r\n    public rangereq: string = \"\";\r\n    //The rune with this name will be loaded into the oil at initialization, and its effects will be applied on a weapon to which the oil is applied.\r\n    public runeEffect: WeaponRune = null;\r\n    public success: string = \"\";\r\n    //You can only choose this oil for an item if its type or \"items\" is in the targets list\r\n    public targets: string[] = [];\r\n    public weightLimit: number = 0;\r\n}","import { CharacterService } from './character.service';\r\nimport { Character } from './Character';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\nimport { Familiar } from './Familiar';\r\nimport { Equipment } from './Equipment';\r\nimport { Creature } from './Creature';\r\n\r\nexport class Wand extends Equipment {\r\n    public readonly _className: string = this.constructor.name;\r\n    //Wands should be type \"wands\" to be found in the database\r\n    readonly type = \"wands\";\r\n    readonly equippable = false;\r\n    public actions: string = \"\";\r\n    public frequency: string = \"one per day, plus overcharge\";\r\n    public effect: string = \"You Cast the Spell at the indicated level.\"\r\n    public overcharged: boolean = false;\r\n    public cooldown: number = 0;\r\n    public inputRequired = \"After the spell is cast from the wand for the day, you can use it one more time, but the wand is immediately broken. Roll a DC 10 flat check. On a failure, drop the wand as it is destroyed. If you overcharge the wand when it's already been overcharged that day, the wand is automatically destroyed and dropped (even if it had been repaired) and no spell is cast.\"\r\n    get_Name() {\r\n        if (this.displayName) {\r\n            return this.displayName;\r\n        } else if (this.storedSpells.length && this.storedSpells[0].spells.length) {\r\n            if (this.name.includes(\"Magic Wand (\")) {\r\n                return \"Wand of \"+this.storedSpells[0].spells[0].name;\r\n            } else {\r\n                return this.name.split(\"(\")[0] + \"(\" + this.storedSpells[0].spells[0].name + \")\";\r\n            }\r\n        } else {\r\n            return this.name;\r\n        }\r\n    }\r\n    get_Traits(characterService: CharacterService, creature: Creature) {\r\n        //creature is not needed for wands, but for other types of item.\r\n        if (this.storedSpells[0]?.spells.length) {\r\n            let spell = characterService.spellsService.get_Spells(this.storedSpells[0].spells[0].name)[0];\r\n            if (spell) {\r\n                return Array.from(new Set(this.traits.concat(spell.traits))).sort(function(a,b) {\r\n                    if (a > b) {\r\n                        return 1;\r\n                    }\r\n                    if (a < b) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n            } else {\r\n                return this.traits;\r\n            }\r\n        } else {\r\n            return this.traits;\r\n        }\r\n    }\r\n}","import core from './core.json';\r\nexport {\r\n    core\r\n};","import core from './core.json';\r\nexport {\r\n    core\r\n};","export class EffectGain {\r\n    public readonly _className: string = this.constructor.name;\r\n    public affected: string = \"\";\r\n    //Add this number to the target value.\r\n    //Gets eval()-ed to determine the actual value.\r\n    //Gets applied if parseInt(value) != 0\r\n    public value: string = \"0\";\r\n    //Set the target value to this number and ignore item, proficiency and untyped effects.\r\n    //Gets eval()-ed to determine the actual value.\r\n    //Gets applied if (setValue);\r\n    //(eval(setValue) == null) will throw out the effect - this can be used for effects that only give a value under a certain condition.\r\n    // Hint: \"you gain an X Speed\" effects do not stack and should use setValue.\r\n    public setValue: string = \"\";\r\n    //Set if the effect does not need a value, but still needs to be applied.\r\n    public toggle: boolean = false;\r\n    //Effects will be shown if show = true, not shown if show = false, or otherwise shown if they match a certain list of effects that should always show.\r\n    public show: boolean = undefined;\r\n    public type: string = \"\";\r\n    public duration: number = 0;\r\n    public maxDuration: number = 0;\r\n    //source and sourceId are copied from conditions and currently only used to track temporary HP.\r\n    public source: string = \"\";\r\n    public sourceId: string = \"\";\r\n    //spellSource is copied from conditions and used in value eval()s. Also only used to calculate temporary HP so far.\r\n    public spellSource: string = \"\";\r\n    //If the effect is typed, cumulative lists all effect sources (of the same type) that it is cumulative with.\r\n    public cumulative: string[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConditionsService } from './conditions.service';\r\nimport { CharacterService } from './character.service';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { EffectsService } from './effects.service';\r\nimport { Effect } from './Effect';\r\nimport { SpellsService } from './spells.service';\r\nimport { ItemsService } from './items.service';\r\nimport { Character } from './Character';\r\nimport { EffectGain } from './EffectGain';\r\nimport { AnimalCompanion } from './AnimalCompanion';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TimeService {\r\n\r\n    //yourTurn is 5 if it is your turn or 0 if not.\r\n    private yourTurn: number = 0;\r\n\r\n    constructor(\r\n        private activitiesService: ActivitiesService,\r\n        private effectsService: EffectsService\r\n    ) { }\r\n\r\n    get_YourTurn() {\r\n        return this.yourTurn;\r\n    }\r\n\r\n    set_YourTurn(yourTurn: number) {\r\n        //Only used when loading a character\r\n        this.yourTurn = yourTurn;\r\n    }\r\n\r\n    start_Turn(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, effectsService: EffectsService) {\r\n\r\n        //Fast Healing\r\n        let fastHealing: number = 0;\r\n        characterService.get_Creatures().forEach(creature => {\r\n            effectsService.get_AbsolutesOnThis(creature, \"Fast Healing\").forEach((effect: Effect) => {\r\n                fastHealing = parseInt(effect.setValue);\r\n            })\r\n            effectsService.get_RelativesOnThis(creature, \"Fast Healing\").forEach((effect: Effect) => {\r\n                fastHealing += parseInt(effect.value);\r\n            })\r\n            if (fastHealing && creature.health.currentHP(creature, characterService, effectsService).result > 0) {\r\n                creature.health.heal(creature, characterService, effectsService, fastHealing);\r\n            }\r\n        })\r\n\r\n        this.tick(characterService, conditionsService, itemsService, spellsService, 5);\r\n    }\r\n\r\n    end_Turn(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService) {\r\n        this.tick(characterService, conditionsService, itemsService, spellsService, 5);\r\n    }\r\n\r\n    rest(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService,) {\r\n        let charLevel: number = characterService.get_Character().level;\r\n        this.tick(characterService, conditionsService, itemsService, spellsService, 48000, false);\r\n        characterService.get_Creatures().forEach(creature => {\r\n            characterService.set_ToChange(creature.type, \"health\");\r\n            let con = 1;\r\n            if (creature.type != \"Familiar\") {\r\n                con = Math.max(characterService.abilitiesService.get_Abilities(\"Constitution\")[0].mod((creature as AnimalCompanion | Character), characterService, characterService.effectsService).result, 1);\r\n            }\r\n            let heal: number = con * charLevel;\r\n            this.effectsService.get_AbsolutesOnThis(creature, \"Resting HP Gain\").forEach(effect => {\r\n                heal = parseInt(effect.setValue);\r\n            })\r\n            this.effectsService.get_RelativesOnThis(creature, \"Resting HP Gain\").forEach(effect => {\r\n                heal += parseInt(effect.value);\r\n            })\r\n            let multiplier = 1;\r\n            this.effectsService.get_AbsolutesOnThis(creature, \"Resting HP Multiplier\").forEach(effect => {\r\n                multiplier = parseInt(effect.setValue);\r\n            })\r\n            this.effectsService.get_RelativesOnThis(creature, \"Resting HP Multiplier\").forEach(effect => {\r\n                multiplier += parseInt(effect.value);\r\n            })\r\n            multiplier = Math.max(1, multiplier);\r\n            characterService.get_Health(creature).heal(creature, characterService, characterService.effectsService, heal * multiplier, true, true);\r\n            //Reset all \"once per day\" activity cooldowns.\r\n            this.activitiesService.rest(creature, characterService);\r\n            //Reset all conditions that are \"until the next time you make your daily preparations\".\r\n            conditionsService.rest(creature, characterService);\r\n            //Remove all items that expire when you make your daily preparations.\r\n            if (creature.type != \"Familiar\") {\r\n                itemsService.rest((creature as AnimalCompanion | Character), characterService);\r\n            }\r\n            //For the Character, reset all \"once per day\" spells, and regenerate spell slots, prepared formulas and bonded item charges.\r\n            if (creature.type == \"Character\") {\r\n                let character = creature as Character;\r\n                //Reset all \"once per day\" spell cooldowns and re-prepare spells.\r\n                spellsService.rest(character, characterService);\r\n                //Regenerate spell slots.\r\n                character.class.spellCasting.forEach(casting => {\r\n                    casting.spellSlotsUsed = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                });\r\n                //Refocus and reset all \"until you refocus\" spell cooldowns.\r\n                this.refocus(characterService, conditionsService, itemsService, spellsService, 3, false, false);\r\n                //Regenerate Snare Specialist formulas.\r\n                character.class.formulaBook.filter(learned => learned.snareSpecialistPrepared).forEach(learned => {\r\n                    learned.snareSpecialistAvailable = learned.snareSpecialistPrepared;\r\n                });\r\n                characterService.set_ToChange(\"Character\", \"inventory\");\r\n                //Regenerate bonded item charges.\r\n                character.class.spellCasting.filter(casting => casting.castingType == \"Prepared\" && casting.className == \"Wizard\").forEach(casting => {\r\n                    let superiorBond = character.get_FeatsTaken(1, character.level, \"Superior Bond\").length;\r\n                    if (character.get_FeatsTaken(1, character.level, \"Universalist Wizard\").length) {\r\n                        casting.bondedItemCharges = [superiorBond, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n                    } else {\r\n                        casting.bondedItemCharges = [1 + superiorBond, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        characterService.process_ToChange();\r\n    }\r\n\r\n    refocus(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, recoverPoints: number = 1, reload: boolean = true, tick: boolean = true) {\r\n        if (tick) {\r\n            this.tick(characterService, conditionsService, itemsService, spellsService, 1000, false);\r\n        }\r\n        let character = characterService.get_Character();\r\n\r\n        //Reset all \"until you refocus\" activity cooldowns.\r\n        this.activitiesService.refocus(character, characterService);\r\n        //Reset all conditions that are \"until you refocus\".\r\n        conditionsService.refocus(character, characterService);\r\n        //Remove all items that expire when you refocus.\r\n        itemsService.refocus(character, characterService);\r\n        //Reset all \"once per day\" spell cooldowns and re-prepare spells.\r\n        spellsService.refocus(character, characterService);\r\n\r\n        let focusPoints = character.class.focusPoints;\r\n        let focusPointsLast = character.class.focusPointsLast;\r\n        if (recoverPoints < 3) {\r\n            //Several feats recover more focus points if you spent at least that amount since the last time refocusing. Those feats all have an effect setting \"Refocus Bonus Points\" to the amount you get.\r\n            characterService.effectsService.get_AbsolutesOnThis(character, \"Refocus Bonus Points\").forEach(effect => {\r\n                let points = parseInt(effect.setValue);\r\n                if (focusPointsLast - focusPoints >= points) {\r\n                    recoverPoints = Math.max(recoverPoints, points);\r\n                }\r\n            })\r\n        }\r\n\r\n        //Regenerate Focus Points by calling a onceEffect (so we don't have the code twice).\r\n        characterService.process_OnceEffect(character, Object.assign(new EffectGain(), { affected: \"Focus Points\", value: \"+\" + recoverPoints }));\r\n\r\n        character.class.focusPointsLast = character.class.focusPoints;\r\n        if (reload) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    tick(characterService: CharacterService, conditionsService: ConditionsService, itemsService: ItemsService, spellsService: SpellsService, turns: number = 10, reload: boolean = true) {\r\n        characterService.get_Creatures().forEach(creature => {\r\n            //Tick activities before conditions because activities can end conditions, which might go wrong if the condition has already ended (particularly where cooldowns are concerned).\r\n            this.activitiesService.tick_Activities(creature, characterService, conditionsService, itemsService, spellsService, turns)\r\n            if (creature.conditions.length) {\r\n                if (creature.conditions.filter(gain => gain.nextStage > 0)) {\r\n                    characterService.set_ToChange(creature.type, \"time\");\r\n                    characterService.set_ToChange(creature.type, \"health\");\r\n                }\r\n                conditionsService.tick_Conditions(creature, turns, this.yourTurn);\r\n                characterService.set_ToChange(creature.type, \"effects\")\r\n            }\r\n            this.effectsService.tick_CustomEffects(creature, characterService, turns);\r\n            if (creature.type != \"Familiar\") {\r\n                itemsService.tick_Items((creature as AnimalCompanion | Character), characterService, turns);\r\n            }\r\n            if (creature.type == \"Character\") {\r\n                spellsService.tick_Spells((creature as Character), characterService, itemsService, conditionsService, turns);\r\n            }\r\n            //If you are at full health and rest for 10 minutes, you lose the wounded condition.\r\n            if (turns >= 1000 && characterService.get_Health(creature).damage == 0) {\r\n                characterService.get_AppliedConditions(creature, \"Wounded\").forEach(gain => characterService.remove_Condition(creature, gain, false));\r\n            }\r\n        })\r\n        this.yourTurn = (this.yourTurn + turns) % 10;\r\n        if (reload) {\r\n            characterService.process_ToChange();\r\n        }\r\n    }\r\n\r\n    get_Duration(duration: number, includeTurnState: boolean = true, inASentence: boolean = false) {\r\n        if (duration == -3) {\r\n            return inASentence ? \"until you refocus\" : \"Until you refocus\";\r\n        } else if (duration == -2) {\r\n            return inASentence ? \"until the next time you make your daily preparations\" : \"Until the next time you make your daily preparations\";\r\n        } else if (duration == -1) {\r\n            return inASentence ? \"permanently\" : \"Permanent\";\r\n        } else if (duration == 1) {\r\n            return inASentence ? \"instantly\" : \"Instant effect\";\r\n        } else {\r\n            let returnString: string = \"\"\r\n            if (duration == 5) {\r\n                if (this.get_YourTurn() == 5) {\r\n                    return inASentence ? \"for rest of turn\" : \"Rest of turn\";\r\n                }\r\n                if (this.get_YourTurn() == 0) {\r\n                    return inASentence ? \"until start of next turn\" : \"To start of next turn\";\r\n                }\r\n            }\r\n            returnString += inASentence ? \"for \" : \"\";\r\n            if (duration >= 144000) {\r\n                returnString += Math.floor(duration / 144000) + \" Day\";\r\n                if (duration / 144000 >= 2) { returnString += \"s\"; }\r\n                duration %= 144000;\r\n            }\r\n            if (duration >= 6000) {\r\n                returnString += \" \" + Math.floor(duration / 6000) + \" Hour\";\r\n                if (duration / 6000 >= 2) { returnString += \"s\"; }\r\n                duration %= 6000;\r\n            }\r\n            if (duration >= 100) {\r\n                returnString += \" \" + Math.floor(duration / 100) + \" Minute\";\r\n                if (duration / 100 >= 2) { returnString += \"s\"; }\r\n                duration %= 100;\r\n            }\r\n            if (duration >= 10) {\r\n                returnString += \" \" + Math.floor(duration / 10) + \" Turn\";\r\n                if (duration / 10 >= 2) { returnString += \"s\"; }\r\n                duration %= 10;\r\n            }\r\n            if (includeTurnState && duration == 5 && this.get_YourTurn() == 5) {\r\n                returnString += \" to end of turn\";\r\n            }\r\n            if (!returnString) {\r\n                returnString = \"0 Turns\";\r\n            }\r\n            return returnString.trim();\r\n        }\r\n    }\r\n\r\n}\r\n","<button class=\"minimizebutton lower\" *ngIf=\"showTime && showTurn\"\r\n    [ngbTooltip]=\"get_Minimized() ? 'Click to show all buttons.' : 'Click to hide time buttons.'\"\r\n    [ngClass]=\"{'fancy-button':get_Minimized()}\" (click)=\"minimize()\">\r\n    <i class='bi-arrows-collapse' *ngIf=\"get_Minimized()\"></i>\r\n    <i class='bi-arrows-expand' *ngIf=\"!get_Minimized()\"></i>\r\n</button>\r\n<div id=\"time\">\r\n    <div class=\"loading\" *ngIf=\"still_loading()\">Loading</div>\r\n    <ng-container *ngIf=\"!still_loading()\">\r\n        <div *ngIf=\"showTurn\" class=\"list-item center-aligned\">\r\n            <div [ngbTooltip]=\"get_Waiting(5)\">\r\n                <button (click)=\"start_Turn()\" [disabled]=\"get_YourTurn()==5 || get_Waiting(5).length\">Start\r\n                    Turn</button>\r\n            </div>\r\n            <div class=\"turn-indicator\">\r\n                <strong *ngIf=\"get_YourTurn() == 0\">Not your Turn</strong>\r\n                <strong class=\"yourTurn\" *ngIf=\"get_YourTurn() == 5\">Your Turn</strong>\r\n            </div>\r\n            <div [ngbTooltip]=\"get_Waiting(5)\">\r\n                <button (click)=\"end_Turn()\" [disabled]=\"get_YourTurn()==0 || get_Waiting(5).length\">End Turn</button>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"showTime\" class=\"list-item\" [ngClass]=\"{'fullsize-only':showTime && showTurn}\">\r\n            <div *ngFor=\"let duration of [10, 50, 100, 500, 1000, 6000, 48000, 144000]; trackBy:trackByIndex;\"\r\n                [ngbTooltip]=\"get_Waiting(duration)\">\r\n                <button class=\"fancybutton\" (click)=\"tick(duration)\" [disabled]=\"get_Waiting(duration).length\">\r\n                    Pass {{get_Duration(duration, false)}}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { CharacterService } from '../character.service';\r\nimport { TimeService } from '../time.service';\r\nimport { EffectsService } from '../effects.service';\r\nimport { ItemsService } from '../items.service';\r\nimport { SpellsService } from '../spells.service';\r\nimport { ConditionsService } from '../conditions.service';\r\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'app-time',\r\n    templateUrl: './time.component.html',\r\n    styleUrls: ['./time.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimeComponent implements OnInit {\r\n\r\n    @Input()\r\n    public showTurn: boolean = true;\r\n    @Input()\r\n    public showTime: boolean = true;\r\n    @Input()\r\n    public sheetSide: string = \"center\";\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private characterService: CharacterService,\r\n        private timeService: TimeService,\r\n        private itemsService: ItemsService,\r\n        private spellsService: SpellsService,\r\n        private effectsService: EffectsService,\r\n        private conditionsService: ConditionsService,\r\n        tooltipConfig: NgbTooltipConfig\r\n    ) {\r\n        tooltipConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the tooltip from closing immediately on tap because a tap counts as hover and then click;\r\n        tooltipConfig.openDelay = 1;\r\n        tooltipConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    minimize() {\r\n        this.characterService.get_Character().settings.timeMinimized = !this.characterService.get_Character().settings.timeMinimized;\r\n    }\r\n\r\n    get_Minimized() {\r\n        return this.characterService.get_Character().settings.timeMinimized;\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    get_Duration(duration: number, includeTurnState: boolean = true) {\r\n        return this.timeService.get_Duration(duration, includeTurnState);\r\n    }\r\n\r\n    get_Waiting(duration: number) {\r\n        let result: string = \"\";\r\n        this.characterService.get_Creatures().forEach(creature => {\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.nextStage < duration && gain.nextStage > 0) || gain.nextStage == -1)) {\r\n                result = \"One or more conditions\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need your attention before this time.\";\r\n            }\r\n            if (this.characterService.get_AppliedConditions(creature, \"\", \"\", true).some(gain => (gain.duration == 1))) {\r\n                result = \"One or more instant effects\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" need to be resolved before you can continue.\";\r\n            }\r\n            if (this.characterService.get_Health(creature).temporaryHP.length > 1) {\r\n                result = \"You need to select one set of temporary Hit Points\" + (creature.type != \"Character\" ? \" on your \" + creature.type : \"\") + \" before you can continue.\";\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    still_loading() {\r\n        return this.characterService.still_loading()\r\n    }\r\n\r\n    get_YourTurn() {\r\n        return this.timeService.get_YourTurn();\r\n    }\r\n\r\n    start_Turn() {\r\n        this.timeService.start_Turn(this.characterService, this.conditionsService, this.itemsService, this.spellsService, this.effectsService);\r\n    }\r\n\r\n    end_Turn() {\r\n        this.timeService.end_Turn(this.characterService, this.conditionsService, this.itemsService, this.spellsService);\r\n    }\r\n\r\n    tick(amount: number) {\r\n        this.timeService.tick(this.characterService, this.conditionsService, this.itemsService, this.spellsService, amount);\r\n    }\r\n\r\n    finish_Loading() {\r\n        if (this.still_loading()) {\r\n            setTimeout(() => this.finish_Loading(), 500)\r\n        } else {\r\n            this.characterService.get_Changed()\r\n                .subscribe((target) => {\r\n                    if ([\"time\", \"all\", \"character\"].includes(target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            this.characterService.get_ViewChanged()\r\n                .subscribe((view) => {\r\n                    if (view.creature.toLowerCase() == \"character\" && [\"time\", \"all\"].includes(view.target.toLowerCase())) {\r\n                        this.changeDetector.detectChanges();\r\n                    }\r\n                });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.finish_Loading();\r\n    }\r\n\r\n}\r\n","import core from './core.json';\r\nexport {\r\n    core\r\n};","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","<ng-container *ngIf=\"feat\">\r\n    <div class=\"newrow left-aligned\">\r\n        <cite class=\"trait\" *ngFor=\"let trait of feat.traits; trackBy:trackByIndex;\"\r\n            [ngbPopover]=\"get_Traits(trait)[0].desc\">\r\n            {{trait}}\r\n        </cite>\r\n    </div>\r\n    <div class=\"newrow left-aligned\">\r\n        <div class=\"newrow left-aligned\" *ngIf=\"feat.sourceBook\">\r\n            <strong>Source</strong><i>&nbsp;{{feat.sourceBook}}</i>\r\n        </div>\r\n        <div class=\"newrow left-aligned\" *ngIf=\"feat.access\">\r\n            <strong>Access</strong>&nbsp;{{feat.access}}\r\n        </div>\r\n        <ng-container *ngFor=\"let reqs of [get_FeatRequirements(choice, feat)]; trackBy:trackByIndex;\">\r\n            <p *ngIf=\"reqs.length\">\r\n                <strong>Requirements&nbsp;</strong>\r\n                <span [ngClass]=\"{'problem':(!req.met), 'disabled':(req.ignored)}\" [ngbPopover]=\"req.ignored ? 'This requirement is ignored.' : ''\" *ngFor=\"let req of reqs; trackBy:trackByIndex;\">{{req.ignored ? \"(\" : ''}}{{req.desc}}{{req.ignored ? \")\" : ''}}</span>\r\n            </p>\r\n        </ng-container>\r\n        <ng-container *ngFor=\"let desc of feat.desc.split('\\n\\n'); trackBy:trackByIndex;\">\r\n            <p *ngIf=\"desc.split('\\n').length == 1\" [innerHTML]=\"desc\"></p>\r\n            <ul *ngIf=\"desc.split('\\n').length > 1\">\r\n                <li *ngFor=\"let line of desc.split('\\n'); trackBy:trackByIndex;\" [innerHTML]=\"line\"></li>\r\n            </ul>\r\n        </ng-container>\r\n        <p *ngIf=\"feat.specialdesc.length\">\r\n            <strong>Special</strong> {{feat.specialdesc}}\r\n        </p>\r\n        <p *ngIf=\"feat.usageNote.length\">\r\n            <strong>Usage note</strong>&nbsp;\r\n            <span class=\"problem\">{{feat.usageNote}}</span>\r\n        </p>\r\n    </div>\r\n    <ng-container *ngFor=\"let name of feat.gainActivities; trackBy:trackByIndex;\">\r\n        <div class=\"newrow left-aligned\" *ngFor=\"let activity of get_Activities(name); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader left-aligned\">{{activity.name}}\r\n                <app-actionIcons [actionString]=\"activity.actions\"></app-actionIcons>\r\n                {{(activity.activationType) ? activity.activationType : \"\"}}\r\n            </header>\r\n            <app-activity class=\"newrow\" [activity]=activity [allowActivate]=false>\r\n            </app-activity>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let spellChoice of feat.gainSpellChoice; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let spellGain of spellChoice.spells; trackBy:trackByIndex;\">\r\n            <ng-container *ngFor=\"let spell of get_Spells(spellGain.name); trackBy:trackByIndex;\">\r\n                <header class=\"spellHeader left-aligned\">{{spell.name}}\r\n                    <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons>\r\n                    {{(spell.castType) ? spell.castType : \"\"}}\r\n                </header>\r\n                <app-spell class=\"newrow\" [spell]=spell [spellLevel]=\"get_SpellLevel(levelNumber)\">\r\n                </app-spell>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n    <ng-container *ngFor=\"let spellName of feat.gainSpellListSpells; trackBy:trackByIndex;\">\r\n        <ng-container *ngFor=\"let spell of get_Spells(spellName); trackBy:trackByIndex;\">\r\n            <header class=\"spellHeader left-aligned\">{{spell.name}}\r\n                <app-actionIcons [actionString]=\"spell.actions\"></app-actionIcons>\r\n                {{(spell.castType) ? spell.castType : \"\"}}\r\n            </header>\r\n            <app-spell class=\"newrow\" [spell]=spell [spellLevel]=\"get_SpellLevel(levelNumber)\">\r\n            </app-spell>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Feat } from 'src/app/Feat';\r\nimport { CharacterService } from 'src/app/character.service';\r\nimport { FeatChoice } from 'src/app/FeatChoice';\r\nimport { SpellsService } from 'src/app/spells.service';\r\nimport { ActivitiesService } from 'src/app/activities.service';\r\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TraitsService } from 'src/app/traits.service';\r\n\r\n@Component({\r\n    selector: 'app-feat',\r\n    templateUrl: './feat.component.html',\r\n    styleUrls: ['./feat.component.css']\r\n})\r\nexport class FeatComponent implements OnInit {\r\n\r\n    @Input()\r\n    feat: Feat\r\n    @Input()\r\n    choice: FeatChoice\r\n    @Input()\r\n    levelNumber: number\r\n    @Input()\r\n    featLevel: number\r\n\r\n    constructor(\r\n        public characterService: CharacterService,\r\n        private spellsService: SpellsService,\r\n        private activitiesService: ActivitiesService,\r\n        private traitsService: TraitsService,\r\n        popoverConfig: NgbPopoverConfig\r\n    ) {\r\n        popoverConfig.autoClose = \"outside\";\r\n        popoverConfig.container = \"body\";\r\n        //For touch compatibility, this openDelay prevents the popover from closing immediately on tap because a tap counts as hover and then click;\r\n        popoverConfig.openDelay = 1;\r\n        popoverConfig.placement = \"auto\";\r\n        popoverConfig.popoverClass = \"list-item sublist\";\r\n        popoverConfig.triggers = \"hover:click\";\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n    \r\n    get_Traits(traitName: string = \"\") {\r\n        return this.traitsService.get_Traits(traitName);\r\n    }\r\n\r\n    create_IgnoreRequirementList(feat: Feat, choice: FeatChoice) {\r\n        //Prepare character and characterService for eval.\r\n        let character = this.characterService.get_Character();\r\n        let characterService = this.characterService;\r\n        //Build the ignoreRequirements list from both the feat and the choice.\r\n        let ignoreRequirementsList: string[] = [];\r\n        feat.ignoreRequirements.concat((choice?.ignoreRequirements || [])).forEach(ignoreReq => {\r\n            try {\r\n                ignoreRequirementsList.push(eval(ignoreReq));\r\n            } catch (error) {\r\n                console.log(\"Failed evaluating feat requirement ignore list item (\" + ignoreReq + \"): \" + error)\r\n            }\r\n        })\r\n        return ignoreRequirementsList;\r\n    }\r\n\r\n    get_FeatRequirements(choice: FeatChoice, feat: Feat) {\r\n        let ignoreRequirementsList: string[] = this.create_IgnoreRequirementList(feat, choice);\r\n        let result: Array<{met?:boolean, ignored?:boolean, desc?:string}> = [];\r\n        if (feat.levelreq) {\r\n            result.push(feat.meetsLevelReq(this.characterService, this.featLevel));\r\n            result[result.length-1].ignored = ignoreRequirementsList.includes('levelreq');\r\n        }\r\n        if (feat.abilityreq.length) {\r\n            feat.meetsAbilityReq(this.characterService, this.levelNumber).forEach(req => {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('abilityreq');\r\n            });\r\n        }\r\n        if (feat.skillreq.length) {\r\n            feat.meetsSkillReq(this.characterService, this.levelNumber).forEach((req, index) => {\r\n                if (index == 0) {\r\n                    result.push({ met: true, desc: \", \" });\r\n                } else {\r\n                    result.push({ met: true, desc: \" or \" });\r\n                }\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('skillreq');\r\n            });\r\n        }\r\n        if (feat.featreq.length) {\r\n            feat.meetsFeatReq(this.characterService, this.levelNumber).forEach(req => {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('featreq');\r\n            });\r\n        }\r\n        if (feat.heritagereq) {\r\n            feat.meetsHeritageReq(this.characterService, this.levelNumber).forEach(req => {\r\n                result.push({ met: true, desc: \", \" });\r\n                result.push(req);\r\n                result[result.length-1].ignored = ignoreRequirementsList.includes('heritagereq');\r\n            });\r\n        }\r\n        if (feat.specialreqdesc) {\r\n            result.push({ met: true, desc: \", \" });\r\n            result.push(feat.meetsSpecialReq(this.characterService, this.levelNumber));\r\n        }\r\n        if (result.length > 1) {\r\n            if (result[0].desc == \", \") {\r\n                result.shift();\r\n            }\r\n            if (result[0].desc == \"requires \" && result[1].desc == \", \") {\r\n                result.splice(1,1);\r\n            }\r\n        } else if (result.length == 1 && result[0].desc == \"requires \") {\r\n            result.length = 0;\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    get_Activities(name: string = \"\") {\r\n        return this.activitiesService.get_Activities(name);\r\n    }\r\n\r\n    get_Spells(name: string = \"\") {\r\n        return this.spellsService.get_Spells(name);\r\n    }\r\n\r\n    get_SpellLevel(levelNumber: number) {\r\n        return Math.ceil(levelNumber / 2);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}